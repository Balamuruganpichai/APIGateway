2025-02-28 11:26:35 [] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-02-28 11:26:35 [] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-02-28 11:26:35 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 7 thread-local buffer(s) from thread: reactor-http-nio-2
2025-02-28 11:26:41 [] DEBUG org.jboss.logging - Logging Provider: org.jboss.logging.Slf4jLoggerProvider found via system property
2025-02-28 11:26:41 [] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final
2025-02-28 11:26:41 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-02-28 11:26:41 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-02-28 11:26:41 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-02-28 11:26:41 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-02-28 11:26:41 [] DEBUG o.h.v.i.e.r.TraversableResolvers - Cannot find jakarta.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2025-02-28 11:26:41 [] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-02-28 11:26:41 [] INFO  c.c.c.g.c.CommongatewayApplication - Starting CommongatewayApplication using Java 17.0.12 with PID 64112 (D:\WORKSPACE\API-GATEWAY\commongateway\target\classes started by CITPL in D:\WORKSPACE\API-GATEWAY)
2025-02-28 11:26:41 [] DEBUG c.c.c.g.c.CommongatewayApplication - Running with Spring Boot v3.4.2, Spring v6.2.2
2025-02-28 11:26:41 [] INFO  c.c.c.g.c.CommongatewayApplication - No active profile set, falling back to 1 default profile: "default"
2025-02-28 11:26:41 [] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-02-28 11:26:41 [] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-02-28 11:26:41 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-02-28 11:26:41 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-02-28 11:26:41 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-02-28 11:26:41 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-02-28 11:26:41 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-02-28 11:26:41 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-02-28 11:26:42 [] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=d2aee5ef-86a6-3b95-abd8-708d95e66676
2025-02-28 11:26:43 [] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-02-28 11:26:43 [] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-02-28 11:26:43 [] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-02-28 11:26:43 [] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.34]
2025-02-28 11:26:43 [] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-02-28 11:26:43 [] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2018 ms
2025-02-28 11:26:43 [] DEBUG i.n.u.i.l.InternalLoggerFactory - Using SLF4J as the default logging framework
2025-02-28 11:26:43 [] DEBUG i.n.util.internal.PlatformDependent0 - -Dio.netty.noUnsafe: false
2025-02-28 11:26:43 [] DEBUG i.n.util.internal.PlatformDependent0 - Java version: 17
2025-02-28 11:26:43 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe.theUnsafe: available
2025-02-28 11:26:43 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe base methods: all available
2025-02-28 11:26:43 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe.storeFence: available
2025-02-28 11:26:43 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.Buffer.address: available
2025-02-28 11:26:43 [] DEBUG i.n.util.internal.PlatformDependent0 - direct buffer constructor: unavailable: Reflective setAccessible(true) disabled
2025-02-28 11:26:43 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.Bits.unaligned: available, true
2025-02-28 11:26:43 [] DEBUG i.n.util.internal.PlatformDependent0 - jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable: class io.netty.util.internal.PlatformDependent0$7 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @3e77a1ed
2025-02-28 11:26:43 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.DirectByteBuffer.<init>(long, {int,long}): unavailable
2025-02-28 11:26:43 [] DEBUG i.n.util.internal.PlatformDependent - sun.misc.Unsafe: available
2025-02-28 11:26:43 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.tmpdir: C:\Users\CITPL\AppData\Local\Temp (java.io.tmpdir)
2025-02-28 11:26:43 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.bitMode: 64 (sun.arch.data.model)
2025-02-28 11:26:43 [] DEBUG i.n.util.internal.PlatformDependent - Platform: Windows
2025-02-28 11:26:43 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.maxDirectMemory: -1 bytes
2025-02-28 11:26:43 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.uninitializedArrayAllocationThreshold: -1
2025-02-28 11:26:43 [] DEBUG io.netty.util.internal.CleanerJava9 - java.nio.ByteBuffer.cleaner(): available
2025-02-28 11:26:43 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.noPreferDirect: false
2025-02-28 11:26:43 [] DEBUG reactor.util.Loggers - Using Slf4j logging framework
2025-02-28 11:26:43 [] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-02-28 11:26:43 [] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2025-02-28 11:26:43 [] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2025-02-28 11:26:43 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-02-28 11:26:43 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via user class loader
2025-02-28 11:26:43 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-02-28 11:26:43 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-02-28 11:26:43 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-02-28 11:26:43 [] DEBUG o.h.v.i.e.r.TraversableResolvers - Cannot find jakarta.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2025-02-28 11:26:43 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-02-28 11:26:43 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-02-28 11:26:43 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-02-28 11:26:43 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-02-28 11:26:43 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-02-28 11:26:43 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-02-28 11:26:44 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	c.c.c.g.c.c.HomeController:
	{GET [/home]}: get()
2025-02-28 11:26:44 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2025-02-28 11:26:44 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 'beanNameHandlerMapping' {}
2025-02-28 11:26:44 [] DEBUG _.s.w.s.HandlerMapping.Mappings - Mapped /users/** -> ProxyExchangeHandlerFunction
2025-02-28 11:26:44 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2025-02-28 11:26:44 [] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-02-28 11:26:44 [] DEBUG i.n.u.i.InternalThreadLocalMap - -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2025-02-28 11:26:44 [] DEBUG i.n.u.i.InternalThreadLocalMap - -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2025-02-28 11:26:45 [] DEBUG io.netty.util.ResourceLeakDetector - -Dio.netty.leakDetection.level: simple
2025-02-28 11:26:45 [] DEBUG io.netty.util.ResourceLeakDetector - -Dio.netty.leakDetection.targetRecords: 4
2025-02-28 11:26:45 [] DEBUG i.n.handler.codec.compression.Brotli - brotli4j not in the classpath; Brotli support will be unavailable.
2025-02-28 11:26:45 [] DEBUG reactor.netty.tcp.TcpResources - [http] resources will use the default LoopResources: DefaultLoopResources {prefix=reactor-http, daemon=true, selectCount=12, workerCount=12}
2025-02-28 11:26:45 [] DEBUG reactor.netty.tcp.TcpResources - [http] resources will use the default ConnectionProvider: reactor.netty.resources.DefaultPooledConnectionProvider@63226ace
2025-02-28 11:26:45 [] DEBUG r.netty.resources.DefaultLoopIOUring - Default io_uring support : false
2025-02-28 11:26:45 [] DEBUG r.netty.resources.DefaultLoopEpoll - Default Epoll support : false
2025-02-28 11:26:45 [] DEBUG r.netty.resources.DefaultLoopKQueue - Default KQueue support : false
2025-02-28 11:26:45 [] DEBUG i.n.c.MultithreadEventLoopGroup - -Dio.netty.eventLoopThreads: 24
2025-02-28 11:26:45 [] DEBUG i.n.u.concurrent.GlobalEventExecutor - -Dio.netty.globalEventExecutor.quietPeriodSeconds: 1
2025-02-28 11:26:45 [] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.noKeySetOptimization: false
2025-02-28 11:26:45 [] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.selectorAutoRebuildThreshold: 512
2025-02-28 11:26:45 [] DEBUG i.n.util.internal.PlatformDependent - org.jctools-core.MpscChunkedArrayQueue: available
2025-02-28 11:26:45 [] DEBUG io.netty.util.NetUtil - -Djava.net.preferIPv4Stack: false
2025-02-28 11:26:45 [] DEBUG io.netty.util.NetUtil - -Djava.net.preferIPv6Addresses: false
2025-02-28 11:26:45 [] DEBUG i.netty.util.NetUtilInitializations - Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2025-02-28 11:26:45 [] DEBUG io.netty.util.NetUtil - Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2025-02-28 11:26:45 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default ResolvedAddressTypes: IPV4_ONLY
2025-02-28 11:26:45 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Localhost address: localhost/127.0.0.1
2025-02-28 11:26:45 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Windows hostname: DESKTOP-P307093
2025-02-28 11:26:45 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default search domains: []
2025-02-28 11:26:45 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default UnixResolverOptions{ndots=1, timeout=5, attempts=16}
2025-02-28 11:26:45 [] DEBUG i.n.r.DefaultHostsFileEntriesResolver - -Dio.netty.hostsFileRefreshInterval: 0
2025-02-28 11:26:45 [] DEBUG i.n.r.d.DefaultDnsServerAddressStreamProvider - Default DNS servers: [/8.8.8.8:53, /4.2.2.2:53] (sun.net.dns.ResolverConfiguration)
2025-02-28 11:26:45 [] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-02-28 11:26:45 [] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-02-28 11:26:45 [] INFO  c.c.c.g.c.CommongatewayApplication - Started CommongatewayApplication in 5.228 seconds (process running for 6.577)
2025-02-28 11:26:54 [] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-02-28 11:26:54 [] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-02-28 11:26:54 [] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-02-28 11:26:54 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 11:26:54 [b6f1415d-152a-4b93-bbb8-9dad08790ace] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 11:26:54 [b6f1415d-152a-4b93-bbb8-9dad08790ace] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /users
2025-02-28 11:26:54 [b6f1415d-152a-4b93-bbb8-9dad08790ace] DEBUG r.n.r.PooledConnectionProvider - Creating a new [http] client pool [PoolFactory{evictionInterval=PT0S, leasingStrategy=fifo, maxConnections=500, maxIdleTime=-1, maxLifeTime=-1, metricsEnabled=false, pendingAcquireMaxCount=1000, pendingAcquireTimeout=45000}] for [localhost/<unresolved>:8081]
2025-02-28 11:26:54 [b6f1415d-152a-4b93-bbb8-9dad08790ace] DEBUG io.netty.channel.DefaultChannelId - -Dio.netty.processId: 64112 (auto-detected)
2025-02-28 11:26:54 [b6f1415d-152a-4b93-bbb8-9dad08790ace] DEBUG io.netty.channel.DefaultChannelId - -Dio.netty.machineId: a0:d3:65:ff:fe:5e:b0:28 (auto-detected)
2025-02-28 11:26:54 [b6f1415d-152a-4b93-bbb8-9dad08790ace] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.numHeapArenas: 24
2025-02-28 11:26:54 [b6f1415d-152a-4b93-bbb8-9dad08790ace] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.numDirectArenas: 24
2025-02-28 11:26:54 [b6f1415d-152a-4b93-bbb8-9dad08790ace] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.pageSize: 8192
2025-02-28 11:26:54 [b6f1415d-152a-4b93-bbb8-9dad08790ace] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxOrder: 9
2025-02-28 11:26:54 [b6f1415d-152a-4b93-bbb8-9dad08790ace] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.chunkSize: 4194304
2025-02-28 11:26:54 [b6f1415d-152a-4b93-bbb8-9dad08790ace] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.smallCacheSize: 256
2025-02-28 11:26:54 [b6f1415d-152a-4b93-bbb8-9dad08790ace] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.normalCacheSize: 64
2025-02-28 11:26:54 [b6f1415d-152a-4b93-bbb8-9dad08790ace] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2025-02-28 11:26:54 [b6f1415d-152a-4b93-bbb8-9dad08790ace] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.cacheTrimInterval: 8192
2025-02-28 11:26:54 [b6f1415d-152a-4b93-bbb8-9dad08790ace] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.cacheTrimIntervalMillis: 0
2025-02-28 11:26:54 [b6f1415d-152a-4b93-bbb8-9dad08790ace] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.useCacheForAllThreads: false
2025-02-28 11:26:54 [b6f1415d-152a-4b93-bbb8-9dad08790ace] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
2025-02-28 11:26:54 [b6f1415d-152a-4b93-bbb8-9dad08790ace] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.disableCacheFinalizersForFastThreadLocalThreads: false
2025-02-28 11:26:54 [b6f1415d-152a-4b93-bbb8-9dad08790ace] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.allocator.type: pooled
2025-02-28 11:26:54 [b6f1415d-152a-4b93-bbb8-9dad08790ace] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.threadLocalDirectBufferSize: 0
2025-02-28 11:26:54 [b6f1415d-152a-4b93-bbb8-9dad08790ace] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.maxThreadLocalCharBufferSize: 16384
2025-02-28 11:26:54 [] DEBUG r.n.r.PooledConnectionProvider - [eb3d2911] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 11:26:54 [] DEBUG io.netty.buffer.AbstractByteBuf - -Dio.netty.buffer.checkAccessible: true
2025-02-28 11:26:54 [] DEBUG io.netty.buffer.AbstractByteBuf - -Dio.netty.buffer.checkBounds: true
2025-02-28 11:26:54 [] DEBUG i.n.util.ResourceLeakDetectorFactory - Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@35a24a7b
2025-02-28 11:26:54 [] DEBUG r.netty.transport.TransportConfig - [eb3d2911] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-28 11:26:54 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 11:26:54 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 11:26:54 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 11:26:54 [] DEBUG i.n.b.ChannelInitializerExtensions - -Dio.netty.bootstrap.extensions: null
2025-02-28 11:26:54 [] DEBUG r.netty.transport.TransportConnector - [eb3d2911] Connecting to [localhost/127.0.0.1:8081].
2025-02-28 11:26:54 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [eb3d2911, L:/127.0.0.1:57135 - R:localhost/127.0.0.1:8081] Registering pool release on close event for channel
2025-02-28 11:26:54 [] DEBUG r.n.r.PooledConnectionProvider - [eb3d2911, L:/127.0.0.1:57135 - R:localhost/127.0.0.1:8081] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 11:26:54 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [eb3d2911, L:/127.0.0.1:57135 - R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0xeb3d2911, L:/127.0.0.1:57135 - R:localhost/127.0.0.1:8081]}, [connected])
2025-02-28 11:26:54 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [eb3d2911-1, L:/127.0.0.1:57135 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0xeb3d2911, L:/127.0.0.1:57135 - R:localhost/127.0.0.1:8081]}}, [configured])
2025-02-28 11:26:54 [] DEBUG r.n.http.client.HttpClientConnect - [eb3d2911-1, L:/127.0.0.1:57135 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY, method=GET}
2025-02-28 11:26:54 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [eb3d2911-1, L:/127.0.0.1:57135 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xeb3d2911, L:/127.0.0.1:57135 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 11:26:54 [] DEBUG r.n.http.client.HttpClientOperations - [eb3d2911-1, L:/127.0.0.1:57135 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 11:26:54 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.maxCapacityPerThread: 4096
2025-02-28 11:26:54 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.ratio: 8
2025-02-28 11:26:54 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.chunkSize: 32
2025-02-28 11:26:54 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.blocking: false
2025-02-28 11:26:54 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.batchFastThreadLocalOnly: true
2025-02-28 11:26:54 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [eb3d2911-1, L:/127.0.0.1:57135 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xeb3d2911, L:/127.0.0.1:57135 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 11:26:55 [] DEBUG i.n.handler.codec.compression.Zstd - zstd-jni not in the classpath; Zstd support will be unavailable.
2025-02-28 11:26:55 [] DEBUG r.n.http.client.HttpClientOperations - [eb3d2911-1, L:/127.0.0.1:57135 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-28 11:26:55 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [eb3d2911-1, L:/127.0.0.1:57135 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xeb3d2911, L:/127.0.0.1:57135 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 11:26:55 [] DEBUG reactor.netty.channel.FluxReceive - [eb3d2911-1, L:/127.0.0.1:57135 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-28 11:26:55 [] DEBUG r.n.http.client.HttpClientOperations - [eb3d2911-1, L:/127.0.0.1:57135 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 11:26:55 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [eb3d2911, L:/127.0.0.1:57135 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xeb3d2911, L:/127.0.0.1:57135 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 11:26:55 [b6f1415d-152a-4b93-bbb8-9dad08790ace] INFO  c.c.c.g.c.c.ValidationInterceptor - ✅ Token Validated! Forwarding request...
2025-02-28 11:26:55 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [eb3d2911, L:/127.0.0.1:57135 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xeb3d2911, L:/127.0.0.1:57135 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 11:26:55 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [eb3d2911, L:/127.0.0.1:57135 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-28 11:26:55 [] DEBUG r.n.r.PooledConnectionProvider - [eb3d2911, L:/127.0.0.1:57135 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-28 11:26:55 [b6f1415d-152a-4b93-bbb8-9dad08790ace] DEBUG i.m.c.u.i.l.InternalLoggerFactory - Using SLF4J as the default logging framework
2025-02-28 11:26:55 [b6f1415d-152a-4b93-bbb8-9dad08790ace] DEBUG r.n.r.PooledConnectionProvider - Creating a new [http] client pool [PoolFactory{evictionInterval=PT0S, leasingStrategy=fifo, maxConnections=500, maxIdleTime=-1, maxLifeTime=-1, metricsEnabled=false, pendingAcquireMaxCount=1000, pendingAcquireTimeout=45000}] for [localhost/<unresolved>:8082]
2025-02-28 11:26:55 [] DEBUG r.n.r.PooledConnectionProvider - [59f2f7cc] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 11:26:55 [] DEBUG r.netty.transport.TransportConfig - [59f2f7cc] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-28 11:26:55 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 11:26:55 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 11:26:55 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 11:26:55 [] DEBUG r.netty.transport.TransportConnector - [59f2f7cc] Connecting to [localhost/127.0.0.1:8082].
2025-02-28 11:26:55 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [59f2f7cc, L:/127.0.0.1:57136 - R:localhost/127.0.0.1:8082] Registering pool release on close event for channel
2025-02-28 11:26:55 [] DEBUG r.n.r.PooledConnectionProvider - [59f2f7cc, L:/127.0.0.1:57136 - R:localhost/127.0.0.1:8082] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 11:26:55 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [59f2f7cc, L:/127.0.0.1:57136 - R:localhost/127.0.0.1:8082] onStateChange(PooledConnection{channel=[id: 0x59f2f7cc, L:/127.0.0.1:57136 - R:localhost/127.0.0.1:8082]}, [connected])
2025-02-28 11:26:55 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [59f2f7cc-1, L:/127.0.0.1:57136 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0x59f2f7cc, L:/127.0.0.1:57136 - R:localhost/127.0.0.1:8082]}}, [configured])
2025-02-28 11:26:55 [] DEBUG r.n.http.client.HttpClientConnect - [59f2f7cc-1, L:/127.0.0.1:57136 - R:localhost/127.0.0.1:8082] Handler is being applied: {uri=http://localhost:8082/users, method=GET}
2025-02-28 11:26:55 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [59f2f7cc-1, L:/127.0.0.1:57136 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0x59f2f7cc, L:/127.0.0.1:57136 - R:localhost/127.0.0.1:8082]}}, [request_prepared])
2025-02-28 11:26:55 [] DEBUG r.n.http.client.HttpClientOperations - [59f2f7cc-1, L:/127.0.0.1:57136 - R:localhost/127.0.0.1:8082] No sendHeaders() called before complete, sending zero-length header
2025-02-28 11:26:55 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [59f2f7cc-1, L:/127.0.0.1:57136 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0x59f2f7cc, L:/127.0.0.1:57136 - R:localhost/127.0.0.1:8082]}}, [request_sent])
2025-02-28 11:26:56 [] DEBUG r.n.http.client.HttpClientOperations - [59f2f7cc-1, L:/127.0.0.1:57136 - R:localhost/127.0.0.1:8082] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Content-Length: <filtered>
Date: <filtered>
2025-02-28 11:26:56 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [59f2f7cc-1, L:/127.0.0.1:57136 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0x59f2f7cc, L:/127.0.0.1:57136 - R:localhost/127.0.0.1:8082]}}, [response_received])
2025-02-28 11:26:56 [] DEBUG r.n.http.client.HttpClientOperations - [59f2f7cc-1, L:/127.0.0.1:57136 - R:localhost/127.0.0.1:8082] Received last HTTP packet
2025-02-28 11:26:56 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [59f2f7cc, L:/127.0.0.1:57136 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0x59f2f7cc, L:/127.0.0.1:57136 - R:localhost/127.0.0.1:8082]}}, [response_completed])
2025-02-28 11:26:56 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [59f2f7cc, L:/127.0.0.1:57136 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0x59f2f7cc, L:/127.0.0.1:57136 - R:localhost/127.0.0.1:8082]}}, [disconnecting])
2025-02-28 11:26:56 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [59f2f7cc, L:/127.0.0.1:57136 - R:localhost/127.0.0.1:8082] Releasing channel
2025-02-28 11:26:56 [] DEBUG r.n.r.PooledConnectionProvider - [59f2f7cc, L:/127.0.0.1:57136 - R:localhost/127.0.0.1:8082] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-28 11:26:56 [] DEBUG reactor.netty.channel.FluxReceive - [5f452a75, L:/127.0.0.1:57136 ! R:localhost/127.0.0.1:8082] [terminated=true, cancelled=false, pending=1, error=null]: subscribing inbound receiver
2025-02-28 11:27:03 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 11:27:03 [f30d3586-a197-4c5e-b3cc-6c2a7403a23e] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 11:27:03 [] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /error
2025-02-28 11:27:03 [] DEBUG r.n.r.PooledConnectionProvider - [eb3d2911, L:/127.0.0.1:57135 - R:localhost/127.0.0.1:8081] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 11:27:03 [] DEBUG r.n.http.client.HttpClientConnect - [eb3d2911-2, L:/127.0.0.1:57135 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY, method=GET}
2025-02-28 11:27:03 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [eb3d2911-2, L:/127.0.0.1:57135 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xeb3d2911, L:/127.0.0.1:57135 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 11:27:03 [] DEBUG r.n.http.client.HttpClientOperations - [eb3d2911-2, L:/127.0.0.1:57135 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 11:27:03 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [eb3d2911-2, L:/127.0.0.1:57135 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xeb3d2911, L:/127.0.0.1:57135 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 11:27:03 [] DEBUG r.n.http.client.HttpClientOperations - [eb3d2911-2, L:/127.0.0.1:57135 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-28 11:27:03 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [eb3d2911-2, L:/127.0.0.1:57135 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xeb3d2911, L:/127.0.0.1:57135 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 11:27:03 [] DEBUG reactor.netty.channel.FluxReceive - [eb3d2911-2, L:/127.0.0.1:57135 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-28 11:27:03 [] DEBUG r.n.http.client.HttpClientOperations - [eb3d2911-2, L:/127.0.0.1:57135 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 11:27:03 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [eb3d2911, L:/127.0.0.1:57135 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xeb3d2911, L:/127.0.0.1:57135 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 11:27:03 [] INFO  c.c.c.g.c.c.ValidationInterceptor - ✅ Token Validated! Forwarding request...
2025-02-28 11:27:03 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [eb3d2911, L:/127.0.0.1:57135 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xeb3d2911, L:/127.0.0.1:57135 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 11:27:03 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [eb3d2911, L:/127.0.0.1:57135 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-28 11:27:03 [] DEBUG r.n.r.PooledConnectionProvider - [eb3d2911, L:/127.0.0.1:57135 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-28 11:27:56 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [59f2f7cc, L:/127.0.0.1:57136 ! R:localhost/127.0.0.1:8082] onStateChange(PooledConnection{channel=[id: 0x59f2f7cc, L:/127.0.0.1:57136 ! R:localhost/127.0.0.1:8082]}, [disconnecting])
2025-02-28 11:28:04 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [eb3d2911, L:/127.0.0.1:57135 ! R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0xeb3d2911, L:/127.0.0.1:57135 ! R:localhost/127.0.0.1:8081]}, [disconnecting])
2025-02-28 11:29:18 [] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-02-28 11:29:18 [] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-02-28 11:29:18 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 5 thread-local buffer(s) from thread: reactor-http-nio-2
2025-02-28 11:29:18 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 4 thread-local buffer(s) from thread: reactor-http-nio-4
2025-02-28 11:29:21 [] DEBUG org.jboss.logging - Logging Provider: org.jboss.logging.Slf4jLoggerProvider found via system property
2025-02-28 11:29:21 [] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final
2025-02-28 11:29:21 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-02-28 11:29:21 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-02-28 11:29:21 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-02-28 11:29:21 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-02-28 11:29:21 [] DEBUG o.h.v.i.e.r.TraversableResolvers - Cannot find jakarta.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2025-02-28 11:29:21 [] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-02-28 11:29:21 [] INFO  c.c.c.g.c.CommongatewayApplication - Starting CommongatewayApplication using Java 17.0.12 with PID 63120 (D:\WORKSPACE\API-GATEWAY\commongateway\target\classes started by CITPL in D:\WORKSPACE\API-GATEWAY)
2025-02-28 11:29:21 [] DEBUG c.c.c.g.c.CommongatewayApplication - Running with Spring Boot v3.4.2, Spring v6.2.2
2025-02-28 11:29:21 [] INFO  c.c.c.g.c.CommongatewayApplication - No active profile set, falling back to 1 default profile: "default"
2025-02-28 11:29:21 [] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-02-28 11:29:21 [] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-02-28 11:29:21 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-02-28 11:29:21 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-02-28 11:29:21 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-02-28 11:29:21 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-02-28 11:29:21 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-02-28 11:29:21 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-02-28 11:29:23 [] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=d2aee5ef-86a6-3b95-abd8-708d95e66676
2025-02-28 11:29:23 [] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-02-28 11:29:23 [] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-02-28 11:29:23 [] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-02-28 11:29:23 [] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.34]
2025-02-28 11:29:23 [] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-02-28 11:29:23 [] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1991 ms
2025-02-28 11:29:23 [] DEBUG i.n.u.i.l.InternalLoggerFactory - Using SLF4J as the default logging framework
2025-02-28 11:29:23 [] DEBUG i.n.util.internal.PlatformDependent0 - -Dio.netty.noUnsafe: false
2025-02-28 11:29:23 [] DEBUG i.n.util.internal.PlatformDependent0 - Java version: 17
2025-02-28 11:29:23 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe.theUnsafe: available
2025-02-28 11:29:23 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe base methods: all available
2025-02-28 11:29:23 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe.storeFence: available
2025-02-28 11:29:23 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.Buffer.address: available
2025-02-28 11:29:23 [] DEBUG i.n.util.internal.PlatformDependent0 - direct buffer constructor: unavailable: Reflective setAccessible(true) disabled
2025-02-28 11:29:23 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.Bits.unaligned: available, true
2025-02-28 11:29:23 [] DEBUG i.n.util.internal.PlatformDependent0 - jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable: class io.netty.util.internal.PlatformDependent0$7 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @3e77a1ed
2025-02-28 11:29:23 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.DirectByteBuffer.<init>(long, {int,long}): unavailable
2025-02-28 11:29:23 [] DEBUG i.n.util.internal.PlatformDependent - sun.misc.Unsafe: available
2025-02-28 11:29:23 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.tmpdir: C:\Users\CITPL\AppData\Local\Temp (java.io.tmpdir)
2025-02-28 11:29:23 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.bitMode: 64 (sun.arch.data.model)
2025-02-28 11:29:23 [] DEBUG i.n.util.internal.PlatformDependent - Platform: Windows
2025-02-28 11:29:23 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.maxDirectMemory: -1 bytes
2025-02-28 11:29:23 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.uninitializedArrayAllocationThreshold: -1
2025-02-28 11:29:23 [] DEBUG io.netty.util.internal.CleanerJava9 - java.nio.ByteBuffer.cleaner(): available
2025-02-28 11:29:23 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.noPreferDirect: false
2025-02-28 11:29:24 [] DEBUG reactor.util.Loggers - Using Slf4j logging framework
2025-02-28 11:29:24 [] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-02-28 11:29:24 [] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2025-02-28 11:29:24 [] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2025-02-28 11:29:24 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-02-28 11:29:24 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via user class loader
2025-02-28 11:29:24 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-02-28 11:29:24 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-02-28 11:29:24 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-02-28 11:29:24 [] DEBUG o.h.v.i.e.r.TraversableResolvers - Cannot find jakarta.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2025-02-28 11:29:24 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-02-28 11:29:24 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-02-28 11:29:24 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-02-28 11:29:24 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-02-28 11:29:24 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-02-28 11:29:24 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-02-28 11:29:24 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	c.c.c.g.c.c.HomeController:
	{GET [/home]}: get()
2025-02-28 11:29:24 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2025-02-28 11:29:24 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 'beanNameHandlerMapping' {}
2025-02-28 11:29:24 [] DEBUG _.s.w.s.HandlerMapping.Mappings - Mapped /validate/** -> ProxyExchangeHandlerFunction
/users/** -> ProxyExchangeHandlerFunction
2025-02-28 11:29:24 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2025-02-28 11:29:24 [] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-02-28 11:29:25 [] DEBUG i.n.u.i.InternalThreadLocalMap - -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2025-02-28 11:29:25 [] DEBUG i.n.u.i.InternalThreadLocalMap - -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2025-02-28 11:29:25 [] DEBUG io.netty.util.ResourceLeakDetector - -Dio.netty.leakDetection.level: simple
2025-02-28 11:29:25 [] DEBUG io.netty.util.ResourceLeakDetector - -Dio.netty.leakDetection.targetRecords: 4
2025-02-28 11:29:25 [] DEBUG i.n.handler.codec.compression.Brotli - brotli4j not in the classpath; Brotli support will be unavailable.
2025-02-28 11:29:25 [] DEBUG reactor.netty.tcp.TcpResources - [http] resources will use the default LoopResources: DefaultLoopResources {prefix=reactor-http, daemon=true, selectCount=12, workerCount=12}
2025-02-28 11:29:25 [] DEBUG reactor.netty.tcp.TcpResources - [http] resources will use the default ConnectionProvider: reactor.netty.resources.DefaultPooledConnectionProvider@87c3356
2025-02-28 11:29:25 [] DEBUG r.netty.resources.DefaultLoopIOUring - Default io_uring support : false
2025-02-28 11:29:25 [] DEBUG r.netty.resources.DefaultLoopEpoll - Default Epoll support : false
2025-02-28 11:29:25 [] DEBUG r.netty.resources.DefaultLoopKQueue - Default KQueue support : false
2025-02-28 11:29:25 [] DEBUG i.n.c.MultithreadEventLoopGroup - -Dio.netty.eventLoopThreads: 24
2025-02-28 11:29:25 [] DEBUG i.n.u.concurrent.GlobalEventExecutor - -Dio.netty.globalEventExecutor.quietPeriodSeconds: 1
2025-02-28 11:29:25 [] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.noKeySetOptimization: false
2025-02-28 11:29:25 [] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.selectorAutoRebuildThreshold: 512
2025-02-28 11:29:25 [] DEBUG i.n.util.internal.PlatformDependent - org.jctools-core.MpscChunkedArrayQueue: available
2025-02-28 11:29:25 [] DEBUG io.netty.util.NetUtil - -Djava.net.preferIPv4Stack: false
2025-02-28 11:29:25 [] DEBUG io.netty.util.NetUtil - -Djava.net.preferIPv6Addresses: false
2025-02-28 11:29:25 [] DEBUG i.netty.util.NetUtilInitializations - Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2025-02-28 11:29:25 [] DEBUG io.netty.util.NetUtil - Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2025-02-28 11:29:25 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default ResolvedAddressTypes: IPV4_ONLY
2025-02-28 11:29:25 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Localhost address: localhost/127.0.0.1
2025-02-28 11:29:25 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Windows hostname: DESKTOP-P307093
2025-02-28 11:29:25 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default search domains: []
2025-02-28 11:29:25 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default UnixResolverOptions{ndots=1, timeout=5, attempts=16}
2025-02-28 11:29:25 [] DEBUG i.n.r.DefaultHostsFileEntriesResolver - -Dio.netty.hostsFileRefreshInterval: 0
2025-02-28 11:29:25 [] DEBUG i.n.r.d.DefaultDnsServerAddressStreamProvider - Default DNS servers: [/8.8.8.8:53, /4.2.2.2:53] (sun.net.dns.ResolverConfiguration)
2025-02-28 11:29:25 [] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-02-28 11:29:25 [] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-02-28 11:29:25 [] INFO  c.c.c.g.c.CommongatewayApplication - Started CommongatewayApplication in 4.893 seconds (process running for 6.175)
2025-02-28 11:29:54 [] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-02-28 11:29:54 [] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-02-28 11:29:57 [] DEBUG org.jboss.logging - Logging Provider: org.jboss.logging.Slf4jLoggerProvider found via system property
2025-02-28 11:29:57 [] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final
2025-02-28 11:29:57 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-02-28 11:29:57 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-02-28 11:29:57 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-02-28 11:29:57 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-02-28 11:29:57 [] DEBUG o.h.v.i.e.r.TraversableResolvers - Cannot find jakarta.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2025-02-28 11:29:57 [] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-02-28 11:29:57 [] INFO  c.c.c.g.c.CommongatewayApplication - Starting CommongatewayApplication using Java 17.0.12 with PID 34748 (D:\WORKSPACE\API-GATEWAY\commongateway\target\classes started by CITPL in D:\WORKSPACE\API-GATEWAY)
2025-02-28 11:29:57 [] DEBUG c.c.c.g.c.CommongatewayApplication - Running with Spring Boot v3.4.2, Spring v6.2.2
2025-02-28 11:29:57 [] INFO  c.c.c.g.c.CommongatewayApplication - No active profile set, falling back to 1 default profile: "default"
2025-02-28 11:29:58 [] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-02-28 11:29:58 [] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-02-28 11:29:58 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-02-28 11:29:58 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-02-28 11:29:58 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-02-28 11:29:58 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-02-28 11:29:58 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-02-28 11:29:58 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-02-28 11:29:59 [] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=d2aee5ef-86a6-3b95-abd8-708d95e66676
2025-02-28 11:30:00 [] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-02-28 11:30:00 [] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-02-28 11:30:00 [] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-02-28 11:30:00 [] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.34]
2025-02-28 11:30:00 [] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-02-28 11:30:00 [] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2137 ms
2025-02-28 11:30:00 [] DEBUG i.n.u.i.l.InternalLoggerFactory - Using SLF4J as the default logging framework
2025-02-28 11:30:00 [] DEBUG i.n.util.internal.PlatformDependent0 - -Dio.netty.noUnsafe: false
2025-02-28 11:30:00 [] DEBUG i.n.util.internal.PlatformDependent0 - Java version: 17
2025-02-28 11:30:00 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe.theUnsafe: available
2025-02-28 11:30:00 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe base methods: all available
2025-02-28 11:30:00 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe.storeFence: available
2025-02-28 11:30:00 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.Buffer.address: available
2025-02-28 11:30:00 [] DEBUG i.n.util.internal.PlatformDependent0 - direct buffer constructor: unavailable: Reflective setAccessible(true) disabled
2025-02-28 11:30:00 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.Bits.unaligned: available, true
2025-02-28 11:30:00 [] DEBUG i.n.util.internal.PlatformDependent0 - jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable: class io.netty.util.internal.PlatformDependent0$7 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @3e77a1ed
2025-02-28 11:30:00 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.DirectByteBuffer.<init>(long, {int,long}): unavailable
2025-02-28 11:30:00 [] DEBUG i.n.util.internal.PlatformDependent - sun.misc.Unsafe: available
2025-02-28 11:30:00 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.tmpdir: C:\Users\CITPL\AppData\Local\Temp (java.io.tmpdir)
2025-02-28 11:30:00 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.bitMode: 64 (sun.arch.data.model)
2025-02-28 11:30:00 [] DEBUG i.n.util.internal.PlatformDependent - Platform: Windows
2025-02-28 11:30:00 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.maxDirectMemory: -1 bytes
2025-02-28 11:30:00 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.uninitializedArrayAllocationThreshold: -1
2025-02-28 11:30:00 [] DEBUG io.netty.util.internal.CleanerJava9 - java.nio.ByteBuffer.cleaner(): available
2025-02-28 11:30:00 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.noPreferDirect: false
2025-02-28 11:30:00 [] DEBUG reactor.util.Loggers - Using Slf4j logging framework
2025-02-28 11:30:01 [] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-02-28 11:30:01 [] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2025-02-28 11:30:01 [] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2025-02-28 11:30:01 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-02-28 11:30:01 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via user class loader
2025-02-28 11:30:01 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-02-28 11:30:01 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-02-28 11:30:01 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-02-28 11:30:01 [] DEBUG o.h.v.i.e.r.TraversableResolvers - Cannot find jakarta.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2025-02-28 11:30:01 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-02-28 11:30:01 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-02-28 11:30:01 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-02-28 11:30:01 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-02-28 11:30:01 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-02-28 11:30:01 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-02-28 11:30:01 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	c.c.c.g.c.c.HomeController:
	{GET [/home]}: get()
2025-02-28 11:30:01 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2025-02-28 11:30:01 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 'beanNameHandlerMapping' {}
2025-02-28 11:30:01 [] DEBUG _.s.w.s.HandlerMapping.Mappings - Mapped /validate/** -> ProxyExchangeHandlerFunction
/users/** -> ProxyExchangeHandlerFunction
2025-02-28 11:30:01 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2025-02-28 11:30:01 [] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-02-28 11:30:01 [] DEBUG i.n.u.i.InternalThreadLocalMap - -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2025-02-28 11:30:01 [] DEBUG i.n.u.i.InternalThreadLocalMap - -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2025-02-28 11:30:01 [] DEBUG io.netty.util.ResourceLeakDetector - -Dio.netty.leakDetection.level: simple
2025-02-28 11:30:01 [] DEBUG io.netty.util.ResourceLeakDetector - -Dio.netty.leakDetection.targetRecords: 4
2025-02-28 11:30:02 [] DEBUG i.n.handler.codec.compression.Brotli - brotli4j not in the classpath; Brotli support will be unavailable.
2025-02-28 11:30:02 [] DEBUG reactor.netty.tcp.TcpResources - [http] resources will use the default LoopResources: DefaultLoopResources {prefix=reactor-http, daemon=true, selectCount=12, workerCount=12}
2025-02-28 11:30:02 [] DEBUG reactor.netty.tcp.TcpResources - [http] resources will use the default ConnectionProvider: reactor.netty.resources.DefaultPooledConnectionProvider@6b108bb6
2025-02-28 11:30:02 [] DEBUG r.netty.resources.DefaultLoopIOUring - Default io_uring support : false
2025-02-28 11:30:02 [] DEBUG r.netty.resources.DefaultLoopEpoll - Default Epoll support : false
2025-02-28 11:30:02 [] DEBUG r.netty.resources.DefaultLoopKQueue - Default KQueue support : false
2025-02-28 11:30:02 [] DEBUG i.n.c.MultithreadEventLoopGroup - -Dio.netty.eventLoopThreads: 24
2025-02-28 11:30:02 [] DEBUG i.n.u.concurrent.GlobalEventExecutor - -Dio.netty.globalEventExecutor.quietPeriodSeconds: 1
2025-02-28 11:30:02 [] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.noKeySetOptimization: false
2025-02-28 11:30:02 [] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.selectorAutoRebuildThreshold: 512
2025-02-28 11:30:02 [] DEBUG i.n.util.internal.PlatformDependent - org.jctools-core.MpscChunkedArrayQueue: available
2025-02-28 11:30:02 [] DEBUG io.netty.util.NetUtil - -Djava.net.preferIPv4Stack: false
2025-02-28 11:30:02 [] DEBUG io.netty.util.NetUtil - -Djava.net.preferIPv6Addresses: false
2025-02-28 11:30:02 [] DEBUG i.netty.util.NetUtilInitializations - Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2025-02-28 11:30:02 [] DEBUG io.netty.util.NetUtil - Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2025-02-28 11:30:02 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default ResolvedAddressTypes: IPV4_ONLY
2025-02-28 11:30:02 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Localhost address: localhost/127.0.0.1
2025-02-28 11:30:02 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Windows hostname: DESKTOP-P307093
2025-02-28 11:30:02 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default search domains: []
2025-02-28 11:30:02 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default UnixResolverOptions{ndots=1, timeout=5, attempts=16}
2025-02-28 11:30:02 [] DEBUG i.n.r.DefaultHostsFileEntriesResolver - -Dio.netty.hostsFileRefreshInterval: 0
2025-02-28 11:30:02 [] DEBUG i.n.r.d.DefaultDnsServerAddressStreamProvider - Default DNS servers: [/8.8.8.8:53, /4.2.2.2:53] (sun.net.dns.ResolverConfiguration)
2025-02-28 11:30:02 [] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-02-28 11:30:02 [] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-02-28 11:30:02 [] INFO  c.c.c.g.c.CommongatewayApplication - Started CommongatewayApplication in 5.276 seconds (process running for 6.524)
2025-02-28 11:30:04 [] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-02-28 11:30:04 [] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-02-28 11:30:04 [] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 0 ms
2025-02-28 11:30:04 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 11:30:04 [56acd3bc-5f09-4dc1-9301-7c54ad935fec] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 11:30:04 [56acd3bc-5f09-4dc1-9301-7c54ad935fec] DEBUG i.m.c.u.i.l.InternalLoggerFactory - Using SLF4J as the default logging framework
2025-02-28 11:30:04 [56acd3bc-5f09-4dc1-9301-7c54ad935fec] DEBUG r.n.r.PooledConnectionProvider - Creating a new [http] client pool [PoolFactory{evictionInterval=PT0S, leasingStrategy=fifo, maxConnections=500, maxIdleTime=-1, maxLifeTime=-1, metricsEnabled=false, pendingAcquireMaxCount=1000, pendingAcquireTimeout=45000}] for [localhost/<unresolved>:8081]
2025-02-28 11:30:04 [56acd3bc-5f09-4dc1-9301-7c54ad935fec] DEBUG io.netty.channel.DefaultChannelId - -Dio.netty.processId: 34748 (auto-detected)
2025-02-28 11:30:04 [56acd3bc-5f09-4dc1-9301-7c54ad935fec] DEBUG io.netty.channel.DefaultChannelId - -Dio.netty.machineId: a0:d3:65:ff:fe:5e:b0:28 (auto-detected)
2025-02-28 11:30:04 [56acd3bc-5f09-4dc1-9301-7c54ad935fec] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.numHeapArenas: 24
2025-02-28 11:30:04 [56acd3bc-5f09-4dc1-9301-7c54ad935fec] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.numDirectArenas: 24
2025-02-28 11:30:04 [56acd3bc-5f09-4dc1-9301-7c54ad935fec] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.pageSize: 8192
2025-02-28 11:30:04 [56acd3bc-5f09-4dc1-9301-7c54ad935fec] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxOrder: 9
2025-02-28 11:30:04 [56acd3bc-5f09-4dc1-9301-7c54ad935fec] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.chunkSize: 4194304
2025-02-28 11:30:04 [56acd3bc-5f09-4dc1-9301-7c54ad935fec] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.smallCacheSize: 256
2025-02-28 11:30:04 [56acd3bc-5f09-4dc1-9301-7c54ad935fec] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.normalCacheSize: 64
2025-02-28 11:30:04 [56acd3bc-5f09-4dc1-9301-7c54ad935fec] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2025-02-28 11:30:04 [56acd3bc-5f09-4dc1-9301-7c54ad935fec] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.cacheTrimInterval: 8192
2025-02-28 11:30:04 [56acd3bc-5f09-4dc1-9301-7c54ad935fec] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.cacheTrimIntervalMillis: 0
2025-02-28 11:30:04 [56acd3bc-5f09-4dc1-9301-7c54ad935fec] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.useCacheForAllThreads: false
2025-02-28 11:30:04 [56acd3bc-5f09-4dc1-9301-7c54ad935fec] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
2025-02-28 11:30:04 [56acd3bc-5f09-4dc1-9301-7c54ad935fec] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.disableCacheFinalizersForFastThreadLocalThreads: false
2025-02-28 11:30:04 [56acd3bc-5f09-4dc1-9301-7c54ad935fec] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.allocator.type: pooled
2025-02-28 11:30:04 [56acd3bc-5f09-4dc1-9301-7c54ad935fec] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.threadLocalDirectBufferSize: 0
2025-02-28 11:30:04 [56acd3bc-5f09-4dc1-9301-7c54ad935fec] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.maxThreadLocalCharBufferSize: 16384
2025-02-28 11:30:04 [] DEBUG r.n.r.PooledConnectionProvider - [5438d128] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 11:30:04 [] DEBUG io.netty.buffer.AbstractByteBuf - -Dio.netty.buffer.checkAccessible: true
2025-02-28 11:30:04 [] DEBUG io.netty.buffer.AbstractByteBuf - -Dio.netty.buffer.checkBounds: true
2025-02-28 11:30:04 [] DEBUG i.n.util.ResourceLeakDetectorFactory - Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@35a24a7b
2025-02-28 11:30:04 [] DEBUG r.netty.transport.TransportConfig - [5438d128] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-28 11:30:04 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 11:30:04 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 11:30:04 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 11:30:04 [] DEBUG i.n.b.ChannelInitializerExtensions - -Dio.netty.bootstrap.extensions: null
2025-02-28 11:30:04 [] DEBUG r.netty.transport.TransportConnector - [5438d128] Connecting to [localhost/127.0.0.1:8081].
2025-02-28 11:30:04 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [5438d128, L:/127.0.0.1:57210 - R:localhost/127.0.0.1:8081] Registering pool release on close event for channel
2025-02-28 11:30:04 [] DEBUG r.n.r.PooledConnectionProvider - [5438d128, L:/127.0.0.1:57210 - R:localhost/127.0.0.1:8081] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 11:30:04 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [5438d128, L:/127.0.0.1:57210 - R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x5438d128, L:/127.0.0.1:57210 - R:localhost/127.0.0.1:8081]}, [connected])
2025-02-28 11:30:04 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [5438d128-1, L:/127.0.0.1:57210 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0x5438d128, L:/127.0.0.1:57210 - R:localhost/127.0.0.1:8081]}}, [configured])
2025-02-28 11:30:04 [] DEBUG r.n.http.client.HttpClientConnect - [5438d128-1, L:/127.0.0.1:57210 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY, method=GET}
2025-02-28 11:30:04 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [5438d128-1, L:/127.0.0.1:57210 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x5438d128, L:/127.0.0.1:57210 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 11:30:04 [] DEBUG r.n.http.client.HttpClientOperations - [5438d128-1, L:/127.0.0.1:57210 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 11:30:04 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.maxCapacityPerThread: 4096
2025-02-28 11:30:04 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.ratio: 8
2025-02-28 11:30:04 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.chunkSize: 32
2025-02-28 11:30:04 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.blocking: false
2025-02-28 11:30:04 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.batchFastThreadLocalOnly: true
2025-02-28 11:30:04 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [5438d128-1, L:/127.0.0.1:57210 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x5438d128, L:/127.0.0.1:57210 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 11:30:04 [] DEBUG i.n.handler.codec.compression.Zstd - zstd-jni not in the classpath; Zstd support will be unavailable.
2025-02-28 11:30:04 [] DEBUG r.n.http.client.HttpClientOperations - [5438d128-1, L:/127.0.0.1:57210 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-28 11:30:04 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [5438d128-1, L:/127.0.0.1:57210 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x5438d128, L:/127.0.0.1:57210 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 11:30:04 [] DEBUG r.n.http.client.HttpClientOperations - [5438d128-1, L:/127.0.0.1:57210 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 11:30:04 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [5438d128, L:/127.0.0.1:57210 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x5438d128, L:/127.0.0.1:57210 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 11:30:04 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [5438d128, L:/127.0.0.1:57210 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x5438d128, L:/127.0.0.1:57210 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 11:30:04 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [5438d128, L:/127.0.0.1:57210 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-28 11:30:04 [] DEBUG r.n.r.PooledConnectionProvider - [5438d128, L:/127.0.0.1:57210 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-28 11:30:04 [] DEBUG reactor.netty.channel.FluxReceive - [1ad50880, L:/127.0.0.1:57210 ! R:localhost/127.0.0.1:8081] [terminated=true, cancelled=false, pending=1, error=null]: subscribing inbound receiver
2025-02-28 11:31:03 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 11:31:03 [dd0b70c9-558e-41ae-a0f1-1f4f6b209659] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 11:31:03 [dd0b70c9-558e-41ae-a0f1-1f4f6b209659] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /users
2025-02-28 11:31:03 [dd0b70c9-558e-41ae-a0f1-1f4f6b209659] DEBUG r.n.r.PooledConnectionProvider - Creating a new [http] client pool [PoolFactory{evictionInterval=PT0S, leasingStrategy=fifo, maxConnections=500, maxIdleTime=-1, maxLifeTime=-1, metricsEnabled=false, pendingAcquireMaxCount=1000, pendingAcquireTimeout=45000}] for [localhost/<unresolved>:8081]
2025-02-28 11:31:03 [] DEBUG r.n.r.PooledConnectionProvider - [b5190682] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 11:31:03 [] DEBUG r.netty.transport.TransportConfig - [b5190682] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-28 11:31:03 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 11:31:03 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 11:31:03 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 11:31:03 [] DEBUG r.netty.transport.TransportConnector - [b5190682] Connecting to [localhost/127.0.0.1:8081].
2025-02-28 11:31:03 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b5190682, L:/127.0.0.1:57231 - R:localhost/127.0.0.1:8081] Registering pool release on close event for channel
2025-02-28 11:31:03 [] DEBUG r.n.r.PooledConnectionProvider - [b5190682, L:/127.0.0.1:57231 - R:localhost/127.0.0.1:8081] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 11:31:03 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b5190682, L:/127.0.0.1:57231 - R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0xb5190682, L:/127.0.0.1:57231 - R:localhost/127.0.0.1:8081]}, [connected])
2025-02-28 11:31:03 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b5190682-1, L:/127.0.0.1:57231 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0xb5190682, L:/127.0.0.1:57231 - R:localhost/127.0.0.1:8081]}}, [configured])
2025-02-28 11:31:03 [] DEBUG r.n.http.client.HttpClientConnect - [b5190682-1, L:/127.0.0.1:57231 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY, method=GET}
2025-02-28 11:31:03 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b5190682-1, L:/127.0.0.1:57231 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xb5190682, L:/127.0.0.1:57231 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 11:31:03 [] DEBUG r.n.http.client.HttpClientOperations - [b5190682-1, L:/127.0.0.1:57231 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 11:31:03 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b5190682-1, L:/127.0.0.1:57231 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xb5190682, L:/127.0.0.1:57231 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 11:31:03 [] DEBUG r.n.http.client.HttpClientOperations - [b5190682-1, L:/127.0.0.1:57231 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-28 11:31:03 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b5190682-1, L:/127.0.0.1:57231 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xb5190682, L:/127.0.0.1:57231 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 11:31:04 [] DEBUG reactor.netty.channel.FluxReceive - [b5190682-1, L:/127.0.0.1:57231 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-28 11:31:04 [] DEBUG r.n.http.client.HttpClientOperations - [b5190682-1, L:/127.0.0.1:57231 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 11:31:04 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b5190682, L:/127.0.0.1:57231 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xb5190682, L:/127.0.0.1:57231 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 11:31:04 [dd0b70c9-558e-41ae-a0f1-1f4f6b209659] INFO  c.c.c.g.c.c.ValidationInterceptor - ✅ Token Validated! Forwarding request...
2025-02-28 11:31:04 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b5190682, L:/127.0.0.1:57231 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xb5190682, L:/127.0.0.1:57231 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 11:31:04 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b5190682, L:/127.0.0.1:57231 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-28 11:31:04 [] DEBUG r.n.r.PooledConnectionProvider - [b5190682, L:/127.0.0.1:57231 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-28 11:31:04 [dd0b70c9-558e-41ae-a0f1-1f4f6b209659] DEBUG r.n.r.PooledConnectionProvider - Creating a new [http] client pool [PoolFactory{evictionInterval=PT0S, leasingStrategy=fifo, maxConnections=500, maxIdleTime=-1, maxLifeTime=-1, metricsEnabled=false, pendingAcquireMaxCount=1000, pendingAcquireTimeout=45000}] for [localhost/<unresolved>:8082]
2025-02-28 11:31:04 [] DEBUG r.n.r.PooledConnectionProvider - [3cc0ccf3] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 11:31:04 [] DEBUG r.netty.transport.TransportConfig - [3cc0ccf3] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-28 11:31:04 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 11:31:04 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 11:31:04 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 11:31:04 [] DEBUG r.netty.transport.TransportConnector - [3cc0ccf3] Connecting to [localhost/127.0.0.1:8082].
2025-02-28 11:31:04 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [3cc0ccf3, L:/127.0.0.1:57232 - R:localhost/127.0.0.1:8082] Registering pool release on close event for channel
2025-02-28 11:31:04 [] DEBUG r.n.r.PooledConnectionProvider - [3cc0ccf3, L:/127.0.0.1:57232 - R:localhost/127.0.0.1:8082] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 11:31:04 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [3cc0ccf3, L:/127.0.0.1:57232 - R:localhost/127.0.0.1:8082] onStateChange(PooledConnection{channel=[id: 0x3cc0ccf3, L:/127.0.0.1:57232 - R:localhost/127.0.0.1:8082]}, [connected])
2025-02-28 11:31:04 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [3cc0ccf3-1, L:/127.0.0.1:57232 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0x3cc0ccf3, L:/127.0.0.1:57232 - R:localhost/127.0.0.1:8082]}}, [configured])
2025-02-28 11:31:04 [] DEBUG r.n.http.client.HttpClientConnect - [3cc0ccf3-1, L:/127.0.0.1:57232 - R:localhost/127.0.0.1:8082] Handler is being applied: {uri=http://localhost:8082/users, method=GET}
2025-02-28 11:31:04 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [3cc0ccf3-1, L:/127.0.0.1:57232 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0x3cc0ccf3, L:/127.0.0.1:57232 - R:localhost/127.0.0.1:8082]}}, [request_prepared])
2025-02-28 11:31:04 [] DEBUG r.n.http.client.HttpClientOperations - [3cc0ccf3-1, L:/127.0.0.1:57232 - R:localhost/127.0.0.1:8082] No sendHeaders() called before complete, sending zero-length header
2025-02-28 11:31:04 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [3cc0ccf3-1, L:/127.0.0.1:57232 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0x3cc0ccf3, L:/127.0.0.1:57232 - R:localhost/127.0.0.1:8082]}}, [request_sent])
2025-02-28 11:31:04 [] DEBUG r.n.http.client.HttpClientOperations - [3cc0ccf3-1, L:/127.0.0.1:57232 - R:localhost/127.0.0.1:8082] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Content-Length: <filtered>
Date: <filtered>
2025-02-28 11:31:04 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [3cc0ccf3-1, L:/127.0.0.1:57232 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0x3cc0ccf3, L:/127.0.0.1:57232 - R:localhost/127.0.0.1:8082]}}, [response_received])
2025-02-28 11:31:04 [] DEBUG r.n.http.client.HttpClientOperations - [3cc0ccf3-1, L:/127.0.0.1:57232 - R:localhost/127.0.0.1:8082] Received last HTTP packet
2025-02-28 11:31:04 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [3cc0ccf3, L:/127.0.0.1:57232 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0x3cc0ccf3, L:/127.0.0.1:57232 - R:localhost/127.0.0.1:8082]}}, [response_completed])
2025-02-28 11:31:04 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [3cc0ccf3, L:/127.0.0.1:57232 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0x3cc0ccf3, L:/127.0.0.1:57232 - R:localhost/127.0.0.1:8082]}}, [disconnecting])
2025-02-28 11:31:04 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [3cc0ccf3, L:/127.0.0.1:57232 - R:localhost/127.0.0.1:8082] Releasing channel
2025-02-28 11:31:04 [] DEBUG r.n.r.PooledConnectionProvider - [3cc0ccf3, L:/127.0.0.1:57232 - R:localhost/127.0.0.1:8082] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-28 11:31:04 [] DEBUG reactor.netty.channel.FluxReceive - [a7fe2320, L:/127.0.0.1:57232 ! R:localhost/127.0.0.1:8082] [terminated=true, cancelled=false, pending=1, error=null]: subscribing inbound receiver
2025-02-28 11:31:04 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [5438d128, L:/127.0.0.1:57210 ! R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x5438d128, L:/127.0.0.1:57210 ! R:localhost/127.0.0.1:8081]}, [disconnecting])
2025-02-28 11:31:10 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 11:31:10 [fdf6385c-0195-4891-a1e6-fbde6dc30f50] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 11:31:10 [fdf6385c-0195-4891-a1e6-fbde6dc30f50] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /users
2025-02-28 11:31:10 [fdf6385c-0195-4891-a1e6-fbde6dc30f50] WARN  c.c.c.g.c.c.ValidationInterceptor - ❌ Missing Validation Token!
2025-02-28 11:31:10 [] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /error
2025-02-28 11:31:10 [] WARN  c.c.c.g.c.c.ValidationInterceptor - ❌ Missing Validation Token!
2025-02-28 11:31:17 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 11:31:17 [ff4cdbbf-3d71-4073-bc67-3d579bd6df88] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 11:31:17 [ff4cdbbf-3d71-4073-bc67-3d579bd6df88] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /users
2025-02-28 11:31:17 [] DEBUG r.n.r.PooledConnectionProvider - [b5190682, L:/127.0.0.1:57231 - R:localhost/127.0.0.1:8081] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 11:31:17 [] DEBUG r.n.http.client.HttpClientConnect - [b5190682-2, L:/127.0.0.1:57231 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY, method=GET}
2025-02-28 11:31:17 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b5190682-2, L:/127.0.0.1:57231 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xb5190682, L:/127.0.0.1:57231 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 11:31:17 [] DEBUG r.n.http.client.HttpClientOperations - [b5190682-2, L:/127.0.0.1:57231 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 11:31:17 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b5190682-2, L:/127.0.0.1:57231 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xb5190682, L:/127.0.0.1:57231 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 11:31:17 [] DEBUG r.n.http.client.HttpClientOperations - [b5190682-2, L:/127.0.0.1:57231 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-28 11:31:17 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b5190682-2, L:/127.0.0.1:57231 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xb5190682, L:/127.0.0.1:57231 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 11:31:17 [] DEBUG reactor.netty.channel.FluxReceive - [b5190682-2, L:/127.0.0.1:57231 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-28 11:31:17 [] DEBUG r.n.http.client.HttpClientOperations - [b5190682-2, L:/127.0.0.1:57231 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 11:31:17 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b5190682, L:/127.0.0.1:57231 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xb5190682, L:/127.0.0.1:57231 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 11:31:17 [ff4cdbbf-3d71-4073-bc67-3d579bd6df88] INFO  c.c.c.g.c.c.ValidationInterceptor - ✅ Token Validated! Forwarding request...
2025-02-28 11:31:17 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b5190682, L:/127.0.0.1:57231 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xb5190682, L:/127.0.0.1:57231 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 11:31:17 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b5190682, L:/127.0.0.1:57231 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-28 11:31:17 [] DEBUG r.n.r.PooledConnectionProvider - [b5190682, L:/127.0.0.1:57231 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-28 11:31:17 [] DEBUG r.n.r.PooledConnectionProvider - [3cc0ccf3, L:/127.0.0.1:57232 - R:localhost/127.0.0.1:8082] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 11:31:17 [] DEBUG r.n.http.client.HttpClientConnect - [3cc0ccf3-2, L:/127.0.0.1:57232 - R:localhost/127.0.0.1:8082] Handler is being applied: {uri=http://localhost:8082/users, method=GET}
2025-02-28 11:31:17 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [3cc0ccf3-2, L:/127.0.0.1:57232 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0x3cc0ccf3, L:/127.0.0.1:57232 - R:localhost/127.0.0.1:8082]}}, [request_prepared])
2025-02-28 11:31:17 [] DEBUG r.n.http.client.HttpClientOperations - [3cc0ccf3-2, L:/127.0.0.1:57232 - R:localhost/127.0.0.1:8082] No sendHeaders() called before complete, sending zero-length header
2025-02-28 11:31:17 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [3cc0ccf3-2, L:/127.0.0.1:57232 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0x3cc0ccf3, L:/127.0.0.1:57232 - R:localhost/127.0.0.1:8082]}}, [request_sent])
2025-02-28 11:31:17 [] DEBUG r.n.http.client.HttpClientOperations - [3cc0ccf3-2, L:/127.0.0.1:57232 - R:localhost/127.0.0.1:8082] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Content-Length: <filtered>
Date: <filtered>
2025-02-28 11:31:17 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [3cc0ccf3-2, L:/127.0.0.1:57232 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0x3cc0ccf3, L:/127.0.0.1:57232 - R:localhost/127.0.0.1:8082]}}, [response_received])
2025-02-28 11:31:17 [] DEBUG r.n.http.client.HttpClientOperations - [3cc0ccf3-2, L:/127.0.0.1:57232 - R:localhost/127.0.0.1:8082] Received last HTTP packet
2025-02-28 11:31:17 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [3cc0ccf3, L:/127.0.0.1:57232 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0x3cc0ccf3, L:/127.0.0.1:57232 - R:localhost/127.0.0.1:8082]}}, [response_completed])
2025-02-28 11:31:17 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [3cc0ccf3, L:/127.0.0.1:57232 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0x3cc0ccf3, L:/127.0.0.1:57232 - R:localhost/127.0.0.1:8082]}}, [disconnecting])
2025-02-28 11:31:17 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [3cc0ccf3, L:/127.0.0.1:57232 - R:localhost/127.0.0.1:8082] Releasing channel
2025-02-28 11:31:17 [] DEBUG r.n.r.PooledConnectionProvider - [3cc0ccf3, L:/127.0.0.1:57232 - R:localhost/127.0.0.1:8082] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-28 11:31:17 [] DEBUG reactor.netty.channel.FluxReceive - [87477071, L:/127.0.0.1:57232 ! R:localhost/127.0.0.1:8082] [terminated=true, cancelled=false, pending=1, error=null]: subscribing inbound receiver
2025-02-28 11:31:25 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 11:31:25 [106b8ed1-4bc7-44d3-800e-2c4d15f6e5b4] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 11:31:25 [106b8ed1-4bc7-44d3-800e-2c4d15f6e5b4] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /users
2025-02-28 11:31:25 [] DEBUG r.n.r.PooledConnectionProvider - [b5190682, L:/127.0.0.1:57231 - R:localhost/127.0.0.1:8081] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 11:31:25 [] DEBUG r.n.http.client.HttpClientConnect - [b5190682-3, L:/127.0.0.1:57231 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY, method=GET}
2025-02-28 11:31:25 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b5190682-3, L:/127.0.0.1:57231 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xb5190682, L:/127.0.0.1:57231 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 11:31:25 [] DEBUG r.n.http.client.HttpClientOperations - [b5190682-3, L:/127.0.0.1:57231 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 11:31:25 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b5190682-3, L:/127.0.0.1:57231 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xb5190682, L:/127.0.0.1:57231 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 11:31:25 [] DEBUG r.n.http.client.HttpClientOperations - [b5190682-3, L:/127.0.0.1:57231 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-28 11:31:25 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b5190682-3, L:/127.0.0.1:57231 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xb5190682, L:/127.0.0.1:57231 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 11:31:25 [] DEBUG reactor.netty.channel.FluxReceive - [b5190682-3, L:/127.0.0.1:57231 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-28 11:31:25 [] DEBUG r.n.http.client.HttpClientOperations - [b5190682-3, L:/127.0.0.1:57231 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 11:31:25 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b5190682, L:/127.0.0.1:57231 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xb5190682, L:/127.0.0.1:57231 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 11:31:25 [106b8ed1-4bc7-44d3-800e-2c4d15f6e5b4] INFO  c.c.c.g.c.c.ValidationInterceptor - ✅ Token Validated! Forwarding request...
2025-02-28 11:31:25 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b5190682, L:/127.0.0.1:57231 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xb5190682, L:/127.0.0.1:57231 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 11:31:25 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b5190682, L:/127.0.0.1:57231 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-28 11:31:25 [] DEBUG r.n.r.PooledConnectionProvider - [b5190682, L:/127.0.0.1:57231 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-28 11:31:25 [] DEBUG r.n.r.PooledConnectionProvider - [3cc0ccf3, L:/127.0.0.1:57232 - R:localhost/127.0.0.1:8082] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 11:31:25 [] DEBUG r.n.http.client.HttpClientConnect - [3cc0ccf3-3, L:/127.0.0.1:57232 - R:localhost/127.0.0.1:8082] Handler is being applied: {uri=http://localhost:8082/users, method=GET}
2025-02-28 11:31:25 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [3cc0ccf3-3, L:/127.0.0.1:57232 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0x3cc0ccf3, L:/127.0.0.1:57232 - R:localhost/127.0.0.1:8082]}}, [request_prepared])
2025-02-28 11:31:25 [] DEBUG r.n.http.client.HttpClientOperations - [3cc0ccf3-3, L:/127.0.0.1:57232 - R:localhost/127.0.0.1:8082] No sendHeaders() called before complete, sending zero-length header
2025-02-28 11:31:25 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [3cc0ccf3-3, L:/127.0.0.1:57232 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0x3cc0ccf3, L:/127.0.0.1:57232 - R:localhost/127.0.0.1:8082]}}, [request_sent])
2025-02-28 11:31:25 [] DEBUG r.n.http.client.HttpClientOperations - [3cc0ccf3-3, L:/127.0.0.1:57232 - R:localhost/127.0.0.1:8082] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Content-Length: <filtered>
Date: <filtered>
2025-02-28 11:31:25 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [3cc0ccf3-3, L:/127.0.0.1:57232 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0x3cc0ccf3, L:/127.0.0.1:57232 - R:localhost/127.0.0.1:8082]}}, [response_received])
2025-02-28 11:31:25 [] DEBUG r.n.http.client.HttpClientOperations - [3cc0ccf3-3, L:/127.0.0.1:57232 - R:localhost/127.0.0.1:8082] Received last HTTP packet
2025-02-28 11:31:25 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [3cc0ccf3, L:/127.0.0.1:57232 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0x3cc0ccf3, L:/127.0.0.1:57232 - R:localhost/127.0.0.1:8082]}}, [response_completed])
2025-02-28 11:31:25 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [3cc0ccf3, L:/127.0.0.1:57232 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0x3cc0ccf3, L:/127.0.0.1:57232 - R:localhost/127.0.0.1:8082]}}, [disconnecting])
2025-02-28 11:31:25 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [3cc0ccf3, L:/127.0.0.1:57232 - R:localhost/127.0.0.1:8082] Releasing channel
2025-02-28 11:31:25 [] DEBUG r.n.r.PooledConnectionProvider - [3cc0ccf3, L:/127.0.0.1:57232 - R:localhost/127.0.0.1:8082] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-28 11:31:25 [] DEBUG reactor.netty.channel.FluxReceive - [f2d58c75, L:/127.0.0.1:57232 ! R:localhost/127.0.0.1:8082] [terminated=true, cancelled=false, pending=1, error=null]: subscribing inbound receiver
2025-02-28 11:31:33 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 11:31:33 [8a5a002e-a19f-4c21-998b-bd44bfe5de8f] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 11:31:33 [8a5a002e-a19f-4c21-998b-bd44bfe5de8f] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /users
2025-02-28 11:31:33 [8a5a002e-a19f-4c21-998b-bd44bfe5de8f] WARN  c.c.c.g.c.c.ValidationInterceptor - ❌ Missing Validation Token!
2025-02-28 11:31:33 [] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /error
2025-02-28 11:31:33 [] WARN  c.c.c.g.c.c.ValidationInterceptor - ❌ Missing Validation Token!
2025-02-28 11:32:25 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b5190682, L:/127.0.0.1:57231 ! R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0xb5190682, L:/127.0.0.1:57231 ! R:localhost/127.0.0.1:8081]}, [disconnecting])
2025-02-28 11:32:25 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [3cc0ccf3, L:/127.0.0.1:57232 ! R:localhost/127.0.0.1:8082] onStateChange(PooledConnection{channel=[id: 0x3cc0ccf3, L:/127.0.0.1:57232 ! R:localhost/127.0.0.1:8082]}, [disconnecting])
2025-02-28 11:52:37 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 11:52:37 [9bbef2c8-aeaa-4d13-a605-d8e13d0537cb] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 11:52:37 [9bbef2c8-aeaa-4d13-a605-d8e13d0537cb] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /users
2025-02-28 11:52:37 [] DEBUG r.n.r.PooledConnectionProvider - [a36fa7a2] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 11:52:37 [] DEBUG r.netty.transport.TransportConfig - [a36fa7a2] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-28 11:52:37 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 11:52:37 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 11:52:37 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 11:52:37 [] DEBUG r.netty.transport.TransportConnector - [a36fa7a2] Connecting to [localhost/127.0.0.1:8081].
2025-02-28 11:52:37 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [a36fa7a2, L:/127.0.0.1:57517 - R:localhost/127.0.0.1:8081] Registering pool release on close event for channel
2025-02-28 11:52:37 [] DEBUG r.n.r.PooledConnectionProvider - [a36fa7a2, L:/127.0.0.1:57517 - R:localhost/127.0.0.1:8081] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 11:52:37 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [a36fa7a2, L:/127.0.0.1:57517 - R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0xa36fa7a2, L:/127.0.0.1:57517 - R:localhost/127.0.0.1:8081]}, [connected])
2025-02-28 11:52:37 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [a36fa7a2-1, L:/127.0.0.1:57517 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0xa36fa7a2, L:/127.0.0.1:57517 - R:localhost/127.0.0.1:8081]}}, [configured])
2025-02-28 11:52:37 [] DEBUG r.n.http.client.HttpClientConnect - [a36fa7a2-1, L:/127.0.0.1:57517 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY, method=GET}
2025-02-28 11:52:37 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [a36fa7a2-1, L:/127.0.0.1:57517 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xa36fa7a2, L:/127.0.0.1:57517 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 11:52:37 [] DEBUG r.n.http.client.HttpClientOperations - [a36fa7a2-1, L:/127.0.0.1:57517 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 11:52:37 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [a36fa7a2-1, L:/127.0.0.1:57517 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xa36fa7a2, L:/127.0.0.1:57517 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 11:52:37 [] DEBUG r.n.http.client.HttpClientOperations - [a36fa7a2-1, L:/127.0.0.1:57517 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-28 11:52:37 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [a36fa7a2-1, L:/127.0.0.1:57517 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xa36fa7a2, L:/127.0.0.1:57517 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 11:52:37 [] DEBUG reactor.netty.channel.FluxReceive - [a36fa7a2-1, L:/127.0.0.1:57517 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-28 11:52:37 [] DEBUG r.n.http.client.HttpClientOperations - [a36fa7a2-1, L:/127.0.0.1:57517 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 11:52:37 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [a36fa7a2, L:/127.0.0.1:57517 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xa36fa7a2, L:/127.0.0.1:57517 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 11:52:37 [9bbef2c8-aeaa-4d13-a605-d8e13d0537cb] INFO  c.c.c.g.c.c.ValidationInterceptor - ✅ Token Validated! Forwarding request...
2025-02-28 11:52:37 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [a36fa7a2, L:/127.0.0.1:57517 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xa36fa7a2, L:/127.0.0.1:57517 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 11:52:37 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [a36fa7a2, L:/127.0.0.1:57517 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-28 11:52:37 [] DEBUG r.n.r.PooledConnectionProvider - [a36fa7a2, L:/127.0.0.1:57517 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-28 11:52:37 [] DEBUG r.n.r.PooledConnectionProvider - [4660a0a9] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 11:52:37 [] DEBUG r.netty.transport.TransportConfig - [4660a0a9] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-28 11:52:37 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 11:52:37 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 11:52:37 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 11:52:37 [] DEBUG r.netty.transport.TransportConnector - [4660a0a9] Connecting to [localhost/127.0.0.1:8082].
2025-02-28 11:52:37 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [4660a0a9, L:/127.0.0.1:57518 - R:localhost/127.0.0.1:8082] Registering pool release on close event for channel
2025-02-28 11:52:37 [] DEBUG r.n.r.PooledConnectionProvider - [4660a0a9, L:/127.0.0.1:57518 - R:localhost/127.0.0.1:8082] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 11:52:37 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [4660a0a9, L:/127.0.0.1:57518 - R:localhost/127.0.0.1:8082] onStateChange(PooledConnection{channel=[id: 0x4660a0a9, L:/127.0.0.1:57518 - R:localhost/127.0.0.1:8082]}, [connected])
2025-02-28 11:52:37 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [4660a0a9-1, L:/127.0.0.1:57518 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0x4660a0a9, L:/127.0.0.1:57518 - R:localhost/127.0.0.1:8082]}}, [configured])
2025-02-28 11:52:37 [] DEBUG r.n.http.client.HttpClientConnect - [4660a0a9-1, L:/127.0.0.1:57518 - R:localhost/127.0.0.1:8082] Handler is being applied: {uri=http://localhost:8082/users, method=GET}
2025-02-28 11:52:37 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [4660a0a9-1, L:/127.0.0.1:57518 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0x4660a0a9, L:/127.0.0.1:57518 - R:localhost/127.0.0.1:8082]}}, [request_prepared])
2025-02-28 11:52:37 [] DEBUG r.n.http.client.HttpClientOperations - [4660a0a9-1, L:/127.0.0.1:57518 - R:localhost/127.0.0.1:8082] No sendHeaders() called before complete, sending zero-length header
2025-02-28 11:52:37 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [4660a0a9-1, L:/127.0.0.1:57518 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0x4660a0a9, L:/127.0.0.1:57518 - R:localhost/127.0.0.1:8082]}}, [request_sent])
2025-02-28 11:52:37 [] DEBUG r.n.http.client.HttpClientOperations - [4660a0a9-1, L:/127.0.0.1:57518 - R:localhost/127.0.0.1:8082] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Content-Length: <filtered>
Date: <filtered>
2025-02-28 11:52:37 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [4660a0a9-1, L:/127.0.0.1:57518 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0x4660a0a9, L:/127.0.0.1:57518 - R:localhost/127.0.0.1:8082]}}, [response_received])
2025-02-28 11:52:37 [] DEBUG r.n.http.client.HttpClientOperations - [4660a0a9-1, L:/127.0.0.1:57518 - R:localhost/127.0.0.1:8082] Received last HTTP packet
2025-02-28 11:52:37 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [4660a0a9, L:/127.0.0.1:57518 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0x4660a0a9, L:/127.0.0.1:57518 - R:localhost/127.0.0.1:8082]}}, [response_completed])
2025-02-28 11:52:37 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [4660a0a9, L:/127.0.0.1:57518 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0x4660a0a9, L:/127.0.0.1:57518 - R:localhost/127.0.0.1:8082]}}, [disconnecting])
2025-02-28 11:52:37 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [4660a0a9, L:/127.0.0.1:57518 - R:localhost/127.0.0.1:8082] Releasing channel
2025-02-28 11:52:37 [] DEBUG r.n.r.PooledConnectionProvider - [4660a0a9, L:/127.0.0.1:57518 - R:localhost/127.0.0.1:8082] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-28 11:52:37 [] DEBUG reactor.netty.channel.FluxReceive - [b12a906c, L:/127.0.0.1:57518 ! R:localhost/127.0.0.1:8082] [terminated=true, cancelled=false, pending=1, error=null]: subscribing inbound receiver
2025-02-28 11:52:42 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 11:52:42 [6d23922e-c549-4f2d-8b58-5418ae89dc9c] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 11:52:42 [6d23922e-c549-4f2d-8b58-5418ae89dc9c] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /users
2025-02-28 11:52:42 [] DEBUG r.n.r.PooledConnectionProvider - [a36fa7a2, L:/127.0.0.1:57517 - R:localhost/127.0.0.1:8081] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 11:52:42 [] DEBUG r.n.http.client.HttpClientConnect - [a36fa7a2-2, L:/127.0.0.1:57517 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY, method=GET}
2025-02-28 11:52:42 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [a36fa7a2-2, L:/127.0.0.1:57517 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xa36fa7a2, L:/127.0.0.1:57517 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 11:52:42 [] DEBUG r.n.http.client.HttpClientOperations - [a36fa7a2-2, L:/127.0.0.1:57517 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 11:52:42 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [a36fa7a2-2, L:/127.0.0.1:57517 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xa36fa7a2, L:/127.0.0.1:57517 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 11:52:42 [] DEBUG r.n.http.client.HttpClientOperations - [a36fa7a2-2, L:/127.0.0.1:57517 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-28 11:52:42 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [a36fa7a2-2, L:/127.0.0.1:57517 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xa36fa7a2, L:/127.0.0.1:57517 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 11:52:42 [] DEBUG reactor.netty.channel.FluxReceive - [a36fa7a2-2, L:/127.0.0.1:57517 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-28 11:52:42 [] DEBUG r.n.http.client.HttpClientOperations - [a36fa7a2-2, L:/127.0.0.1:57517 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 11:52:42 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [a36fa7a2, L:/127.0.0.1:57517 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xa36fa7a2, L:/127.0.0.1:57517 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 11:52:42 [6d23922e-c549-4f2d-8b58-5418ae89dc9c] INFO  c.c.c.g.c.c.ValidationInterceptor - ✅ Token Validated! Forwarding request...
2025-02-28 11:52:42 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [a36fa7a2, L:/127.0.0.1:57517 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xa36fa7a2, L:/127.0.0.1:57517 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 11:52:42 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [a36fa7a2, L:/127.0.0.1:57517 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-28 11:52:42 [] DEBUG r.n.r.PooledConnectionProvider - [a36fa7a2, L:/127.0.0.1:57517 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-28 11:52:42 [] DEBUG r.n.r.PooledConnectionProvider - [4660a0a9, L:/127.0.0.1:57518 - R:localhost/127.0.0.1:8082] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 11:52:42 [] DEBUG r.n.http.client.HttpClientConnect - [4660a0a9-2, L:/127.0.0.1:57518 - R:localhost/127.0.0.1:8082] Handler is being applied: {uri=http://localhost:8082/users, method=GET}
2025-02-28 11:52:42 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [4660a0a9-2, L:/127.0.0.1:57518 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0x4660a0a9, L:/127.0.0.1:57518 - R:localhost/127.0.0.1:8082]}}, [request_prepared])
2025-02-28 11:52:42 [] DEBUG r.n.http.client.HttpClientOperations - [4660a0a9-2, L:/127.0.0.1:57518 - R:localhost/127.0.0.1:8082] No sendHeaders() called before complete, sending zero-length header
2025-02-28 11:52:42 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [4660a0a9-2, L:/127.0.0.1:57518 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0x4660a0a9, L:/127.0.0.1:57518 - R:localhost/127.0.0.1:8082]}}, [request_sent])
2025-02-28 11:52:42 [] DEBUG r.n.http.client.HttpClientOperations - [4660a0a9-2, L:/127.0.0.1:57518 - R:localhost/127.0.0.1:8082] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Content-Length: <filtered>
Date: <filtered>
2025-02-28 11:52:42 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [4660a0a9-2, L:/127.0.0.1:57518 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0x4660a0a9, L:/127.0.0.1:57518 - R:localhost/127.0.0.1:8082]}}, [response_received])
2025-02-28 11:52:42 [] DEBUG r.n.http.client.HttpClientOperations - [4660a0a9-2, L:/127.0.0.1:57518 - R:localhost/127.0.0.1:8082] Received last HTTP packet
2025-02-28 11:52:42 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [4660a0a9, L:/127.0.0.1:57518 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0x4660a0a9, L:/127.0.0.1:57518 - R:localhost/127.0.0.1:8082]}}, [response_completed])
2025-02-28 11:52:42 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [4660a0a9, L:/127.0.0.1:57518 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0x4660a0a9, L:/127.0.0.1:57518 - R:localhost/127.0.0.1:8082]}}, [disconnecting])
2025-02-28 11:52:42 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [4660a0a9, L:/127.0.0.1:57518 - R:localhost/127.0.0.1:8082] Releasing channel
2025-02-28 11:52:42 [] DEBUG r.n.r.PooledConnectionProvider - [4660a0a9, L:/127.0.0.1:57518 - R:localhost/127.0.0.1:8082] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-28 11:52:42 [] DEBUG reactor.netty.channel.FluxReceive - [441db130, L:/127.0.0.1:57518 ! R:localhost/127.0.0.1:8082] [terminated=true, cancelled=false, pending=1, error=null]: subscribing inbound receiver
2025-02-28 11:52:49 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 11:52:49 [e22cfd43-5d40-48b3-a89f-3be6071828fd] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 11:52:49 [] DEBUG r.n.r.PooledConnectionProvider - [a64086ae] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 11:52:49 [] DEBUG r.netty.transport.TransportConfig - [a64086ae] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-28 11:52:49 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 11:52:49 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 11:52:49 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 11:52:49 [] DEBUG r.netty.transport.TransportConnector - [a64086ae] Connecting to [localhost/127.0.0.1:8081].
2025-02-28 11:52:49 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [a64086ae, L:/127.0.0.1:57544 - R:localhost/127.0.0.1:8081] Registering pool release on close event for channel
2025-02-28 11:52:49 [] DEBUG r.n.r.PooledConnectionProvider - [a64086ae, L:/127.0.0.1:57544 - R:localhost/127.0.0.1:8081] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 11:52:49 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [a64086ae, L:/127.0.0.1:57544 - R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0xa64086ae, L:/127.0.0.1:57544 - R:localhost/127.0.0.1:8081]}, [connected])
2025-02-28 11:52:49 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [a64086ae-1, L:/127.0.0.1:57544 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0xa64086ae, L:/127.0.0.1:57544 - R:localhost/127.0.0.1:8081]}}, [configured])
2025-02-28 11:52:49 [] DEBUG r.n.http.client.HttpClientConnect - [a64086ae-1, L:/127.0.0.1:57544 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY, method=GET}
2025-02-28 11:52:49 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [a64086ae-1, L:/127.0.0.1:57544 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xa64086ae, L:/127.0.0.1:57544 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 11:52:49 [] DEBUG r.n.http.client.HttpClientOperations - [a64086ae-1, L:/127.0.0.1:57544 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 11:52:49 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [a64086ae-1, L:/127.0.0.1:57544 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xa64086ae, L:/127.0.0.1:57544 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 11:52:49 [] DEBUG r.n.http.client.HttpClientOperations - [a64086ae-1, L:/127.0.0.1:57544 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-28 11:52:49 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [a64086ae-1, L:/127.0.0.1:57544 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xa64086ae, L:/127.0.0.1:57544 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 11:52:49 [] DEBUG reactor.netty.channel.FluxReceive - [a64086ae-1, L:/127.0.0.1:57544 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=1, error=null]: subscribing inbound receiver
2025-02-28 11:52:49 [] DEBUG r.n.http.client.HttpClientOperations - [a64086ae-1, L:/127.0.0.1:57544 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 11:52:49 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [a64086ae, L:/127.0.0.1:57544 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xa64086ae, L:/127.0.0.1:57544 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 11:52:49 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [a64086ae, L:/127.0.0.1:57544 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xa64086ae, L:/127.0.0.1:57544 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 11:52:49 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [a64086ae, L:/127.0.0.1:57544 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-28 11:52:49 [] DEBUG r.n.r.PooledConnectionProvider - [a64086ae, L:/127.0.0.1:57544 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-28 11:52:53 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 11:52:53 [c5354b08-cbd9-48f7-b4b9-415c6f328c6f] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 11:52:53 [] DEBUG r.n.r.PooledConnectionProvider - [a64086ae, L:/127.0.0.1:57544 - R:localhost/127.0.0.1:8081] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 11:52:53 [] DEBUG r.n.http.client.HttpClientConnect - [a64086ae-2, L:/127.0.0.1:57544 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY, method=GET}
2025-02-28 11:52:53 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [a64086ae-2, L:/127.0.0.1:57544 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xa64086ae, L:/127.0.0.1:57544 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 11:52:53 [] DEBUG r.n.http.client.HttpClientOperations - [a64086ae-2, L:/127.0.0.1:57544 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 11:52:53 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [a64086ae-2, L:/127.0.0.1:57544 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xa64086ae, L:/127.0.0.1:57544 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 11:52:53 [] DEBUG r.n.http.client.HttpClientOperations - [a64086ae-2, L:/127.0.0.1:57544 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-28 11:52:53 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [a64086ae-2, L:/127.0.0.1:57544 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xa64086ae, L:/127.0.0.1:57544 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 11:52:53 [] DEBUG reactor.netty.channel.FluxReceive - [a64086ae-2, L:/127.0.0.1:57544 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=1, error=null]: subscribing inbound receiver
2025-02-28 11:52:53 [] DEBUG r.n.http.client.HttpClientOperations - [a64086ae-2, L:/127.0.0.1:57544 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 11:52:53 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [a64086ae, L:/127.0.0.1:57544 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xa64086ae, L:/127.0.0.1:57544 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 11:52:53 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [a64086ae, L:/127.0.0.1:57544 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xa64086ae, L:/127.0.0.1:57544 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 11:52:53 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [a64086ae, L:/127.0.0.1:57544 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-28 11:52:53 [] DEBUG r.n.r.PooledConnectionProvider - [a64086ae, L:/127.0.0.1:57544 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-28 11:52:58 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 11:52:58 [ecb1afa0-be16-4461-b972-9f602138b944] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 11:52:58 [] DEBUG r.n.r.PooledConnectionProvider - [a64086ae, L:/127.0.0.1:57544 - R:localhost/127.0.0.1:8081] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 11:52:58 [] DEBUG r.n.http.client.HttpClientConnect - [a64086ae-3, L:/127.0.0.1:57544 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY, method=GET}
2025-02-28 11:52:58 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [a64086ae-3, L:/127.0.0.1:57544 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xa64086ae, L:/127.0.0.1:57544 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 11:52:58 [] DEBUG r.n.http.client.HttpClientOperations - [a64086ae-3, L:/127.0.0.1:57544 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 11:52:58 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [a64086ae-3, L:/127.0.0.1:57544 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xa64086ae, L:/127.0.0.1:57544 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 11:52:58 [] DEBUG r.n.http.client.HttpClientOperations - [a64086ae-3, L:/127.0.0.1:57544 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-28 11:52:58 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [a64086ae-3, L:/127.0.0.1:57544 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xa64086ae, L:/127.0.0.1:57544 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 11:52:58 [] DEBUG reactor.netty.channel.FluxReceive - [a64086ae-3, L:/127.0.0.1:57544 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=1, error=null]: subscribing inbound receiver
2025-02-28 11:52:58 [] DEBUG r.n.http.client.HttpClientOperations - [a64086ae-3, L:/127.0.0.1:57544 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 11:52:58 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [a64086ae, L:/127.0.0.1:57544 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xa64086ae, L:/127.0.0.1:57544 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 11:52:58 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [a64086ae, L:/127.0.0.1:57544 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xa64086ae, L:/127.0.0.1:57544 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 11:52:58 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [a64086ae, L:/127.0.0.1:57544 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-28 11:52:58 [] DEBUG r.n.r.PooledConnectionProvider - [a64086ae, L:/127.0.0.1:57544 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-28 11:53:09 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 11:53:09 [5cad0696-58cb-4130-992b-964244625c0b] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 11:53:09 [] DEBUG r.n.r.PooledConnectionProvider - [a64086ae, L:/127.0.0.1:57544 - R:localhost/127.0.0.1:8081] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 11:53:09 [] DEBUG r.n.http.client.HttpClientConnect - [a64086ae-4, L:/127.0.0.1:57544 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY, method=GET}
2025-02-28 11:53:09 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [a64086ae-4, L:/127.0.0.1:57544 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xa64086ae, L:/127.0.0.1:57544 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 11:53:09 [] DEBUG r.n.http.client.HttpClientOperations - [a64086ae-4, L:/127.0.0.1:57544 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 11:53:09 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [a64086ae-4, L:/127.0.0.1:57544 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xa64086ae, L:/127.0.0.1:57544 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 11:53:09 [] DEBUG r.n.http.client.HttpClientOperations - [a64086ae-4, L:/127.0.0.1:57544 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-28 11:53:09 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [a64086ae-4, L:/127.0.0.1:57544 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xa64086ae, L:/127.0.0.1:57544 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 11:53:09 [] DEBUG reactor.netty.channel.FluxReceive - [a64086ae-4, L:/127.0.0.1:57544 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=1, error=null]: subscribing inbound receiver
2025-02-28 11:53:09 [] DEBUG r.n.http.client.HttpClientOperations - [a64086ae-4, L:/127.0.0.1:57544 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 11:53:09 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [a64086ae, L:/127.0.0.1:57544 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xa64086ae, L:/127.0.0.1:57544 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 11:53:09 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [a64086ae, L:/127.0.0.1:57544 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xa64086ae, L:/127.0.0.1:57544 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 11:53:09 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [a64086ae, L:/127.0.0.1:57544 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-28 11:53:09 [] DEBUG r.n.r.PooledConnectionProvider - [a64086ae, L:/127.0.0.1:57544 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-28 11:53:13 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 11:53:13 [8a9f1874-c038-4953-ada1-971ec53cc222] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 11:53:13 [] DEBUG r.n.r.PooledConnectionProvider - [a64086ae, L:/127.0.0.1:57544 - R:localhost/127.0.0.1:8081] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 11:53:13 [] DEBUG r.n.http.client.HttpClientConnect - [a64086ae-5, L:/127.0.0.1:57544 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY, method=GET}
2025-02-28 11:53:13 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [a64086ae-5, L:/127.0.0.1:57544 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xa64086ae, L:/127.0.0.1:57544 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 11:53:13 [] DEBUG r.n.http.client.HttpClientOperations - [a64086ae-5, L:/127.0.0.1:57544 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 11:53:13 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [a64086ae-5, L:/127.0.0.1:57544 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xa64086ae, L:/127.0.0.1:57544 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 11:53:13 [] DEBUG r.n.http.client.HttpClientOperations - [a64086ae-5, L:/127.0.0.1:57544 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-28 11:53:13 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [a64086ae-5, L:/127.0.0.1:57544 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xa64086ae, L:/127.0.0.1:57544 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 11:53:13 [] DEBUG reactor.netty.channel.FluxReceive - [a64086ae-5, L:/127.0.0.1:57544 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=1, error=null]: subscribing inbound receiver
2025-02-28 11:53:13 [] DEBUG r.n.http.client.HttpClientOperations - [a64086ae-5, L:/127.0.0.1:57544 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 11:53:13 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [a64086ae, L:/127.0.0.1:57544 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xa64086ae, L:/127.0.0.1:57544 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 11:53:13 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [a64086ae, L:/127.0.0.1:57544 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xa64086ae, L:/127.0.0.1:57544 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 11:53:13 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [a64086ae, L:/127.0.0.1:57544 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-28 11:53:13 [] DEBUG r.n.r.PooledConnectionProvider - [a64086ae, L:/127.0.0.1:57544 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-28 11:53:18 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 11:53:18 [858d00c4-f43a-436c-b8c2-9d379e45b96f] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 11:53:18 [] DEBUG r.n.r.PooledConnectionProvider - [a64086ae, L:/127.0.0.1:57544 - R:localhost/127.0.0.1:8081] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 11:53:18 [] DEBUG r.n.http.client.HttpClientConnect - [a64086ae-6, L:/127.0.0.1:57544 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY, method=GET}
2025-02-28 11:53:18 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [a64086ae-6, L:/127.0.0.1:57544 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xa64086ae, L:/127.0.0.1:57544 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 11:53:18 [] DEBUG r.n.http.client.HttpClientOperations - [a64086ae-6, L:/127.0.0.1:57544 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 11:53:18 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [a64086ae-6, L:/127.0.0.1:57544 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xa64086ae, L:/127.0.0.1:57544 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 11:53:18 [] DEBUG r.n.http.client.HttpClientOperations - [a64086ae-6, L:/127.0.0.1:57544 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-28 11:53:18 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [a64086ae-6, L:/127.0.0.1:57544 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xa64086ae, L:/127.0.0.1:57544 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 11:53:18 [] DEBUG reactor.netty.channel.FluxReceive - [a64086ae-6, L:/127.0.0.1:57544 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=1, error=null]: subscribing inbound receiver
2025-02-28 11:53:18 [] DEBUG r.n.http.client.HttpClientOperations - [a64086ae-6, L:/127.0.0.1:57544 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 11:53:18 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [a64086ae, L:/127.0.0.1:57544 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xa64086ae, L:/127.0.0.1:57544 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 11:53:18 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [a64086ae, L:/127.0.0.1:57544 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xa64086ae, L:/127.0.0.1:57544 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 11:53:18 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [a64086ae, L:/127.0.0.1:57544 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-28 11:53:18 [] DEBUG r.n.r.PooledConnectionProvider - [a64086ae, L:/127.0.0.1:57544 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-28 11:53:23 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 11:53:23 [64660c6c-1793-4764-b1b3-295a12277271] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 11:53:23 [] DEBUG r.n.r.PooledConnectionProvider - [a64086ae, L:/127.0.0.1:57544 - R:localhost/127.0.0.1:8081] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 11:53:23 [] DEBUG r.n.http.client.HttpClientConnect - [a64086ae-7, L:/127.0.0.1:57544 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY, method=GET}
2025-02-28 11:53:23 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [a64086ae-7, L:/127.0.0.1:57544 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xa64086ae, L:/127.0.0.1:57544 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 11:53:23 [] DEBUG r.n.http.client.HttpClientOperations - [a64086ae-7, L:/127.0.0.1:57544 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 11:53:23 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [a64086ae-7, L:/127.0.0.1:57544 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xa64086ae, L:/127.0.0.1:57544 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 11:53:23 [] DEBUG r.n.http.client.HttpClientOperations - [a64086ae-7, L:/127.0.0.1:57544 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-28 11:53:23 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [a64086ae-7, L:/127.0.0.1:57544 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xa64086ae, L:/127.0.0.1:57544 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 11:53:23 [] DEBUG reactor.netty.channel.FluxReceive - [a64086ae-7, L:/127.0.0.1:57544 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=1, error=null]: subscribing inbound receiver
2025-02-28 11:53:23 [] DEBUG r.n.http.client.HttpClientOperations - [a64086ae-7, L:/127.0.0.1:57544 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 11:53:23 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [a64086ae, L:/127.0.0.1:57544 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xa64086ae, L:/127.0.0.1:57544 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 11:53:23 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [a64086ae, L:/127.0.0.1:57544 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xa64086ae, L:/127.0.0.1:57544 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 11:53:23 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [a64086ae, L:/127.0.0.1:57544 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-28 11:53:23 [] DEBUG r.n.r.PooledConnectionProvider - [a64086ae, L:/127.0.0.1:57544 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-28 11:53:29 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 11:53:29 [5e07734e-d7f9-460a-a9d4-3ebf668f5e5d] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 11:53:29 [] DEBUG r.n.r.PooledConnectionProvider - [a64086ae, L:/127.0.0.1:57544 - R:localhost/127.0.0.1:8081] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 11:53:29 [] DEBUG r.n.http.client.HttpClientConnect - [a64086ae-8, L:/127.0.0.1:57544 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY, method=GET}
2025-02-28 11:53:29 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [a64086ae-8, L:/127.0.0.1:57544 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xa64086ae, L:/127.0.0.1:57544 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 11:53:29 [] DEBUG r.n.http.client.HttpClientOperations - [a64086ae-8, L:/127.0.0.1:57544 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 11:53:29 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [a64086ae-8, L:/127.0.0.1:57544 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xa64086ae, L:/127.0.0.1:57544 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 11:53:29 [] DEBUG r.n.http.client.HttpClientOperations - [a64086ae-8, L:/127.0.0.1:57544 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-28 11:53:29 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [a64086ae-8, L:/127.0.0.1:57544 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xa64086ae, L:/127.0.0.1:57544 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 11:53:29 [] DEBUG reactor.netty.channel.FluxReceive - [a64086ae-8, L:/127.0.0.1:57544 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=1, error=null]: subscribing inbound receiver
2025-02-28 11:53:29 [] DEBUG r.n.http.client.HttpClientOperations - [a64086ae-8, L:/127.0.0.1:57544 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 11:53:29 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [a64086ae, L:/127.0.0.1:57544 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xa64086ae, L:/127.0.0.1:57544 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 11:53:29 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [a64086ae, L:/127.0.0.1:57544 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xa64086ae, L:/127.0.0.1:57544 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 11:53:29 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [a64086ae, L:/127.0.0.1:57544 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-28 11:53:29 [] DEBUG r.n.r.PooledConnectionProvider - [a64086ae, L:/127.0.0.1:57544 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-28 11:53:39 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 11:53:39 [21104701-7f69-4143-8749-ee64396a3885] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 11:53:39 [21104701-7f69-4143-8749-ee64396a3885] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /users
2025-02-28 11:53:39 [21104701-7f69-4143-8749-ee64396a3885] WARN  c.c.c.g.c.c.ValidationInterceptor - ❌ Missing Validation Token!
2025-02-28 11:53:39 [] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /error
2025-02-28 11:53:39 [] WARN  c.c.c.g.c.c.ValidationInterceptor - ❌ Missing Validation Token!
2025-02-28 11:53:43 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [a36fa7a2, L:/127.0.0.1:57517 ! R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0xa36fa7a2, L:/127.0.0.1:57517 ! R:localhost/127.0.0.1:8081]}, [disconnecting])
2025-02-28 11:53:43 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [4660a0a9, L:/127.0.0.1:57518 ! R:localhost/127.0.0.1:8082] onStateChange(PooledConnection{channel=[id: 0x4660a0a9, L:/127.0.0.1:57518 ! R:localhost/127.0.0.1:8082]}, [disconnecting])
2025-02-28 11:53:43 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 11:53:43 [0fb4df30-1944-4297-bc97-1aae648e10a1] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 11:53:43 [0fb4df30-1944-4297-bc97-1aae648e10a1] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /users
2025-02-28 11:53:43 [0fb4df30-1944-4297-bc97-1aae648e10a1] WARN  c.c.c.g.c.c.ValidationInterceptor - ❌ Missing Validation Token!
2025-02-28 11:53:43 [] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /error
2025-02-28 11:53:43 [] WARN  c.c.c.g.c.c.ValidationInterceptor - ❌ Missing Validation Token!
2025-02-28 11:53:48 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 11:53:48 [d3f00676-3ec0-4b47-81a9-82d73d3f35ca] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 11:53:48 [d3f00676-3ec0-4b47-81a9-82d73d3f35ca] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /users
2025-02-28 11:53:48 [] DEBUG r.n.r.PooledConnectionProvider - [f4467a3d] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 11:53:48 [] DEBUG r.netty.transport.TransportConfig - [f4467a3d] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-28 11:53:48 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 11:53:48 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 11:53:48 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 11:53:48 [] DEBUG r.netty.transport.TransportConnector - [f4467a3d] Connecting to [localhost/127.0.0.1:8081].
2025-02-28 11:53:48 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f4467a3d, L:/127.0.0.1:57588 - R:localhost/127.0.0.1:8081] Registering pool release on close event for channel
2025-02-28 11:53:48 [] DEBUG r.n.r.PooledConnectionProvider - [f4467a3d, L:/127.0.0.1:57588 - R:localhost/127.0.0.1:8081] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 11:53:48 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f4467a3d, L:/127.0.0.1:57588 - R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0xf4467a3d, L:/127.0.0.1:57588 - R:localhost/127.0.0.1:8081]}, [connected])
2025-02-28 11:53:48 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f4467a3d-1, L:/127.0.0.1:57588 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0xf4467a3d, L:/127.0.0.1:57588 - R:localhost/127.0.0.1:8081]}}, [configured])
2025-02-28 11:53:48 [] DEBUG r.n.http.client.HttpClientConnect - [f4467a3d-1, L:/127.0.0.1:57588 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY, method=GET}
2025-02-28 11:53:48 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f4467a3d-1, L:/127.0.0.1:57588 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xf4467a3d, L:/127.0.0.1:57588 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 11:53:48 [] DEBUG r.n.http.client.HttpClientOperations - [f4467a3d-1, L:/127.0.0.1:57588 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 11:53:48 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f4467a3d-1, L:/127.0.0.1:57588 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xf4467a3d, L:/127.0.0.1:57588 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 11:53:48 [] DEBUG r.n.http.client.HttpClientOperations - [f4467a3d-1, L:/127.0.0.1:57588 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-28 11:53:48 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f4467a3d-1, L:/127.0.0.1:57588 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xf4467a3d, L:/127.0.0.1:57588 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 11:53:48 [] DEBUG reactor.netty.channel.FluxReceive - [f4467a3d-1, L:/127.0.0.1:57588 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-28 11:53:48 [] DEBUG r.n.http.client.HttpClientOperations - [f4467a3d-1, L:/127.0.0.1:57588 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 11:53:48 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f4467a3d, L:/127.0.0.1:57588 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xf4467a3d, L:/127.0.0.1:57588 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 11:53:48 [d3f00676-3ec0-4b47-81a9-82d73d3f35ca] INFO  c.c.c.g.c.c.ValidationInterceptor - ✅ Token Validated! Forwarding request...
2025-02-28 11:53:48 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f4467a3d, L:/127.0.0.1:57588 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xf4467a3d, L:/127.0.0.1:57588 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 11:53:48 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f4467a3d, L:/127.0.0.1:57588 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-28 11:53:48 [] DEBUG r.n.r.PooledConnectionProvider - [f4467a3d, L:/127.0.0.1:57588 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-28 11:53:48 [] DEBUG r.n.r.PooledConnectionProvider - [ef3bb1a0] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 11:53:48 [] DEBUG r.netty.transport.TransportConfig - [ef3bb1a0] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-28 11:53:48 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 11:53:48 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 11:53:48 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 11:53:48 [] DEBUG r.netty.transport.TransportConnector - [ef3bb1a0] Connecting to [localhost/127.0.0.1:8082].
2025-02-28 11:53:48 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [ef3bb1a0, L:/127.0.0.1:57589 - R:localhost/127.0.0.1:8082] Registering pool release on close event for channel
2025-02-28 11:53:48 [] DEBUG r.n.r.PooledConnectionProvider - [ef3bb1a0, L:/127.0.0.1:57589 - R:localhost/127.0.0.1:8082] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 11:53:48 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [ef3bb1a0, L:/127.0.0.1:57589 - R:localhost/127.0.0.1:8082] onStateChange(PooledConnection{channel=[id: 0xef3bb1a0, L:/127.0.0.1:57589 - R:localhost/127.0.0.1:8082]}, [connected])
2025-02-28 11:53:48 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [ef3bb1a0-1, L:/127.0.0.1:57589 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0xef3bb1a0, L:/127.0.0.1:57589 - R:localhost/127.0.0.1:8082]}}, [configured])
2025-02-28 11:53:48 [] DEBUG r.n.http.client.HttpClientConnect - [ef3bb1a0-1, L:/127.0.0.1:57589 - R:localhost/127.0.0.1:8082] Handler is being applied: {uri=http://localhost:8082/users, method=GET}
2025-02-28 11:53:48 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [ef3bb1a0-1, L:/127.0.0.1:57589 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0xef3bb1a0, L:/127.0.0.1:57589 - R:localhost/127.0.0.1:8082]}}, [request_prepared])
2025-02-28 11:53:48 [] DEBUG r.n.http.client.HttpClientOperations - [ef3bb1a0-1, L:/127.0.0.1:57589 - R:localhost/127.0.0.1:8082] No sendHeaders() called before complete, sending zero-length header
2025-02-28 11:53:48 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [ef3bb1a0-1, L:/127.0.0.1:57589 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0xef3bb1a0, L:/127.0.0.1:57589 - R:localhost/127.0.0.1:8082]}}, [request_sent])
2025-02-28 11:53:48 [] DEBUG r.n.http.client.HttpClientOperations - [ef3bb1a0-1, L:/127.0.0.1:57589 - R:localhost/127.0.0.1:8082] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Content-Length: <filtered>
Date: <filtered>
2025-02-28 11:53:48 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [ef3bb1a0-1, L:/127.0.0.1:57589 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0xef3bb1a0, L:/127.0.0.1:57589 - R:localhost/127.0.0.1:8082]}}, [response_received])
2025-02-28 11:53:48 [] DEBUG r.n.http.client.HttpClientOperations - [ef3bb1a0-1, L:/127.0.0.1:57589 - R:localhost/127.0.0.1:8082] Received last HTTP packet
2025-02-28 11:53:48 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [ef3bb1a0, L:/127.0.0.1:57589 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0xef3bb1a0, L:/127.0.0.1:57589 - R:localhost/127.0.0.1:8082]}}, [response_completed])
2025-02-28 11:53:48 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [ef3bb1a0, L:/127.0.0.1:57589 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0xef3bb1a0, L:/127.0.0.1:57589 - R:localhost/127.0.0.1:8082]}}, [disconnecting])
2025-02-28 11:53:48 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [ef3bb1a0, L:/127.0.0.1:57589 - R:localhost/127.0.0.1:8082] Releasing channel
2025-02-28 11:53:48 [] DEBUG r.n.r.PooledConnectionProvider - [ef3bb1a0, L:/127.0.0.1:57589 - R:localhost/127.0.0.1:8082] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-28 11:53:48 [] DEBUG reactor.netty.channel.FluxReceive - [f69ad4bf, L:/127.0.0.1:57589 ! R:localhost/127.0.0.1:8082] [terminated=true, cancelled=false, pending=1, error=null]: subscribing inbound receiver
2025-02-28 11:54:30 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [a64086ae, L:/127.0.0.1:57544 ! R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0xa64086ae, L:/127.0.0.1:57544 ! R:localhost/127.0.0.1:8081]}, [disconnecting])
2025-02-28 11:54:48 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f4467a3d, L:/127.0.0.1:57588 ! R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0xf4467a3d, L:/127.0.0.1:57588 ! R:localhost/127.0.0.1:8081]}, [disconnecting])
2025-02-28 11:54:48 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [ef3bb1a0, L:/127.0.0.1:57589 ! R:localhost/127.0.0.1:8082] onStateChange(PooledConnection{channel=[id: 0xef3bb1a0, L:/127.0.0.1:57589 ! R:localhost/127.0.0.1:8082]}, [disconnecting])
2025-02-28 11:55:40 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 11:55:40 [9bd16efa-364f-459b-b0b4-91c4e97288ae] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 11:55:40 [9bd16efa-364f-459b-b0b4-91c4e97288ae] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /users
2025-02-28 11:55:40 [] DEBUG r.n.r.PooledConnectionProvider - [3583979d] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 11:55:40 [] DEBUG r.netty.transport.TransportConfig - [3583979d] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-28 11:55:40 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 11:55:40 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 11:55:40 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 11:55:40 [] DEBUG r.netty.transport.TransportConnector - [3583979d] Connecting to [localhost/127.0.0.1:8081].
2025-02-28 11:55:40 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [3583979d, L:/127.0.0.1:57628 - R:localhost/127.0.0.1:8081] Registering pool release on close event for channel
2025-02-28 11:55:40 [] DEBUG r.n.r.PooledConnectionProvider - [3583979d, L:/127.0.0.1:57628 - R:localhost/127.0.0.1:8081] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 11:55:40 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [3583979d, L:/127.0.0.1:57628 - R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x3583979d, L:/127.0.0.1:57628 - R:localhost/127.0.0.1:8081]}, [connected])
2025-02-28 11:55:40 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [3583979d-1, L:/127.0.0.1:57628 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0x3583979d, L:/127.0.0.1:57628 - R:localhost/127.0.0.1:8081]}}, [configured])
2025-02-28 11:55:40 [] DEBUG r.n.http.client.HttpClientConnect - [3583979d-1, L:/127.0.0.1:57628 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY, method=GET}
2025-02-28 11:55:40 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [3583979d-1, L:/127.0.0.1:57628 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x3583979d, L:/127.0.0.1:57628 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 11:55:40 [] DEBUG r.n.http.client.HttpClientOperations - [3583979d-1, L:/127.0.0.1:57628 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 11:55:40 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [3583979d-1, L:/127.0.0.1:57628 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x3583979d, L:/127.0.0.1:57628 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 11:55:40 [] DEBUG r.n.http.client.HttpClientOperations - [3583979d-1, L:/127.0.0.1:57628 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-28 11:55:40 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [3583979d-1, L:/127.0.0.1:57628 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x3583979d, L:/127.0.0.1:57628 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 11:55:40 [] DEBUG reactor.netty.channel.FluxReceive - [3583979d-1, L:/127.0.0.1:57628 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-28 11:55:40 [] DEBUG r.n.http.client.HttpClientOperations - [3583979d-1, L:/127.0.0.1:57628 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 11:55:40 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [3583979d, L:/127.0.0.1:57628 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x3583979d, L:/127.0.0.1:57628 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 11:55:40 [9bd16efa-364f-459b-b0b4-91c4e97288ae] WARN  c.c.c.g.c.c.ValidationInterceptor - ❌ Invalid Token!
2025-02-28 11:55:40 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [3583979d, L:/127.0.0.1:57628 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x3583979d, L:/127.0.0.1:57628 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 11:55:40 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [3583979d, L:/127.0.0.1:57628 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-28 11:55:40 [] DEBUG r.n.r.PooledConnectionProvider - [3583979d, L:/127.0.0.1:57628 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-28 11:55:40 [] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /error
2025-02-28 11:55:40 [] DEBUG r.n.r.PooledConnectionProvider - [3583979d, L:/127.0.0.1:57628 - R:localhost/127.0.0.1:8081] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 11:55:40 [] DEBUG r.n.http.client.HttpClientConnect - [3583979d-2, L:/127.0.0.1:57628 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY, method=GET}
2025-02-28 11:55:40 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [3583979d-2, L:/127.0.0.1:57628 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x3583979d, L:/127.0.0.1:57628 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 11:55:40 [] DEBUG r.n.http.client.HttpClientOperations - [3583979d-2, L:/127.0.0.1:57628 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 11:55:40 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [3583979d-2, L:/127.0.0.1:57628 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x3583979d, L:/127.0.0.1:57628 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 11:55:40 [] DEBUG r.n.http.client.HttpClientOperations - [3583979d-2, L:/127.0.0.1:57628 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-28 11:55:40 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [3583979d-2, L:/127.0.0.1:57628 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x3583979d, L:/127.0.0.1:57628 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 11:55:40 [] DEBUG reactor.netty.channel.FluxReceive - [3583979d-2, L:/127.0.0.1:57628 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-28 11:55:40 [] DEBUG r.n.http.client.HttpClientOperations - [3583979d-2, L:/127.0.0.1:57628 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 11:55:40 [] WARN  c.c.c.g.c.c.ValidationInterceptor - ❌ Invalid Token!
2025-02-28 11:55:40 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [3583979d, L:/127.0.0.1:57628 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x3583979d, L:/127.0.0.1:57628 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 11:55:40 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [3583979d, L:/127.0.0.1:57628 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x3583979d, L:/127.0.0.1:57628 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 11:55:40 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [3583979d, L:/127.0.0.1:57628 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-28 11:55:40 [] DEBUG r.n.r.PooledConnectionProvider - [3583979d, L:/127.0.0.1:57628 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-28 11:55:54 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 11:55:54 [6feaa072-abb3-42bb-b40a-52ff36321088] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 11:55:54 [] DEBUG r.n.r.PooledConnectionProvider - [32433c46] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 11:55:54 [] DEBUG r.netty.transport.TransportConfig - [32433c46] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-28 11:55:54 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 11:55:54 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 11:55:54 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 11:55:54 [] DEBUG r.netty.transport.TransportConnector - [32433c46] Connecting to [localhost/127.0.0.1:8081].
2025-02-28 11:55:54 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [32433c46, L:/127.0.0.1:57635 - R:localhost/127.0.0.1:8081] Registering pool release on close event for channel
2025-02-28 11:55:54 [] DEBUG r.n.r.PooledConnectionProvider - [32433c46, L:/127.0.0.1:57635 - R:localhost/127.0.0.1:8081] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 11:55:54 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [32433c46, L:/127.0.0.1:57635 - R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x32433c46, L:/127.0.0.1:57635 - R:localhost/127.0.0.1:8081]}, [connected])
2025-02-28 11:55:54 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [32433c46-1, L:/127.0.0.1:57635 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0x32433c46, L:/127.0.0.1:57635 - R:localhost/127.0.0.1:8081]}}, [configured])
2025-02-28 11:55:54 [] DEBUG r.n.http.client.HttpClientConnect - [32433c46-1, L:/127.0.0.1:57635 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY, method=GET}
2025-02-28 11:55:54 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [32433c46-1, L:/127.0.0.1:57635 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x32433c46, L:/127.0.0.1:57635 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 11:55:54 [] DEBUG r.n.http.client.HttpClientOperations - [32433c46-1, L:/127.0.0.1:57635 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 11:55:54 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [32433c46-1, L:/127.0.0.1:57635 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x32433c46, L:/127.0.0.1:57635 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 11:55:54 [] DEBUG r.n.http.client.HttpClientOperations - [32433c46-1, L:/127.0.0.1:57635 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-28 11:55:54 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [32433c46-1, L:/127.0.0.1:57635 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x32433c46, L:/127.0.0.1:57635 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 11:55:54 [] DEBUG reactor.netty.channel.FluxReceive - [32433c46-1, L:/127.0.0.1:57635 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=1, error=null]: subscribing inbound receiver
2025-02-28 11:55:54 [] DEBUG r.n.http.client.HttpClientOperations - [32433c46-1, L:/127.0.0.1:57635 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 11:55:54 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [32433c46, L:/127.0.0.1:57635 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x32433c46, L:/127.0.0.1:57635 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 11:55:54 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [32433c46, L:/127.0.0.1:57635 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x32433c46, L:/127.0.0.1:57635 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 11:55:54 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [32433c46, L:/127.0.0.1:57635 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-28 11:55:54 [] DEBUG r.n.r.PooledConnectionProvider - [32433c46, L:/127.0.0.1:57635 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-28 11:56:06 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 11:56:06 [53203d42-68c4-404f-b06a-29489d5fa53e] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 11:56:06 [] DEBUG r.n.r.PooledConnectionProvider - [32433c46, L:/127.0.0.1:57635 - R:localhost/127.0.0.1:8081] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 11:56:06 [] DEBUG r.n.http.client.HttpClientConnect - [32433c46-2, L:/127.0.0.1:57635 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY, method=GET}
2025-02-28 11:56:06 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [32433c46-2, L:/127.0.0.1:57635 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x32433c46, L:/127.0.0.1:57635 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 11:56:06 [] DEBUG r.n.http.client.HttpClientOperations - [32433c46-2, L:/127.0.0.1:57635 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 11:56:06 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [32433c46-2, L:/127.0.0.1:57635 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x32433c46, L:/127.0.0.1:57635 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 11:56:06 [] DEBUG r.n.http.client.HttpClientOperations - [32433c46-2, L:/127.0.0.1:57635 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-28 11:56:06 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [32433c46-2, L:/127.0.0.1:57635 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x32433c46, L:/127.0.0.1:57635 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 11:56:06 [] DEBUG reactor.netty.channel.FluxReceive - [32433c46-2, L:/127.0.0.1:57635 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=1, error=null]: subscribing inbound receiver
2025-02-28 11:56:06 [] DEBUG r.n.http.client.HttpClientOperations - [32433c46-2, L:/127.0.0.1:57635 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 11:56:06 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [32433c46, L:/127.0.0.1:57635 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x32433c46, L:/127.0.0.1:57635 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 11:56:06 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [32433c46, L:/127.0.0.1:57635 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x32433c46, L:/127.0.0.1:57635 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 11:56:06 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [32433c46, L:/127.0.0.1:57635 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-28 11:56:06 [] DEBUG r.n.r.PooledConnectionProvider - [32433c46, L:/127.0.0.1:57635 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-28 11:56:10 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 11:56:10 [4a570620-38ad-420e-8b75-5d3ab977a3b8] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 11:56:10 [] DEBUG r.n.r.PooledConnectionProvider - [32433c46, L:/127.0.0.1:57635 - R:localhost/127.0.0.1:8081] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 11:56:10 [] DEBUG r.n.http.client.HttpClientConnect - [32433c46-3, L:/127.0.0.1:57635 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY, method=GET}
2025-02-28 11:56:10 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [32433c46-3, L:/127.0.0.1:57635 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x32433c46, L:/127.0.0.1:57635 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 11:56:10 [] DEBUG r.n.http.client.HttpClientOperations - [32433c46-3, L:/127.0.0.1:57635 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 11:56:10 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [32433c46-3, L:/127.0.0.1:57635 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x32433c46, L:/127.0.0.1:57635 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 11:56:10 [] DEBUG r.n.http.client.HttpClientOperations - [32433c46-3, L:/127.0.0.1:57635 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-28 11:56:10 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [32433c46-3, L:/127.0.0.1:57635 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x32433c46, L:/127.0.0.1:57635 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 11:56:10 [] DEBUG reactor.netty.channel.FluxReceive - [32433c46-3, L:/127.0.0.1:57635 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=1, error=null]: subscribing inbound receiver
2025-02-28 11:56:10 [] DEBUG r.n.http.client.HttpClientOperations - [32433c46-3, L:/127.0.0.1:57635 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 11:56:10 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [32433c46, L:/127.0.0.1:57635 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x32433c46, L:/127.0.0.1:57635 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 11:56:10 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [32433c46, L:/127.0.0.1:57635 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x32433c46, L:/127.0.0.1:57635 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 11:56:10 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [32433c46, L:/127.0.0.1:57635 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-28 11:56:10 [] DEBUG r.n.r.PooledConnectionProvider - [32433c46, L:/127.0.0.1:57635 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-28 11:56:22 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 11:56:22 [502832ae-1fa5-41d8-9a09-cdcf7738a5dc] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 11:56:22 [502832ae-1fa5-41d8-9a09-cdcf7738a5dc] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /users
2025-02-28 11:56:22 [502832ae-1fa5-41d8-9a09-cdcf7738a5dc] WARN  c.c.c.g.c.c.ValidationInterceptor - ❌ Missing Validation Token!
2025-02-28 11:56:22 [] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /error
2025-02-28 11:56:22 [] WARN  c.c.c.g.c.c.ValidationInterceptor - ❌ Missing Validation Token!
2025-02-28 11:56:28 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 11:56:28 [55ab6ed7-5220-4bcc-be4b-058ede5c829c] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 11:56:28 [55ab6ed7-5220-4bcc-be4b-058ede5c829c] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /users
2025-02-28 11:56:28 [55ab6ed7-5220-4bcc-be4b-058ede5c829c] WARN  c.c.c.g.c.c.ValidationInterceptor - ❌ Missing Validation Token!
2025-02-28 11:56:28 [] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /error
2025-02-28 11:56:28 [] WARN  c.c.c.g.c.c.ValidationInterceptor - ❌ Missing Validation Token!
2025-02-28 11:56:40 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [3583979d, L:/127.0.0.1:57628 ! R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x3583979d, L:/127.0.0.1:57628 ! R:localhost/127.0.0.1:8081]}, [disconnecting])
2025-02-28 11:57:10 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [32433c46, L:/127.0.0.1:57635 ! R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x32433c46, L:/127.0.0.1:57635 ! R:localhost/127.0.0.1:8081]}, [disconnecting])
2025-02-28 11:58:56 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 11:58:56 [407253f6-8026-4cc5-af8c-90ef8f59c4bd] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 11:58:56 [] DEBUG r.n.r.PooledConnectionProvider - [47bc43fc] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 11:58:56 [] DEBUG r.netty.transport.TransportConfig - [47bc43fc] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-28 11:58:56 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 11:58:56 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 11:58:56 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 11:58:56 [] DEBUG r.netty.transport.TransportConnector - [47bc43fc] Connecting to [localhost/127.0.0.1:8081].
2025-02-28 11:58:56 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [47bc43fc, L:/127.0.0.1:57712 - R:localhost/127.0.0.1:8081] Registering pool release on close event for channel
2025-02-28 11:58:56 [] DEBUG r.n.r.PooledConnectionProvider - [47bc43fc, L:/127.0.0.1:57712 - R:localhost/127.0.0.1:8081] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 11:58:56 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [47bc43fc, L:/127.0.0.1:57712 - R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x47bc43fc, L:/127.0.0.1:57712 - R:localhost/127.0.0.1:8081]}, [connected])
2025-02-28 11:58:56 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [47bc43fc-1, L:/127.0.0.1:57712 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0x47bc43fc, L:/127.0.0.1:57712 - R:localhost/127.0.0.1:8081]}}, [configured])
2025-02-28 11:58:56 [] DEBUG r.n.http.client.HttpClientConnect - [47bc43fc-1, L:/127.0.0.1:57712 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY, method=GET}
2025-02-28 11:58:56 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [47bc43fc-1, L:/127.0.0.1:57712 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x47bc43fc, L:/127.0.0.1:57712 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 11:58:56 [] DEBUG r.n.http.client.HttpClientOperations - [47bc43fc-1, L:/127.0.0.1:57712 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 11:58:56 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [47bc43fc-1, L:/127.0.0.1:57712 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x47bc43fc, L:/127.0.0.1:57712 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 11:58:57 [] DEBUG r.n.http.client.HttpClientOperations - [47bc43fc-1, L:/127.0.0.1:57712 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-28 11:58:57 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [47bc43fc-1, L:/127.0.0.1:57712 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x47bc43fc, L:/127.0.0.1:57712 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 11:58:57 [] DEBUG reactor.netty.channel.FluxReceive - [47bc43fc-1, L:/127.0.0.1:57712 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=1, error=null]: subscribing inbound receiver
2025-02-28 11:58:57 [] DEBUG r.n.http.client.HttpClientOperations - [47bc43fc-1, L:/127.0.0.1:57712 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 11:58:57 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [47bc43fc, L:/127.0.0.1:57712 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x47bc43fc, L:/127.0.0.1:57712 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 11:58:57 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [47bc43fc, L:/127.0.0.1:57712 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x47bc43fc, L:/127.0.0.1:57712 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 11:58:57 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [47bc43fc, L:/127.0.0.1:57712 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-28 11:58:57 [] DEBUG r.n.r.PooledConnectionProvider - [47bc43fc, L:/127.0.0.1:57712 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-28 11:59:02 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 11:59:02 [b381c22f-8d7f-4422-87a8-bbc7b37373e2] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 11:59:02 [] DEBUG r.n.r.PooledConnectionProvider - [47bc43fc, L:/127.0.0.1:57712 - R:localhost/127.0.0.1:8081] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 11:59:02 [] DEBUG r.n.http.client.HttpClientConnect - [47bc43fc-2, L:/127.0.0.1:57712 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY, method=GET}
2025-02-28 11:59:02 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [47bc43fc-2, L:/127.0.0.1:57712 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x47bc43fc, L:/127.0.0.1:57712 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 11:59:02 [] DEBUG r.n.http.client.HttpClientOperations - [47bc43fc-2, L:/127.0.0.1:57712 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 11:59:02 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [47bc43fc-2, L:/127.0.0.1:57712 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x47bc43fc, L:/127.0.0.1:57712 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 11:59:02 [] DEBUG r.n.http.client.HttpClientOperations - [47bc43fc-2, L:/127.0.0.1:57712 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-28 11:59:02 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [47bc43fc-2, L:/127.0.0.1:57712 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x47bc43fc, L:/127.0.0.1:57712 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 11:59:02 [] DEBUG reactor.netty.channel.FluxReceive - [47bc43fc-2, L:/127.0.0.1:57712 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=1, error=null]: subscribing inbound receiver
2025-02-28 11:59:02 [] DEBUG r.n.http.client.HttpClientOperations - [47bc43fc-2, L:/127.0.0.1:57712 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 11:59:02 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [47bc43fc, L:/127.0.0.1:57712 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x47bc43fc, L:/127.0.0.1:57712 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 11:59:02 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [47bc43fc, L:/127.0.0.1:57712 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x47bc43fc, L:/127.0.0.1:57712 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 11:59:02 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [47bc43fc, L:/127.0.0.1:57712 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-28 11:59:02 [] DEBUG r.n.r.PooledConnectionProvider - [47bc43fc, L:/127.0.0.1:57712 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-28 11:59:07 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 11:59:07 [bd8fabd8-90d9-46dd-8928-193afac3597c] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 11:59:07 [] DEBUG r.n.r.PooledConnectionProvider - [47bc43fc, L:/127.0.0.1:57712 - R:localhost/127.0.0.1:8081] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 11:59:07 [] DEBUG r.n.http.client.HttpClientConnect - [47bc43fc-3, L:/127.0.0.1:57712 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY, method=GET}
2025-02-28 11:59:07 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [47bc43fc-3, L:/127.0.0.1:57712 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x47bc43fc, L:/127.0.0.1:57712 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 11:59:07 [] DEBUG r.n.http.client.HttpClientOperations - [47bc43fc-3, L:/127.0.0.1:57712 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 11:59:07 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [47bc43fc-3, L:/127.0.0.1:57712 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x47bc43fc, L:/127.0.0.1:57712 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 11:59:07 [] DEBUG r.n.http.client.HttpClientOperations - [47bc43fc-3, L:/127.0.0.1:57712 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-28 11:59:07 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [47bc43fc-3, L:/127.0.0.1:57712 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x47bc43fc, L:/127.0.0.1:57712 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 11:59:07 [] DEBUG r.n.http.client.HttpClientOperations - [47bc43fc-3, L:/127.0.0.1:57712 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 11:59:07 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [47bc43fc, L:/127.0.0.1:57712 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x47bc43fc, L:/127.0.0.1:57712 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 11:59:07 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [47bc43fc, L:/127.0.0.1:57712 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x47bc43fc, L:/127.0.0.1:57712 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 11:59:07 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [47bc43fc, L:/127.0.0.1:57712 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-28 11:59:07 [] DEBUG r.n.r.PooledConnectionProvider - [47bc43fc, L:/127.0.0.1:57712 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-28 11:59:07 [] DEBUG reactor.netty.channel.FluxReceive - [ad7c877e, L:/127.0.0.1:57712 ! R:localhost/127.0.0.1:8081] [terminated=true, cancelled=false, pending=1, error=null]: subscribing inbound receiver
2025-02-28 12:00:07 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [47bc43fc, L:/127.0.0.1:57712 ! R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x47bc43fc, L:/127.0.0.1:57712 ! R:localhost/127.0.0.1:8081]}, [disconnecting])
2025-02-28 12:05:18 [] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-02-28 12:05:18 [] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-02-28 12:05:18 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 7 thread-local buffer(s) from thread: reactor-http-nio-11
2025-02-28 12:05:18 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 4 thread-local buffer(s) from thread: reactor-http-nio-3
2025-02-28 12:05:18 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 8 thread-local buffer(s) from thread: reactor-http-nio-4
2025-02-28 12:05:18 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 11 thread-local buffer(s) from thread: reactor-http-nio-8
2025-02-28 12:05:18 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 7 thread-local buffer(s) from thread: reactor-http-nio-6
2025-02-28 12:05:18 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 6 thread-local buffer(s) from thread: reactor-http-nio-5
2025-02-28 12:05:18 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 5 thread-local buffer(s) from thread: reactor-http-nio-9
2025-02-28 12:05:18 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 4 thread-local buffer(s) from thread: reactor-http-nio-10
2025-02-28 12:05:18 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 5 thread-local buffer(s) from thread: reactor-http-nio-7
2025-02-28 12:05:18 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 6 thread-local buffer(s) from thread: reactor-http-nio-1
2025-02-28 12:05:18 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 7 thread-local buffer(s) from thread: reactor-http-nio-12
2025-02-28 12:05:23 [] DEBUG org.jboss.logging - Logging Provider: org.jboss.logging.Slf4jLoggerProvider found via system property
2025-02-28 12:05:23 [] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final
2025-02-28 12:05:23 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-02-28 12:05:23 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-02-28 12:05:23 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-02-28 12:05:23 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-02-28 12:05:23 [] DEBUG o.h.v.i.e.r.TraversableResolvers - Cannot find jakarta.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2025-02-28 12:05:23 [] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-02-28 12:05:23 [] INFO  c.c.c.g.c.CommongatewayApplication - Starting CommongatewayApplication using Java 17.0.12 with PID 44364 (D:\WORKSPACE\API-GATEWAY\commongateway\target\classes started by CITPL in D:\WORKSPACE\API-GATEWAY)
2025-02-28 12:05:23 [] DEBUG c.c.c.g.c.CommongatewayApplication - Running with Spring Boot v3.4.2, Spring v6.2.2
2025-02-28 12:05:23 [] INFO  c.c.c.g.c.CommongatewayApplication - No active profile set, falling back to 1 default profile: "default"
2025-02-28 12:05:24 [] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-02-28 12:05:24 [] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-02-28 12:05:24 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-02-28 12:05:24 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-02-28 12:05:24 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-02-28 12:05:24 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-02-28 12:05:24 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-02-28 12:05:24 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-02-28 12:05:25 [] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=d2aee5ef-86a6-3b95-abd8-708d95e66676
2025-02-28 12:05:26 [] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-02-28 12:05:26 [] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-02-28 12:05:26 [] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-02-28 12:05:26 [] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.34]
2025-02-28 12:05:26 [] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-02-28 12:05:26 [] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2137 ms
2025-02-28 12:05:26 [] DEBUG i.n.u.i.l.InternalLoggerFactory - Using SLF4J as the default logging framework
2025-02-28 12:05:26 [] DEBUG i.n.util.internal.PlatformDependent0 - -Dio.netty.noUnsafe: false
2025-02-28 12:05:26 [] DEBUG i.n.util.internal.PlatformDependent0 - Java version: 17
2025-02-28 12:05:26 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe.theUnsafe: available
2025-02-28 12:05:26 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe base methods: all available
2025-02-28 12:05:26 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe.storeFence: available
2025-02-28 12:05:26 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.Buffer.address: available
2025-02-28 12:05:26 [] DEBUG i.n.util.internal.PlatformDependent0 - direct buffer constructor: unavailable: Reflective setAccessible(true) disabled
2025-02-28 12:05:26 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.Bits.unaligned: available, true
2025-02-28 12:05:26 [] DEBUG i.n.util.internal.PlatformDependent0 - jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable: class io.netty.util.internal.PlatformDependent0$7 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @3e77a1ed
2025-02-28 12:05:26 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.DirectByteBuffer.<init>(long, {int,long}): unavailable
2025-02-28 12:05:26 [] DEBUG i.n.util.internal.PlatformDependent - sun.misc.Unsafe: available
2025-02-28 12:05:26 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.tmpdir: C:\Users\CITPL\AppData\Local\Temp (java.io.tmpdir)
2025-02-28 12:05:26 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.bitMode: 64 (sun.arch.data.model)
2025-02-28 12:05:26 [] DEBUG i.n.util.internal.PlatformDependent - Platform: Windows
2025-02-28 12:05:26 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.maxDirectMemory: -1 bytes
2025-02-28 12:05:26 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.uninitializedArrayAllocationThreshold: -1
2025-02-28 12:05:26 [] DEBUG io.netty.util.internal.CleanerJava9 - java.nio.ByteBuffer.cleaner(): available
2025-02-28 12:05:26 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.noPreferDirect: false
2025-02-28 12:05:26 [] DEBUG reactor.util.Loggers - Using Slf4j logging framework
2025-02-28 12:05:26 [] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-02-28 12:05:26 [] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2025-02-28 12:05:26 [] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2025-02-28 12:05:26 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-02-28 12:05:26 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via user class loader
2025-02-28 12:05:26 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-02-28 12:05:26 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-02-28 12:05:26 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-02-28 12:05:26 [] DEBUG o.h.v.i.e.r.TraversableResolvers - Cannot find jakarta.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2025-02-28 12:05:26 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-02-28 12:05:26 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-02-28 12:05:26 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-02-28 12:05:26 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-02-28 12:05:26 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-02-28 12:05:26 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-02-28 12:05:26 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	c.c.c.g.c.c.HomeController:
	{GET [/home]}: get()
2025-02-28 12:05:26 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2025-02-28 12:05:26 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 'beanNameHandlerMapping' {}
2025-02-28 12:05:27 [] DEBUG _.s.w.s.HandlerMapping.Mappings - Mapped /validate/** -> ProxyExchangeHandlerFunction
/users/** -> ProxyExchangeHandlerFunction
2025-02-28 12:05:27 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2025-02-28 12:05:27 [] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-02-28 12:05:27 [] DEBUG i.n.u.i.InternalThreadLocalMap - -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2025-02-28 12:05:27 [] DEBUG i.n.u.i.InternalThreadLocalMap - -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2025-02-28 12:05:27 [] DEBUG io.netty.util.ResourceLeakDetector - -Dio.netty.leakDetection.level: simple
2025-02-28 12:05:27 [] DEBUG io.netty.util.ResourceLeakDetector - -Dio.netty.leakDetection.targetRecords: 4
2025-02-28 12:05:27 [] DEBUG i.n.handler.codec.compression.Brotli - brotli4j not in the classpath; Brotli support will be unavailable.
2025-02-28 12:05:27 [] DEBUG reactor.netty.tcp.TcpResources - [http] resources will use the default LoopResources: DefaultLoopResources {prefix=reactor-http, daemon=true, selectCount=12, workerCount=12}
2025-02-28 12:05:27 [] DEBUG reactor.netty.tcp.TcpResources - [http] resources will use the default ConnectionProvider: reactor.netty.resources.DefaultPooledConnectionProvider@6b108bb6
2025-02-28 12:05:27 [] DEBUG r.netty.resources.DefaultLoopIOUring - Default io_uring support : false
2025-02-28 12:05:27 [] DEBUG r.netty.resources.DefaultLoopEpoll - Default Epoll support : false
2025-02-28 12:05:27 [] DEBUG r.netty.resources.DefaultLoopKQueue - Default KQueue support : false
2025-02-28 12:05:27 [] DEBUG i.n.c.MultithreadEventLoopGroup - -Dio.netty.eventLoopThreads: 24
2025-02-28 12:05:27 [] DEBUG i.n.u.concurrent.GlobalEventExecutor - -Dio.netty.globalEventExecutor.quietPeriodSeconds: 1
2025-02-28 12:05:27 [] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.noKeySetOptimization: false
2025-02-28 12:05:27 [] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.selectorAutoRebuildThreshold: 512
2025-02-28 12:05:27 [] DEBUG i.n.util.internal.PlatformDependent - org.jctools-core.MpscChunkedArrayQueue: available
2025-02-28 12:05:27 [] DEBUG io.netty.util.NetUtil - -Djava.net.preferIPv4Stack: false
2025-02-28 12:05:27 [] DEBUG io.netty.util.NetUtil - -Djava.net.preferIPv6Addresses: false
2025-02-28 12:05:27 [] DEBUG i.netty.util.NetUtilInitializations - Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2025-02-28 12:05:27 [] DEBUG io.netty.util.NetUtil - Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2025-02-28 12:05:27 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default ResolvedAddressTypes: IPV4_ONLY
2025-02-28 12:05:27 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Localhost address: localhost/127.0.0.1
2025-02-28 12:05:27 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Windows hostname: DESKTOP-P307093
2025-02-28 12:05:27 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default search domains: []
2025-02-28 12:05:27 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default UnixResolverOptions{ndots=1, timeout=5, attempts=16}
2025-02-28 12:05:27 [] DEBUG i.n.r.DefaultHostsFileEntriesResolver - -Dio.netty.hostsFileRefreshInterval: 0
2025-02-28 12:05:27 [] DEBUG i.n.r.d.DefaultDnsServerAddressStreamProvider - Default DNS servers: [/8.8.8.8:53, /4.2.2.2:53] (sun.net.dns.ResolverConfiguration)
2025-02-28 12:05:27 [] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-02-28 12:05:27 [] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-02-28 12:05:28 [] INFO  c.c.c.g.c.CommongatewayApplication - Started CommongatewayApplication in 4.813 seconds (process running for 6.1)
2025-02-28 12:05:32 [] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-02-28 12:05:32 [] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-02-28 12:05:32 [] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 0 ms
2025-02-28 12:05:32 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 12:05:32 [7dda9a1d-b67a-4501-9cce-012441980373] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 12:05:32 [7dda9a1d-b67a-4501-9cce-012441980373] DEBUG i.m.c.u.i.l.InternalLoggerFactory - Using SLF4J as the default logging framework
2025-02-28 12:05:32 [7dda9a1d-b67a-4501-9cce-012441980373] DEBUG r.n.r.PooledConnectionProvider - Creating a new [http] client pool [PoolFactory{evictionInterval=PT0S, leasingStrategy=fifo, maxConnections=500, maxIdleTime=-1, maxLifeTime=-1, metricsEnabled=false, pendingAcquireMaxCount=1000, pendingAcquireTimeout=45000}] for [localhost/<unresolved>:8081]
2025-02-28 12:05:32 [7dda9a1d-b67a-4501-9cce-012441980373] DEBUG io.netty.channel.DefaultChannelId - -Dio.netty.processId: 44364 (auto-detected)
2025-02-28 12:05:32 [7dda9a1d-b67a-4501-9cce-012441980373] DEBUG io.netty.channel.DefaultChannelId - -Dio.netty.machineId: a0:d3:65:ff:fe:5e:b0:28 (auto-detected)
2025-02-28 12:05:32 [7dda9a1d-b67a-4501-9cce-012441980373] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.numHeapArenas: 24
2025-02-28 12:05:32 [7dda9a1d-b67a-4501-9cce-012441980373] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.numDirectArenas: 24
2025-02-28 12:05:32 [7dda9a1d-b67a-4501-9cce-012441980373] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.pageSize: 8192
2025-02-28 12:05:32 [7dda9a1d-b67a-4501-9cce-012441980373] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxOrder: 9
2025-02-28 12:05:32 [7dda9a1d-b67a-4501-9cce-012441980373] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.chunkSize: 4194304
2025-02-28 12:05:32 [7dda9a1d-b67a-4501-9cce-012441980373] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.smallCacheSize: 256
2025-02-28 12:05:32 [7dda9a1d-b67a-4501-9cce-012441980373] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.normalCacheSize: 64
2025-02-28 12:05:32 [7dda9a1d-b67a-4501-9cce-012441980373] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2025-02-28 12:05:32 [7dda9a1d-b67a-4501-9cce-012441980373] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.cacheTrimInterval: 8192
2025-02-28 12:05:32 [7dda9a1d-b67a-4501-9cce-012441980373] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.cacheTrimIntervalMillis: 0
2025-02-28 12:05:32 [7dda9a1d-b67a-4501-9cce-012441980373] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.useCacheForAllThreads: false
2025-02-28 12:05:32 [7dda9a1d-b67a-4501-9cce-012441980373] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
2025-02-28 12:05:32 [7dda9a1d-b67a-4501-9cce-012441980373] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.disableCacheFinalizersForFastThreadLocalThreads: false
2025-02-28 12:05:32 [7dda9a1d-b67a-4501-9cce-012441980373] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.allocator.type: pooled
2025-02-28 12:05:32 [7dda9a1d-b67a-4501-9cce-012441980373] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.threadLocalDirectBufferSize: 0
2025-02-28 12:05:32 [7dda9a1d-b67a-4501-9cce-012441980373] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.maxThreadLocalCharBufferSize: 16384
2025-02-28 12:05:32 [] DEBUG r.n.r.PooledConnectionProvider - [6c85aa33] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 12:05:32 [] DEBUG io.netty.buffer.AbstractByteBuf - -Dio.netty.buffer.checkAccessible: true
2025-02-28 12:05:32 [] DEBUG io.netty.buffer.AbstractByteBuf - -Dio.netty.buffer.checkBounds: true
2025-02-28 12:05:32 [] DEBUG i.n.util.ResourceLeakDetectorFactory - Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@2589bb20
2025-02-28 12:05:32 [] DEBUG r.netty.transport.TransportConfig - [6c85aa33] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-28 12:05:32 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 12:05:32 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 12:05:32 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 12:05:32 [] DEBUG i.n.b.ChannelInitializerExtensions - -Dio.netty.bootstrap.extensions: null
2025-02-28 12:05:32 [] DEBUG r.netty.transport.TransportConnector - [6c85aa33] Connecting to [localhost/127.0.0.1:8081].
2025-02-28 12:05:32 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [6c85aa33, L:/127.0.0.1:57834 - R:localhost/127.0.0.1:8081] Registering pool release on close event for channel
2025-02-28 12:05:32 [] DEBUG r.n.r.PooledConnectionProvider - [6c85aa33, L:/127.0.0.1:57834 - R:localhost/127.0.0.1:8081] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 12:05:32 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [6c85aa33, L:/127.0.0.1:57834 - R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x6c85aa33, L:/127.0.0.1:57834 - R:localhost/127.0.0.1:8081]}, [connected])
2025-02-28 12:05:32 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [6c85aa33-1, L:/127.0.0.1:57834 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0x6c85aa33, L:/127.0.0.1:57834 - R:localhost/127.0.0.1:8081]}}, [configured])
2025-02-28 12:05:32 [] DEBUG r.n.http.client.HttpClientConnect - [6c85aa33-1, L:/127.0.0.1:57834 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY, method=GET}
2025-02-28 12:05:32 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [6c85aa33-1, L:/127.0.0.1:57834 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x6c85aa33, L:/127.0.0.1:57834 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 12:05:32 [] DEBUG r.n.http.client.HttpClientOperations - [6c85aa33-1, L:/127.0.0.1:57834 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 12:05:32 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.maxCapacityPerThread: 4096
2025-02-28 12:05:32 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.ratio: 8
2025-02-28 12:05:32 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.chunkSize: 32
2025-02-28 12:05:32 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.blocking: false
2025-02-28 12:05:32 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.batchFastThreadLocalOnly: true
2025-02-28 12:05:32 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [6c85aa33-1, L:/127.0.0.1:57834 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x6c85aa33, L:/127.0.0.1:57834 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 12:05:32 [] DEBUG i.n.handler.codec.compression.Zstd - zstd-jni not in the classpath; Zstd support will be unavailable.
2025-02-28 12:05:32 [] DEBUG r.n.http.client.HttpClientOperations - [6c85aa33-1, L:/127.0.0.1:57834 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-28 12:05:32 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [6c85aa33-1, L:/127.0.0.1:57834 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x6c85aa33, L:/127.0.0.1:57834 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 12:05:32 [] DEBUG r.n.http.client.HttpClientOperations - [6c85aa33-1, L:/127.0.0.1:57834 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 12:05:32 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [6c85aa33, L:/127.0.0.1:57834 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x6c85aa33, L:/127.0.0.1:57834 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 12:05:32 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [6c85aa33, L:/127.0.0.1:57834 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x6c85aa33, L:/127.0.0.1:57834 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 12:05:32 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [6c85aa33, L:/127.0.0.1:57834 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-28 12:05:32 [] DEBUG r.n.r.PooledConnectionProvider - [6c85aa33, L:/127.0.0.1:57834 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-28 12:05:32 [] DEBUG reactor.netty.channel.FluxReceive - [c101b283, L:/127.0.0.1:57834 ! R:localhost/127.0.0.1:8081] [terminated=true, cancelled=false, pending=1, error=null]: subscribing inbound receiver
2025-02-28 12:05:37 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 12:05:37 [caa309ab-d6b6-4f7e-bf7c-49c800e6bce0] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 12:05:37 [caa309ab-d6b6-4f7e-bf7c-49c800e6bce0] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /users
2025-02-28 12:05:37 [caa309ab-d6b6-4f7e-bf7c-49c800e6bce0] WARN  c.c.c.g.c.c.ValidationInterceptor - ❌ Missing Validation Token or OrgId!
2025-02-28 12:05:37 [] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /error
2025-02-28 12:05:37 [] WARN  c.c.c.g.c.c.ValidationInterceptor - ❌ Missing Validation Token or OrgId!
2025-02-28 12:05:41 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 12:05:41 [98071bbf-c241-4d00-928f-ba4a405e7339] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 12:05:41 [98071bbf-c241-4d00-928f-ba4a405e7339] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /users
2025-02-28 12:05:41 [98071bbf-c241-4d00-928f-ba4a405e7339] DEBUG r.n.r.PooledConnectionProvider - Creating a new [http] client pool [PoolFactory{evictionInterval=PT0S, leasingStrategy=fifo, maxConnections=500, maxIdleTime=-1, maxLifeTime=-1, metricsEnabled=false, pendingAcquireMaxCount=1000, pendingAcquireTimeout=45000}] for [localhost/<unresolved>:8081]
2025-02-28 12:05:41 [] DEBUG r.n.r.PooledConnectionProvider - [f617c8a3] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 12:05:41 [] DEBUG r.netty.transport.TransportConfig - [f617c8a3] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-28 12:05:41 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 12:05:41 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 12:05:41 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 12:05:41 [] DEBUG r.netty.transport.TransportConnector - [f617c8a3] Connecting to [localhost/127.0.0.1:8081].
2025-02-28 12:05:41 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f617c8a3, L:/127.0.0.1:57836 - R:localhost/127.0.0.1:8081] Registering pool release on close event for channel
2025-02-28 12:05:41 [] DEBUG r.n.r.PooledConnectionProvider - [f617c8a3, L:/127.0.0.1:57836 - R:localhost/127.0.0.1:8081] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 12:05:41 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f617c8a3, L:/127.0.0.1:57836 - R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0xf617c8a3, L:/127.0.0.1:57836 - R:localhost/127.0.0.1:8081]}, [connected])
2025-02-28 12:05:41 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f617c8a3-1, L:/127.0.0.1:57836 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0xf617c8a3, L:/127.0.0.1:57836 - R:localhost/127.0.0.1:8081]}}, [configured])
2025-02-28 12:05:41 [] DEBUG r.n.http.client.HttpClientConnect - [f617c8a3-1, L:/127.0.0.1:57836 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY, method=GET}
2025-02-28 12:05:41 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f617c8a3-1, L:/127.0.0.1:57836 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xf617c8a3, L:/127.0.0.1:57836 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 12:05:41 [] DEBUG r.n.http.client.HttpClientOperations - [f617c8a3-1, L:/127.0.0.1:57836 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 12:05:41 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f617c8a3-1, L:/127.0.0.1:57836 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xf617c8a3, L:/127.0.0.1:57836 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 12:05:41 [] DEBUG r.n.http.client.HttpClientOperations - [f617c8a3-1, L:/127.0.0.1:57836 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-28 12:05:41 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f617c8a3-1, L:/127.0.0.1:57836 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xf617c8a3, L:/127.0.0.1:57836 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 12:05:41 [] DEBUG reactor.netty.channel.FluxReceive - [f617c8a3-1, L:/127.0.0.1:57836 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-28 12:05:41 [] DEBUG r.n.http.client.HttpClientOperations - [f617c8a3-1, L:/127.0.0.1:57836 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 12:05:41 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f617c8a3, L:/127.0.0.1:57836 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xf617c8a3, L:/127.0.0.1:57836 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 12:05:41 [98071bbf-c241-4d00-928f-ba4a405e7339] WARN  c.c.c.g.c.c.ValidationInterceptor - ❌ Invalid Token!
2025-02-28 12:05:41 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f617c8a3, L:/127.0.0.1:57836 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xf617c8a3, L:/127.0.0.1:57836 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 12:05:41 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f617c8a3, L:/127.0.0.1:57836 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-28 12:05:41 [] DEBUG r.n.r.PooledConnectionProvider - [f617c8a3, L:/127.0.0.1:57836 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-28 12:05:41 [] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /error
2025-02-28 12:05:41 [] DEBUG r.n.r.PooledConnectionProvider - [f617c8a3, L:/127.0.0.1:57836 - R:localhost/127.0.0.1:8081] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 12:05:41 [] DEBUG r.n.http.client.HttpClientConnect - [f617c8a3-2, L:/127.0.0.1:57836 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY, method=GET}
2025-02-28 12:05:41 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f617c8a3-2, L:/127.0.0.1:57836 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xf617c8a3, L:/127.0.0.1:57836 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 12:05:41 [] DEBUG r.n.http.client.HttpClientOperations - [f617c8a3-2, L:/127.0.0.1:57836 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 12:05:41 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f617c8a3-2, L:/127.0.0.1:57836 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xf617c8a3, L:/127.0.0.1:57836 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 12:05:41 [] DEBUG r.n.http.client.HttpClientOperations - [f617c8a3-2, L:/127.0.0.1:57836 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-28 12:05:41 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f617c8a3-2, L:/127.0.0.1:57836 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xf617c8a3, L:/127.0.0.1:57836 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 12:05:41 [] DEBUG reactor.netty.channel.FluxReceive - [f617c8a3-2, L:/127.0.0.1:57836 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-28 12:05:41 [] DEBUG r.n.http.client.HttpClientOperations - [f617c8a3-2, L:/127.0.0.1:57836 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 12:05:41 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f617c8a3, L:/127.0.0.1:57836 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xf617c8a3, L:/127.0.0.1:57836 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 12:05:41 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f617c8a3, L:/127.0.0.1:57836 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xf617c8a3, L:/127.0.0.1:57836 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 12:05:41 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f617c8a3, L:/127.0.0.1:57836 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-28 12:05:41 [] WARN  c.c.c.g.c.c.ValidationInterceptor - ❌ Invalid Token!
2025-02-28 12:05:41 [] DEBUG r.n.r.PooledConnectionProvider - [f617c8a3, L:/127.0.0.1:57836 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-28 12:05:45 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 12:05:45 [60b96762-5904-4aca-b2fe-7f8e9328d438] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 12:05:45 [60b96762-5904-4aca-b2fe-7f8e9328d438] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /users
2025-02-28 12:05:45 [] DEBUG r.n.r.PooledConnectionProvider - [f617c8a3, L:/127.0.0.1:57836 - R:localhost/127.0.0.1:8081] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 12:05:45 [] DEBUG r.n.http.client.HttpClientConnect - [f617c8a3-3, L:/127.0.0.1:57836 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY, method=GET}
2025-02-28 12:05:45 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f617c8a3-3, L:/127.0.0.1:57836 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xf617c8a3, L:/127.0.0.1:57836 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 12:05:45 [] DEBUG r.n.http.client.HttpClientOperations - [f617c8a3-3, L:/127.0.0.1:57836 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 12:05:45 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f617c8a3-3, L:/127.0.0.1:57836 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xf617c8a3, L:/127.0.0.1:57836 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 12:05:45 [] DEBUG r.n.http.client.HttpClientOperations - [f617c8a3-3, L:/127.0.0.1:57836 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-28 12:05:45 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f617c8a3-3, L:/127.0.0.1:57836 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xf617c8a3, L:/127.0.0.1:57836 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 12:05:45 [] DEBUG reactor.netty.channel.FluxReceive - [f617c8a3-3, L:/127.0.0.1:57836 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-28 12:05:45 [] DEBUG r.n.http.client.HttpClientOperations - [f617c8a3-3, L:/127.0.0.1:57836 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 12:05:45 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f617c8a3, L:/127.0.0.1:57836 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xf617c8a3, L:/127.0.0.1:57836 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 12:05:45 [60b96762-5904-4aca-b2fe-7f8e9328d438] WARN  c.c.c.g.c.c.ValidationInterceptor - ❌ Invalid Token!
2025-02-28 12:05:45 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f617c8a3, L:/127.0.0.1:57836 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xf617c8a3, L:/127.0.0.1:57836 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 12:05:45 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f617c8a3, L:/127.0.0.1:57836 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-28 12:05:45 [] DEBUG r.n.r.PooledConnectionProvider - [f617c8a3, L:/127.0.0.1:57836 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-28 12:05:45 [] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /error
2025-02-28 12:05:45 [] DEBUG r.n.r.PooledConnectionProvider - [f617c8a3, L:/127.0.0.1:57836 - R:localhost/127.0.0.1:8081] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 12:05:45 [] DEBUG r.n.http.client.HttpClientConnect - [f617c8a3-4, L:/127.0.0.1:57836 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY, method=GET}
2025-02-28 12:05:45 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f617c8a3-4, L:/127.0.0.1:57836 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xf617c8a3, L:/127.0.0.1:57836 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 12:05:45 [] DEBUG r.n.http.client.HttpClientOperations - [f617c8a3-4, L:/127.0.0.1:57836 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 12:05:45 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f617c8a3-4, L:/127.0.0.1:57836 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xf617c8a3, L:/127.0.0.1:57836 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 12:05:45 [] DEBUG r.n.http.client.HttpClientOperations - [f617c8a3-4, L:/127.0.0.1:57836 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-28 12:05:45 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f617c8a3-4, L:/127.0.0.1:57836 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xf617c8a3, L:/127.0.0.1:57836 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 12:05:45 [] DEBUG reactor.netty.channel.FluxReceive - [f617c8a3-4, L:/127.0.0.1:57836 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-28 12:05:45 [] DEBUG r.n.http.client.HttpClientOperations - [f617c8a3-4, L:/127.0.0.1:57836 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 12:05:45 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f617c8a3, L:/127.0.0.1:57836 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xf617c8a3, L:/127.0.0.1:57836 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 12:05:45 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f617c8a3, L:/127.0.0.1:57836 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xf617c8a3, L:/127.0.0.1:57836 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 12:05:45 [] WARN  c.c.c.g.c.c.ValidationInterceptor - ❌ Invalid Token!
2025-02-28 12:05:45 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f617c8a3, L:/127.0.0.1:57836 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-28 12:05:45 [] DEBUG r.n.r.PooledConnectionProvider - [f617c8a3, L:/127.0.0.1:57836 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-28 12:05:47 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 12:05:47 [6fc6ddb0-5775-4b7f-9b4f-3ec4a56e50ff] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 12:05:47 [6fc6ddb0-5775-4b7f-9b4f-3ec4a56e50ff] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /users
2025-02-28 12:05:47 [] DEBUG r.n.r.PooledConnectionProvider - [f617c8a3, L:/127.0.0.1:57836 - R:localhost/127.0.0.1:8081] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 12:05:47 [] DEBUG r.n.http.client.HttpClientConnect - [f617c8a3-5, L:/127.0.0.1:57836 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY, method=GET}
2025-02-28 12:05:47 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f617c8a3-5, L:/127.0.0.1:57836 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xf617c8a3, L:/127.0.0.1:57836 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 12:05:47 [] DEBUG r.n.http.client.HttpClientOperations - [f617c8a3-5, L:/127.0.0.1:57836 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 12:05:47 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f617c8a3-5, L:/127.0.0.1:57836 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xf617c8a3, L:/127.0.0.1:57836 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 12:05:47 [] DEBUG r.n.http.client.HttpClientOperations - [f617c8a3-5, L:/127.0.0.1:57836 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-28 12:05:47 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f617c8a3-5, L:/127.0.0.1:57836 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xf617c8a3, L:/127.0.0.1:57836 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 12:05:47 [] DEBUG reactor.netty.channel.FluxReceive - [f617c8a3-5, L:/127.0.0.1:57836 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-28 12:05:47 [] DEBUG r.n.http.client.HttpClientOperations - [f617c8a3-5, L:/127.0.0.1:57836 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 12:05:47 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f617c8a3, L:/127.0.0.1:57836 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xf617c8a3, L:/127.0.0.1:57836 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 12:05:47 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f617c8a3, L:/127.0.0.1:57836 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xf617c8a3, L:/127.0.0.1:57836 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 12:05:47 [6fc6ddb0-5775-4b7f-9b4f-3ec4a56e50ff] WARN  c.c.c.g.c.c.ValidationInterceptor - ❌ Invalid Token!
2025-02-28 12:05:47 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f617c8a3, L:/127.0.0.1:57836 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-28 12:05:47 [] DEBUG r.n.r.PooledConnectionProvider - [f617c8a3, L:/127.0.0.1:57836 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-28 12:05:47 [] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /error
2025-02-28 12:05:47 [] DEBUG r.n.r.PooledConnectionProvider - [f617c8a3, L:/127.0.0.1:57836 - R:localhost/127.0.0.1:8081] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 12:05:47 [] DEBUG r.n.http.client.HttpClientConnect - [f617c8a3-6, L:/127.0.0.1:57836 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY, method=GET}
2025-02-28 12:05:47 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f617c8a3-6, L:/127.0.0.1:57836 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xf617c8a3, L:/127.0.0.1:57836 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 12:05:47 [] DEBUG r.n.http.client.HttpClientOperations - [f617c8a3-6, L:/127.0.0.1:57836 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 12:05:47 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f617c8a3-6, L:/127.0.0.1:57836 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xf617c8a3, L:/127.0.0.1:57836 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 12:05:47 [] DEBUG r.n.http.client.HttpClientOperations - [f617c8a3-6, L:/127.0.0.1:57836 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-28 12:05:47 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f617c8a3-6, L:/127.0.0.1:57836 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xf617c8a3, L:/127.0.0.1:57836 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 12:05:47 [] DEBUG reactor.netty.channel.FluxReceive - [f617c8a3-6, L:/127.0.0.1:57836 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-28 12:05:47 [] DEBUG r.n.http.client.HttpClientOperations - [f617c8a3-6, L:/127.0.0.1:57836 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 12:05:47 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f617c8a3, L:/127.0.0.1:57836 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xf617c8a3, L:/127.0.0.1:57836 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 12:05:47 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f617c8a3, L:/127.0.0.1:57836 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xf617c8a3, L:/127.0.0.1:57836 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 12:05:47 [] WARN  c.c.c.g.c.c.ValidationInterceptor - ❌ Invalid Token!
2025-02-28 12:05:47 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f617c8a3, L:/127.0.0.1:57836 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-28 12:05:47 [] DEBUG r.n.r.PooledConnectionProvider - [f617c8a3, L:/127.0.0.1:57836 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-28 12:06:02 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f617c8a3, L:/127.0.0.1:57836 ! R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0xf617c8a3, L:/127.0.0.1:57836 ! R:localhost/127.0.0.1:8081]}, [disconnecting])
2025-02-28 12:06:02 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [6c85aa33, L:/127.0.0.1:57834 ! R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x6c85aa33, L:/127.0.0.1:57834 ! R:localhost/127.0.0.1:8081]}, [disconnecting])
2025-02-28 12:06:09 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 12:06:09 [742589c4-f387-417d-97d6-a183a6171a5e] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 12:06:09 [742589c4-f387-417d-97d6-a183a6171a5e] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /users
2025-02-28 12:06:09 [] DEBUG r.n.r.PooledConnectionProvider - [b09d836a] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 12:06:09 [] DEBUG r.netty.transport.TransportConfig - [b09d836a] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-28 12:06:09 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 12:06:09 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 12:06:09 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 12:06:09 [] DEBUG r.netty.transport.TransportConnector - [b09d836a] Connecting to [localhost/127.0.0.1:8081].
2025-02-28 12:06:09 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b09d836a, L:/127.0.0.1:57855 - R:localhost/127.0.0.1:8081] Registering pool release on close event for channel
2025-02-28 12:06:09 [] DEBUG r.n.r.PooledConnectionProvider - [b09d836a, L:/127.0.0.1:57855 - R:localhost/127.0.0.1:8081] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 12:06:09 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b09d836a, L:/127.0.0.1:57855 - R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0xb09d836a, L:/127.0.0.1:57855 - R:localhost/127.0.0.1:8081]}, [connected])
2025-02-28 12:06:09 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b09d836a-1, L:/127.0.0.1:57855 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0xb09d836a, L:/127.0.0.1:57855 - R:localhost/127.0.0.1:8081]}}, [configured])
2025-02-28 12:06:09 [] DEBUG r.n.http.client.HttpClientConnect - [b09d836a-1, L:/127.0.0.1:57855 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY, method=GET}
2025-02-28 12:06:09 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b09d836a-1, L:/127.0.0.1:57855 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xb09d836a, L:/127.0.0.1:57855 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 12:06:09 [] DEBUG r.n.http.client.HttpClientOperations - [b09d836a-1, L:/127.0.0.1:57855 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 12:06:09 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b09d836a-1, L:/127.0.0.1:57855 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xb09d836a, L:/127.0.0.1:57855 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 12:06:10 [] DEBUG r.n.http.client.HttpClientOperations - [b09d836a-1, L:/127.0.0.1:57855 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-28 12:06:10 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b09d836a-1, L:/127.0.0.1:57855 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xb09d836a, L:/127.0.0.1:57855 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 12:06:10 [] DEBUG reactor.netty.channel.FluxReceive - [b09d836a-1, L:/127.0.0.1:57855 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-28 12:06:10 [] DEBUG r.n.http.client.HttpClientOperations - [b09d836a-1, L:/127.0.0.1:57855 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 12:06:10 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b09d836a, L:/127.0.0.1:57855 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xb09d836a, L:/127.0.0.1:57855 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 12:06:10 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b09d836a, L:/127.0.0.1:57855 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xb09d836a, L:/127.0.0.1:57855 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 12:06:10 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b09d836a, L:/127.0.0.1:57855 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-28 12:06:10 [] DEBUG r.n.r.PooledConnectionProvider - [b09d836a, L:/127.0.0.1:57855 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-28 12:06:10 [742589c4-f387-417d-97d6-a183a6171a5e] WARN  c.c.c.g.c.c.ValidationInterceptor - ❌ Invalid Token!
2025-02-28 12:06:10 [] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /error
2025-02-28 12:06:10 [] DEBUG r.n.r.PooledConnectionProvider - [b09d836a, L:/127.0.0.1:57855 - R:localhost/127.0.0.1:8081] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 12:06:10 [] DEBUG r.n.http.client.HttpClientConnect - [b09d836a-2, L:/127.0.0.1:57855 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY, method=GET}
2025-02-28 12:06:10 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b09d836a-2, L:/127.0.0.1:57855 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xb09d836a, L:/127.0.0.1:57855 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 12:06:10 [] DEBUG r.n.http.client.HttpClientOperations - [b09d836a-2, L:/127.0.0.1:57855 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 12:06:10 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b09d836a-2, L:/127.0.0.1:57855 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xb09d836a, L:/127.0.0.1:57855 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 12:06:10 [] DEBUG r.n.http.client.HttpClientOperations - [b09d836a-2, L:/127.0.0.1:57855 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-28 12:06:10 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b09d836a-2, L:/127.0.0.1:57855 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xb09d836a, L:/127.0.0.1:57855 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 12:06:10 [] DEBUG reactor.netty.channel.FluxReceive - [b09d836a-2, L:/127.0.0.1:57855 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-28 12:06:10 [] DEBUG r.n.http.client.HttpClientOperations - [b09d836a-2, L:/127.0.0.1:57855 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 12:06:10 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b09d836a, L:/127.0.0.1:57855 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xb09d836a, L:/127.0.0.1:57855 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 12:06:10 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b09d836a, L:/127.0.0.1:57855 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xb09d836a, L:/127.0.0.1:57855 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 12:06:10 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b09d836a, L:/127.0.0.1:57855 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-28 12:06:10 [] WARN  c.c.c.g.c.c.ValidationInterceptor - ❌ Invalid Token!
2025-02-28 12:06:10 [] DEBUG r.n.r.PooledConnectionProvider - [b09d836a, L:/127.0.0.1:57855 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-28 12:06:15 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 12:06:15 [574bf9cf-3e9e-421a-aa1e-4d3b545153da] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 12:06:15 [574bf9cf-3e9e-421a-aa1e-4d3b545153da] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /users
2025-02-28 12:06:15 [] DEBUG r.n.r.PooledConnectionProvider - [b09d836a, L:/127.0.0.1:57855 - R:localhost/127.0.0.1:8081] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 12:06:15 [] DEBUG r.n.http.client.HttpClientConnect - [b09d836a-3, L:/127.0.0.1:57855 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY, method=GET}
2025-02-28 12:06:15 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b09d836a-3, L:/127.0.0.1:57855 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xb09d836a, L:/127.0.0.1:57855 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 12:06:15 [] DEBUG r.n.http.client.HttpClientOperations - [b09d836a-3, L:/127.0.0.1:57855 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 12:06:15 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b09d836a-3, L:/127.0.0.1:57855 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xb09d836a, L:/127.0.0.1:57855 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 12:06:15 [] DEBUG r.n.http.client.HttpClientOperations - [b09d836a-3, L:/127.0.0.1:57855 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-28 12:06:15 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b09d836a-3, L:/127.0.0.1:57855 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xb09d836a, L:/127.0.0.1:57855 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 12:06:15 [] DEBUG reactor.netty.channel.FluxReceive - [b09d836a-3, L:/127.0.0.1:57855 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-28 12:06:15 [] DEBUG r.n.http.client.HttpClientOperations - [b09d836a-3, L:/127.0.0.1:57855 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 12:06:15 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b09d836a, L:/127.0.0.1:57855 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xb09d836a, L:/127.0.0.1:57855 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 12:06:15 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b09d836a, L:/127.0.0.1:57855 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xb09d836a, L:/127.0.0.1:57855 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 12:06:15 [574bf9cf-3e9e-421a-aa1e-4d3b545153da] WARN  c.c.c.g.c.c.ValidationInterceptor - ❌ Invalid Token!
2025-02-28 12:06:15 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b09d836a, L:/127.0.0.1:57855 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-28 12:06:15 [] DEBUG r.n.r.PooledConnectionProvider - [b09d836a, L:/127.0.0.1:57855 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-28 12:06:15 [] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /error
2025-02-28 12:06:15 [] DEBUG r.n.r.PooledConnectionProvider - [b09d836a, L:/127.0.0.1:57855 - R:localhost/127.0.0.1:8081] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 12:06:15 [] DEBUG r.n.http.client.HttpClientConnect - [b09d836a-4, L:/127.0.0.1:57855 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY, method=GET}
2025-02-28 12:06:15 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b09d836a-4, L:/127.0.0.1:57855 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xb09d836a, L:/127.0.0.1:57855 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 12:06:15 [] DEBUG r.n.http.client.HttpClientOperations - [b09d836a-4, L:/127.0.0.1:57855 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 12:06:15 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b09d836a-4, L:/127.0.0.1:57855 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xb09d836a, L:/127.0.0.1:57855 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 12:06:15 [] DEBUG r.n.http.client.HttpClientOperations - [b09d836a-4, L:/127.0.0.1:57855 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-28 12:06:15 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b09d836a-4, L:/127.0.0.1:57855 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xb09d836a, L:/127.0.0.1:57855 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 12:06:15 [] DEBUG reactor.netty.channel.FluxReceive - [b09d836a-4, L:/127.0.0.1:57855 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-28 12:06:15 [] DEBUG r.n.http.client.HttpClientOperations - [b09d836a-4, L:/127.0.0.1:57855 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 12:06:15 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b09d836a, L:/127.0.0.1:57855 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xb09d836a, L:/127.0.0.1:57855 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 12:06:15 [] WARN  c.c.c.g.c.c.ValidationInterceptor - ❌ Invalid Token!
2025-02-28 12:06:15 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b09d836a, L:/127.0.0.1:57855 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xb09d836a, L:/127.0.0.1:57855 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 12:06:15 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b09d836a, L:/127.0.0.1:57855 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-28 12:06:15 [] DEBUG r.n.r.PooledConnectionProvider - [b09d836a, L:/127.0.0.1:57855 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-28 12:06:21 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 12:06:21 [a9c23695-8c10-4058-9f84-69f8d71b2a28] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 12:06:21 [a9c23695-8c10-4058-9f84-69f8d71b2a28] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /users
2025-02-28 12:06:21 [a9c23695-8c10-4058-9f84-69f8d71b2a28] WARN  c.c.c.g.c.c.ValidationInterceptor - ❌ Missing Validation Token or OrgId!
2025-02-28 12:06:21 [] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /error
2025-02-28 12:06:21 [] WARN  c.c.c.g.c.c.ValidationInterceptor - ❌ Missing Validation Token or OrgId!
2025-02-28 12:06:30 [] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-02-28 12:06:30 [] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-02-28 12:06:30 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b09d836a, L:/127.0.0.1:57855 ! R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0xb09d836a, L:/127.0.0.1:57855 ! R:localhost/127.0.0.1:8081]}, [disconnecting])
2025-02-28 12:06:30 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 7 thread-local buffer(s) from thread: reactor-http-nio-4
2025-02-28 12:06:30 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 7 thread-local buffer(s) from thread: reactor-http-nio-5
2025-02-28 12:06:30 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 4 thread-local buffer(s) from thread: reactor-http-nio-3
2025-02-28 12:06:34 [] DEBUG org.jboss.logging - Logging Provider: org.jboss.logging.Slf4jLoggerProvider found via system property
2025-02-28 12:06:34 [] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final
2025-02-28 12:06:34 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-02-28 12:06:34 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-02-28 12:06:34 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-02-28 12:06:34 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-02-28 12:06:34 [] DEBUG o.h.v.i.e.r.TraversableResolvers - Cannot find jakarta.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2025-02-28 12:06:34 [] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-02-28 12:06:34 [] INFO  c.c.c.g.c.CommongatewayApplication - Starting CommongatewayApplication using Java 17.0.12 with PID 22260 (D:\WORKSPACE\API-GATEWAY\commongateway\target\classes started by CITPL in D:\WORKSPACE\API-GATEWAY)
2025-02-28 12:06:34 [] DEBUG c.c.c.g.c.CommongatewayApplication - Running with Spring Boot v3.4.2, Spring v6.2.2
2025-02-28 12:06:34 [] INFO  c.c.c.g.c.CommongatewayApplication - No active profile set, falling back to 1 default profile: "default"
2025-02-28 12:06:34 [] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-02-28 12:06:34 [] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-02-28 12:06:34 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-02-28 12:06:34 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-02-28 12:06:34 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-02-28 12:06:34 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-02-28 12:06:34 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-02-28 12:06:34 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-02-28 12:06:36 [] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=d2aee5ef-86a6-3b95-abd8-708d95e66676
2025-02-28 12:06:36 [] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-02-28 12:06:36 [] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-02-28 12:06:36 [] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-02-28 12:06:36 [] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.34]
2025-02-28 12:06:37 [] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-02-28 12:06:37 [] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2567 ms
2025-02-28 12:06:37 [] DEBUG i.n.u.i.l.InternalLoggerFactory - Using SLF4J as the default logging framework
2025-02-28 12:06:37 [] DEBUG i.n.util.internal.PlatformDependent0 - -Dio.netty.noUnsafe: false
2025-02-28 12:06:37 [] DEBUG i.n.util.internal.PlatformDependent0 - Java version: 17
2025-02-28 12:06:37 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe.theUnsafe: available
2025-02-28 12:06:37 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe base methods: all available
2025-02-28 12:06:37 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe.storeFence: available
2025-02-28 12:06:37 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.Buffer.address: available
2025-02-28 12:06:37 [] DEBUG i.n.util.internal.PlatformDependent0 - direct buffer constructor: unavailable: Reflective setAccessible(true) disabled
2025-02-28 12:06:37 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.Bits.unaligned: available, true
2025-02-28 12:06:37 [] DEBUG i.n.util.internal.PlatformDependent0 - jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable: class io.netty.util.internal.PlatformDependent0$7 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @3e77a1ed
2025-02-28 12:06:37 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.DirectByteBuffer.<init>(long, {int,long}): unavailable
2025-02-28 12:06:37 [] DEBUG i.n.util.internal.PlatformDependent - sun.misc.Unsafe: available
2025-02-28 12:06:37 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.tmpdir: C:\Users\CITPL\AppData\Local\Temp (java.io.tmpdir)
2025-02-28 12:06:37 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.bitMode: 64 (sun.arch.data.model)
2025-02-28 12:06:37 [] DEBUG i.n.util.internal.PlatformDependent - Platform: Windows
2025-02-28 12:06:37 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.maxDirectMemory: -1 bytes
2025-02-28 12:06:37 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.uninitializedArrayAllocationThreshold: -1
2025-02-28 12:06:37 [] DEBUG io.netty.util.internal.CleanerJava9 - java.nio.ByteBuffer.cleaner(): available
2025-02-28 12:06:37 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.noPreferDirect: false
2025-02-28 12:06:37 [] DEBUG reactor.util.Loggers - Using Slf4j logging framework
2025-02-28 12:06:37 [] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-02-28 12:06:37 [] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2025-02-28 12:06:37 [] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2025-02-28 12:06:37 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-02-28 12:06:37 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via user class loader
2025-02-28 12:06:37 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-02-28 12:06:37 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-02-28 12:06:37 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-02-28 12:06:37 [] DEBUG o.h.v.i.e.r.TraversableResolvers - Cannot find jakarta.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2025-02-28 12:06:37 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-02-28 12:06:37 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-02-28 12:06:37 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-02-28 12:06:37 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-02-28 12:06:37 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-02-28 12:06:37 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-02-28 12:06:37 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	c.c.c.g.c.c.HomeController:
	{GET [/home]}: get()
2025-02-28 12:06:37 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2025-02-28 12:06:37 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 'beanNameHandlerMapping' {}
2025-02-28 12:06:38 [] DEBUG _.s.w.s.HandlerMapping.Mappings - Mapped /validate/** -> ProxyExchangeHandlerFunction
/users/** -> ProxyExchangeHandlerFunction
2025-02-28 12:06:38 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2025-02-28 12:06:38 [] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-02-28 12:06:38 [] DEBUG i.n.u.i.InternalThreadLocalMap - -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2025-02-28 12:06:38 [] DEBUG i.n.u.i.InternalThreadLocalMap - -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2025-02-28 12:06:38 [] DEBUG io.netty.util.ResourceLeakDetector - -Dio.netty.leakDetection.level: simple
2025-02-28 12:06:38 [] DEBUG io.netty.util.ResourceLeakDetector - -Dio.netty.leakDetection.targetRecords: 4
2025-02-28 12:06:38 [] DEBUG i.n.handler.codec.compression.Brotli - brotli4j not in the classpath; Brotli support will be unavailable.
2025-02-28 12:06:38 [] DEBUG reactor.netty.tcp.TcpResources - [http] resources will use the default LoopResources: DefaultLoopResources {prefix=reactor-http, daemon=true, selectCount=12, workerCount=12}
2025-02-28 12:06:38 [] DEBUG reactor.netty.tcp.TcpResources - [http] resources will use the default ConnectionProvider: reactor.netty.resources.DefaultPooledConnectionProvider@7b926325
2025-02-28 12:06:38 [] DEBUG r.netty.resources.DefaultLoopIOUring - Default io_uring support : false
2025-02-28 12:06:38 [] DEBUG r.netty.resources.DefaultLoopEpoll - Default Epoll support : false
2025-02-28 12:06:38 [] DEBUG r.netty.resources.DefaultLoopKQueue - Default KQueue support : false
2025-02-28 12:06:38 [] DEBUG i.n.c.MultithreadEventLoopGroup - -Dio.netty.eventLoopThreads: 24
2025-02-28 12:06:38 [] DEBUG i.n.u.concurrent.GlobalEventExecutor - -Dio.netty.globalEventExecutor.quietPeriodSeconds: 1
2025-02-28 12:06:38 [] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.noKeySetOptimization: false
2025-02-28 12:06:38 [] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.selectorAutoRebuildThreshold: 512
2025-02-28 12:06:38 [] DEBUG i.n.util.internal.PlatformDependent - org.jctools-core.MpscChunkedArrayQueue: available
2025-02-28 12:06:39 [] DEBUG io.netty.util.NetUtil - -Djava.net.preferIPv4Stack: false
2025-02-28 12:06:39 [] DEBUG io.netty.util.NetUtil - -Djava.net.preferIPv6Addresses: false
2025-02-28 12:06:39 [] DEBUG i.netty.util.NetUtilInitializations - Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2025-02-28 12:06:39 [] DEBUG io.netty.util.NetUtil - Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2025-02-28 12:06:39 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default ResolvedAddressTypes: IPV4_ONLY
2025-02-28 12:06:39 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Localhost address: localhost/127.0.0.1
2025-02-28 12:06:39 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Windows hostname: DESKTOP-P307093
2025-02-28 12:06:39 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default search domains: []
2025-02-28 12:06:39 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default UnixResolverOptions{ndots=1, timeout=5, attempts=16}
2025-02-28 12:06:39 [] DEBUG i.n.r.DefaultHostsFileEntriesResolver - -Dio.netty.hostsFileRefreshInterval: 0
2025-02-28 12:06:39 [] DEBUG i.n.r.d.DefaultDnsServerAddressStreamProvider - Default DNS servers: [/8.8.8.8:53, /4.2.2.2:53] (sun.net.dns.ResolverConfiguration)
2025-02-28 12:06:39 [] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-02-28 12:06:39 [] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-02-28 12:06:39 [] INFO  c.c.c.g.c.CommongatewayApplication - Started CommongatewayApplication in 5.795 seconds (process running for 7.08)
2025-02-28 12:06:56 [] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-02-28 12:06:56 [] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-02-28 12:06:56 [] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-02-28 12:06:56 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 12:06:56 [a23e6932-6da4-43e1-8a69-7c10a5798694] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 12:06:56 [a23e6932-6da4-43e1-8a69-7c10a5798694] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /users
2025-02-28 12:06:56 [a23e6932-6da4-43e1-8a69-7c10a5798694] WARN  c.c.c.g.c.c.ValidationInterceptor - ❌ Missing Validation Token or OrgId!
2025-02-28 12:06:56 [] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /error
2025-02-28 12:06:56 [] WARN  c.c.c.g.c.c.ValidationInterceptor - ❌ Missing Validation Token or OrgId!
2025-02-28 12:07:03 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 12:07:03 [72e65683-89d2-4e06-9401-b9b0f81f8a50] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 12:07:03 [72e65683-89d2-4e06-9401-b9b0f81f8a50] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /users
2025-02-28 12:07:03 [72e65683-89d2-4e06-9401-b9b0f81f8a50] DEBUG r.n.r.PooledConnectionProvider - Creating a new [http] client pool [PoolFactory{evictionInterval=PT0S, leasingStrategy=fifo, maxConnections=500, maxIdleTime=-1, maxLifeTime=-1, metricsEnabled=false, pendingAcquireMaxCount=1000, pendingAcquireTimeout=45000}] for [localhost/<unresolved>:8081]
2025-02-28 12:07:03 [72e65683-89d2-4e06-9401-b9b0f81f8a50] DEBUG io.netty.channel.DefaultChannelId - -Dio.netty.processId: 22260 (auto-detected)
2025-02-28 12:07:03 [72e65683-89d2-4e06-9401-b9b0f81f8a50] DEBUG io.netty.channel.DefaultChannelId - -Dio.netty.machineId: a0:d3:65:ff:fe:5e:b0:28 (auto-detected)
2025-02-28 12:07:03 [72e65683-89d2-4e06-9401-b9b0f81f8a50] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.numHeapArenas: 24
2025-02-28 12:07:03 [72e65683-89d2-4e06-9401-b9b0f81f8a50] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.numDirectArenas: 24
2025-02-28 12:07:03 [72e65683-89d2-4e06-9401-b9b0f81f8a50] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.pageSize: 8192
2025-02-28 12:07:03 [72e65683-89d2-4e06-9401-b9b0f81f8a50] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxOrder: 9
2025-02-28 12:07:03 [72e65683-89d2-4e06-9401-b9b0f81f8a50] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.chunkSize: 4194304
2025-02-28 12:07:03 [72e65683-89d2-4e06-9401-b9b0f81f8a50] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.smallCacheSize: 256
2025-02-28 12:07:03 [72e65683-89d2-4e06-9401-b9b0f81f8a50] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.normalCacheSize: 64
2025-02-28 12:07:03 [72e65683-89d2-4e06-9401-b9b0f81f8a50] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2025-02-28 12:07:03 [72e65683-89d2-4e06-9401-b9b0f81f8a50] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.cacheTrimInterval: 8192
2025-02-28 12:07:03 [72e65683-89d2-4e06-9401-b9b0f81f8a50] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.cacheTrimIntervalMillis: 0
2025-02-28 12:07:03 [72e65683-89d2-4e06-9401-b9b0f81f8a50] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.useCacheForAllThreads: false
2025-02-28 12:07:03 [72e65683-89d2-4e06-9401-b9b0f81f8a50] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
2025-02-28 12:07:03 [72e65683-89d2-4e06-9401-b9b0f81f8a50] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.disableCacheFinalizersForFastThreadLocalThreads: false
2025-02-28 12:07:03 [72e65683-89d2-4e06-9401-b9b0f81f8a50] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.allocator.type: pooled
2025-02-28 12:07:03 [72e65683-89d2-4e06-9401-b9b0f81f8a50] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.threadLocalDirectBufferSize: 0
2025-02-28 12:07:03 [72e65683-89d2-4e06-9401-b9b0f81f8a50] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.maxThreadLocalCharBufferSize: 16384
2025-02-28 12:07:03 [] DEBUG r.n.r.PooledConnectionProvider - [d6bfe8ba] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 12:07:03 [] DEBUG io.netty.buffer.AbstractByteBuf - -Dio.netty.buffer.checkAccessible: true
2025-02-28 12:07:03 [] DEBUG io.netty.buffer.AbstractByteBuf - -Dio.netty.buffer.checkBounds: true
2025-02-28 12:07:03 [] DEBUG i.n.util.ResourceLeakDetectorFactory - Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@489e60ce
2025-02-28 12:07:03 [] DEBUG r.netty.transport.TransportConfig - [d6bfe8ba] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-28 12:07:03 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 12:07:03 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 12:07:03 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 12:07:03 [] DEBUG i.n.b.ChannelInitializerExtensions - -Dio.netty.bootstrap.extensions: null
2025-02-28 12:07:03 [] DEBUG r.netty.transport.TransportConnector - [d6bfe8ba] Connecting to [localhost/127.0.0.1:8081].
2025-02-28 12:07:03 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [d6bfe8ba, L:/127.0.0.1:57892 - R:localhost/127.0.0.1:8081] Registering pool release on close event for channel
2025-02-28 12:07:03 [] DEBUG r.n.r.PooledConnectionProvider - [d6bfe8ba, L:/127.0.0.1:57892 - R:localhost/127.0.0.1:8081] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 12:07:03 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [d6bfe8ba, L:/127.0.0.1:57892 - R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0xd6bfe8ba, L:/127.0.0.1:57892 - R:localhost/127.0.0.1:8081]}, [connected])
2025-02-28 12:07:03 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [d6bfe8ba-1, L:/127.0.0.1:57892 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0xd6bfe8ba, L:/127.0.0.1:57892 - R:localhost/127.0.0.1:8081]}}, [configured])
2025-02-28 12:07:03 [] DEBUG r.n.http.client.HttpClientConnect - [d6bfe8ba-1, L:/127.0.0.1:57892 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY, method=GET}
2025-02-28 12:07:03 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [d6bfe8ba-1, L:/127.0.0.1:57892 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xd6bfe8ba, L:/127.0.0.1:57892 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 12:07:03 [] DEBUG r.n.http.client.HttpClientOperations - [d6bfe8ba-1, L:/127.0.0.1:57892 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 12:07:03 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.maxCapacityPerThread: 4096
2025-02-28 12:07:03 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.ratio: 8
2025-02-28 12:07:03 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.chunkSize: 32
2025-02-28 12:07:03 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.blocking: false
2025-02-28 12:07:03 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.batchFastThreadLocalOnly: true
2025-02-28 12:07:03 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [d6bfe8ba-1, L:/127.0.0.1:57892 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xd6bfe8ba, L:/127.0.0.1:57892 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 12:07:04 [] DEBUG i.n.handler.codec.compression.Zstd - zstd-jni not in the classpath; Zstd support will be unavailable.
2025-02-28 12:07:04 [] DEBUG r.n.http.client.HttpClientOperations - [d6bfe8ba-1, L:/127.0.0.1:57892 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-28 12:07:04 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [d6bfe8ba-1, L:/127.0.0.1:57892 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xd6bfe8ba, L:/127.0.0.1:57892 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 12:07:04 [] DEBUG reactor.netty.channel.FluxReceive - [d6bfe8ba-1, L:/127.0.0.1:57892 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-28 12:07:04 [] DEBUG r.n.http.client.HttpClientOperations - [d6bfe8ba-1, L:/127.0.0.1:57892 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 12:07:04 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [d6bfe8ba, L:/127.0.0.1:57892 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xd6bfe8ba, L:/127.0.0.1:57892 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 12:07:04 [72e65683-89d2-4e06-9401-b9b0f81f8a50] WARN  c.c.c.g.c.c.ValidationInterceptor - ❌ Invalid Token!
2025-02-28 12:07:04 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [d6bfe8ba, L:/127.0.0.1:57892 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xd6bfe8ba, L:/127.0.0.1:57892 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 12:07:04 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [d6bfe8ba, L:/127.0.0.1:57892 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-28 12:07:04 [] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /error
2025-02-28 12:07:04 [] DEBUG r.n.r.PooledConnectionProvider - [c62ab43f] Created a new pooled channel, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 12:07:04 [] DEBUG r.netty.transport.TransportConfig - [c62ab43f] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-28 12:07:04 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 12:07:04 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 12:07:04 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 12:07:04 [] DEBUG r.netty.transport.TransportConnector - [c62ab43f] Connecting to [localhost/127.0.0.1:8081].
2025-02-28 12:07:04 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [c62ab43f, L:/127.0.0.1:57893 - R:localhost/127.0.0.1:8081] Registering pool release on close event for channel
2025-02-28 12:07:04 [] DEBUG r.n.r.PooledConnectionProvider - [c62ab43f, L:/127.0.0.1:57893 - R:localhost/127.0.0.1:8081] Channel connected, now: 2 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 12:07:04 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [c62ab43f, L:/127.0.0.1:57893 - R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0xc62ab43f, L:/127.0.0.1:57893 - R:localhost/127.0.0.1:8081]}, [connected])
2025-02-28 12:07:04 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [c62ab43f-1, L:/127.0.0.1:57893 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0xc62ab43f, L:/127.0.0.1:57893 - R:localhost/127.0.0.1:8081]}}, [configured])
2025-02-28 12:07:04 [] DEBUG r.n.http.client.HttpClientConnect - [c62ab43f-1, L:/127.0.0.1:57893 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY, method=GET}
2025-02-28 12:07:04 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [c62ab43f-1, L:/127.0.0.1:57893 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xc62ab43f, L:/127.0.0.1:57893 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 12:07:04 [] DEBUG r.n.http.client.HttpClientOperations - [c62ab43f-1, L:/127.0.0.1:57893 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 12:07:04 [] DEBUG r.n.r.PooledConnectionProvider - [d6bfe8ba, L:/127.0.0.1:57892 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 1 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-28 12:07:04 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [c62ab43f-1, L:/127.0.0.1:57893 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xc62ab43f, L:/127.0.0.1:57893 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 12:07:04 [] DEBUG r.n.http.client.HttpClientOperations - [c62ab43f-1, L:/127.0.0.1:57893 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-28 12:07:04 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [c62ab43f-1, L:/127.0.0.1:57893 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xc62ab43f, L:/127.0.0.1:57893 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 12:07:04 [] DEBUG reactor.netty.channel.FluxReceive - [c62ab43f-1, L:/127.0.0.1:57893 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-28 12:07:04 [] DEBUG r.n.http.client.HttpClientOperations - [c62ab43f-1, L:/127.0.0.1:57893 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 12:07:04 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [c62ab43f, L:/127.0.0.1:57893 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xc62ab43f, L:/127.0.0.1:57893 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 12:07:04 [] WARN  c.c.c.g.c.c.ValidationInterceptor - ❌ Invalid Token!
2025-02-28 12:07:04 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [c62ab43f, L:/127.0.0.1:57893 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xc62ab43f, L:/127.0.0.1:57893 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 12:07:04 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [c62ab43f, L:/127.0.0.1:57893 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-28 12:07:04 [] DEBUG r.n.r.PooledConnectionProvider - [c62ab43f, L:/127.0.0.1:57893 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 2 inactive connections 0 pending acquire requests.
2025-02-28 12:07:10 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 12:07:10 [fcb1ac25-26e6-469a-8970-96b09e9a37ce] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 12:07:10 [fcb1ac25-26e6-469a-8970-96b09e9a37ce] DEBUG i.m.c.u.i.l.InternalLoggerFactory - Using SLF4J as the default logging framework
2025-02-28 12:07:10 [fcb1ac25-26e6-469a-8970-96b09e9a37ce] DEBUG r.n.r.PooledConnectionProvider - Creating a new [http] client pool [PoolFactory{evictionInterval=PT0S, leasingStrategy=fifo, maxConnections=500, maxIdleTime=-1, maxLifeTime=-1, metricsEnabled=false, pendingAcquireMaxCount=1000, pendingAcquireTimeout=45000}] for [localhost/<unresolved>:8081]
2025-02-28 12:07:10 [] DEBUG r.n.r.PooledConnectionProvider - [85badea5] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 12:07:10 [] DEBUG r.netty.transport.TransportConfig - [85badea5] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-28 12:07:10 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 12:07:10 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 12:07:10 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 12:07:10 [] DEBUG r.netty.transport.TransportConnector - [85badea5] Connecting to [localhost/127.0.0.1:8081].
2025-02-28 12:07:10 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [85badea5, L:/127.0.0.1:57899 - R:localhost/127.0.0.1:8081] Registering pool release on close event for channel
2025-02-28 12:07:10 [] DEBUG r.n.r.PooledConnectionProvider - [85badea5, L:/127.0.0.1:57899 - R:localhost/127.0.0.1:8081] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 12:07:10 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [85badea5, L:/127.0.0.1:57899 - R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x85badea5, L:/127.0.0.1:57899 - R:localhost/127.0.0.1:8081]}, [connected])
2025-02-28 12:07:10 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [85badea5-1, L:/127.0.0.1:57899 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0x85badea5, L:/127.0.0.1:57899 - R:localhost/127.0.0.1:8081]}}, [configured])
2025-02-28 12:07:10 [] DEBUG r.n.http.client.HttpClientConnect - [85badea5-1, L:/127.0.0.1:57899 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY, method=GET}
2025-02-28 12:07:10 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [85badea5-1, L:/127.0.0.1:57899 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x85badea5, L:/127.0.0.1:57899 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 12:07:10 [] DEBUG r.n.http.client.HttpClientOperations - [85badea5-1, L:/127.0.0.1:57899 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 12:07:10 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [85badea5-1, L:/127.0.0.1:57899 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x85badea5, L:/127.0.0.1:57899 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 12:07:10 [] DEBUG r.n.http.client.HttpClientOperations - [85badea5-1, L:/127.0.0.1:57899 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-28 12:07:10 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [85badea5-1, L:/127.0.0.1:57899 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x85badea5, L:/127.0.0.1:57899 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 12:07:10 [] DEBUG reactor.netty.channel.FluxReceive - [85badea5-1, L:/127.0.0.1:57899 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=1, error=null]: subscribing inbound receiver
2025-02-28 12:07:10 [] DEBUG r.n.http.client.HttpClientOperations - [85badea5-1, L:/127.0.0.1:57899 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 12:07:10 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [85badea5, L:/127.0.0.1:57899 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x85badea5, L:/127.0.0.1:57899 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 12:07:10 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [85badea5, L:/127.0.0.1:57899 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x85badea5, L:/127.0.0.1:57899 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 12:07:10 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [85badea5, L:/127.0.0.1:57899 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-28 12:07:10 [] DEBUG r.n.r.PooledConnectionProvider - [85badea5, L:/127.0.0.1:57899 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-28 12:08:00 [] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-02-28 12:08:00 [] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-02-28 12:08:00 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [d6bfe8ba, L:/127.0.0.1:57892 ! R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0xd6bfe8ba, L:/127.0.0.1:57892 ! R:localhost/127.0.0.1:8081]}, [disconnecting])
2025-02-28 12:08:00 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [c62ab43f, L:/127.0.0.1:57893 ! R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0xc62ab43f, L:/127.0.0.1:57893 ! R:localhost/127.0.0.1:8081]}, [disconnecting])
2025-02-28 12:08:00 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [85badea5, L:/127.0.0.1:57899 ! R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x85badea5, L:/127.0.0.1:57899 ! R:localhost/127.0.0.1:8081]}, [disconnecting])
2025-02-28 12:08:00 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 5 thread-local buffer(s) from thread: reactor-http-nio-5
2025-02-28 12:08:00 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 3 thread-local buffer(s) from thread: reactor-http-nio-3
2025-02-28 12:08:00 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 3 thread-local buffer(s) from thread: reactor-http-nio-2
2025-02-28 12:08:05 [] DEBUG org.jboss.logging - Logging Provider: org.jboss.logging.Slf4jLoggerProvider found via system property
2025-02-28 12:08:05 [] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final
2025-02-28 12:08:05 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-02-28 12:08:05 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-02-28 12:08:05 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-02-28 12:08:05 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-02-28 12:08:05 [] DEBUG o.h.v.i.e.r.TraversableResolvers - Cannot find jakarta.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2025-02-28 12:08:05 [] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-02-28 12:08:05 [] INFO  c.c.c.g.c.CommongatewayApplication - Starting CommongatewayApplication using Java 17.0.12 with PID 37152 (D:\WORKSPACE\API-GATEWAY\commongateway\target\classes started by CITPL in D:\WORKSPACE\API-GATEWAY)
2025-02-28 12:08:05 [] DEBUG c.c.c.g.c.CommongatewayApplication - Running with Spring Boot v3.4.2, Spring v6.2.2
2025-02-28 12:08:05 [] INFO  c.c.c.g.c.CommongatewayApplication - No active profile set, falling back to 1 default profile: "default"
2025-02-28 12:08:05 [] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-02-28 12:08:05 [] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-02-28 12:08:05 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-02-28 12:08:05 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-02-28 12:08:05 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-02-28 12:08:05 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-02-28 12:08:05 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-02-28 12:08:05 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-02-28 12:08:07 [] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=d2aee5ef-86a6-3b95-abd8-708d95e66676
2025-02-28 12:08:07 [] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-02-28 12:08:07 [] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-02-28 12:08:07 [] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-02-28 12:08:07 [] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.34]
2025-02-28 12:08:07 [] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-02-28 12:08:07 [] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2144 ms
2025-02-28 12:08:08 [] DEBUG i.n.u.i.l.InternalLoggerFactory - Using SLF4J as the default logging framework
2025-02-28 12:08:08 [] DEBUG i.n.util.internal.PlatformDependent0 - -Dio.netty.noUnsafe: false
2025-02-28 12:08:08 [] DEBUG i.n.util.internal.PlatformDependent0 - Java version: 17
2025-02-28 12:08:08 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe.theUnsafe: available
2025-02-28 12:08:08 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe base methods: all available
2025-02-28 12:08:08 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe.storeFence: available
2025-02-28 12:08:08 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.Buffer.address: available
2025-02-28 12:08:08 [] DEBUG i.n.util.internal.PlatformDependent0 - direct buffer constructor: unavailable: Reflective setAccessible(true) disabled
2025-02-28 12:08:08 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.Bits.unaligned: available, true
2025-02-28 12:08:08 [] DEBUG i.n.util.internal.PlatformDependent0 - jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable: class io.netty.util.internal.PlatformDependent0$7 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @3e77a1ed
2025-02-28 12:08:08 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.DirectByteBuffer.<init>(long, {int,long}): unavailable
2025-02-28 12:08:08 [] DEBUG i.n.util.internal.PlatformDependent - sun.misc.Unsafe: available
2025-02-28 12:08:08 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.tmpdir: C:\Users\CITPL\AppData\Local\Temp (java.io.tmpdir)
2025-02-28 12:08:08 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.bitMode: 64 (sun.arch.data.model)
2025-02-28 12:08:08 [] DEBUG i.n.util.internal.PlatformDependent - Platform: Windows
2025-02-28 12:08:08 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.maxDirectMemory: -1 bytes
2025-02-28 12:08:08 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.uninitializedArrayAllocationThreshold: -1
2025-02-28 12:08:08 [] DEBUG io.netty.util.internal.CleanerJava9 - java.nio.ByteBuffer.cleaner(): available
2025-02-28 12:08:08 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.noPreferDirect: false
2025-02-28 12:08:08 [] DEBUG reactor.util.Loggers - Using Slf4j logging framework
2025-02-28 12:08:08 [] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-02-28 12:08:08 [] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2025-02-28 12:08:08 [] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2025-02-28 12:08:08 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-02-28 12:08:08 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via user class loader
2025-02-28 12:08:08 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-02-28 12:08:08 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-02-28 12:08:08 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-02-28 12:08:08 [] DEBUG o.h.v.i.e.r.TraversableResolvers - Cannot find jakarta.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2025-02-28 12:08:08 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-02-28 12:08:08 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-02-28 12:08:08 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-02-28 12:08:08 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-02-28 12:08:08 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-02-28 12:08:08 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-02-28 12:08:08 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	c.c.c.g.c.c.HomeController:
	{GET [/home]}: get()
2025-02-28 12:08:08 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2025-02-28 12:08:08 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 'beanNameHandlerMapping' {}
2025-02-28 12:08:09 [] DEBUG _.s.w.s.HandlerMapping.Mappings - Mapped /validate/** -> ProxyExchangeHandlerFunction
/users/** -> ProxyExchangeHandlerFunction
2025-02-28 12:08:09 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2025-02-28 12:08:09 [] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-02-28 12:08:09 [] DEBUG i.n.u.i.InternalThreadLocalMap - -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2025-02-28 12:08:09 [] DEBUG i.n.u.i.InternalThreadLocalMap - -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2025-02-28 12:08:09 [] DEBUG io.netty.util.ResourceLeakDetector - -Dio.netty.leakDetection.level: simple
2025-02-28 12:08:09 [] DEBUG io.netty.util.ResourceLeakDetector - -Dio.netty.leakDetection.targetRecords: 4
2025-02-28 12:08:09 [] DEBUG i.n.handler.codec.compression.Brotli - brotli4j not in the classpath; Brotli support will be unavailable.
2025-02-28 12:08:09 [] DEBUG reactor.netty.tcp.TcpResources - [http] resources will use the default LoopResources: DefaultLoopResources {prefix=reactor-http, daemon=true, selectCount=12, workerCount=12}
2025-02-28 12:08:09 [] DEBUG reactor.netty.tcp.TcpResources - [http] resources will use the default ConnectionProvider: reactor.netty.resources.DefaultPooledConnectionProvider@150677ad
2025-02-28 12:08:09 [] DEBUG r.netty.resources.DefaultLoopIOUring - Default io_uring support : false
2025-02-28 12:08:09 [] DEBUG r.netty.resources.DefaultLoopEpoll - Default Epoll support : false
2025-02-28 12:08:09 [] DEBUG r.netty.resources.DefaultLoopKQueue - Default KQueue support : false
2025-02-28 12:08:09 [] DEBUG i.n.c.MultithreadEventLoopGroup - -Dio.netty.eventLoopThreads: 24
2025-02-28 12:08:09 [] DEBUG i.n.u.concurrent.GlobalEventExecutor - -Dio.netty.globalEventExecutor.quietPeriodSeconds: 1
2025-02-28 12:08:09 [] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.noKeySetOptimization: false
2025-02-28 12:08:09 [] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.selectorAutoRebuildThreshold: 512
2025-02-28 12:08:09 [] DEBUG i.n.util.internal.PlatformDependent - org.jctools-core.MpscChunkedArrayQueue: available
2025-02-28 12:08:09 [] DEBUG io.netty.util.NetUtil - -Djava.net.preferIPv4Stack: false
2025-02-28 12:08:09 [] DEBUG io.netty.util.NetUtil - -Djava.net.preferIPv6Addresses: false
2025-02-28 12:08:09 [] DEBUG i.netty.util.NetUtilInitializations - Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2025-02-28 12:08:09 [] DEBUG io.netty.util.NetUtil - Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2025-02-28 12:08:09 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default ResolvedAddressTypes: IPV4_ONLY
2025-02-28 12:08:09 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Localhost address: localhost/127.0.0.1
2025-02-28 12:08:09 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Windows hostname: DESKTOP-P307093
2025-02-28 12:08:09 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default search domains: []
2025-02-28 12:08:09 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default UnixResolverOptions{ndots=1, timeout=5, attempts=16}
2025-02-28 12:08:09 [] DEBUG i.n.r.DefaultHostsFileEntriesResolver - -Dio.netty.hostsFileRefreshInterval: 0
2025-02-28 12:08:09 [] DEBUG i.n.r.d.DefaultDnsServerAddressStreamProvider - Default DNS servers: [/8.8.8.8:53, /4.2.2.2:53] (sun.net.dns.ResolverConfiguration)
2025-02-28 12:08:09 [] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-02-28 12:08:09 [] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-02-28 12:08:10 [] INFO  c.c.c.g.c.CommongatewayApplication - Started CommongatewayApplication in 5.182 seconds (process running for 6.367)
2025-02-28 12:08:10 [] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-02-28 12:08:10 [] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-02-28 12:08:10 [] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-02-28 12:08:10 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 12:08:10 [b31af8ff-6e5b-4be2-8100-4ed2eb1d28c0] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 12:08:10 [b31af8ff-6e5b-4be2-8100-4ed2eb1d28c0] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /users
2025-02-28 12:08:10 [b31af8ff-6e5b-4be2-8100-4ed2eb1d28c0] DEBUG r.n.r.PooledConnectionProvider - Creating a new [http] client pool [PoolFactory{evictionInterval=PT0S, leasingStrategy=fifo, maxConnections=500, maxIdleTime=-1, maxLifeTime=-1, metricsEnabled=false, pendingAcquireMaxCount=1000, pendingAcquireTimeout=45000}] for [localhost/<unresolved>:8081]
2025-02-28 12:08:10 [b31af8ff-6e5b-4be2-8100-4ed2eb1d28c0] DEBUG io.netty.channel.DefaultChannelId - -Dio.netty.processId: 37152 (auto-detected)
2025-02-28 12:08:10 [b31af8ff-6e5b-4be2-8100-4ed2eb1d28c0] DEBUG io.netty.channel.DefaultChannelId - -Dio.netty.machineId: a0:d3:65:ff:fe:5e:b0:28 (auto-detected)
2025-02-28 12:08:10 [b31af8ff-6e5b-4be2-8100-4ed2eb1d28c0] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.numHeapArenas: 24
2025-02-28 12:08:10 [b31af8ff-6e5b-4be2-8100-4ed2eb1d28c0] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.numDirectArenas: 24
2025-02-28 12:08:10 [b31af8ff-6e5b-4be2-8100-4ed2eb1d28c0] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.pageSize: 8192
2025-02-28 12:08:10 [b31af8ff-6e5b-4be2-8100-4ed2eb1d28c0] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxOrder: 9
2025-02-28 12:08:10 [b31af8ff-6e5b-4be2-8100-4ed2eb1d28c0] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.chunkSize: 4194304
2025-02-28 12:08:10 [b31af8ff-6e5b-4be2-8100-4ed2eb1d28c0] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.smallCacheSize: 256
2025-02-28 12:08:10 [b31af8ff-6e5b-4be2-8100-4ed2eb1d28c0] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.normalCacheSize: 64
2025-02-28 12:08:10 [b31af8ff-6e5b-4be2-8100-4ed2eb1d28c0] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2025-02-28 12:08:10 [b31af8ff-6e5b-4be2-8100-4ed2eb1d28c0] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.cacheTrimInterval: 8192
2025-02-28 12:08:10 [b31af8ff-6e5b-4be2-8100-4ed2eb1d28c0] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.cacheTrimIntervalMillis: 0
2025-02-28 12:08:10 [b31af8ff-6e5b-4be2-8100-4ed2eb1d28c0] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.useCacheForAllThreads: false
2025-02-28 12:08:10 [b31af8ff-6e5b-4be2-8100-4ed2eb1d28c0] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
2025-02-28 12:08:10 [b31af8ff-6e5b-4be2-8100-4ed2eb1d28c0] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.disableCacheFinalizersForFastThreadLocalThreads: false
2025-02-28 12:08:10 [b31af8ff-6e5b-4be2-8100-4ed2eb1d28c0] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.allocator.type: pooled
2025-02-28 12:08:10 [b31af8ff-6e5b-4be2-8100-4ed2eb1d28c0] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.threadLocalDirectBufferSize: 0
2025-02-28 12:08:10 [b31af8ff-6e5b-4be2-8100-4ed2eb1d28c0] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.maxThreadLocalCharBufferSize: 16384
2025-02-28 12:08:10 [] DEBUG r.n.r.PooledConnectionProvider - [14a404e4] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 12:08:10 [] DEBUG io.netty.buffer.AbstractByteBuf - -Dio.netty.buffer.checkAccessible: true
2025-02-28 12:08:10 [] DEBUG io.netty.buffer.AbstractByteBuf - -Dio.netty.buffer.checkBounds: true
2025-02-28 12:08:10 [] DEBUG i.n.util.ResourceLeakDetectorFactory - Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@3f1a9895
2025-02-28 12:08:10 [] DEBUG r.netty.transport.TransportConfig - [14a404e4] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-28 12:08:10 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 12:08:10 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 12:08:10 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 12:08:10 [] DEBUG i.n.b.ChannelInitializerExtensions - -Dio.netty.bootstrap.extensions: null
2025-02-28 12:08:10 [] DEBUG r.netty.transport.TransportConnector - [14a404e4] Connecting to [localhost/127.0.0.1:8081].
2025-02-28 12:08:10 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [14a404e4, L:/127.0.0.1:57927 - R:localhost/127.0.0.1:8081] Registering pool release on close event for channel
2025-02-28 12:08:10 [] DEBUG r.n.r.PooledConnectionProvider - [14a404e4, L:/127.0.0.1:57927 - R:localhost/127.0.0.1:8081] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 12:08:10 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [14a404e4, L:/127.0.0.1:57927 - R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x14a404e4, L:/127.0.0.1:57927 - R:localhost/127.0.0.1:8081]}, [connected])
2025-02-28 12:08:10 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [14a404e4-1, L:/127.0.0.1:57927 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0x14a404e4, L:/127.0.0.1:57927 - R:localhost/127.0.0.1:8081]}}, [configured])
2025-02-28 12:08:10 [] DEBUG r.n.http.client.HttpClientConnect - [14a404e4-1, L:/127.0.0.1:57927 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY, method=GET}
2025-02-28 12:08:10 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [14a404e4-1, L:/127.0.0.1:57927 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x14a404e4, L:/127.0.0.1:57927 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 12:08:10 [] DEBUG r.n.http.client.HttpClientOperations - [14a404e4-1, L:/127.0.0.1:57927 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 12:08:10 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.maxCapacityPerThread: 4096
2025-02-28 12:08:10 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.ratio: 8
2025-02-28 12:08:10 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.chunkSize: 32
2025-02-28 12:08:10 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.blocking: false
2025-02-28 12:08:10 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.batchFastThreadLocalOnly: true
2025-02-28 12:08:10 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [14a404e4-1, L:/127.0.0.1:57927 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x14a404e4, L:/127.0.0.1:57927 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 12:08:10 [] DEBUG i.n.handler.codec.compression.Zstd - zstd-jni not in the classpath; Zstd support will be unavailable.
2025-02-28 12:08:10 [] DEBUG r.n.http.client.HttpClientOperations - [14a404e4-1, L:/127.0.0.1:57927 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-28 12:08:10 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [14a404e4-1, L:/127.0.0.1:57927 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x14a404e4, L:/127.0.0.1:57927 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 12:08:10 [] DEBUG reactor.netty.channel.FluxReceive - [14a404e4-1, L:/127.0.0.1:57927 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-28 12:08:10 [] DEBUG r.n.http.client.HttpClientOperations - [14a404e4-1, L:/127.0.0.1:57927 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 12:08:10 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [14a404e4, L:/127.0.0.1:57927 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x14a404e4, L:/127.0.0.1:57927 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 12:08:10 [b31af8ff-6e5b-4be2-8100-4ed2eb1d28c0] WARN  c.c.c.g.c.c.ValidationInterceptor - ❌ Invalid Token!
2025-02-28 12:08:10 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [14a404e4, L:/127.0.0.1:57927 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x14a404e4, L:/127.0.0.1:57927 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 12:08:10 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [14a404e4, L:/127.0.0.1:57927 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-28 12:08:10 [] DEBUG r.n.r.PooledConnectionProvider - [14a404e4, L:/127.0.0.1:57927 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-28 12:08:10 [] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /error
2025-02-28 12:08:10 [] DEBUG r.n.r.PooledConnectionProvider - [14a404e4, L:/127.0.0.1:57927 - R:localhost/127.0.0.1:8081] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 12:08:10 [] DEBUG r.n.http.client.HttpClientConnect - [14a404e4-2, L:/127.0.0.1:57927 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY, method=GET}
2025-02-28 12:08:10 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [14a404e4-2, L:/127.0.0.1:57927 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x14a404e4, L:/127.0.0.1:57927 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 12:08:10 [] DEBUG r.n.http.client.HttpClientOperations - [14a404e4-2, L:/127.0.0.1:57927 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 12:08:10 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [14a404e4-2, L:/127.0.0.1:57927 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x14a404e4, L:/127.0.0.1:57927 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 12:08:10 [] DEBUG r.n.http.client.HttpClientOperations - [14a404e4-2, L:/127.0.0.1:57927 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-28 12:08:10 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [14a404e4-2, L:/127.0.0.1:57927 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x14a404e4, L:/127.0.0.1:57927 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 12:08:10 [] DEBUG reactor.netty.channel.FluxReceive - [14a404e4-2, L:/127.0.0.1:57927 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-28 12:08:10 [] DEBUG r.n.http.client.HttpClientOperations - [14a404e4-2, L:/127.0.0.1:57927 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 12:08:10 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [14a404e4, L:/127.0.0.1:57927 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x14a404e4, L:/127.0.0.1:57927 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 12:08:10 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [14a404e4, L:/127.0.0.1:57927 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x14a404e4, L:/127.0.0.1:57927 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 12:08:10 [] WARN  c.c.c.g.c.c.ValidationInterceptor - ❌ Invalid Token!
2025-02-28 12:08:10 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [14a404e4, L:/127.0.0.1:57927 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-28 12:08:10 [] DEBUG r.n.r.PooledConnectionProvider - [14a404e4, L:/127.0.0.1:57927 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-28 12:08:24 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 12:08:24 [fe2168c6-8b1b-4722-9934-bd0dbf62008b] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 12:08:24 [fe2168c6-8b1b-4722-9934-bd0dbf62008b] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /users
2025-02-28 12:08:24 [] DEBUG r.n.r.PooledConnectionProvider - [14a404e4, L:/127.0.0.1:57927 - R:localhost/127.0.0.1:8081] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 12:08:24 [] DEBUG r.n.http.client.HttpClientConnect - [14a404e4-3, L:/127.0.0.1:57927 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY, method=GET}
2025-02-28 12:08:24 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [14a404e4-3, L:/127.0.0.1:57927 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x14a404e4, L:/127.0.0.1:57927 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 12:08:24 [] DEBUG r.n.http.client.HttpClientOperations - [14a404e4-3, L:/127.0.0.1:57927 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 12:08:24 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [14a404e4-3, L:/127.0.0.1:57927 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x14a404e4, L:/127.0.0.1:57927 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 12:08:24 [] DEBUG r.n.http.client.HttpClientOperations - [14a404e4-3, L:/127.0.0.1:57927 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-28 12:08:24 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [14a404e4-3, L:/127.0.0.1:57927 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x14a404e4, L:/127.0.0.1:57927 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 12:08:24 [] DEBUG reactor.netty.channel.FluxReceive - [14a404e4-3, L:/127.0.0.1:57927 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-28 12:08:24 [] DEBUG r.n.http.client.HttpClientOperations - [14a404e4-3, L:/127.0.0.1:57927 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 12:08:24 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [14a404e4, L:/127.0.0.1:57927 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x14a404e4, L:/127.0.0.1:57927 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 12:08:24 [fe2168c6-8b1b-4722-9934-bd0dbf62008b] WARN  c.c.c.g.c.c.ValidationInterceptor - ❌ Invalid Token!
2025-02-28 12:08:24 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [14a404e4, L:/127.0.0.1:57927 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x14a404e4, L:/127.0.0.1:57927 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 12:08:24 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [14a404e4, L:/127.0.0.1:57927 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-28 12:08:24 [] DEBUG r.n.r.PooledConnectionProvider - [14a404e4, L:/127.0.0.1:57927 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-28 12:08:24 [] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /error
2025-02-28 12:08:24 [] DEBUG r.n.r.PooledConnectionProvider - [14a404e4, L:/127.0.0.1:57927 - R:localhost/127.0.0.1:8081] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 12:08:24 [] DEBUG r.n.http.client.HttpClientConnect - [14a404e4-4, L:/127.0.0.1:57927 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY, method=GET}
2025-02-28 12:08:24 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [14a404e4-4, L:/127.0.0.1:57927 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x14a404e4, L:/127.0.0.1:57927 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 12:08:24 [] DEBUG r.n.http.client.HttpClientOperations - [14a404e4-4, L:/127.0.0.1:57927 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 12:08:24 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [14a404e4-4, L:/127.0.0.1:57927 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x14a404e4, L:/127.0.0.1:57927 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 12:08:24 [] DEBUG r.n.http.client.HttpClientOperations - [14a404e4-4, L:/127.0.0.1:57927 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-28 12:08:24 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [14a404e4-4, L:/127.0.0.1:57927 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x14a404e4, L:/127.0.0.1:57927 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 12:08:24 [] DEBUG reactor.netty.channel.FluxReceive - [14a404e4-4, L:/127.0.0.1:57927 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-28 12:08:24 [] DEBUG r.n.http.client.HttpClientOperations - [14a404e4-4, L:/127.0.0.1:57927 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 12:08:24 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [14a404e4, L:/127.0.0.1:57927 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x14a404e4, L:/127.0.0.1:57927 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 12:08:24 [] WARN  c.c.c.g.c.c.ValidationInterceptor - ❌ Invalid Token!
2025-02-28 12:08:24 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [14a404e4, L:/127.0.0.1:57927 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x14a404e4, L:/127.0.0.1:57927 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 12:08:24 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [14a404e4, L:/127.0.0.1:57927 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-28 12:08:24 [] DEBUG r.n.r.PooledConnectionProvider - [14a404e4, L:/127.0.0.1:57927 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-28 12:08:28 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 12:08:28 [a0c0641e-a3a2-4a8a-9f19-380240f0ed66] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 12:08:28 [a0c0641e-a3a2-4a8a-9f19-380240f0ed66] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /users
2025-02-28 12:08:28 [a0c0641e-a3a2-4a8a-9f19-380240f0ed66] WARN  c.c.c.g.c.c.ValidationInterceptor - ❌ Missing Validation Token or OrgId!
2025-02-28 12:08:28 [] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /error
2025-02-28 12:08:28 [] WARN  c.c.c.g.c.c.ValidationInterceptor - ❌ Missing Validation Token or OrgId!
2025-02-28 12:08:51 [] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-02-28 12:08:52 [] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-02-28 12:08:52 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [14a404e4, L:/127.0.0.1:57927 ! R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x14a404e4, L:/127.0.0.1:57927 ! R:localhost/127.0.0.1:8081]}, [disconnecting])
2025-02-28 12:08:52 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 6 thread-local buffer(s) from thread: reactor-http-nio-2
2025-02-28 12:08:57 [] DEBUG org.jboss.logging - Logging Provider: org.jboss.logging.Slf4jLoggerProvider found via system property
2025-02-28 12:08:57 [] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final
2025-02-28 12:08:57 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-02-28 12:08:57 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-02-28 12:08:57 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-02-28 12:08:57 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-02-28 12:08:57 [] DEBUG o.h.v.i.e.r.TraversableResolvers - Cannot find jakarta.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2025-02-28 12:08:57 [] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-02-28 12:08:57 [] INFO  c.c.c.g.c.CommongatewayApplication - Starting CommongatewayApplication using Java 17.0.12 with PID 14344 (D:\WORKSPACE\API-GATEWAY\commongateway\target\classes started by CITPL in D:\WORKSPACE\API-GATEWAY)
2025-02-28 12:08:57 [] DEBUG c.c.c.g.c.CommongatewayApplication - Running with Spring Boot v3.4.2, Spring v6.2.2
2025-02-28 12:08:57 [] INFO  c.c.c.g.c.CommongatewayApplication - No active profile set, falling back to 1 default profile: "default"
2025-02-28 12:08:57 [] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-02-28 12:08:57 [] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-02-28 12:08:57 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-02-28 12:08:57 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-02-28 12:08:57 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-02-28 12:08:57 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-02-28 12:08:57 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-02-28 12:08:57 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-02-28 12:08:58 [] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=d2aee5ef-86a6-3b95-abd8-708d95e66676
2025-02-28 12:08:59 [] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-02-28 12:08:59 [] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-02-28 12:08:59 [] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-02-28 12:08:59 [] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.34]
2025-02-28 12:08:59 [] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-02-28 12:08:59 [] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2472 ms
2025-02-28 12:09:00 [] DEBUG i.n.u.i.l.InternalLoggerFactory - Using SLF4J as the default logging framework
2025-02-28 12:09:00 [] DEBUG i.n.util.internal.PlatformDependent0 - -Dio.netty.noUnsafe: false
2025-02-28 12:09:00 [] DEBUG i.n.util.internal.PlatformDependent0 - Java version: 17
2025-02-28 12:09:00 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe.theUnsafe: available
2025-02-28 12:09:00 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe base methods: all available
2025-02-28 12:09:00 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe.storeFence: available
2025-02-28 12:09:00 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.Buffer.address: available
2025-02-28 12:09:00 [] DEBUG i.n.util.internal.PlatformDependent0 - direct buffer constructor: unavailable: Reflective setAccessible(true) disabled
2025-02-28 12:09:00 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.Bits.unaligned: available, true
2025-02-28 12:09:00 [] DEBUG i.n.util.internal.PlatformDependent0 - jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable: class io.netty.util.internal.PlatformDependent0$7 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @3e77a1ed
2025-02-28 12:09:00 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.DirectByteBuffer.<init>(long, {int,long}): unavailable
2025-02-28 12:09:00 [] DEBUG i.n.util.internal.PlatformDependent - sun.misc.Unsafe: available
2025-02-28 12:09:00 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.tmpdir: C:\Users\CITPL\AppData\Local\Temp (java.io.tmpdir)
2025-02-28 12:09:00 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.bitMode: 64 (sun.arch.data.model)
2025-02-28 12:09:00 [] DEBUG i.n.util.internal.PlatformDependent - Platform: Windows
2025-02-28 12:09:00 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.maxDirectMemory: -1 bytes
2025-02-28 12:09:00 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.uninitializedArrayAllocationThreshold: -1
2025-02-28 12:09:00 [] DEBUG io.netty.util.internal.CleanerJava9 - java.nio.ByteBuffer.cleaner(): available
2025-02-28 12:09:00 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.noPreferDirect: false
2025-02-28 12:09:00 [] DEBUG reactor.util.Loggers - Using Slf4j logging framework
2025-02-28 12:09:00 [] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-02-28 12:09:00 [] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2025-02-28 12:09:00 [] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2025-02-28 12:09:00 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-02-28 12:09:00 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via user class loader
2025-02-28 12:09:00 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-02-28 12:09:00 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-02-28 12:09:00 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-02-28 12:09:00 [] DEBUG o.h.v.i.e.r.TraversableResolvers - Cannot find jakarta.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2025-02-28 12:09:00 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-02-28 12:09:00 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-02-28 12:09:00 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-02-28 12:09:00 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-02-28 12:09:00 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-02-28 12:09:00 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-02-28 12:09:00 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	c.c.c.g.c.c.HomeController:
	{GET [/home]}: get()
2025-02-28 12:09:00 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2025-02-28 12:09:00 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 'beanNameHandlerMapping' {}
2025-02-28 12:09:00 [] DEBUG _.s.w.s.HandlerMapping.Mappings - Mapped /validate/** -> ProxyExchangeHandlerFunction
/users/** -> ProxyExchangeHandlerFunction
2025-02-28 12:09:00 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2025-02-28 12:09:01 [] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-02-28 12:09:01 [] DEBUG i.n.u.i.InternalThreadLocalMap - -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2025-02-28 12:09:01 [] DEBUG i.n.u.i.InternalThreadLocalMap - -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2025-02-28 12:09:01 [] DEBUG io.netty.util.ResourceLeakDetector - -Dio.netty.leakDetection.level: simple
2025-02-28 12:09:01 [] DEBUG io.netty.util.ResourceLeakDetector - -Dio.netty.leakDetection.targetRecords: 4
2025-02-28 12:09:01 [] DEBUG i.n.handler.codec.compression.Brotli - brotli4j not in the classpath; Brotli support will be unavailable.
2025-02-28 12:09:01 [] DEBUG reactor.netty.tcp.TcpResources - [http] resources will use the default LoopResources: DefaultLoopResources {prefix=reactor-http, daemon=true, selectCount=12, workerCount=12}
2025-02-28 12:09:01 [] DEBUG reactor.netty.tcp.TcpResources - [http] resources will use the default ConnectionProvider: reactor.netty.resources.DefaultPooledConnectionProvider@63226ace
2025-02-28 12:09:01 [] DEBUG r.netty.resources.DefaultLoopIOUring - Default io_uring support : false
2025-02-28 12:09:01 [] DEBUG r.netty.resources.DefaultLoopEpoll - Default Epoll support : false
2025-02-28 12:09:01 [] DEBUG r.netty.resources.DefaultLoopKQueue - Default KQueue support : false
2025-02-28 12:09:01 [] DEBUG i.n.c.MultithreadEventLoopGroup - -Dio.netty.eventLoopThreads: 24
2025-02-28 12:09:01 [] DEBUG i.n.u.concurrent.GlobalEventExecutor - -Dio.netty.globalEventExecutor.quietPeriodSeconds: 1
2025-02-28 12:09:01 [] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.noKeySetOptimization: false
2025-02-28 12:09:01 [] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.selectorAutoRebuildThreshold: 512
2025-02-28 12:09:01 [] DEBUG i.n.util.internal.PlatformDependent - org.jctools-core.MpscChunkedArrayQueue: available
2025-02-28 12:09:01 [] DEBUG io.netty.util.NetUtil - -Djava.net.preferIPv4Stack: false
2025-02-28 12:09:01 [] DEBUG io.netty.util.NetUtil - -Djava.net.preferIPv6Addresses: false
2025-02-28 12:09:01 [] DEBUG i.netty.util.NetUtilInitializations - Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2025-02-28 12:09:01 [] DEBUG io.netty.util.NetUtil - Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2025-02-28 12:09:01 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default ResolvedAddressTypes: IPV4_ONLY
2025-02-28 12:09:01 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Localhost address: localhost/127.0.0.1
2025-02-28 12:09:01 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Windows hostname: DESKTOP-P307093
2025-02-28 12:09:01 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default search domains: []
2025-02-28 12:09:01 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default UnixResolverOptions{ndots=1, timeout=5, attempts=16}
2025-02-28 12:09:01 [] DEBUG i.n.r.DefaultHostsFileEntriesResolver - -Dio.netty.hostsFileRefreshInterval: 0
2025-02-28 12:09:01 [] DEBUG i.n.r.d.DefaultDnsServerAddressStreamProvider - Default DNS servers: [/8.8.8.8:53, /4.2.2.2:53] (sun.net.dns.ResolverConfiguration)
2025-02-28 12:09:01 [] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-02-28 12:09:01 [] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-02-28 12:09:02 [] INFO  c.c.c.g.c.CommongatewayApplication - Started CommongatewayApplication in 5.405 seconds (process running for 6.704)
2025-02-28 12:09:07 [] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-02-28 12:09:07 [] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-02-28 12:09:07 [] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-02-28 12:09:07 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 12:09:07 [833932a2-59ce-4565-b4b9-0840f825a92b] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 12:09:07 [833932a2-59ce-4565-b4b9-0840f825a92b] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /users
2025-02-28 12:09:08 [833932a2-59ce-4565-b4b9-0840f825a92b] DEBUG r.n.r.PooledConnectionProvider - Creating a new [http] client pool [PoolFactory{evictionInterval=PT0S, leasingStrategy=fifo, maxConnections=500, maxIdleTime=-1, maxLifeTime=-1, metricsEnabled=false, pendingAcquireMaxCount=1000, pendingAcquireTimeout=45000}] for [localhost/<unresolved>:8081]
2025-02-28 12:09:08 [833932a2-59ce-4565-b4b9-0840f825a92b] DEBUG io.netty.channel.DefaultChannelId - -Dio.netty.processId: 14344 (auto-detected)
2025-02-28 12:09:08 [833932a2-59ce-4565-b4b9-0840f825a92b] DEBUG io.netty.channel.DefaultChannelId - -Dio.netty.machineId: a0:d3:65:ff:fe:5e:b0:28 (auto-detected)
2025-02-28 12:09:08 [833932a2-59ce-4565-b4b9-0840f825a92b] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.numHeapArenas: 24
2025-02-28 12:09:08 [833932a2-59ce-4565-b4b9-0840f825a92b] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.numDirectArenas: 24
2025-02-28 12:09:08 [833932a2-59ce-4565-b4b9-0840f825a92b] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.pageSize: 8192
2025-02-28 12:09:08 [833932a2-59ce-4565-b4b9-0840f825a92b] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxOrder: 9
2025-02-28 12:09:08 [833932a2-59ce-4565-b4b9-0840f825a92b] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.chunkSize: 4194304
2025-02-28 12:09:08 [833932a2-59ce-4565-b4b9-0840f825a92b] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.smallCacheSize: 256
2025-02-28 12:09:08 [833932a2-59ce-4565-b4b9-0840f825a92b] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.normalCacheSize: 64
2025-02-28 12:09:08 [833932a2-59ce-4565-b4b9-0840f825a92b] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2025-02-28 12:09:08 [833932a2-59ce-4565-b4b9-0840f825a92b] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.cacheTrimInterval: 8192
2025-02-28 12:09:08 [833932a2-59ce-4565-b4b9-0840f825a92b] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.cacheTrimIntervalMillis: 0
2025-02-28 12:09:08 [833932a2-59ce-4565-b4b9-0840f825a92b] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.useCacheForAllThreads: false
2025-02-28 12:09:08 [833932a2-59ce-4565-b4b9-0840f825a92b] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
2025-02-28 12:09:08 [833932a2-59ce-4565-b4b9-0840f825a92b] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.disableCacheFinalizersForFastThreadLocalThreads: false
2025-02-28 12:09:08 [833932a2-59ce-4565-b4b9-0840f825a92b] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.allocator.type: pooled
2025-02-28 12:09:08 [833932a2-59ce-4565-b4b9-0840f825a92b] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.threadLocalDirectBufferSize: 0
2025-02-28 12:09:08 [833932a2-59ce-4565-b4b9-0840f825a92b] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.maxThreadLocalCharBufferSize: 16384
2025-02-28 12:09:08 [] DEBUG r.n.r.PooledConnectionProvider - [f6084d9f] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 12:09:08 [] DEBUG io.netty.buffer.AbstractByteBuf - -Dio.netty.buffer.checkAccessible: true
2025-02-28 12:09:08 [] DEBUG io.netty.buffer.AbstractByteBuf - -Dio.netty.buffer.checkBounds: true
2025-02-28 12:09:08 [] DEBUG i.n.util.ResourceLeakDetectorFactory - Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@2589bb20
2025-02-28 12:09:08 [] DEBUG r.netty.transport.TransportConfig - [f6084d9f] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-28 12:09:08 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 12:09:08 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 12:09:08 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 12:09:08 [] DEBUG i.n.b.ChannelInitializerExtensions - -Dio.netty.bootstrap.extensions: null
2025-02-28 12:09:08 [] DEBUG r.netty.transport.TransportConnector - [f6084d9f] Connecting to [localhost/127.0.0.1:8081].
2025-02-28 12:09:08 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f6084d9f, L:/127.0.0.1:57960 - R:localhost/127.0.0.1:8081] Registering pool release on close event for channel
2025-02-28 12:09:08 [] DEBUG r.n.r.PooledConnectionProvider - [f6084d9f, L:/127.0.0.1:57960 - R:localhost/127.0.0.1:8081] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 12:09:08 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f6084d9f, L:/127.0.0.1:57960 - R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0xf6084d9f, L:/127.0.0.1:57960 - R:localhost/127.0.0.1:8081]}, [connected])
2025-02-28 12:09:08 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f6084d9f-1, L:/127.0.0.1:57960 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0xf6084d9f, L:/127.0.0.1:57960 - R:localhost/127.0.0.1:8081]}}, [configured])
2025-02-28 12:09:08 [] DEBUG r.n.http.client.HttpClientConnect - [f6084d9f-1, L:/127.0.0.1:57960 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY, method=GET}
2025-02-28 12:09:08 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f6084d9f-1, L:/127.0.0.1:57960 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xf6084d9f, L:/127.0.0.1:57960 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 12:09:08 [] DEBUG r.n.http.client.HttpClientOperations - [f6084d9f-1, L:/127.0.0.1:57960 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 12:09:08 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.maxCapacityPerThread: 4096
2025-02-28 12:09:08 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.ratio: 8
2025-02-28 12:09:08 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.chunkSize: 32
2025-02-28 12:09:08 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.blocking: false
2025-02-28 12:09:08 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.batchFastThreadLocalOnly: true
2025-02-28 12:09:08 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f6084d9f-1, L:/127.0.0.1:57960 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xf6084d9f, L:/127.0.0.1:57960 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 12:09:08 [] DEBUG i.n.handler.codec.compression.Zstd - zstd-jni not in the classpath; Zstd support will be unavailable.
2025-02-28 12:09:08 [] DEBUG r.n.http.client.HttpClientOperations - [f6084d9f-1, L:/127.0.0.1:57960 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-28 12:09:08 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f6084d9f-1, L:/127.0.0.1:57960 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xf6084d9f, L:/127.0.0.1:57960 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 12:09:08 [] DEBUG reactor.netty.channel.FluxReceive - [f6084d9f-1, L:/127.0.0.1:57960 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-28 12:09:08 [] DEBUG r.n.http.client.HttpClientOperations - [f6084d9f-1, L:/127.0.0.1:57960 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 12:09:08 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f6084d9f, L:/127.0.0.1:57960 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xf6084d9f, L:/127.0.0.1:57960 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 12:09:08 [833932a2-59ce-4565-b4b9-0840f825a92b] WARN  c.c.c.g.c.c.ValidationInterceptor - ❌ Invalid Token!
2025-02-28 12:09:08 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f6084d9f, L:/127.0.0.1:57960 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xf6084d9f, L:/127.0.0.1:57960 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 12:09:08 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f6084d9f, L:/127.0.0.1:57960 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-28 12:09:08 [] DEBUG r.n.r.PooledConnectionProvider - [f6084d9f, L:/127.0.0.1:57960 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-28 12:09:08 [] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /error
2025-02-28 12:09:08 [] DEBUG r.n.r.PooledConnectionProvider - [f6084d9f, L:/127.0.0.1:57960 - R:localhost/127.0.0.1:8081] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 12:09:08 [] DEBUG r.n.http.client.HttpClientConnect - [f6084d9f-2, L:/127.0.0.1:57960 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY, method=GET}
2025-02-28 12:09:08 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f6084d9f-2, L:/127.0.0.1:57960 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xf6084d9f, L:/127.0.0.1:57960 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 12:09:08 [] DEBUG r.n.http.client.HttpClientOperations - [f6084d9f-2, L:/127.0.0.1:57960 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 12:09:08 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f6084d9f-2, L:/127.0.0.1:57960 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xf6084d9f, L:/127.0.0.1:57960 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 12:09:08 [] DEBUG r.n.http.client.HttpClientOperations - [f6084d9f-2, L:/127.0.0.1:57960 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-28 12:09:08 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f6084d9f-2, L:/127.0.0.1:57960 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xf6084d9f, L:/127.0.0.1:57960 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 12:09:08 [] DEBUG reactor.netty.channel.FluxReceive - [f6084d9f-2, L:/127.0.0.1:57960 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-28 12:09:08 [] DEBUG r.n.http.client.HttpClientOperations - [f6084d9f-2, L:/127.0.0.1:57960 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 12:09:08 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f6084d9f, L:/127.0.0.1:57960 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xf6084d9f, L:/127.0.0.1:57960 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 12:09:08 [] WARN  c.c.c.g.c.c.ValidationInterceptor - ❌ Invalid Token!
2025-02-28 12:09:08 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f6084d9f, L:/127.0.0.1:57960 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xf6084d9f, L:/127.0.0.1:57960 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 12:09:08 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f6084d9f, L:/127.0.0.1:57960 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-28 12:09:08 [] DEBUG r.n.r.PooledConnectionProvider - [f6084d9f, L:/127.0.0.1:57960 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-28 12:09:15 [] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-02-28 12:09:15 [] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-02-28 12:09:15 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f6084d9f, L:/127.0.0.1:57960 ! R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0xf6084d9f, L:/127.0.0.1:57960 ! R:localhost/127.0.0.1:8081]}, [disconnecting])
2025-02-28 12:09:15 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 5 thread-local buffer(s) from thread: reactor-http-nio-2
2025-02-28 13:06:35 [] DEBUG org.jboss.logging - Logging Provider: org.jboss.logging.Slf4jLoggerProvider found via system property
2025-02-28 13:06:35 [] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final
2025-02-28 13:06:35 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-02-28 13:06:35 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-02-28 13:06:35 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-02-28 13:06:35 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-02-28 13:06:35 [] DEBUG o.h.v.i.e.r.TraversableResolvers - Cannot find jakarta.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2025-02-28 13:06:36 [] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-02-28 13:06:36 [] INFO  c.c.c.g.c.CommongatewayApplication - Starting CommongatewayApplication using Java 17.0.12 with PID 18516 (D:\WORKSPACE\API-GATEWAY\commongateway\target\classes started by CITPL in D:\WORKSPACE\API-GATEWAY)
2025-02-28 13:06:36 [] DEBUG c.c.c.g.c.CommongatewayApplication - Running with Spring Boot v3.4.2, Spring v6.2.2
2025-02-28 13:06:36 [] INFO  c.c.c.g.c.CommongatewayApplication - No active profile set, falling back to 1 default profile: "default"
2025-02-28 13:06:36 [] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-02-28 13:06:36 [] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-02-28 13:06:36 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-02-28 13:06:36 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-02-28 13:06:36 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-02-28 13:06:36 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-02-28 13:06:36 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-02-28 13:06:36 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-02-28 13:06:38 [] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=d2aee5ef-86a6-3b95-abd8-708d95e66676
2025-02-28 13:06:38 [] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-02-28 13:06:38 [] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-02-28 13:06:38 [] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-02-28 13:06:38 [] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.34]
2025-02-28 13:06:38 [] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-02-28 13:06:38 [] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2786 ms
2025-02-28 13:06:39 [] DEBUG i.n.u.i.l.InternalLoggerFactory - Using SLF4J as the default logging framework
2025-02-28 13:06:39 [] DEBUG i.n.util.internal.PlatformDependent0 - -Dio.netty.noUnsafe: false
2025-02-28 13:06:39 [] DEBUG i.n.util.internal.PlatformDependent0 - Java version: 17
2025-02-28 13:06:39 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe.theUnsafe: available
2025-02-28 13:06:39 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe base methods: all available
2025-02-28 13:06:39 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe.storeFence: available
2025-02-28 13:06:39 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.Buffer.address: available
2025-02-28 13:06:39 [] DEBUG i.n.util.internal.PlatformDependent0 - direct buffer constructor: unavailable: Reflective setAccessible(true) disabled
2025-02-28 13:06:39 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.Bits.unaligned: available, true
2025-02-28 13:06:39 [] DEBUG i.n.util.internal.PlatformDependent0 - jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable: class io.netty.util.internal.PlatformDependent0$7 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @3e77a1ed
2025-02-28 13:06:39 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.DirectByteBuffer.<init>(long, {int,long}): unavailable
2025-02-28 13:06:39 [] DEBUG i.n.util.internal.PlatformDependent - sun.misc.Unsafe: available
2025-02-28 13:06:39 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.tmpdir: C:\Users\CITPL\AppData\Local\Temp (java.io.tmpdir)
2025-02-28 13:06:39 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.bitMode: 64 (sun.arch.data.model)
2025-02-28 13:06:39 [] DEBUG i.n.util.internal.PlatformDependent - Platform: Windows
2025-02-28 13:06:39 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.maxDirectMemory: -1 bytes
2025-02-28 13:06:39 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.uninitializedArrayAllocationThreshold: -1
2025-02-28 13:06:39 [] DEBUG io.netty.util.internal.CleanerJava9 - java.nio.ByteBuffer.cleaner(): available
2025-02-28 13:06:39 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.noPreferDirect: false
2025-02-28 13:06:39 [] DEBUG reactor.util.Loggers - Using Slf4j logging framework
2025-02-28 13:06:39 [] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-02-28 13:06:39 [] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2025-02-28 13:06:39 [] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2025-02-28 13:06:39 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-02-28 13:06:39 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via user class loader
2025-02-28 13:06:39 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-02-28 13:06:39 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-02-28 13:06:39 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-02-28 13:06:39 [] DEBUG o.h.v.i.e.r.TraversableResolvers - Cannot find jakarta.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2025-02-28 13:06:39 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-02-28 13:06:39 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-02-28 13:06:39 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-02-28 13:06:39 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-02-28 13:06:39 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-02-28 13:06:39 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-02-28 13:06:39 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	c.c.c.g.c.c.HomeController:
	{GET [/home]}: get()
2025-02-28 13:06:39 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2025-02-28 13:06:39 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 'beanNameHandlerMapping' {}
2025-02-28 13:06:40 [] DEBUG _.s.w.s.HandlerMapping.Mappings - Mapped /validate/** -> ProxyExchangeHandlerFunction
/users/** -> ProxyExchangeHandlerFunction
2025-02-28 13:06:40 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2025-02-28 13:06:40 [] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-02-28 13:06:40 [] DEBUG i.n.u.i.InternalThreadLocalMap - -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2025-02-28 13:06:40 [] DEBUG i.n.u.i.InternalThreadLocalMap - -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2025-02-28 13:06:40 [] DEBUG io.netty.util.ResourceLeakDetector - -Dio.netty.leakDetection.level: simple
2025-02-28 13:06:40 [] DEBUG io.netty.util.ResourceLeakDetector - -Dio.netty.leakDetection.targetRecords: 4
2025-02-28 13:06:40 [] DEBUG i.n.handler.codec.compression.Brotli - brotli4j not in the classpath; Brotli support will be unavailable.
2025-02-28 13:06:40 [] DEBUG reactor.netty.tcp.TcpResources - [http] resources will use the default LoopResources: DefaultLoopResources {prefix=reactor-http, daemon=true, selectCount=12, workerCount=12}
2025-02-28 13:06:40 [] DEBUG reactor.netty.tcp.TcpResources - [http] resources will use the default ConnectionProvider: reactor.netty.resources.DefaultPooledConnectionProvider@451bc40e
2025-02-28 13:06:40 [] DEBUG r.netty.resources.DefaultLoopIOUring - Default io_uring support : false
2025-02-28 13:06:40 [] DEBUG r.netty.resources.DefaultLoopEpoll - Default Epoll support : false
2025-02-28 13:06:40 [] DEBUG r.netty.resources.DefaultLoopKQueue - Default KQueue support : false
2025-02-28 13:06:40 [] DEBUG i.n.c.MultithreadEventLoopGroup - -Dio.netty.eventLoopThreads: 24
2025-02-28 13:06:40 [] DEBUG i.n.u.concurrent.GlobalEventExecutor - -Dio.netty.globalEventExecutor.quietPeriodSeconds: 1
2025-02-28 13:06:40 [] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.noKeySetOptimization: false
2025-02-28 13:06:40 [] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.selectorAutoRebuildThreshold: 512
2025-02-28 13:06:41 [] DEBUG i.n.util.internal.PlatformDependent - org.jctools-core.MpscChunkedArrayQueue: available
2025-02-28 13:06:41 [] DEBUG io.netty.util.NetUtil - -Djava.net.preferIPv4Stack: false
2025-02-28 13:06:41 [] DEBUG io.netty.util.NetUtil - -Djava.net.preferIPv6Addresses: false
2025-02-28 13:06:41 [] DEBUG i.netty.util.NetUtilInitializations - Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2025-02-28 13:06:41 [] DEBUG io.netty.util.NetUtil - Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2025-02-28 13:06:41 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default ResolvedAddressTypes: IPV4_ONLY
2025-02-28 13:06:41 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Localhost address: localhost/127.0.0.1
2025-02-28 13:06:41 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Windows hostname: DESKTOP-P307093
2025-02-28 13:06:41 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default search domains: []
2025-02-28 13:06:41 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default UnixResolverOptions{ndots=1, timeout=5, attempts=16}
2025-02-28 13:06:41 [] DEBUG i.n.r.DefaultHostsFileEntriesResolver - -Dio.netty.hostsFileRefreshInterval: 0
2025-02-28 13:06:41 [] DEBUG i.n.r.d.DefaultDnsServerAddressStreamProvider - Default DNS servers: [/8.8.8.8:53, /4.2.2.2:53] (sun.net.dns.ResolverConfiguration)
2025-02-28 13:06:41 [] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-02-28 13:06:41 [] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-02-28 13:06:41 [] INFO  c.c.c.g.c.CommongatewayApplication - Started CommongatewayApplication in 6.379 seconds (process running for 8.652)
2025-02-28 13:07:11 [] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-02-28 13:07:11 [] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-02-28 13:07:11 [] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-02-28 13:07:11 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 13:07:11 [31b988d1-277e-45c3-a2ec-e26bf7fcb882] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 13:07:11 [31b988d1-277e-45c3-a2ec-e26bf7fcb882] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /users
2025-02-28 13:07:12 [31b988d1-277e-45c3-a2ec-e26bf7fcb882] DEBUG r.n.r.PooledConnectionProvider - Creating a new [http] client pool [PoolFactory{evictionInterval=PT0S, leasingStrategy=fifo, maxConnections=500, maxIdleTime=-1, maxLifeTime=-1, metricsEnabled=false, pendingAcquireMaxCount=1000, pendingAcquireTimeout=45000}] for [localhost/<unresolved>:8081]
2025-02-28 13:07:12 [31b988d1-277e-45c3-a2ec-e26bf7fcb882] DEBUG io.netty.channel.DefaultChannelId - -Dio.netty.processId: 18516 (auto-detected)
2025-02-28 13:07:12 [31b988d1-277e-45c3-a2ec-e26bf7fcb882] DEBUG io.netty.channel.DefaultChannelId - -Dio.netty.machineId: 00:15:5d:ff:fe:02:b5:1f (auto-detected)
2025-02-28 13:07:12 [31b988d1-277e-45c3-a2ec-e26bf7fcb882] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.numHeapArenas: 24
2025-02-28 13:07:12 [31b988d1-277e-45c3-a2ec-e26bf7fcb882] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.numDirectArenas: 24
2025-02-28 13:07:12 [31b988d1-277e-45c3-a2ec-e26bf7fcb882] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.pageSize: 8192
2025-02-28 13:07:12 [31b988d1-277e-45c3-a2ec-e26bf7fcb882] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxOrder: 9
2025-02-28 13:07:12 [31b988d1-277e-45c3-a2ec-e26bf7fcb882] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.chunkSize: 4194304
2025-02-28 13:07:12 [31b988d1-277e-45c3-a2ec-e26bf7fcb882] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.smallCacheSize: 256
2025-02-28 13:07:12 [31b988d1-277e-45c3-a2ec-e26bf7fcb882] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.normalCacheSize: 64
2025-02-28 13:07:12 [31b988d1-277e-45c3-a2ec-e26bf7fcb882] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2025-02-28 13:07:12 [31b988d1-277e-45c3-a2ec-e26bf7fcb882] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.cacheTrimInterval: 8192
2025-02-28 13:07:12 [31b988d1-277e-45c3-a2ec-e26bf7fcb882] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.cacheTrimIntervalMillis: 0
2025-02-28 13:07:12 [31b988d1-277e-45c3-a2ec-e26bf7fcb882] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.useCacheForAllThreads: false
2025-02-28 13:07:12 [31b988d1-277e-45c3-a2ec-e26bf7fcb882] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
2025-02-28 13:07:12 [31b988d1-277e-45c3-a2ec-e26bf7fcb882] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.disableCacheFinalizersForFastThreadLocalThreads: false
2025-02-28 13:07:12 [31b988d1-277e-45c3-a2ec-e26bf7fcb882] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.allocator.type: pooled
2025-02-28 13:07:12 [31b988d1-277e-45c3-a2ec-e26bf7fcb882] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.threadLocalDirectBufferSize: 0
2025-02-28 13:07:12 [31b988d1-277e-45c3-a2ec-e26bf7fcb882] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.maxThreadLocalCharBufferSize: 16384
2025-02-28 13:07:12 [] DEBUG r.n.r.PooledConnectionProvider - [617e00b8] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:07:12 [] DEBUG io.netty.buffer.AbstractByteBuf - -Dio.netty.buffer.checkAccessible: true
2025-02-28 13:07:12 [] DEBUG io.netty.buffer.AbstractByteBuf - -Dio.netty.buffer.checkBounds: true
2025-02-28 13:07:12 [] DEBUG i.n.util.ResourceLeakDetectorFactory - Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@6388e6e1
2025-02-28 13:07:12 [] DEBUG r.netty.transport.TransportConfig - [617e00b8] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-28 13:07:12 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 13:07:12 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 13:07:12 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 13:07:12 [] DEBUG i.n.b.ChannelInitializerExtensions - -Dio.netty.bootstrap.extensions: null
2025-02-28 13:07:12 [] DEBUG r.netty.transport.TransportConnector - [617e00b8] Connecting to [localhost/127.0.0.1:8081].
2025-02-28 13:07:12 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [617e00b8, L:/127.0.0.1:54654 - R:localhost/127.0.0.1:8081] Registering pool release on close event for channel
2025-02-28 13:07:12 [] DEBUG r.n.r.PooledConnectionProvider - [617e00b8, L:/127.0.0.1:54654 - R:localhost/127.0.0.1:8081] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:07:12 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [617e00b8, L:/127.0.0.1:54654 - R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x617e00b8, L:/127.0.0.1:54654 - R:localhost/127.0.0.1:8081]}, [connected])
2025-02-28 13:07:12 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [617e00b8-1, L:/127.0.0.1:54654 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0x617e00b8, L:/127.0.0.1:54654 - R:localhost/127.0.0.1:8081]}}, [configured])
2025-02-28 13:07:12 [] DEBUG r.n.http.client.HttpClientConnect - [617e00b8-1, L:/127.0.0.1:54654 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY, method=GET}
2025-02-28 13:07:12 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [617e00b8-1, L:/127.0.0.1:54654 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x617e00b8, L:/127.0.0.1:54654 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 13:07:12 [] DEBUG r.n.http.client.HttpClientOperations - [617e00b8-1, L:/127.0.0.1:54654 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 13:07:12 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.maxCapacityPerThread: 4096
2025-02-28 13:07:12 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.ratio: 8
2025-02-28 13:07:12 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.chunkSize: 32
2025-02-28 13:07:12 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.blocking: false
2025-02-28 13:07:12 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.batchFastThreadLocalOnly: true
2025-02-28 13:07:12 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [617e00b8-1, L:/127.0.0.1:54654 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x617e00b8, L:/127.0.0.1:54654 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 13:07:12 [] DEBUG i.n.handler.codec.compression.Zstd - zstd-jni not in the classpath; Zstd support will be unavailable.
2025-02-28 13:07:12 [] DEBUG r.n.http.client.HttpClientOperations - [617e00b8-1, L:/127.0.0.1:54654 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-28 13:07:12 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [617e00b8-1, L:/127.0.0.1:54654 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x617e00b8, L:/127.0.0.1:54654 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 13:07:12 [] DEBUG reactor.netty.channel.FluxReceive - [617e00b8-1, L:/127.0.0.1:54654 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-28 13:07:12 [] DEBUG r.n.http.client.HttpClientOperations - [617e00b8-1, L:/127.0.0.1:54654 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 13:07:12 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [617e00b8, L:/127.0.0.1:54654 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x617e00b8, L:/127.0.0.1:54654 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 13:07:12 [31b988d1-277e-45c3-a2ec-e26bf7fcb882] WARN  c.c.c.g.c.c.ValidationInterceptor - ❌ Invalid Token!
2025-02-28 13:07:12 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [617e00b8, L:/127.0.0.1:54654 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x617e00b8, L:/127.0.0.1:54654 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 13:07:12 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [617e00b8, L:/127.0.0.1:54654 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-28 13:07:12 [] DEBUG r.n.r.PooledConnectionProvider - [617e00b8, L:/127.0.0.1:54654 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-28 13:07:12 [] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /error
2025-02-28 13:07:12 [] DEBUG r.n.r.PooledConnectionProvider - [617e00b8, L:/127.0.0.1:54654 - R:localhost/127.0.0.1:8081] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:07:12 [] DEBUG r.n.http.client.HttpClientConnect - [617e00b8-2, L:/127.0.0.1:54654 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY, method=GET}
2025-02-28 13:07:12 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [617e00b8-2, L:/127.0.0.1:54654 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x617e00b8, L:/127.0.0.1:54654 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 13:07:12 [] DEBUG r.n.http.client.HttpClientOperations - [617e00b8-2, L:/127.0.0.1:54654 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 13:07:12 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [617e00b8-2, L:/127.0.0.1:54654 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x617e00b8, L:/127.0.0.1:54654 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 13:07:12 [] DEBUG r.n.http.client.HttpClientOperations - [617e00b8-2, L:/127.0.0.1:54654 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-28 13:07:12 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [617e00b8-2, L:/127.0.0.1:54654 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x617e00b8, L:/127.0.0.1:54654 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 13:07:12 [] DEBUG reactor.netty.channel.FluxReceive - [617e00b8-2, L:/127.0.0.1:54654 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-28 13:07:12 [] DEBUG r.n.http.client.HttpClientOperations - [617e00b8-2, L:/127.0.0.1:54654 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 13:07:12 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [617e00b8, L:/127.0.0.1:54654 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x617e00b8, L:/127.0.0.1:54654 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 13:07:12 [] WARN  c.c.c.g.c.c.ValidationInterceptor - ❌ Invalid Token!
2025-02-28 13:07:12 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [617e00b8, L:/127.0.0.1:54654 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x617e00b8, L:/127.0.0.1:54654 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 13:07:12 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [617e00b8, L:/127.0.0.1:54654 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-28 13:07:12 [] DEBUG r.n.r.PooledConnectionProvider - [617e00b8, L:/127.0.0.1:54654 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-28 13:07:22 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 13:07:22 [140a5977-e6f5-4145-a22e-46642435c423] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 13:07:22 [140a5977-e6f5-4145-a22e-46642435c423] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /users
2025-02-28 13:07:22 [] DEBUG r.n.r.PooledConnectionProvider - [617e00b8, L:/127.0.0.1:54654 - R:localhost/127.0.0.1:8081] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:07:22 [] DEBUG r.n.http.client.HttpClientConnect - [617e00b8-3, L:/127.0.0.1:54654 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY, method=GET}
2025-02-28 13:07:22 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [617e00b8-3, L:/127.0.0.1:54654 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x617e00b8, L:/127.0.0.1:54654 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 13:07:22 [] DEBUG r.n.http.client.HttpClientOperations - [617e00b8-3, L:/127.0.0.1:54654 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 13:07:22 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [617e00b8-3, L:/127.0.0.1:54654 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x617e00b8, L:/127.0.0.1:54654 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 13:07:22 [] DEBUG r.n.http.client.HttpClientOperations - [617e00b8-3, L:/127.0.0.1:54654 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-28 13:07:22 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [617e00b8-3, L:/127.0.0.1:54654 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x617e00b8, L:/127.0.0.1:54654 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 13:07:22 [] DEBUG reactor.netty.channel.FluxReceive - [617e00b8-3, L:/127.0.0.1:54654 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-28 13:07:22 [] DEBUG r.n.http.client.HttpClientOperations - [617e00b8-3, L:/127.0.0.1:54654 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 13:07:22 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [617e00b8, L:/127.0.0.1:54654 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x617e00b8, L:/127.0.0.1:54654 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 13:07:22 [140a5977-e6f5-4145-a22e-46642435c423] WARN  c.c.c.g.c.c.ValidationInterceptor - ❌ Invalid Token!
2025-02-28 13:07:22 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [617e00b8, L:/127.0.0.1:54654 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x617e00b8, L:/127.0.0.1:54654 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 13:07:22 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [617e00b8, L:/127.0.0.1:54654 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-28 13:07:22 [] DEBUG r.n.r.PooledConnectionProvider - [617e00b8, L:/127.0.0.1:54654 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-28 13:07:22 [] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /error
2025-02-28 13:07:22 [] DEBUG r.n.r.PooledConnectionProvider - [617e00b8, L:/127.0.0.1:54654 - R:localhost/127.0.0.1:8081] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:07:22 [] DEBUG r.n.http.client.HttpClientConnect - [617e00b8-4, L:/127.0.0.1:54654 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY, method=GET}
2025-02-28 13:07:22 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [617e00b8-4, L:/127.0.0.1:54654 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x617e00b8, L:/127.0.0.1:54654 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 13:07:22 [] DEBUG r.n.http.client.HttpClientOperations - [617e00b8-4, L:/127.0.0.1:54654 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 13:07:22 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [617e00b8-4, L:/127.0.0.1:54654 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x617e00b8, L:/127.0.0.1:54654 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 13:07:22 [] DEBUG r.n.http.client.HttpClientOperations - [617e00b8-4, L:/127.0.0.1:54654 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-28 13:07:22 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [617e00b8-4, L:/127.0.0.1:54654 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x617e00b8, L:/127.0.0.1:54654 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 13:07:22 [] DEBUG reactor.netty.channel.FluxReceive - [617e00b8-4, L:/127.0.0.1:54654 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-28 13:07:22 [] DEBUG r.n.http.client.HttpClientOperations - [617e00b8-4, L:/127.0.0.1:54654 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 13:07:22 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [617e00b8, L:/127.0.0.1:54654 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x617e00b8, L:/127.0.0.1:54654 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 13:07:22 [] WARN  c.c.c.g.c.c.ValidationInterceptor - ❌ Invalid Token!
2025-02-28 13:07:22 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [617e00b8, L:/127.0.0.1:54654 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x617e00b8, L:/127.0.0.1:54654 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 13:07:22 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [617e00b8, L:/127.0.0.1:54654 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-28 13:07:22 [] DEBUG r.n.r.PooledConnectionProvider - [617e00b8, L:/127.0.0.1:54654 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-28 13:07:25 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 13:07:25 [055bf3d3-c0b4-4706-bd44-3ababf17bfc6] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 13:07:25 [055bf3d3-c0b4-4706-bd44-3ababf17bfc6] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /users
2025-02-28 13:07:25 [] DEBUG r.n.r.PooledConnectionProvider - [617e00b8, L:/127.0.0.1:54654 - R:localhost/127.0.0.1:8081] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:07:25 [] DEBUG r.n.http.client.HttpClientConnect - [617e00b8-5, L:/127.0.0.1:54654 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY, method=GET}
2025-02-28 13:07:25 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [617e00b8-5, L:/127.0.0.1:54654 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x617e00b8, L:/127.0.0.1:54654 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 13:07:25 [] DEBUG r.n.http.client.HttpClientOperations - [617e00b8-5, L:/127.0.0.1:54654 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 13:07:25 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [617e00b8-5, L:/127.0.0.1:54654 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x617e00b8, L:/127.0.0.1:54654 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 13:07:25 [] DEBUG r.n.http.client.HttpClientOperations - [617e00b8-5, L:/127.0.0.1:54654 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-28 13:07:25 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [617e00b8-5, L:/127.0.0.1:54654 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x617e00b8, L:/127.0.0.1:54654 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 13:07:25 [] DEBUG reactor.netty.channel.FluxReceive - [617e00b8-5, L:/127.0.0.1:54654 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-28 13:07:25 [] DEBUG r.n.http.client.HttpClientOperations - [617e00b8-5, L:/127.0.0.1:54654 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 13:07:25 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [617e00b8, L:/127.0.0.1:54654 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x617e00b8, L:/127.0.0.1:54654 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 13:07:25 [055bf3d3-c0b4-4706-bd44-3ababf17bfc6] WARN  c.c.c.g.c.c.ValidationInterceptor - ❌ Invalid Token!
2025-02-28 13:07:25 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [617e00b8, L:/127.0.0.1:54654 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x617e00b8, L:/127.0.0.1:54654 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 13:07:25 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [617e00b8, L:/127.0.0.1:54654 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-28 13:07:25 [] DEBUG r.n.r.PooledConnectionProvider - [617e00b8, L:/127.0.0.1:54654 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-28 13:07:25 [] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /error
2025-02-28 13:07:25 [] DEBUG r.n.r.PooledConnectionProvider - [617e00b8, L:/127.0.0.1:54654 - R:localhost/127.0.0.1:8081] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:07:25 [] DEBUG r.n.http.client.HttpClientConnect - [617e00b8-6, L:/127.0.0.1:54654 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY, method=GET}
2025-02-28 13:07:25 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [617e00b8-6, L:/127.0.0.1:54654 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x617e00b8, L:/127.0.0.1:54654 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 13:07:25 [] DEBUG r.n.http.client.HttpClientOperations - [617e00b8-6, L:/127.0.0.1:54654 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 13:07:25 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [617e00b8-6, L:/127.0.0.1:54654 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x617e00b8, L:/127.0.0.1:54654 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 13:07:25 [] DEBUG r.n.http.client.HttpClientOperations - [617e00b8-6, L:/127.0.0.1:54654 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-28 13:07:25 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [617e00b8-6, L:/127.0.0.1:54654 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x617e00b8, L:/127.0.0.1:54654 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 13:07:25 [] DEBUG reactor.netty.channel.FluxReceive - [617e00b8-6, L:/127.0.0.1:54654 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-28 13:07:25 [] DEBUG r.n.http.client.HttpClientOperations - [617e00b8-6, L:/127.0.0.1:54654 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 13:07:25 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [617e00b8, L:/127.0.0.1:54654 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x617e00b8, L:/127.0.0.1:54654 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 13:07:25 [] WARN  c.c.c.g.c.c.ValidationInterceptor - ❌ Invalid Token!
2025-02-28 13:07:25 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [617e00b8, L:/127.0.0.1:54654 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x617e00b8, L:/127.0.0.1:54654 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 13:07:25 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [617e00b8, L:/127.0.0.1:54654 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-28 13:07:25 [] DEBUG r.n.r.PooledConnectionProvider - [617e00b8, L:/127.0.0.1:54654 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-28 13:07:31 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 13:07:31 [fc610f2f-3d53-4674-8809-bdc266a58c4c] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 13:07:31 [fc610f2f-3d53-4674-8809-bdc266a58c4c] DEBUG i.m.c.u.i.l.InternalLoggerFactory - Using SLF4J as the default logging framework
2025-02-28 13:07:31 [fc610f2f-3d53-4674-8809-bdc266a58c4c] DEBUG r.n.r.PooledConnectionProvider - Creating a new [http] client pool [PoolFactory{evictionInterval=PT0S, leasingStrategy=fifo, maxConnections=500, maxIdleTime=-1, maxLifeTime=-1, metricsEnabled=false, pendingAcquireMaxCount=1000, pendingAcquireTimeout=45000}] for [localhost/<unresolved>:8081]
2025-02-28 13:07:31 [] DEBUG r.n.r.PooledConnectionProvider - [d9e983da] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:07:31 [] DEBUG r.netty.transport.TransportConfig - [d9e983da] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-28 13:07:31 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 13:07:31 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 13:07:31 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 13:07:31 [] DEBUG r.netty.transport.TransportConnector - [d9e983da] Connecting to [localhost/127.0.0.1:8081].
2025-02-28 13:07:31 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [d9e983da, L:/127.0.0.1:54684 - R:localhost/127.0.0.1:8081] Registering pool release on close event for channel
2025-02-28 13:07:31 [] DEBUG r.n.r.PooledConnectionProvider - [d9e983da, L:/127.0.0.1:54684 - R:localhost/127.0.0.1:8081] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:07:31 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [d9e983da, L:/127.0.0.1:54684 - R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0xd9e983da, L:/127.0.0.1:54684 - R:localhost/127.0.0.1:8081]}, [connected])
2025-02-28 13:07:31 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [d9e983da-1, L:/127.0.0.1:54684 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0xd9e983da, L:/127.0.0.1:54684 - R:localhost/127.0.0.1:8081]}}, [configured])
2025-02-28 13:07:31 [] DEBUG r.n.http.client.HttpClientConnect - [d9e983da-1, L:/127.0.0.1:54684 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY, method=GET}
2025-02-28 13:07:31 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [d9e983da-1, L:/127.0.0.1:54684 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xd9e983da, L:/127.0.0.1:54684 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 13:07:31 [] DEBUG r.n.http.client.HttpClientOperations - [d9e983da-1, L:/127.0.0.1:54684 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 13:07:31 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [d9e983da-1, L:/127.0.0.1:54684 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xd9e983da, L:/127.0.0.1:54684 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 13:07:31 [] DEBUG r.n.http.client.HttpClientOperations - [d9e983da-1, L:/127.0.0.1:54684 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-28 13:07:31 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [d9e983da-1, L:/127.0.0.1:54684 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xd9e983da, L:/127.0.0.1:54684 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 13:07:31 [] DEBUG reactor.netty.channel.FluxReceive - [d9e983da-1, L:/127.0.0.1:54684 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=1, error=null]: subscribing inbound receiver
2025-02-28 13:07:31 [] DEBUG r.n.http.client.HttpClientOperations - [d9e983da-1, L:/127.0.0.1:54684 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 13:07:31 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [d9e983da, L:/127.0.0.1:54684 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xd9e983da, L:/127.0.0.1:54684 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 13:07:31 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [d9e983da, L:/127.0.0.1:54684 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xd9e983da, L:/127.0.0.1:54684 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 13:07:31 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [d9e983da, L:/127.0.0.1:54684 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-28 13:07:31 [] DEBUG r.n.r.PooledConnectionProvider - [d9e983da, L:/127.0.0.1:54684 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-28 13:08:25 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [617e00b8, L:/127.0.0.1:54654 ! R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x617e00b8, L:/127.0.0.1:54654 ! R:localhost/127.0.0.1:8081]}, [disconnecting])
2025-02-28 13:08:31 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [d9e983da, L:/127.0.0.1:54684 ! R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0xd9e983da, L:/127.0.0.1:54684 ! R:localhost/127.0.0.1:8081]}, [disconnecting])
2025-02-28 13:08:57 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 13:08:57 [362eea39-eef9-4279-9c09-2b19a6c784c6] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 13:08:57 [] DEBUG r.n.r.PooledConnectionProvider - [388367a8] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:08:57 [] DEBUG r.netty.transport.TransportConfig - [388367a8] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-28 13:08:57 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 13:08:57 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 13:08:57 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 13:08:57 [] DEBUG r.netty.transport.TransportConnector - [388367a8] Connecting to [localhost/127.0.0.1:8081].
2025-02-28 13:08:57 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [388367a8, L:/127.0.0.1:57520 - R:localhost/127.0.0.1:8081] Registering pool release on close event for channel
2025-02-28 13:08:57 [] DEBUG r.n.r.PooledConnectionProvider - [388367a8, L:/127.0.0.1:57520 - R:localhost/127.0.0.1:8081] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:08:57 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [388367a8, L:/127.0.0.1:57520 - R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x388367a8, L:/127.0.0.1:57520 - R:localhost/127.0.0.1:8081]}, [connected])
2025-02-28 13:08:57 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [388367a8-1, L:/127.0.0.1:57520 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0x388367a8, L:/127.0.0.1:57520 - R:localhost/127.0.0.1:8081]}}, [configured])
2025-02-28 13:08:57 [] DEBUG r.n.http.client.HttpClientConnect - [388367a8-1, L:/127.0.0.1:57520 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY, method=GET}
2025-02-28 13:08:57 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [388367a8-1, L:/127.0.0.1:57520 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x388367a8, L:/127.0.0.1:57520 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 13:08:57 [] DEBUG r.n.http.client.HttpClientOperations - [388367a8-1, L:/127.0.0.1:57520 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 13:08:57 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [388367a8-1, L:/127.0.0.1:57520 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x388367a8, L:/127.0.0.1:57520 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 13:08:57 [] DEBUG r.n.http.client.HttpClientOperations - [388367a8-1, L:/127.0.0.1:57520 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-28 13:08:57 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [388367a8-1, L:/127.0.0.1:57520 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x388367a8, L:/127.0.0.1:57520 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 13:08:57 [] DEBUG reactor.netty.channel.FluxReceive - [388367a8-1, L:/127.0.0.1:57520 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=1, error=null]: subscribing inbound receiver
2025-02-28 13:08:57 [] DEBUG r.n.http.client.HttpClientOperations - [388367a8-1, L:/127.0.0.1:57520 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 13:08:57 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [388367a8, L:/127.0.0.1:57520 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x388367a8, L:/127.0.0.1:57520 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 13:08:57 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [388367a8, L:/127.0.0.1:57520 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x388367a8, L:/127.0.0.1:57520 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 13:08:57 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [388367a8, L:/127.0.0.1:57520 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-28 13:08:57 [] DEBUG r.n.r.PooledConnectionProvider - [388367a8, L:/127.0.0.1:57520 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-28 13:09:04 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 13:09:04 [5f336fd5-ee0f-44e8-9460-976c9dfa48a5] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 13:09:04 [5f336fd5-ee0f-44e8-9460-976c9dfa48a5] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /users
2025-02-28 13:09:04 [] DEBUG r.n.r.PooledConnectionProvider - [f5cad429] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:09:04 [] DEBUG r.netty.transport.TransportConfig - [f5cad429] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-28 13:09:04 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 13:09:04 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 13:09:04 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 13:09:04 [] DEBUG r.netty.transport.TransportConnector - [f5cad429] Connecting to [localhost/127.0.0.1:8081].
2025-02-28 13:09:04 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f5cad429, L:/127.0.0.1:57531 - R:localhost/127.0.0.1:8081] Registering pool release on close event for channel
2025-02-28 13:09:04 [] DEBUG r.n.r.PooledConnectionProvider - [f5cad429, L:/127.0.0.1:57531 - R:localhost/127.0.0.1:8081] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:09:04 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f5cad429, L:/127.0.0.1:57531 - R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0xf5cad429, L:/127.0.0.1:57531 - R:localhost/127.0.0.1:8081]}, [connected])
2025-02-28 13:09:04 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f5cad429-1, L:/127.0.0.1:57531 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0xf5cad429, L:/127.0.0.1:57531 - R:localhost/127.0.0.1:8081]}}, [configured])
2025-02-28 13:09:04 [] DEBUG r.n.http.client.HttpClientConnect - [f5cad429-1, L:/127.0.0.1:57531 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY, method=GET}
2025-02-28 13:09:04 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f5cad429-1, L:/127.0.0.1:57531 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xf5cad429, L:/127.0.0.1:57531 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 13:09:04 [] DEBUG r.n.http.client.HttpClientOperations - [f5cad429-1, L:/127.0.0.1:57531 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 13:09:04 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f5cad429-1, L:/127.0.0.1:57531 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xf5cad429, L:/127.0.0.1:57531 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 13:09:04 [] DEBUG r.n.http.client.HttpClientOperations - [f5cad429-1, L:/127.0.0.1:57531 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-28 13:09:04 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f5cad429-1, L:/127.0.0.1:57531 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xf5cad429, L:/127.0.0.1:57531 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 13:09:04 [] DEBUG reactor.netty.channel.FluxReceive - [f5cad429-1, L:/127.0.0.1:57531 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-28 13:09:04 [] DEBUG r.n.http.client.HttpClientOperations - [f5cad429-1, L:/127.0.0.1:57531 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 13:09:04 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f5cad429, L:/127.0.0.1:57531 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xf5cad429, L:/127.0.0.1:57531 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 13:09:04 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f5cad429, L:/127.0.0.1:57531 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xf5cad429, L:/127.0.0.1:57531 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 13:09:04 [5f336fd5-ee0f-44e8-9460-976c9dfa48a5] INFO  c.c.c.g.c.c.ValidationInterceptor - ✅ Token Validated! Forwarding request...
2025-02-28 13:09:04 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f5cad429, L:/127.0.0.1:57531 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-28 13:09:04 [] DEBUG r.n.r.PooledConnectionProvider - [f5cad429, L:/127.0.0.1:57531 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-28 13:09:04 [5f336fd5-ee0f-44e8-9460-976c9dfa48a5] DEBUG r.n.r.PooledConnectionProvider - Creating a new [http] client pool [PoolFactory{evictionInterval=PT0S, leasingStrategy=fifo, maxConnections=500, maxIdleTime=-1, maxLifeTime=-1, metricsEnabled=false, pendingAcquireMaxCount=1000, pendingAcquireTimeout=45000}] for [localhost/<unresolved>:8082]
2025-02-28 13:09:04 [] DEBUG r.n.r.PooledConnectionProvider - [06bd1343] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:09:04 [] DEBUG r.netty.transport.TransportConfig - [06bd1343] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-28 13:09:04 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 13:09:04 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 13:09:04 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 13:09:04 [] DEBUG r.netty.transport.TransportConnector - [06bd1343] Connecting to [localhost/127.0.0.1:8082].
2025-02-28 13:09:04 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [06bd1343, L:/127.0.0.1:57532 - R:localhost/127.0.0.1:8082] Registering pool release on close event for channel
2025-02-28 13:09:04 [] DEBUG r.n.r.PooledConnectionProvider - [06bd1343, L:/127.0.0.1:57532 - R:localhost/127.0.0.1:8082] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:09:04 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [06bd1343, L:/127.0.0.1:57532 - R:localhost/127.0.0.1:8082] onStateChange(PooledConnection{channel=[id: 0x06bd1343, L:/127.0.0.1:57532 - R:localhost/127.0.0.1:8082]}, [connected])
2025-02-28 13:09:04 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [06bd1343-1, L:/127.0.0.1:57532 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0x06bd1343, L:/127.0.0.1:57532 - R:localhost/127.0.0.1:8082]}}, [configured])
2025-02-28 13:09:04 [] DEBUG r.n.http.client.HttpClientConnect - [06bd1343-1, L:/127.0.0.1:57532 - R:localhost/127.0.0.1:8082] Handler is being applied: {uri=http://localhost:8082/users, method=GET}
2025-02-28 13:09:04 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [06bd1343-1, L:/127.0.0.1:57532 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0x06bd1343, L:/127.0.0.1:57532 - R:localhost/127.0.0.1:8082]}}, [request_prepared])
2025-02-28 13:09:04 [] DEBUG r.n.http.client.HttpClientOperations - [06bd1343-1, L:/127.0.0.1:57532 - R:localhost/127.0.0.1:8082] No sendHeaders() called before complete, sending zero-length header
2025-02-28 13:09:04 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [06bd1343-1, L:/127.0.0.1:57532 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0x06bd1343, L:/127.0.0.1:57532 - R:localhost/127.0.0.1:8082]}}, [request_sent])
2025-02-28 13:09:04 [] DEBUG r.n.http.client.HttpClientOperations - [06bd1343-1, L:/127.0.0.1:57532 - R:localhost/127.0.0.1:8082] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Content-Length: <filtered>
Date: <filtered>
2025-02-28 13:09:04 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [06bd1343-1, L:/127.0.0.1:57532 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0x06bd1343, L:/127.0.0.1:57532 - R:localhost/127.0.0.1:8082]}}, [response_received])
2025-02-28 13:09:04 [] DEBUG r.n.http.client.HttpClientOperations - [06bd1343-1, L:/127.0.0.1:57532 - R:localhost/127.0.0.1:8082] Received last HTTP packet
2025-02-28 13:09:04 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [06bd1343, L:/127.0.0.1:57532 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0x06bd1343, L:/127.0.0.1:57532 - R:localhost/127.0.0.1:8082]}}, [response_completed])
2025-02-28 13:09:04 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [06bd1343, L:/127.0.0.1:57532 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0x06bd1343, L:/127.0.0.1:57532 - R:localhost/127.0.0.1:8082]}}, [disconnecting])
2025-02-28 13:09:04 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [06bd1343, L:/127.0.0.1:57532 - R:localhost/127.0.0.1:8082] Releasing channel
2025-02-28 13:09:04 [] DEBUG r.n.r.PooledConnectionProvider - [06bd1343, L:/127.0.0.1:57532 - R:localhost/127.0.0.1:8082] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-28 13:09:04 [] DEBUG reactor.netty.channel.FluxReceive - [ba9e0eec, L:/127.0.0.1:57532 ! R:localhost/127.0.0.1:8082] [terminated=true, cancelled=false, pending=1, error=null]: subscribing inbound receiver
2025-02-28 13:09:20 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 13:09:20 [2afcb1b4-69fc-4088-a779-d1904a037d4b] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 13:09:20 [2afcb1b4-69fc-4088-a779-d1904a037d4b] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /users
2025-02-28 13:09:20 [] DEBUG r.n.r.PooledConnectionProvider - [f5cad429, L:/127.0.0.1:57531 - R:localhost/127.0.0.1:8081] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:09:20 [] DEBUG r.n.http.client.HttpClientConnect - [f5cad429-2, L:/127.0.0.1:57531 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY, method=GET}
2025-02-28 13:09:20 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f5cad429-2, L:/127.0.0.1:57531 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xf5cad429, L:/127.0.0.1:57531 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 13:09:20 [] DEBUG r.n.http.client.HttpClientOperations - [f5cad429-2, L:/127.0.0.1:57531 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 13:09:20 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f5cad429-2, L:/127.0.0.1:57531 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xf5cad429, L:/127.0.0.1:57531 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 13:09:20 [] DEBUG r.n.http.client.HttpClientOperations - [f5cad429-2, L:/127.0.0.1:57531 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-28 13:09:20 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f5cad429-2, L:/127.0.0.1:57531 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xf5cad429, L:/127.0.0.1:57531 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 13:09:20 [] DEBUG reactor.netty.channel.FluxReceive - [f5cad429-2, L:/127.0.0.1:57531 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-28 13:09:20 [] DEBUG r.n.http.client.HttpClientOperations - [f5cad429-2, L:/127.0.0.1:57531 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 13:09:20 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f5cad429, L:/127.0.0.1:57531 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xf5cad429, L:/127.0.0.1:57531 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 13:09:20 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f5cad429, L:/127.0.0.1:57531 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xf5cad429, L:/127.0.0.1:57531 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 13:09:20 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f5cad429, L:/127.0.0.1:57531 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-28 13:09:20 [2afcb1b4-69fc-4088-a779-d1904a037d4b] INFO  c.c.c.g.c.c.ValidationInterceptor - ✅ Token Validated! Forwarding request...
2025-02-28 13:09:20 [] DEBUG r.n.r.PooledConnectionProvider - [f5cad429, L:/127.0.0.1:57531 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-28 13:09:20 [] DEBUG r.n.r.PooledConnectionProvider - [06bd1343, L:/127.0.0.1:57532 - R:localhost/127.0.0.1:8082] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:09:20 [] DEBUG r.n.http.client.HttpClientConnect - [06bd1343-2, L:/127.0.0.1:57532 - R:localhost/127.0.0.1:8082] Handler is being applied: {uri=http://localhost:8082/users, method=GET}
2025-02-28 13:09:20 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [06bd1343-2, L:/127.0.0.1:57532 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0x06bd1343, L:/127.0.0.1:57532 - R:localhost/127.0.0.1:8082]}}, [request_prepared])
2025-02-28 13:09:20 [] DEBUG r.n.http.client.HttpClientOperations - [06bd1343-2, L:/127.0.0.1:57532 - R:localhost/127.0.0.1:8082] No sendHeaders() called before complete, sending zero-length header
2025-02-28 13:09:20 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [06bd1343-2, L:/127.0.0.1:57532 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0x06bd1343, L:/127.0.0.1:57532 - R:localhost/127.0.0.1:8082]}}, [request_sent])
2025-02-28 13:09:20 [] DEBUG r.n.http.client.HttpClientOperations - [06bd1343-2, L:/127.0.0.1:57532 - R:localhost/127.0.0.1:8082] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Content-Length: <filtered>
Date: <filtered>
2025-02-28 13:09:20 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [06bd1343-2, L:/127.0.0.1:57532 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0x06bd1343, L:/127.0.0.1:57532 - R:localhost/127.0.0.1:8082]}}, [response_received])
2025-02-28 13:09:20 [] DEBUG r.n.http.client.HttpClientOperations - [06bd1343-2, L:/127.0.0.1:57532 - R:localhost/127.0.0.1:8082] Received last HTTP packet
2025-02-28 13:09:20 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [06bd1343, L:/127.0.0.1:57532 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0x06bd1343, L:/127.0.0.1:57532 - R:localhost/127.0.0.1:8082]}}, [response_completed])
2025-02-28 13:09:20 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [06bd1343, L:/127.0.0.1:57532 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0x06bd1343, L:/127.0.0.1:57532 - R:localhost/127.0.0.1:8082]}}, [disconnecting])
2025-02-28 13:09:20 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [06bd1343, L:/127.0.0.1:57532 - R:localhost/127.0.0.1:8082] Releasing channel
2025-02-28 13:09:20 [] DEBUG r.n.r.PooledConnectionProvider - [06bd1343, L:/127.0.0.1:57532 - R:localhost/127.0.0.1:8082] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-28 13:09:20 [] DEBUG reactor.netty.channel.FluxReceive - [f956c7b8, L:/127.0.0.1:57532 ! R:localhost/127.0.0.1:8082] [terminated=true, cancelled=false, pending=1, error=null]: subscribing inbound receiver
2025-02-28 13:09:26 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 13:09:26 [c0e61069-3af2-4c7a-ab90-86bd10b44f49] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 13:09:26 [c0e61069-3af2-4c7a-ab90-86bd10b44f49] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /users
2025-02-28 13:09:26 [c0e61069-3af2-4c7a-ab90-86bd10b44f49] WARN  c.c.c.g.c.c.ValidationInterceptor - ❌ Missing Validation Token or OrgId!
2025-02-28 13:09:26 [] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /error
2025-02-28 13:09:26 [] WARN  c.c.c.g.c.c.ValidationInterceptor - ❌ Missing Validation Token or OrgId!
2025-02-28 13:09:57 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [388367a8, L:/127.0.0.1:57520 ! R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x388367a8, L:/127.0.0.1:57520 ! R:localhost/127.0.0.1:8081]}, [disconnecting])
2025-02-28 13:10:20 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f5cad429, L:/127.0.0.1:57531 ! R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0xf5cad429, L:/127.0.0.1:57531 ! R:localhost/127.0.0.1:8081]}, [disconnecting])
2025-02-28 13:10:20 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [06bd1343, L:/127.0.0.1:57532 ! R:localhost/127.0.0.1:8082] onStateChange(PooledConnection{channel=[id: 0x06bd1343, L:/127.0.0.1:57532 ! R:localhost/127.0.0.1:8082]}, [disconnecting])
2025-02-28 13:11:17 [] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-02-28 13:11:17 [] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-02-28 13:11:17 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 5 thread-local buffer(s) from thread: reactor-http-nio-4
2025-02-28 13:11:17 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 5 thread-local buffer(s) from thread: reactor-http-nio-5
2025-02-28 13:11:17 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 5 thread-local buffer(s) from thread: reactor-http-nio-7
2025-02-28 13:11:17 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 7 thread-local buffer(s) from thread: reactor-http-nio-2
2025-02-28 13:11:17 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 6 thread-local buffer(s) from thread: reactor-http-nio-6
2025-02-28 13:11:24 [] DEBUG org.jboss.logging - Logging Provider: org.jboss.logging.Slf4jLoggerProvider found via system property
2025-02-28 13:11:24 [] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final
2025-02-28 13:11:24 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-02-28 13:11:24 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-02-28 13:11:24 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-02-28 13:11:24 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-02-28 13:11:24 [] DEBUG o.h.v.i.e.r.TraversableResolvers - Cannot find jakarta.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2025-02-28 13:11:24 [] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-02-28 13:11:24 [] INFO  c.c.c.g.c.CommongatewayApplication - Starting CommongatewayApplication using Java 17.0.12 with PID 4872 (D:\WORKSPACE\API-GATEWAY\commongateway\target\classes started by CITPL in D:\WORKSPACE\API-GATEWAY)
2025-02-28 13:11:24 [] DEBUG c.c.c.g.c.CommongatewayApplication - Running with Spring Boot v3.4.2, Spring v6.2.2
2025-02-28 13:11:24 [] INFO  c.c.c.g.c.CommongatewayApplication - No active profile set, falling back to 1 default profile: "default"
2025-02-28 13:11:24 [] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-02-28 13:11:24 [] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-02-28 13:11:25 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-02-28 13:11:25 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-02-28 13:11:25 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-02-28 13:11:25 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-02-28 13:11:25 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-02-28 13:11:25 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-02-28 13:11:25 [] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=d2aee5ef-86a6-3b95-abd8-708d95e66676
2025-02-28 13:11:26 [] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-02-28 13:11:26 [] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-02-28 13:11:26 [] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-02-28 13:11:26 [] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.34]
2025-02-28 13:11:26 [] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-02-28 13:11:26 [] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1529 ms
2025-02-28 13:11:26 [] DEBUG i.n.u.i.l.InternalLoggerFactory - Using SLF4J as the default logging framework
2025-02-28 13:11:26 [] DEBUG i.n.util.internal.PlatformDependent0 - -Dio.netty.noUnsafe: false
2025-02-28 13:11:26 [] DEBUG i.n.util.internal.PlatformDependent0 - Java version: 17
2025-02-28 13:11:26 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe.theUnsafe: available
2025-02-28 13:11:26 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe base methods: all available
2025-02-28 13:11:26 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe.storeFence: available
2025-02-28 13:11:26 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.Buffer.address: available
2025-02-28 13:11:26 [] DEBUG i.n.util.internal.PlatformDependent0 - direct buffer constructor: unavailable: Reflective setAccessible(true) disabled
2025-02-28 13:11:26 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.Bits.unaligned: available, true
2025-02-28 13:11:26 [] DEBUG i.n.util.internal.PlatformDependent0 - jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable: class io.netty.util.internal.PlatformDependent0$7 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @3e77a1ed
2025-02-28 13:11:26 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.DirectByteBuffer.<init>(long, {int,long}): unavailable
2025-02-28 13:11:26 [] DEBUG i.n.util.internal.PlatformDependent - sun.misc.Unsafe: available
2025-02-28 13:11:26 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.tmpdir: C:\Users\CITPL\AppData\Local\Temp (java.io.tmpdir)
2025-02-28 13:11:26 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.bitMode: 64 (sun.arch.data.model)
2025-02-28 13:11:26 [] DEBUG i.n.util.internal.PlatformDependent - Platform: Windows
2025-02-28 13:11:26 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.maxDirectMemory: -1 bytes
2025-02-28 13:11:26 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.uninitializedArrayAllocationThreshold: -1
2025-02-28 13:11:26 [] DEBUG io.netty.util.internal.CleanerJava9 - java.nio.ByteBuffer.cleaner(): available
2025-02-28 13:11:26 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.noPreferDirect: false
2025-02-28 13:11:27 [] DEBUG reactor.util.Loggers - Using Slf4j logging framework
2025-02-28 13:11:27 [] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-02-28 13:11:27 [] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2025-02-28 13:11:27 [] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2025-02-28 13:11:27 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-02-28 13:11:27 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via user class loader
2025-02-28 13:11:27 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-02-28 13:11:27 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-02-28 13:11:27 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-02-28 13:11:27 [] DEBUG o.h.v.i.e.r.TraversableResolvers - Cannot find jakarta.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2025-02-28 13:11:27 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-02-28 13:11:27 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-02-28 13:11:27 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-02-28 13:11:27 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-02-28 13:11:27 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-02-28 13:11:27 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-02-28 13:11:27 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	c.c.c.g.c.c.HomeController:
	{GET [/home]}: get()
2025-02-28 13:11:27 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2025-02-28 13:11:27 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 'beanNameHandlerMapping' {}
2025-02-28 13:11:27 [] DEBUG _.s.w.s.HandlerMapping.Mappings - Mapped /validate/** -> ProxyExchangeHandlerFunction
/users/** -> ProxyExchangeHandlerFunction
2025-02-28 13:11:27 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2025-02-28 13:11:27 [] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-02-28 13:11:27 [] DEBUG i.n.u.i.InternalThreadLocalMap - -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2025-02-28 13:11:27 [] DEBUG i.n.u.i.InternalThreadLocalMap - -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2025-02-28 13:11:27 [] DEBUG io.netty.util.ResourceLeakDetector - -Dio.netty.leakDetection.level: simple
2025-02-28 13:11:27 [] DEBUG io.netty.util.ResourceLeakDetector - -Dio.netty.leakDetection.targetRecords: 4
2025-02-28 13:11:27 [] DEBUG i.n.handler.codec.compression.Brotli - brotli4j not in the classpath; Brotli support will be unavailable.
2025-02-28 13:11:27 [] DEBUG reactor.netty.tcp.TcpResources - [http] resources will use the default LoopResources: DefaultLoopResources {prefix=reactor-http, daemon=true, selectCount=12, workerCount=12}
2025-02-28 13:11:27 [] DEBUG reactor.netty.tcp.TcpResources - [http] resources will use the default ConnectionProvider: reactor.netty.resources.DefaultPooledConnectionProvider@45f5223f
2025-02-28 13:11:27 [] DEBUG r.netty.resources.DefaultLoopIOUring - Default io_uring support : false
2025-02-28 13:11:27 [] DEBUG r.netty.resources.DefaultLoopEpoll - Default Epoll support : false
2025-02-28 13:11:27 [] DEBUG r.netty.resources.DefaultLoopKQueue - Default KQueue support : false
2025-02-28 13:11:27 [] DEBUG i.n.c.MultithreadEventLoopGroup - -Dio.netty.eventLoopThreads: 24
2025-02-28 13:11:27 [] DEBUG i.n.u.concurrent.GlobalEventExecutor - -Dio.netty.globalEventExecutor.quietPeriodSeconds: 1
2025-02-28 13:11:27 [] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.noKeySetOptimization: false
2025-02-28 13:11:27 [] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.selectorAutoRebuildThreshold: 512
2025-02-28 13:11:27 [] DEBUG i.n.util.internal.PlatformDependent - org.jctools-core.MpscChunkedArrayQueue: available
2025-02-28 13:11:27 [] DEBUG io.netty.util.NetUtil - -Djava.net.preferIPv4Stack: false
2025-02-28 13:11:27 [] DEBUG io.netty.util.NetUtil - -Djava.net.preferIPv6Addresses: false
2025-02-28 13:11:27 [] DEBUG i.netty.util.NetUtilInitializations - Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2025-02-28 13:11:27 [] DEBUG io.netty.util.NetUtil - Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2025-02-28 13:11:27 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default ResolvedAddressTypes: IPV4_ONLY
2025-02-28 13:11:27 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Localhost address: localhost/127.0.0.1
2025-02-28 13:11:27 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Windows hostname: DESKTOP-P307093
2025-02-28 13:11:27 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default search domains: []
2025-02-28 13:11:28 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default UnixResolverOptions{ndots=1, timeout=5, attempts=16}
2025-02-28 13:11:28 [] DEBUG i.n.r.DefaultHostsFileEntriesResolver - -Dio.netty.hostsFileRefreshInterval: 0
2025-02-28 13:11:28 [] DEBUG i.n.r.d.DefaultDnsServerAddressStreamProvider - Default DNS servers: [/8.8.8.8:53, /4.2.2.2:53] (sun.net.dns.ResolverConfiguration)
2025-02-28 13:11:28 [] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-02-28 13:11:28 [] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-02-28 13:11:28 [] INFO  c.c.c.g.c.CommongatewayApplication - Started CommongatewayApplication in 3.972 seconds (process running for 4.958)
2025-02-28 13:11:33 [] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-02-28 13:11:33 [] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-02-28 13:11:33 [] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-02-28 13:11:33 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 13:11:33 [cec9bc8b-465a-4763-ad54-8a77f7a293ef] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 13:11:33 [cec9bc8b-465a-4763-ad54-8a77f7a293ef] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /users
2025-02-28 13:11:33 [cec9bc8b-465a-4763-ad54-8a77f7a293ef] DEBUG r.n.r.PooledConnectionProvider - Creating a new [http] client pool [PoolFactory{evictionInterval=PT0S, leasingStrategy=fifo, maxConnections=500, maxIdleTime=-1, maxLifeTime=-1, metricsEnabled=false, pendingAcquireMaxCount=1000, pendingAcquireTimeout=45000}] for [localhost/<unresolved>:8081]
2025-02-28 13:11:33 [cec9bc8b-465a-4763-ad54-8a77f7a293ef] DEBUG io.netty.channel.DefaultChannelId - -Dio.netty.processId: 4872 (auto-detected)
2025-02-28 13:11:33 [cec9bc8b-465a-4763-ad54-8a77f7a293ef] DEBUG io.netty.channel.DefaultChannelId - -Dio.netty.machineId: 00:15:5d:ff:fe:02:b5:1f (auto-detected)
2025-02-28 13:11:33 [cec9bc8b-465a-4763-ad54-8a77f7a293ef] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.numHeapArenas: 24
2025-02-28 13:11:33 [cec9bc8b-465a-4763-ad54-8a77f7a293ef] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.numDirectArenas: 24
2025-02-28 13:11:33 [cec9bc8b-465a-4763-ad54-8a77f7a293ef] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.pageSize: 8192
2025-02-28 13:11:33 [cec9bc8b-465a-4763-ad54-8a77f7a293ef] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxOrder: 9
2025-02-28 13:11:33 [cec9bc8b-465a-4763-ad54-8a77f7a293ef] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.chunkSize: 4194304
2025-02-28 13:11:33 [cec9bc8b-465a-4763-ad54-8a77f7a293ef] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.smallCacheSize: 256
2025-02-28 13:11:33 [cec9bc8b-465a-4763-ad54-8a77f7a293ef] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.normalCacheSize: 64
2025-02-28 13:11:33 [cec9bc8b-465a-4763-ad54-8a77f7a293ef] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2025-02-28 13:11:33 [cec9bc8b-465a-4763-ad54-8a77f7a293ef] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.cacheTrimInterval: 8192
2025-02-28 13:11:33 [cec9bc8b-465a-4763-ad54-8a77f7a293ef] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.cacheTrimIntervalMillis: 0
2025-02-28 13:11:33 [cec9bc8b-465a-4763-ad54-8a77f7a293ef] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.useCacheForAllThreads: false
2025-02-28 13:11:33 [cec9bc8b-465a-4763-ad54-8a77f7a293ef] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
2025-02-28 13:11:33 [cec9bc8b-465a-4763-ad54-8a77f7a293ef] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.disableCacheFinalizersForFastThreadLocalThreads: false
2025-02-28 13:11:33 [cec9bc8b-465a-4763-ad54-8a77f7a293ef] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.allocator.type: pooled
2025-02-28 13:11:33 [cec9bc8b-465a-4763-ad54-8a77f7a293ef] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.threadLocalDirectBufferSize: 0
2025-02-28 13:11:33 [cec9bc8b-465a-4763-ad54-8a77f7a293ef] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.maxThreadLocalCharBufferSize: 16384
2025-02-28 13:11:33 [] DEBUG r.n.r.PooledConnectionProvider - [fffff40c] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:11:33 [] DEBUG io.netty.buffer.AbstractByteBuf - -Dio.netty.buffer.checkAccessible: true
2025-02-28 13:11:33 [] DEBUG io.netty.buffer.AbstractByteBuf - -Dio.netty.buffer.checkBounds: true
2025-02-28 13:11:33 [] DEBUG i.n.util.ResourceLeakDetectorFactory - Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@40e4b122
2025-02-28 13:11:33 [] DEBUG r.netty.transport.TransportConfig - [fffff40c] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-28 13:11:33 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 13:11:33 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 13:11:33 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 13:11:33 [] DEBUG i.n.b.ChannelInitializerExtensions - -Dio.netty.bootstrap.extensions: null
2025-02-28 13:11:33 [] DEBUG r.netty.transport.TransportConnector - [fffff40c] Connecting to [localhost/127.0.0.1:8081].
2025-02-28 13:11:33 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [fffff40c, L:/127.0.0.1:57590 - R:localhost/127.0.0.1:8081] Registering pool release on close event for channel
2025-02-28 13:11:33 [] DEBUG r.n.r.PooledConnectionProvider - [fffff40c, L:/127.0.0.1:57590 - R:localhost/127.0.0.1:8081] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:11:33 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [fffff40c, L:/127.0.0.1:57590 - R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0xfffff40c, L:/127.0.0.1:57590 - R:localhost/127.0.0.1:8081]}, [connected])
2025-02-28 13:11:33 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [fffff40c-1, L:/127.0.0.1:57590 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0xfffff40c, L:/127.0.0.1:57590 - R:localhost/127.0.0.1:8081]}}, [configured])
2025-02-28 13:11:33 [] DEBUG r.n.http.client.HttpClientConnect - [fffff40c-1, L:/127.0.0.1:57590 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY, method=GET}
2025-02-28 13:11:33 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [fffff40c-1, L:/127.0.0.1:57590 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xfffff40c, L:/127.0.0.1:57590 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 13:11:33 [] DEBUG r.n.http.client.HttpClientOperations - [fffff40c-1, L:/127.0.0.1:57590 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 13:11:33 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.maxCapacityPerThread: 4096
2025-02-28 13:11:33 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.ratio: 8
2025-02-28 13:11:33 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.chunkSize: 32
2025-02-28 13:11:33 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.blocking: false
2025-02-28 13:11:33 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.batchFastThreadLocalOnly: true
2025-02-28 13:11:33 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [fffff40c-1, L:/127.0.0.1:57590 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xfffff40c, L:/127.0.0.1:57590 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 13:11:33 [] DEBUG i.n.handler.codec.compression.Zstd - zstd-jni not in the classpath; Zstd support will be unavailable.
2025-02-28 13:11:33 [] DEBUG r.n.http.client.HttpClientOperations - [fffff40c-1, L:/127.0.0.1:57590 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-28 13:11:33 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [fffff40c-1, L:/127.0.0.1:57590 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xfffff40c, L:/127.0.0.1:57590 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 13:11:33 [] DEBUG reactor.netty.channel.FluxReceive - [fffff40c-1, L:/127.0.0.1:57590 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-28 13:11:33 [] DEBUG r.n.http.client.HttpClientOperations - [fffff40c-1, L:/127.0.0.1:57590 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 13:11:33 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [fffff40c, L:/127.0.0.1:57590 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xfffff40c, L:/127.0.0.1:57590 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 13:11:33 [cec9bc8b-465a-4763-ad54-8a77f7a293ef] INFO  c.c.c.g.c.c.ValidationInterceptor - ✅ Token Validated! Forwarding request...
2025-02-28 13:11:33 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [fffff40c, L:/127.0.0.1:57590 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xfffff40c, L:/127.0.0.1:57590 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 13:11:33 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [fffff40c, L:/127.0.0.1:57590 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-28 13:11:33 [] DEBUG r.n.r.PooledConnectionProvider - [fffff40c, L:/127.0.0.1:57590 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-28 13:11:33 [cec9bc8b-465a-4763-ad54-8a77f7a293ef] DEBUG i.m.c.u.i.l.InternalLoggerFactory - Using SLF4J as the default logging framework
2025-02-28 13:11:33 [cec9bc8b-465a-4763-ad54-8a77f7a293ef] DEBUG r.n.r.PooledConnectionProvider - Creating a new [http] client pool [PoolFactory{evictionInterval=PT0S, leasingStrategy=fifo, maxConnections=500, maxIdleTime=-1, maxLifeTime=-1, metricsEnabled=false, pendingAcquireMaxCount=1000, pendingAcquireTimeout=45000}] for [localhost/<unresolved>:8082]
2025-02-28 13:11:33 [] DEBUG r.n.r.PooledConnectionProvider - [f77f27f0] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:11:33 [] DEBUG r.netty.transport.TransportConfig - [f77f27f0] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-28 13:11:33 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 13:11:33 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 13:11:33 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 13:11:33 [] DEBUG r.netty.transport.TransportConnector - [f77f27f0] Connecting to [localhost/127.0.0.1:8082].
2025-02-28 13:11:33 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f77f27f0, L:/127.0.0.1:57591 - R:localhost/127.0.0.1:8082] Registering pool release on close event for channel
2025-02-28 13:11:33 [] DEBUG r.n.r.PooledConnectionProvider - [f77f27f0, L:/127.0.0.1:57591 - R:localhost/127.0.0.1:8082] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:11:33 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f77f27f0, L:/127.0.0.1:57591 - R:localhost/127.0.0.1:8082] onStateChange(PooledConnection{channel=[id: 0xf77f27f0, L:/127.0.0.1:57591 - R:localhost/127.0.0.1:8082]}, [connected])
2025-02-28 13:11:33 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f77f27f0-1, L:/127.0.0.1:57591 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0xf77f27f0, L:/127.0.0.1:57591 - R:localhost/127.0.0.1:8082]}}, [configured])
2025-02-28 13:11:33 [] DEBUG r.n.http.client.HttpClientConnect - [f77f27f0-1, L:/127.0.0.1:57591 - R:localhost/127.0.0.1:8082] Handler is being applied: {uri=http://localhost:8082/users, method=GET}
2025-02-28 13:11:33 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f77f27f0-1, L:/127.0.0.1:57591 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0xf77f27f0, L:/127.0.0.1:57591 - R:localhost/127.0.0.1:8082]}}, [request_prepared])
2025-02-28 13:11:33 [] DEBUG r.n.http.client.HttpClientOperations - [f77f27f0-1, L:/127.0.0.1:57591 - R:localhost/127.0.0.1:8082] No sendHeaders() called before complete, sending zero-length header
2025-02-28 13:11:33 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f77f27f0-1, L:/127.0.0.1:57591 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0xf77f27f0, L:/127.0.0.1:57591 - R:localhost/127.0.0.1:8082]}}, [request_sent])
2025-02-28 13:11:33 [] DEBUG r.n.http.client.HttpClientOperations - [f77f27f0-1, L:/127.0.0.1:57591 - R:localhost/127.0.0.1:8082] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Content-Length: <filtered>
Date: <filtered>
2025-02-28 13:11:33 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f77f27f0-1, L:/127.0.0.1:57591 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0xf77f27f0, L:/127.0.0.1:57591 - R:localhost/127.0.0.1:8082]}}, [response_received])
2025-02-28 13:11:33 [] DEBUG r.n.http.client.HttpClientOperations - [f77f27f0-1, L:/127.0.0.1:57591 - R:localhost/127.0.0.1:8082] Received last HTTP packet
2025-02-28 13:11:33 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f77f27f0, L:/127.0.0.1:57591 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0xf77f27f0, L:/127.0.0.1:57591 - R:localhost/127.0.0.1:8082]}}, [response_completed])
2025-02-28 13:11:33 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f77f27f0, L:/127.0.0.1:57591 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0xf77f27f0, L:/127.0.0.1:57591 - R:localhost/127.0.0.1:8082]}}, [disconnecting])
2025-02-28 13:11:33 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f77f27f0, L:/127.0.0.1:57591 - R:localhost/127.0.0.1:8082] Releasing channel
2025-02-28 13:11:33 [] DEBUG r.n.r.PooledConnectionProvider - [f77f27f0, L:/127.0.0.1:57591 - R:localhost/127.0.0.1:8082] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-28 13:11:33 [] DEBUG reactor.netty.channel.FluxReceive - [ccb3f46f, L:/127.0.0.1:57591 ! R:localhost/127.0.0.1:8082] [terminated=true, cancelled=false, pending=1, error=null]: subscribing inbound receiver
2025-02-28 13:11:44 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 13:11:44 [5d7f8256-7db2-4986-b9bf-83409fc0f6e3] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 13:11:44 [5d7f8256-7db2-4986-b9bf-83409fc0f6e3] DEBUG r.n.r.PooledConnectionProvider - Creating a new [http] client pool [PoolFactory{evictionInterval=PT0S, leasingStrategy=fifo, maxConnections=500, maxIdleTime=-1, maxLifeTime=-1, metricsEnabled=false, pendingAcquireMaxCount=1000, pendingAcquireTimeout=45000}] for [localhost/<unresolved>:8081]
2025-02-28 13:11:44 [] DEBUG r.n.r.PooledConnectionProvider - [2076aaa5] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:11:44 [] DEBUG r.netty.transport.TransportConfig - [2076aaa5] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-28 13:11:44 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 13:11:44 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 13:11:44 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 13:11:44 [] DEBUG r.netty.transport.TransportConnector - [2076aaa5] Connecting to [localhost/127.0.0.1:8081].
2025-02-28 13:11:44 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [2076aaa5, L:/127.0.0.1:57596 - R:localhost/127.0.0.1:8081] Registering pool release on close event for channel
2025-02-28 13:11:44 [] DEBUG r.n.r.PooledConnectionProvider - [2076aaa5, L:/127.0.0.1:57596 - R:localhost/127.0.0.1:8081] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:11:44 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [2076aaa5, L:/127.0.0.1:57596 - R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x2076aaa5, L:/127.0.0.1:57596 - R:localhost/127.0.0.1:8081]}, [connected])
2025-02-28 13:11:44 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [2076aaa5-1, L:/127.0.0.1:57596 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0x2076aaa5, L:/127.0.0.1:57596 - R:localhost/127.0.0.1:8081]}}, [configured])
2025-02-28 13:11:44 [] DEBUG r.n.http.client.HttpClientConnect - [2076aaa5-1, L:/127.0.0.1:57596 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY, method=GET}
2025-02-28 13:11:44 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [2076aaa5-1, L:/127.0.0.1:57596 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x2076aaa5, L:/127.0.0.1:57596 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 13:11:44 [] DEBUG r.n.http.client.HttpClientOperations - [2076aaa5-1, L:/127.0.0.1:57596 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 13:11:44 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [2076aaa5-1, L:/127.0.0.1:57596 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x2076aaa5, L:/127.0.0.1:57596 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 13:11:44 [] DEBUG r.n.http.client.HttpClientOperations - [2076aaa5-1, L:/127.0.0.1:57596 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-28 13:11:44 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [2076aaa5-1, L:/127.0.0.1:57596 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x2076aaa5, L:/127.0.0.1:57596 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 13:11:44 [] DEBUG reactor.netty.channel.FluxReceive - [2076aaa5-1, L:/127.0.0.1:57596 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=1, error=null]: subscribing inbound receiver
2025-02-28 13:11:44 [] DEBUG r.n.http.client.HttpClientOperations - [2076aaa5-1, L:/127.0.0.1:57596 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 13:11:44 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [2076aaa5, L:/127.0.0.1:57596 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x2076aaa5, L:/127.0.0.1:57596 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 13:11:44 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [2076aaa5, L:/127.0.0.1:57596 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x2076aaa5, L:/127.0.0.1:57596 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 13:11:44 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [2076aaa5, L:/127.0.0.1:57596 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-28 13:11:44 [] DEBUG r.n.r.PooledConnectionProvider - [2076aaa5, L:/127.0.0.1:57596 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-28 13:11:50 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 13:11:50 [188bf6cf-e9ff-4c91-b91c-3f0a0c71601e] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 13:11:50 [188bf6cf-e9ff-4c91-b91c-3f0a0c71601e] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /users
2025-02-28 13:11:50 [] DEBUG r.n.r.PooledConnectionProvider - [fffff40c, L:/127.0.0.1:57590 - R:localhost/127.0.0.1:8081] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:11:50 [] DEBUG r.n.http.client.HttpClientConnect - [fffff40c-2, L:/127.0.0.1:57590 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY, method=GET}
2025-02-28 13:11:50 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [fffff40c-2, L:/127.0.0.1:57590 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xfffff40c, L:/127.0.0.1:57590 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 13:11:50 [] DEBUG r.n.http.client.HttpClientOperations - [fffff40c-2, L:/127.0.0.1:57590 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 13:11:50 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [fffff40c-2, L:/127.0.0.1:57590 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xfffff40c, L:/127.0.0.1:57590 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 13:11:50 [] DEBUG r.n.http.client.HttpClientOperations - [fffff40c-2, L:/127.0.0.1:57590 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-28 13:11:50 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [fffff40c-2, L:/127.0.0.1:57590 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xfffff40c, L:/127.0.0.1:57590 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 13:11:50 [] DEBUG reactor.netty.channel.FluxReceive - [fffff40c-2, L:/127.0.0.1:57590 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-28 13:11:50 [] DEBUG r.n.http.client.HttpClientOperations - [fffff40c-2, L:/127.0.0.1:57590 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 13:11:50 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [fffff40c, L:/127.0.0.1:57590 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xfffff40c, L:/127.0.0.1:57590 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 13:11:50 [188bf6cf-e9ff-4c91-b91c-3f0a0c71601e] INFO  c.c.c.g.c.c.ValidationInterceptor - ✅ Token Validated! Forwarding request...
2025-02-28 13:11:50 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [fffff40c, L:/127.0.0.1:57590 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xfffff40c, L:/127.0.0.1:57590 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 13:11:50 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [fffff40c, L:/127.0.0.1:57590 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-28 13:11:50 [] DEBUG r.n.r.PooledConnectionProvider - [fffff40c, L:/127.0.0.1:57590 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-28 13:11:50 [] DEBUG r.n.r.PooledConnectionProvider - [f77f27f0, L:/127.0.0.1:57591 - R:localhost/127.0.0.1:8082] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:11:50 [] DEBUG r.n.http.client.HttpClientConnect - [f77f27f0-2, L:/127.0.0.1:57591 - R:localhost/127.0.0.1:8082] Handler is being applied: {uri=http://localhost:8082/users, method=GET}
2025-02-28 13:11:50 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f77f27f0-2, L:/127.0.0.1:57591 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0xf77f27f0, L:/127.0.0.1:57591 - R:localhost/127.0.0.1:8082]}}, [request_prepared])
2025-02-28 13:11:50 [] DEBUG r.n.http.client.HttpClientOperations - [f77f27f0-2, L:/127.0.0.1:57591 - R:localhost/127.0.0.1:8082] No sendHeaders() called before complete, sending zero-length header
2025-02-28 13:11:50 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f77f27f0-2, L:/127.0.0.1:57591 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0xf77f27f0, L:/127.0.0.1:57591 - R:localhost/127.0.0.1:8082]}}, [request_sent])
2025-02-28 13:11:50 [] DEBUG r.n.http.client.HttpClientOperations - [f77f27f0-2, L:/127.0.0.1:57591 - R:localhost/127.0.0.1:8082] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Content-Length: <filtered>
Date: <filtered>
2025-02-28 13:11:50 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f77f27f0-2, L:/127.0.0.1:57591 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0xf77f27f0, L:/127.0.0.1:57591 - R:localhost/127.0.0.1:8082]}}, [response_received])
2025-02-28 13:11:50 [] DEBUG r.n.http.client.HttpClientOperations - [f77f27f0-2, L:/127.0.0.1:57591 - R:localhost/127.0.0.1:8082] Received last HTTP packet
2025-02-28 13:11:50 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f77f27f0, L:/127.0.0.1:57591 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0xf77f27f0, L:/127.0.0.1:57591 - R:localhost/127.0.0.1:8082]}}, [response_completed])
2025-02-28 13:11:50 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f77f27f0, L:/127.0.0.1:57591 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0xf77f27f0, L:/127.0.0.1:57591 - R:localhost/127.0.0.1:8082]}}, [disconnecting])
2025-02-28 13:11:50 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f77f27f0, L:/127.0.0.1:57591 - R:localhost/127.0.0.1:8082] Releasing channel
2025-02-28 13:11:50 [] DEBUG r.n.r.PooledConnectionProvider - [f77f27f0, L:/127.0.0.1:57591 - R:localhost/127.0.0.1:8082] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-28 13:11:50 [] DEBUG reactor.netty.channel.FluxReceive - [ec2e75f9, L:/127.0.0.1:57591 ! R:localhost/127.0.0.1:8082] [terminated=true, cancelled=false, pending=1, error=null]: subscribing inbound receiver
2025-02-28 13:11:55 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 13:11:55 [820c7aa5-935a-46b9-9dce-1caea7fae3dc] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 13:11:55 [820c7aa5-935a-46b9-9dce-1caea7fae3dc] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /users
2025-02-28 13:11:55 [] DEBUG r.n.r.PooledConnectionProvider - [fffff40c, L:/127.0.0.1:57590 - R:localhost/127.0.0.1:8081] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:11:55 [] DEBUG r.n.http.client.HttpClientConnect - [fffff40c-3, L:/127.0.0.1:57590 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY, method=GET}
2025-02-28 13:11:55 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [fffff40c-3, L:/127.0.0.1:57590 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xfffff40c, L:/127.0.0.1:57590 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 13:11:55 [] DEBUG r.n.http.client.HttpClientOperations - [fffff40c-3, L:/127.0.0.1:57590 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 13:11:55 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [fffff40c-3, L:/127.0.0.1:57590 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xfffff40c, L:/127.0.0.1:57590 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 13:11:55 [] DEBUG r.n.http.client.HttpClientOperations - [fffff40c-3, L:/127.0.0.1:57590 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-28 13:11:55 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [fffff40c-3, L:/127.0.0.1:57590 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xfffff40c, L:/127.0.0.1:57590 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 13:11:55 [] DEBUG reactor.netty.channel.FluxReceive - [fffff40c-3, L:/127.0.0.1:57590 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-28 13:11:55 [] DEBUG r.n.http.client.HttpClientOperations - [fffff40c-3, L:/127.0.0.1:57590 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 13:11:55 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [fffff40c, L:/127.0.0.1:57590 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xfffff40c, L:/127.0.0.1:57590 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 13:11:55 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [fffff40c, L:/127.0.0.1:57590 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xfffff40c, L:/127.0.0.1:57590 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 13:11:55 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [fffff40c, L:/127.0.0.1:57590 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-28 13:11:55 [820c7aa5-935a-46b9-9dce-1caea7fae3dc] INFO  c.c.c.g.c.c.ValidationInterceptor - ✅ Token Validated! Forwarding request...
2025-02-28 13:11:55 [] DEBUG r.n.r.PooledConnectionProvider - [fffff40c, L:/127.0.0.1:57590 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-28 13:11:55 [] DEBUG r.n.r.PooledConnectionProvider - [f77f27f0, L:/127.0.0.1:57591 - R:localhost/127.0.0.1:8082] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:11:55 [] DEBUG r.n.http.client.HttpClientConnect - [f77f27f0-3, L:/127.0.0.1:57591 - R:localhost/127.0.0.1:8082] Handler is being applied: {uri=http://localhost:8082/users, method=GET}
2025-02-28 13:11:55 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f77f27f0-3, L:/127.0.0.1:57591 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0xf77f27f0, L:/127.0.0.1:57591 - R:localhost/127.0.0.1:8082]}}, [request_prepared])
2025-02-28 13:11:55 [] DEBUG r.n.http.client.HttpClientOperations - [f77f27f0-3, L:/127.0.0.1:57591 - R:localhost/127.0.0.1:8082] No sendHeaders() called before complete, sending zero-length header
2025-02-28 13:11:55 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f77f27f0-3, L:/127.0.0.1:57591 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0xf77f27f0, L:/127.0.0.1:57591 - R:localhost/127.0.0.1:8082]}}, [request_sent])
2025-02-28 13:11:55 [] DEBUG r.n.http.client.HttpClientOperations - [f77f27f0-3, L:/127.0.0.1:57591 - R:localhost/127.0.0.1:8082] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Content-Length: <filtered>
Date: <filtered>
2025-02-28 13:11:55 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f77f27f0-3, L:/127.0.0.1:57591 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0xf77f27f0, L:/127.0.0.1:57591 - R:localhost/127.0.0.1:8082]}}, [response_received])
2025-02-28 13:11:55 [] DEBUG r.n.http.client.HttpClientOperations - [f77f27f0-3, L:/127.0.0.1:57591 - R:localhost/127.0.0.1:8082] Received last HTTP packet
2025-02-28 13:11:55 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f77f27f0, L:/127.0.0.1:57591 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0xf77f27f0, L:/127.0.0.1:57591 - R:localhost/127.0.0.1:8082]}}, [response_completed])
2025-02-28 13:11:55 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f77f27f0, L:/127.0.0.1:57591 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0xf77f27f0, L:/127.0.0.1:57591 - R:localhost/127.0.0.1:8082]}}, [disconnecting])
2025-02-28 13:11:55 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f77f27f0, L:/127.0.0.1:57591 - R:localhost/127.0.0.1:8082] Releasing channel
2025-02-28 13:11:55 [] DEBUG r.n.r.PooledConnectionProvider - [f77f27f0, L:/127.0.0.1:57591 - R:localhost/127.0.0.1:8082] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-28 13:11:55 [] DEBUG reactor.netty.channel.FluxReceive - [b2c2fc08, L:/127.0.0.1:57591 ! R:localhost/127.0.0.1:8082] [terminated=true, cancelled=false, pending=1, error=null]: subscribing inbound receiver
2025-02-28 13:12:06 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 13:12:06 [26366b30-0460-4aff-8dc0-a53a496c1157] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 13:12:06 [] DEBUG r.n.r.PooledConnectionProvider - [2076aaa5, L:/127.0.0.1:57596 - R:localhost/127.0.0.1:8081] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:12:06 [] DEBUG r.n.http.client.HttpClientConnect - [2076aaa5-2, L:/127.0.0.1:57596 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY, method=GET}
2025-02-28 13:12:06 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [2076aaa5-2, L:/127.0.0.1:57596 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x2076aaa5, L:/127.0.0.1:57596 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 13:12:06 [] DEBUG r.n.http.client.HttpClientOperations - [2076aaa5-2, L:/127.0.0.1:57596 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 13:12:06 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [2076aaa5-2, L:/127.0.0.1:57596 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x2076aaa5, L:/127.0.0.1:57596 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 13:12:06 [] DEBUG r.n.http.client.HttpClientOperations - [2076aaa5-2, L:/127.0.0.1:57596 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-28 13:12:06 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [2076aaa5-2, L:/127.0.0.1:57596 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x2076aaa5, L:/127.0.0.1:57596 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 13:12:06 [] DEBUG reactor.netty.channel.FluxReceive - [2076aaa5-2, L:/127.0.0.1:57596 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=1, error=null]: subscribing inbound receiver
2025-02-28 13:12:06 [] DEBUG r.n.http.client.HttpClientOperations - [2076aaa5-2, L:/127.0.0.1:57596 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 13:12:06 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [2076aaa5, L:/127.0.0.1:57596 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x2076aaa5, L:/127.0.0.1:57596 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 13:12:06 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [2076aaa5, L:/127.0.0.1:57596 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x2076aaa5, L:/127.0.0.1:57596 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 13:12:06 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [2076aaa5, L:/127.0.0.1:57596 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-28 13:12:06 [] DEBUG r.n.r.PooledConnectionProvider - [2076aaa5, L:/127.0.0.1:57596 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-28 13:12:11 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 13:12:11 [2ec764dd-6ab8-49b4-899a-1d212ed0e08b] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 13:12:11 [] DEBUG r.n.r.PooledConnectionProvider - [2076aaa5, L:/127.0.0.1:57596 - R:localhost/127.0.0.1:8081] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:12:11 [] DEBUG r.n.http.client.HttpClientConnect - [2076aaa5-3, L:/127.0.0.1:57596 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY, method=GET}
2025-02-28 13:12:11 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [2076aaa5-3, L:/127.0.0.1:57596 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x2076aaa5, L:/127.0.0.1:57596 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 13:12:11 [] DEBUG r.n.http.client.HttpClientOperations - [2076aaa5-3, L:/127.0.0.1:57596 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 13:12:11 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [2076aaa5-3, L:/127.0.0.1:57596 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x2076aaa5, L:/127.0.0.1:57596 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 13:12:11 [] DEBUG r.n.http.client.HttpClientOperations - [2076aaa5-3, L:/127.0.0.1:57596 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-28 13:12:11 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [2076aaa5-3, L:/127.0.0.1:57596 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x2076aaa5, L:/127.0.0.1:57596 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 13:12:11 [] DEBUG reactor.netty.channel.FluxReceive - [2076aaa5-3, L:/127.0.0.1:57596 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=1, error=null]: subscribing inbound receiver
2025-02-28 13:12:11 [] DEBUG r.n.http.client.HttpClientOperations - [2076aaa5-3, L:/127.0.0.1:57596 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 13:12:11 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [2076aaa5, L:/127.0.0.1:57596 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x2076aaa5, L:/127.0.0.1:57596 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 13:12:11 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [2076aaa5, L:/127.0.0.1:57596 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x2076aaa5, L:/127.0.0.1:57596 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 13:12:11 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [2076aaa5, L:/127.0.0.1:57596 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-28 13:12:11 [] DEBUG r.n.r.PooledConnectionProvider - [2076aaa5, L:/127.0.0.1:57596 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-28 13:12:13 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 13:12:13 [5d12b233-4623-4b3b-8343-3bbd7c36d130] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 13:12:13 [] DEBUG r.n.r.PooledConnectionProvider - [2076aaa5, L:/127.0.0.1:57596 - R:localhost/127.0.0.1:8081] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:12:13 [] DEBUG r.n.http.client.HttpClientConnect - [2076aaa5-4, L:/127.0.0.1:57596 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY, method=GET}
2025-02-28 13:12:13 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [2076aaa5-4, L:/127.0.0.1:57596 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x2076aaa5, L:/127.0.0.1:57596 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 13:12:13 [] DEBUG r.n.http.client.HttpClientOperations - [2076aaa5-4, L:/127.0.0.1:57596 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 13:12:13 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [2076aaa5-4, L:/127.0.0.1:57596 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x2076aaa5, L:/127.0.0.1:57596 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 13:12:13 [] DEBUG r.n.http.client.HttpClientOperations - [2076aaa5-4, L:/127.0.0.1:57596 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-28 13:12:13 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [2076aaa5-4, L:/127.0.0.1:57596 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x2076aaa5, L:/127.0.0.1:57596 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 13:12:13 [] DEBUG reactor.netty.channel.FluxReceive - [2076aaa5-4, L:/127.0.0.1:57596 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=1, error=null]: subscribing inbound receiver
2025-02-28 13:12:13 [] DEBUG r.n.http.client.HttpClientOperations - [2076aaa5-4, L:/127.0.0.1:57596 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 13:12:13 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [2076aaa5, L:/127.0.0.1:57596 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x2076aaa5, L:/127.0.0.1:57596 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 13:12:13 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [2076aaa5, L:/127.0.0.1:57596 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x2076aaa5, L:/127.0.0.1:57596 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 13:12:13 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [2076aaa5, L:/127.0.0.1:57596 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-28 13:12:13 [] DEBUG r.n.r.PooledConnectionProvider - [2076aaa5, L:/127.0.0.1:57596 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-28 13:12:19 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 13:12:19 [6f648c37-5408-4d13-a951-ac9da4e58826] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 13:12:19 [] DEBUG r.n.r.PooledConnectionProvider - [2076aaa5, L:/127.0.0.1:57596 - R:localhost/127.0.0.1:8081] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:12:19 [] DEBUG r.n.http.client.HttpClientConnect - [2076aaa5-5, L:/127.0.0.1:57596 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY, method=GET}
2025-02-28 13:12:19 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [2076aaa5-5, L:/127.0.0.1:57596 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x2076aaa5, L:/127.0.0.1:57596 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 13:12:19 [] DEBUG r.n.http.client.HttpClientOperations - [2076aaa5-5, L:/127.0.0.1:57596 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 13:12:19 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [2076aaa5-5, L:/127.0.0.1:57596 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x2076aaa5, L:/127.0.0.1:57596 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 13:12:19 [] DEBUG r.n.http.client.HttpClientOperations - [2076aaa5-5, L:/127.0.0.1:57596 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-28 13:12:19 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [2076aaa5-5, L:/127.0.0.1:57596 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x2076aaa5, L:/127.0.0.1:57596 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 13:12:19 [] DEBUG reactor.netty.channel.FluxReceive - [2076aaa5-5, L:/127.0.0.1:57596 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=1, error=null]: subscribing inbound receiver
2025-02-28 13:12:19 [] DEBUG r.n.http.client.HttpClientOperations - [2076aaa5-5, L:/127.0.0.1:57596 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 13:12:19 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [2076aaa5, L:/127.0.0.1:57596 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x2076aaa5, L:/127.0.0.1:57596 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 13:12:19 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [2076aaa5, L:/127.0.0.1:57596 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x2076aaa5, L:/127.0.0.1:57596 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 13:12:19 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [2076aaa5, L:/127.0.0.1:57596 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-28 13:12:19 [] DEBUG r.n.r.PooledConnectionProvider - [2076aaa5, L:/127.0.0.1:57596 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-28 13:12:28 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 13:12:28 [483ffd5a-6956-4f4b-b1da-ee43cf5f8abf] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 13:12:28 [483ffd5a-6956-4f4b-b1da-ee43cf5f8abf] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /users
2025-02-28 13:12:28 [] DEBUG r.n.r.PooledConnectionProvider - [fffff40c, L:/127.0.0.1:57590 - R:localhost/127.0.0.1:8081] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:12:28 [] DEBUG r.n.http.client.HttpClientConnect - [fffff40c-4, L:/127.0.0.1:57590 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY, method=GET}
2025-02-28 13:12:28 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [fffff40c-4, L:/127.0.0.1:57590 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xfffff40c, L:/127.0.0.1:57590 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 13:12:28 [] DEBUG r.n.http.client.HttpClientOperations - [fffff40c-4, L:/127.0.0.1:57590 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 13:12:28 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [fffff40c-4, L:/127.0.0.1:57590 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xfffff40c, L:/127.0.0.1:57590 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 13:12:28 [] DEBUG r.n.http.client.HttpClientOperations - [fffff40c-4, L:/127.0.0.1:57590 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-28 13:12:28 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [fffff40c-4, L:/127.0.0.1:57590 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xfffff40c, L:/127.0.0.1:57590 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 13:12:28 [] DEBUG reactor.netty.channel.FluxReceive - [fffff40c-4, L:/127.0.0.1:57590 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-28 13:12:28 [] DEBUG r.n.http.client.HttpClientOperations - [fffff40c-4, L:/127.0.0.1:57590 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 13:12:28 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [fffff40c, L:/127.0.0.1:57590 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xfffff40c, L:/127.0.0.1:57590 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 13:12:28 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [fffff40c, L:/127.0.0.1:57590 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xfffff40c, L:/127.0.0.1:57590 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 13:12:28 [483ffd5a-6956-4f4b-b1da-ee43cf5f8abf] INFO  c.c.c.g.c.c.ValidationInterceptor - ✅ Token Validated! Forwarding request...
2025-02-28 13:12:28 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [fffff40c, L:/127.0.0.1:57590 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-28 13:12:28 [] DEBUG r.n.r.PooledConnectionProvider - [fffff40c, L:/127.0.0.1:57590 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-28 13:12:28 [] DEBUG r.n.r.PooledConnectionProvider - [f77f27f0, L:/127.0.0.1:57591 - R:localhost/127.0.0.1:8082] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:12:28 [] DEBUG r.n.http.client.HttpClientConnect - [f77f27f0-4, L:/127.0.0.1:57591 - R:localhost/127.0.0.1:8082] Handler is being applied: {uri=http://localhost:8082/users, method=GET}
2025-02-28 13:12:28 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f77f27f0-4, L:/127.0.0.1:57591 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0xf77f27f0, L:/127.0.0.1:57591 - R:localhost/127.0.0.1:8082]}}, [request_prepared])
2025-02-28 13:12:28 [] DEBUG r.n.http.client.HttpClientOperations - [f77f27f0-4, L:/127.0.0.1:57591 - R:localhost/127.0.0.1:8082] No sendHeaders() called before complete, sending zero-length header
2025-02-28 13:12:28 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f77f27f0-4, L:/127.0.0.1:57591 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0xf77f27f0, L:/127.0.0.1:57591 - R:localhost/127.0.0.1:8082]}}, [request_sent])
2025-02-28 13:12:28 [] DEBUG r.n.http.client.HttpClientOperations - [f77f27f0-4, L:/127.0.0.1:57591 - R:localhost/127.0.0.1:8082] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Content-Length: <filtered>
Date: <filtered>
2025-02-28 13:12:28 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f77f27f0-4, L:/127.0.0.1:57591 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0xf77f27f0, L:/127.0.0.1:57591 - R:localhost/127.0.0.1:8082]}}, [response_received])
2025-02-28 13:12:28 [] DEBUG r.n.http.client.HttpClientOperations - [f77f27f0-4, L:/127.0.0.1:57591 - R:localhost/127.0.0.1:8082] Received last HTTP packet
2025-02-28 13:12:28 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f77f27f0, L:/127.0.0.1:57591 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0xf77f27f0, L:/127.0.0.1:57591 - R:localhost/127.0.0.1:8082]}}, [response_completed])
2025-02-28 13:12:28 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f77f27f0, L:/127.0.0.1:57591 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0xf77f27f0, L:/127.0.0.1:57591 - R:localhost/127.0.0.1:8082]}}, [disconnecting])
2025-02-28 13:12:28 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f77f27f0, L:/127.0.0.1:57591 - R:localhost/127.0.0.1:8082] Releasing channel
2025-02-28 13:12:28 [] DEBUG r.n.r.PooledConnectionProvider - [f77f27f0, L:/127.0.0.1:57591 - R:localhost/127.0.0.1:8082] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-28 13:12:28 [] DEBUG reactor.netty.channel.FluxReceive - [91179d9e, L:/127.0.0.1:57591 ! R:localhost/127.0.0.1:8082] [terminated=true, cancelled=false, pending=1, error=null]: subscribing inbound receiver
2025-02-28 13:12:32 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 13:12:32 [fbde93e6-c4b1-4cf3-a4ee-6150674f1728] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 13:12:32 [fbde93e6-c4b1-4cf3-a4ee-6150674f1728] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /users
2025-02-28 13:12:32 [] DEBUG r.n.r.PooledConnectionProvider - [fffff40c, L:/127.0.0.1:57590 - R:localhost/127.0.0.1:8081] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:12:32 [] DEBUG r.n.http.client.HttpClientConnect - [fffff40c-5, L:/127.0.0.1:57590 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=null, method=GET}
2025-02-28 13:12:32 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [fffff40c-5, L:/127.0.0.1:57590 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xfffff40c, L:/127.0.0.1:57590 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 13:12:32 [] DEBUG r.n.http.client.HttpClientOperations - [fffff40c-5, L:/127.0.0.1:57590 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 13:12:32 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [fffff40c-5, L:/127.0.0.1:57590 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xfffff40c, L:/127.0.0.1:57590 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 13:12:32 [] DEBUG r.n.http.client.HttpClientOperations - [fffff40c-5, L:/127.0.0.1:57590 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-28 13:12:32 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [fffff40c-5, L:/127.0.0.1:57590 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xfffff40c, L:/127.0.0.1:57590 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 13:12:32 [] DEBUG reactor.netty.channel.FluxReceive - [fffff40c-5, L:/127.0.0.1:57590 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-28 13:12:32 [] DEBUG r.n.http.client.HttpClientOperations - [fffff40c-5, L:/127.0.0.1:57590 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 13:12:32 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [fffff40c, L:/127.0.0.1:57590 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xfffff40c, L:/127.0.0.1:57590 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 13:12:32 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [fffff40c, L:/127.0.0.1:57590 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xfffff40c, L:/127.0.0.1:57590 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 13:12:32 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [fffff40c, L:/127.0.0.1:57590 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-28 13:12:32 [fbde93e6-c4b1-4cf3-a4ee-6150674f1728] INFO  c.c.c.g.c.c.ValidationInterceptor - ✅ Token Validated! Forwarding request...
2025-02-28 13:12:32 [] DEBUG r.n.r.PooledConnectionProvider - [fffff40c, L:/127.0.0.1:57590 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-28 13:12:32 [] DEBUG r.n.r.PooledConnectionProvider - [f77f27f0, L:/127.0.0.1:57591 - R:localhost/127.0.0.1:8082] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:12:32 [] DEBUG r.n.http.client.HttpClientConnect - [f77f27f0-5, L:/127.0.0.1:57591 - R:localhost/127.0.0.1:8082] Handler is being applied: {uri=http://localhost:8082/users, method=GET}
2025-02-28 13:12:32 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f77f27f0-5, L:/127.0.0.1:57591 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0xf77f27f0, L:/127.0.0.1:57591 - R:localhost/127.0.0.1:8082]}}, [request_prepared])
2025-02-28 13:12:32 [] DEBUG r.n.http.client.HttpClientOperations - [f77f27f0-5, L:/127.0.0.1:57591 - R:localhost/127.0.0.1:8082] No sendHeaders() called before complete, sending zero-length header
2025-02-28 13:12:32 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f77f27f0-5, L:/127.0.0.1:57591 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0xf77f27f0, L:/127.0.0.1:57591 - R:localhost/127.0.0.1:8082]}}, [request_sent])
2025-02-28 13:12:32 [] DEBUG r.n.http.client.HttpClientOperations - [f77f27f0-5, L:/127.0.0.1:57591 - R:localhost/127.0.0.1:8082] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Content-Length: <filtered>
Date: <filtered>
2025-02-28 13:12:32 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f77f27f0-5, L:/127.0.0.1:57591 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0xf77f27f0, L:/127.0.0.1:57591 - R:localhost/127.0.0.1:8082]}}, [response_received])
2025-02-28 13:12:32 [] DEBUG r.n.http.client.HttpClientOperations - [f77f27f0-5, L:/127.0.0.1:57591 - R:localhost/127.0.0.1:8082] Received last HTTP packet
2025-02-28 13:12:32 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f77f27f0, L:/127.0.0.1:57591 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0xf77f27f0, L:/127.0.0.1:57591 - R:localhost/127.0.0.1:8082]}}, [response_completed])
2025-02-28 13:12:32 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f77f27f0, L:/127.0.0.1:57591 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0xf77f27f0, L:/127.0.0.1:57591 - R:localhost/127.0.0.1:8082]}}, [disconnecting])
2025-02-28 13:12:32 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f77f27f0, L:/127.0.0.1:57591 - R:localhost/127.0.0.1:8082] Releasing channel
2025-02-28 13:12:32 [] DEBUG r.n.r.PooledConnectionProvider - [f77f27f0, L:/127.0.0.1:57591 - R:localhost/127.0.0.1:8082] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-28 13:12:32 [] DEBUG reactor.netty.channel.FluxReceive - [7c9861b8, L:/127.0.0.1:57591 ! R:localhost/127.0.0.1:8082] [terminated=true, cancelled=false, pending=1, error=null]: subscribing inbound receiver
2025-02-28 13:12:36 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 13:12:36 [bb64e351-ddcf-47e1-be35-e361b16d632e] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 13:12:36 [bb64e351-ddcf-47e1-be35-e361b16d632e] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /users
2025-02-28 13:12:36 [] DEBUG r.n.r.PooledConnectionProvider - [fffff40c, L:/127.0.0.1:57590 - R:localhost/127.0.0.1:8081] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:12:36 [] DEBUG r.n.http.client.HttpClientConnect - [fffff40c-6, L:/127.0.0.1:57590 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=null, method=GET}
2025-02-28 13:12:36 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [fffff40c-6, L:/127.0.0.1:57590 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xfffff40c, L:/127.0.0.1:57590 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 13:12:36 [] DEBUG r.n.http.client.HttpClientOperations - [fffff40c-6, L:/127.0.0.1:57590 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 13:12:36 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [fffff40c-6, L:/127.0.0.1:57590 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xfffff40c, L:/127.0.0.1:57590 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 13:12:36 [] DEBUG r.n.http.client.HttpClientOperations - [fffff40c-6, L:/127.0.0.1:57590 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-28 13:12:36 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [fffff40c-6, L:/127.0.0.1:57590 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xfffff40c, L:/127.0.0.1:57590 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 13:12:36 [] DEBUG reactor.netty.channel.FluxReceive - [fffff40c-6, L:/127.0.0.1:57590 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-28 13:12:36 [] DEBUG r.n.http.client.HttpClientOperations - [fffff40c-6, L:/127.0.0.1:57590 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 13:12:36 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [fffff40c, L:/127.0.0.1:57590 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xfffff40c, L:/127.0.0.1:57590 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 13:12:36 [bb64e351-ddcf-47e1-be35-e361b16d632e] INFO  c.c.c.g.c.c.ValidationInterceptor - ✅ Token Validated! Forwarding request...
2025-02-28 13:12:36 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [fffff40c, L:/127.0.0.1:57590 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xfffff40c, L:/127.0.0.1:57590 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 13:12:36 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [fffff40c, L:/127.0.0.1:57590 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-28 13:12:36 [] DEBUG r.n.r.PooledConnectionProvider - [fffff40c, L:/127.0.0.1:57590 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-28 13:12:36 [] DEBUG r.n.r.PooledConnectionProvider - [f77f27f0, L:/127.0.0.1:57591 - R:localhost/127.0.0.1:8082] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:12:36 [] DEBUG r.n.http.client.HttpClientConnect - [f77f27f0-6, L:/127.0.0.1:57591 - R:localhost/127.0.0.1:8082] Handler is being applied: {uri=http://localhost:8082/users, method=GET}
2025-02-28 13:12:36 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f77f27f0-6, L:/127.0.0.1:57591 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0xf77f27f0, L:/127.0.0.1:57591 - R:localhost/127.0.0.1:8082]}}, [request_prepared])
2025-02-28 13:12:36 [] DEBUG r.n.http.client.HttpClientOperations - [f77f27f0-6, L:/127.0.0.1:57591 - R:localhost/127.0.0.1:8082] No sendHeaders() called before complete, sending zero-length header
2025-02-28 13:12:36 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f77f27f0-6, L:/127.0.0.1:57591 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0xf77f27f0, L:/127.0.0.1:57591 - R:localhost/127.0.0.1:8082]}}, [request_sent])
2025-02-28 13:12:36 [] DEBUG r.n.http.client.HttpClientOperations - [f77f27f0-6, L:/127.0.0.1:57591 - R:localhost/127.0.0.1:8082] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Content-Length: <filtered>
Date: <filtered>
2025-02-28 13:12:36 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f77f27f0-6, L:/127.0.0.1:57591 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0xf77f27f0, L:/127.0.0.1:57591 - R:localhost/127.0.0.1:8082]}}, [response_received])
2025-02-28 13:12:36 [] DEBUG r.n.http.client.HttpClientOperations - [f77f27f0-6, L:/127.0.0.1:57591 - R:localhost/127.0.0.1:8082] Received last HTTP packet
2025-02-28 13:12:36 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f77f27f0, L:/127.0.0.1:57591 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0xf77f27f0, L:/127.0.0.1:57591 - R:localhost/127.0.0.1:8082]}}, [response_completed])
2025-02-28 13:12:36 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f77f27f0, L:/127.0.0.1:57591 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0xf77f27f0, L:/127.0.0.1:57591 - R:localhost/127.0.0.1:8082]}}, [disconnecting])
2025-02-28 13:12:36 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f77f27f0, L:/127.0.0.1:57591 - R:localhost/127.0.0.1:8082] Releasing channel
2025-02-28 13:12:36 [] DEBUG r.n.r.PooledConnectionProvider - [f77f27f0, L:/127.0.0.1:57591 - R:localhost/127.0.0.1:8082] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-28 13:12:36 [] DEBUG reactor.netty.channel.FluxReceive - [656b07e0, L:/127.0.0.1:57591 ! R:localhost/127.0.0.1:8082] [terminated=true, cancelled=false, pending=1, error=null]: subscribing inbound receiver
2025-02-28 13:12:40 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 13:12:40 [7a3e1ac3-7980-4aae-9b6f-efbdc1e84578] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 13:12:40 [7a3e1ac3-7980-4aae-9b6f-efbdc1e84578] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /users
2025-02-28 13:12:40 [7a3e1ac3-7980-4aae-9b6f-efbdc1e84578] WARN  c.c.c.g.c.c.ValidationInterceptor - ❌ Missing Validation Token or OrgId!
2025-02-28 13:12:40 [] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /error
2025-02-28 13:12:40 [] WARN  c.c.c.g.c.c.ValidationInterceptor - ❌ Missing Validation Token or OrgId!
2025-02-28 13:12:52 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 13:12:52 [94a34bc3-8f2e-4b1f-b226-f4f62b5450e6] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 13:12:52 [94a34bc3-8f2e-4b1f-b226-f4f62b5450e6] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /users
2025-02-28 13:12:52 [] DEBUG r.n.r.PooledConnectionProvider - [fffff40c, L:/127.0.0.1:57590 - R:localhost/127.0.0.1:8081] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:12:52 [] DEBUG r.n.http.client.HttpClientConnect - [fffff40c-7, L:/127.0.0.1:57590 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY, method=GET}
2025-02-28 13:12:52 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [fffff40c-7, L:/127.0.0.1:57590 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xfffff40c, L:/127.0.0.1:57590 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 13:12:52 [] DEBUG r.n.http.client.HttpClientOperations - [fffff40c-7, L:/127.0.0.1:57590 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 13:12:52 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [fffff40c-7, L:/127.0.0.1:57590 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xfffff40c, L:/127.0.0.1:57590 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 13:12:52 [] DEBUG r.n.http.client.HttpClientOperations - [fffff40c-7, L:/127.0.0.1:57590 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-28 13:12:52 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [fffff40c-7, L:/127.0.0.1:57590 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xfffff40c, L:/127.0.0.1:57590 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 13:12:52 [] DEBUG reactor.netty.channel.FluxReceive - [fffff40c-7, L:/127.0.0.1:57590 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-28 13:12:52 [] DEBUG r.n.http.client.HttpClientOperations - [fffff40c-7, L:/127.0.0.1:57590 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 13:12:52 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [fffff40c, L:/127.0.0.1:57590 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xfffff40c, L:/127.0.0.1:57590 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 13:12:52 [94a34bc3-8f2e-4b1f-b226-f4f62b5450e6] INFO  c.c.c.g.c.c.ValidationInterceptor - ✅ Token Validated! Forwarding request...
2025-02-28 13:12:52 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [fffff40c, L:/127.0.0.1:57590 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xfffff40c, L:/127.0.0.1:57590 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 13:12:52 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [fffff40c, L:/127.0.0.1:57590 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-28 13:12:52 [] DEBUG r.n.r.PooledConnectionProvider - [fffff40c, L:/127.0.0.1:57590 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-28 13:12:52 [] DEBUG r.n.r.PooledConnectionProvider - [f77f27f0, L:/127.0.0.1:57591 - R:localhost/127.0.0.1:8082] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:12:52 [] DEBUG r.n.http.client.HttpClientConnect - [f77f27f0-7, L:/127.0.0.1:57591 - R:localhost/127.0.0.1:8082] Handler is being applied: {uri=http://localhost:8082/users, method=GET}
2025-02-28 13:12:52 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f77f27f0-7, L:/127.0.0.1:57591 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0xf77f27f0, L:/127.0.0.1:57591 - R:localhost/127.0.0.1:8082]}}, [request_prepared])
2025-02-28 13:12:52 [] DEBUG r.n.http.client.HttpClientOperations - [f77f27f0-7, L:/127.0.0.1:57591 - R:localhost/127.0.0.1:8082] No sendHeaders() called before complete, sending zero-length header
2025-02-28 13:12:52 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f77f27f0-7, L:/127.0.0.1:57591 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0xf77f27f0, L:/127.0.0.1:57591 - R:localhost/127.0.0.1:8082]}}, [request_sent])
2025-02-28 13:12:52 [] DEBUG r.n.http.client.HttpClientOperations - [f77f27f0-7, L:/127.0.0.1:57591 - R:localhost/127.0.0.1:8082] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Content-Length: <filtered>
Date: <filtered>
2025-02-28 13:12:52 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f77f27f0-7, L:/127.0.0.1:57591 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0xf77f27f0, L:/127.0.0.1:57591 - R:localhost/127.0.0.1:8082]}}, [response_received])
2025-02-28 13:12:52 [] DEBUG r.n.http.client.HttpClientOperations - [f77f27f0-7, L:/127.0.0.1:57591 - R:localhost/127.0.0.1:8082] Received last HTTP packet
2025-02-28 13:12:52 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f77f27f0, L:/127.0.0.1:57591 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0xf77f27f0, L:/127.0.0.1:57591 - R:localhost/127.0.0.1:8082]}}, [response_completed])
2025-02-28 13:12:52 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f77f27f0, L:/127.0.0.1:57591 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0xf77f27f0, L:/127.0.0.1:57591 - R:localhost/127.0.0.1:8082]}}, [disconnecting])
2025-02-28 13:12:52 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f77f27f0, L:/127.0.0.1:57591 - R:localhost/127.0.0.1:8082] Releasing channel
2025-02-28 13:12:52 [] DEBUG r.n.r.PooledConnectionProvider - [f77f27f0, L:/127.0.0.1:57591 - R:localhost/127.0.0.1:8082] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-28 13:12:52 [] DEBUG reactor.netty.channel.FluxReceive - [be9e75d2, L:/127.0.0.1:57591 ! R:localhost/127.0.0.1:8082] [terminated=true, cancelled=false, pending=1, error=null]: subscribing inbound receiver
2025-02-28 13:12:58 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 13:12:58 [14d6d3d8-b7a0-45f8-9314-de845a42f18f] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 13:12:58 [14d6d3d8-b7a0-45f8-9314-de845a42f18f] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /users
2025-02-28 13:12:58 [] DEBUG r.n.r.PooledConnectionProvider - [fffff40c, L:/127.0.0.1:57590 - R:localhost/127.0.0.1:8081] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:12:58 [] DEBUG r.n.http.client.HttpClientConnect - [fffff40c-8, L:/127.0.0.1:57590 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY, method=GET}
2025-02-28 13:12:58 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [fffff40c-8, L:/127.0.0.1:57590 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xfffff40c, L:/127.0.0.1:57590 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 13:12:58 [] DEBUG r.n.http.client.HttpClientOperations - [fffff40c-8, L:/127.0.0.1:57590 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 13:12:58 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [fffff40c-8, L:/127.0.0.1:57590 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xfffff40c, L:/127.0.0.1:57590 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 13:12:58 [] DEBUG r.n.http.client.HttpClientOperations - [fffff40c-8, L:/127.0.0.1:57590 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-28 13:12:58 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [fffff40c-8, L:/127.0.0.1:57590 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xfffff40c, L:/127.0.0.1:57590 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 13:12:58 [] DEBUG reactor.netty.channel.FluxReceive - [fffff40c-8, L:/127.0.0.1:57590 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-28 13:12:58 [] DEBUG r.n.http.client.HttpClientOperations - [fffff40c-8, L:/127.0.0.1:57590 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 13:12:58 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [fffff40c, L:/127.0.0.1:57590 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xfffff40c, L:/127.0.0.1:57590 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 13:12:58 [14d6d3d8-b7a0-45f8-9314-de845a42f18f] INFO  c.c.c.g.c.c.ValidationInterceptor - ✅ Token Validated! Forwarding request...
2025-02-28 13:12:58 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [fffff40c, L:/127.0.0.1:57590 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xfffff40c, L:/127.0.0.1:57590 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 13:12:58 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [fffff40c, L:/127.0.0.1:57590 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-28 13:12:58 [] DEBUG r.n.r.PooledConnectionProvider - [fffff40c, L:/127.0.0.1:57590 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-28 13:12:58 [] DEBUG r.n.r.PooledConnectionProvider - [f77f27f0, L:/127.0.0.1:57591 - R:localhost/127.0.0.1:8082] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:12:58 [] DEBUG r.n.http.client.HttpClientConnect - [f77f27f0-8, L:/127.0.0.1:57591 - R:localhost/127.0.0.1:8082] Handler is being applied: {uri=http://localhost:8082/users, method=GET}
2025-02-28 13:12:58 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f77f27f0-8, L:/127.0.0.1:57591 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0xf77f27f0, L:/127.0.0.1:57591 - R:localhost/127.0.0.1:8082]}}, [request_prepared])
2025-02-28 13:12:58 [] DEBUG r.n.http.client.HttpClientOperations - [f77f27f0-8, L:/127.0.0.1:57591 - R:localhost/127.0.0.1:8082] No sendHeaders() called before complete, sending zero-length header
2025-02-28 13:12:58 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f77f27f0-8, L:/127.0.0.1:57591 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0xf77f27f0, L:/127.0.0.1:57591 - R:localhost/127.0.0.1:8082]}}, [request_sent])
2025-02-28 13:12:58 [] DEBUG r.n.http.client.HttpClientOperations - [f77f27f0-8, L:/127.0.0.1:57591 - R:localhost/127.0.0.1:8082] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Content-Length: <filtered>
Date: <filtered>
2025-02-28 13:12:58 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f77f27f0-8, L:/127.0.0.1:57591 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0xf77f27f0, L:/127.0.0.1:57591 - R:localhost/127.0.0.1:8082]}}, [response_received])
2025-02-28 13:12:58 [] DEBUG r.n.http.client.HttpClientOperations - [f77f27f0-8, L:/127.0.0.1:57591 - R:localhost/127.0.0.1:8082] Received last HTTP packet
2025-02-28 13:12:58 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f77f27f0, L:/127.0.0.1:57591 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0xf77f27f0, L:/127.0.0.1:57591 - R:localhost/127.0.0.1:8082]}}, [response_completed])
2025-02-28 13:12:58 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f77f27f0, L:/127.0.0.1:57591 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0xf77f27f0, L:/127.0.0.1:57591 - R:localhost/127.0.0.1:8082]}}, [disconnecting])
2025-02-28 13:12:58 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f77f27f0, L:/127.0.0.1:57591 - R:localhost/127.0.0.1:8082] Releasing channel
2025-02-28 13:12:58 [] DEBUG r.n.r.PooledConnectionProvider - [f77f27f0, L:/127.0.0.1:57591 - R:localhost/127.0.0.1:8082] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-28 13:12:58 [] DEBUG reactor.netty.channel.FluxReceive - [79e608ac, L:/127.0.0.1:57591 ! R:localhost/127.0.0.1:8082] [terminated=true, cancelled=false, pending=1, error=null]: subscribing inbound receiver
2025-02-28 13:13:20 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [2076aaa5, L:/127.0.0.1:57596 ! R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x2076aaa5, L:/127.0.0.1:57596 ! R:localhost/127.0.0.1:8081]}, [disconnecting])
2025-02-28 13:13:58 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [fffff40c, L:/127.0.0.1:57590 ! R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0xfffff40c, L:/127.0.0.1:57590 ! R:localhost/127.0.0.1:8081]}, [disconnecting])
2025-02-28 13:13:58 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f77f27f0, L:/127.0.0.1:57591 ! R:localhost/127.0.0.1:8082] onStateChange(PooledConnection{channel=[id: 0xf77f27f0, L:/127.0.0.1:57591 ! R:localhost/127.0.0.1:8082]}, [disconnecting])
2025-02-28 13:27:13 [] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-02-28 13:27:13 [] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-02-28 13:27:13 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 7 thread-local buffer(s) from thread: reactor-http-nio-4
2025-02-28 13:27:13 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 9 thread-local buffer(s) from thread: reactor-http-nio-5
2025-02-28 13:27:13 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 9 thread-local buffer(s) from thread: reactor-http-nio-2
2025-02-28 13:27:17 [] DEBUG org.jboss.logging - Logging Provider: org.jboss.logging.Slf4jLoggerProvider found via system property
2025-02-28 13:27:17 [] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final
2025-02-28 13:27:17 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-02-28 13:27:17 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-02-28 13:27:17 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-02-28 13:27:17 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-02-28 13:27:17 [] DEBUG o.h.v.i.e.r.TraversableResolvers - Cannot find jakarta.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2025-02-28 13:27:17 [] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-02-28 13:27:17 [] INFO  c.c.c.g.c.CommongatewayApplication - Starting CommongatewayApplication using Java 17.0.12 with PID 10516 (D:\WORKSPACE\API-GATEWAY\commongateway\target\classes started by CITPL in D:\WORKSPACE\API-GATEWAY)
2025-02-28 13:27:17 [] DEBUG c.c.c.g.c.CommongatewayApplication - Running with Spring Boot v3.4.2, Spring v6.2.2
2025-02-28 13:27:17 [] INFO  c.c.c.g.c.CommongatewayApplication - No active profile set, falling back to 1 default profile: "default"
2025-02-28 13:27:17 [] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-02-28 13:27:17 [] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-02-28 13:27:17 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-02-28 13:27:17 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-02-28 13:27:17 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-02-28 13:27:17 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-02-28 13:27:17 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-02-28 13:27:17 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-02-28 13:27:18 [] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=d2aee5ef-86a6-3b95-abd8-708d95e66676
2025-02-28 13:27:19 [] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-02-28 13:27:19 [] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-02-28 13:27:19 [] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-02-28 13:27:19 [] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.34]
2025-02-28 13:27:19 [] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-02-28 13:27:19 [] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1800 ms
2025-02-28 13:27:19 [] DEBUG i.n.u.i.l.InternalLoggerFactory - Using SLF4J as the default logging framework
2025-02-28 13:27:19 [] DEBUG i.n.util.internal.PlatformDependent0 - -Dio.netty.noUnsafe: false
2025-02-28 13:27:19 [] DEBUG i.n.util.internal.PlatformDependent0 - Java version: 17
2025-02-28 13:27:19 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe.theUnsafe: available
2025-02-28 13:27:19 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe base methods: all available
2025-02-28 13:27:19 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe.storeFence: available
2025-02-28 13:27:19 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.Buffer.address: available
2025-02-28 13:27:19 [] DEBUG i.n.util.internal.PlatformDependent0 - direct buffer constructor: unavailable: Reflective setAccessible(true) disabled
2025-02-28 13:27:19 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.Bits.unaligned: available, true
2025-02-28 13:27:19 [] DEBUG i.n.util.internal.PlatformDependent0 - jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable: class io.netty.util.internal.PlatformDependent0$7 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @3e77a1ed
2025-02-28 13:27:19 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.DirectByteBuffer.<init>(long, {int,long}): unavailable
2025-02-28 13:27:19 [] DEBUG i.n.util.internal.PlatformDependent - sun.misc.Unsafe: available
2025-02-28 13:27:19 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.tmpdir: C:\Users\CITPL\AppData\Local\Temp (java.io.tmpdir)
2025-02-28 13:27:19 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.bitMode: 64 (sun.arch.data.model)
2025-02-28 13:27:19 [] DEBUG i.n.util.internal.PlatformDependent - Platform: Windows
2025-02-28 13:27:19 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.maxDirectMemory: -1 bytes
2025-02-28 13:27:19 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.uninitializedArrayAllocationThreshold: -1
2025-02-28 13:27:19 [] DEBUG io.netty.util.internal.CleanerJava9 - java.nio.ByteBuffer.cleaner(): available
2025-02-28 13:27:19 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.noPreferDirect: false
2025-02-28 13:27:19 [] DEBUG reactor.util.Loggers - Using Slf4j logging framework
2025-02-28 13:27:20 [] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-02-28 13:27:20 [] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2025-02-28 13:27:20 [] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2025-02-28 13:27:20 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-02-28 13:27:20 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via user class loader
2025-02-28 13:27:20 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-02-28 13:27:20 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-02-28 13:27:20 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-02-28 13:27:20 [] DEBUG o.h.v.i.e.r.TraversableResolvers - Cannot find jakarta.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2025-02-28 13:27:20 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-02-28 13:27:20 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-02-28 13:27:20 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-02-28 13:27:20 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-02-28 13:27:20 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-02-28 13:27:20 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-02-28 13:27:20 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	c.c.c.g.c.c.HomeController:
	{GET [/home]}: get()
2025-02-28 13:27:20 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2025-02-28 13:27:20 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 'beanNameHandlerMapping' {}
2025-02-28 13:27:20 [] DEBUG _.s.w.s.HandlerMapping.Mappings - Mapped /validate/** -> ProxyExchangeHandlerFunction
/users/** -> ProxyExchangeHandlerFunction
2025-02-28 13:27:20 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2025-02-28 13:27:20 [] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-02-28 13:27:20 [] DEBUG i.n.u.i.InternalThreadLocalMap - -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2025-02-28 13:27:20 [] DEBUG i.n.u.i.InternalThreadLocalMap - -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2025-02-28 13:27:20 [] DEBUG io.netty.util.ResourceLeakDetector - -Dio.netty.leakDetection.level: simple
2025-02-28 13:27:20 [] DEBUG io.netty.util.ResourceLeakDetector - -Dio.netty.leakDetection.targetRecords: 4
2025-02-28 13:27:20 [] DEBUG i.n.handler.codec.compression.Brotli - brotli4j not in the classpath; Brotli support will be unavailable.
2025-02-28 13:27:20 [] DEBUG reactor.netty.tcp.TcpResources - [http] resources will use the default LoopResources: DefaultLoopResources {prefix=reactor-http, daemon=true, selectCount=12, workerCount=12}
2025-02-28 13:27:20 [] DEBUG reactor.netty.tcp.TcpResources - [http] resources will use the default ConnectionProvider: reactor.netty.resources.DefaultPooledConnectionProvider@45f5223f
2025-02-28 13:27:20 [] DEBUG r.netty.resources.DefaultLoopIOUring - Default io_uring support : false
2025-02-28 13:27:20 [] DEBUG r.netty.resources.DefaultLoopEpoll - Default Epoll support : false
2025-02-28 13:27:20 [] DEBUG r.netty.resources.DefaultLoopKQueue - Default KQueue support : false
2025-02-28 13:27:20 [] DEBUG i.n.c.MultithreadEventLoopGroup - -Dio.netty.eventLoopThreads: 24
2025-02-28 13:27:20 [] DEBUG i.n.u.concurrent.GlobalEventExecutor - -Dio.netty.globalEventExecutor.quietPeriodSeconds: 1
2025-02-28 13:27:20 [] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.noKeySetOptimization: false
2025-02-28 13:27:20 [] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.selectorAutoRebuildThreshold: 512
2025-02-28 13:27:20 [] DEBUG i.n.util.internal.PlatformDependent - org.jctools-core.MpscChunkedArrayQueue: available
2025-02-28 13:27:20 [] DEBUG io.netty.util.NetUtil - -Djava.net.preferIPv4Stack: false
2025-02-28 13:27:20 [] DEBUG io.netty.util.NetUtil - -Djava.net.preferIPv6Addresses: false
2025-02-28 13:27:20 [] DEBUG i.netty.util.NetUtilInitializations - Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2025-02-28 13:27:20 [] DEBUG io.netty.util.NetUtil - Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2025-02-28 13:27:20 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default ResolvedAddressTypes: IPV4_ONLY
2025-02-28 13:27:20 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Localhost address: localhost/127.0.0.1
2025-02-28 13:27:20 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Windows hostname: DESKTOP-P307093
2025-02-28 13:27:20 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default search domains: []
2025-02-28 13:27:20 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default UnixResolverOptions{ndots=1, timeout=5, attempts=16}
2025-02-28 13:27:20 [] DEBUG i.n.r.DefaultHostsFileEntriesResolver - -Dio.netty.hostsFileRefreshInterval: 0
2025-02-28 13:27:21 [] DEBUG i.n.r.d.DefaultDnsServerAddressStreamProvider - Default DNS servers: [/8.8.8.8:53, /4.2.2.2:53] (sun.net.dns.ResolverConfiguration)
2025-02-28 13:27:21 [] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-02-28 13:27:21 [] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-02-28 13:27:21 [] INFO  c.c.c.g.c.CommongatewayApplication - Started CommongatewayApplication in 4.079 seconds (process running for 5.017)
2025-02-28 13:27:28 [] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-02-28 13:27:28 [] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-02-28 13:27:28 [] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 0 ms
2025-02-28 13:27:28 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 13:27:28 [ab77df35-c794-4fe6-bd0d-b726a769911d] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 13:27:28 [ab77df35-c794-4fe6-bd0d-b726a769911d] DEBUG i.m.c.u.i.l.InternalLoggerFactory - Using SLF4J as the default logging framework
2025-02-28 13:27:28 [ab77df35-c794-4fe6-bd0d-b726a769911d] DEBUG r.n.r.PooledConnectionProvider - Creating a new [http] client pool [PoolFactory{evictionInterval=PT0S, leasingStrategy=fifo, maxConnections=500, maxIdleTime=-1, maxLifeTime=-1, metricsEnabled=false, pendingAcquireMaxCount=1000, pendingAcquireTimeout=45000}] for [localhost/<unresolved>:8081]
2025-02-28 13:27:28 [ab77df35-c794-4fe6-bd0d-b726a769911d] DEBUG io.netty.channel.DefaultChannelId - -Dio.netty.processId: 10516 (auto-detected)
2025-02-28 13:27:28 [ab77df35-c794-4fe6-bd0d-b726a769911d] DEBUG io.netty.channel.DefaultChannelId - -Dio.netty.machineId: 00:15:5d:ff:fe:02:b5:1f (auto-detected)
2025-02-28 13:27:28 [ab77df35-c794-4fe6-bd0d-b726a769911d] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.numHeapArenas: 24
2025-02-28 13:27:28 [ab77df35-c794-4fe6-bd0d-b726a769911d] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.numDirectArenas: 24
2025-02-28 13:27:28 [ab77df35-c794-4fe6-bd0d-b726a769911d] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.pageSize: 8192
2025-02-28 13:27:28 [ab77df35-c794-4fe6-bd0d-b726a769911d] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxOrder: 9
2025-02-28 13:27:28 [ab77df35-c794-4fe6-bd0d-b726a769911d] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.chunkSize: 4194304
2025-02-28 13:27:28 [ab77df35-c794-4fe6-bd0d-b726a769911d] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.smallCacheSize: 256
2025-02-28 13:27:28 [ab77df35-c794-4fe6-bd0d-b726a769911d] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.normalCacheSize: 64
2025-02-28 13:27:28 [ab77df35-c794-4fe6-bd0d-b726a769911d] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2025-02-28 13:27:28 [ab77df35-c794-4fe6-bd0d-b726a769911d] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.cacheTrimInterval: 8192
2025-02-28 13:27:28 [ab77df35-c794-4fe6-bd0d-b726a769911d] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.cacheTrimIntervalMillis: 0
2025-02-28 13:27:28 [ab77df35-c794-4fe6-bd0d-b726a769911d] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.useCacheForAllThreads: false
2025-02-28 13:27:28 [ab77df35-c794-4fe6-bd0d-b726a769911d] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
2025-02-28 13:27:28 [ab77df35-c794-4fe6-bd0d-b726a769911d] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.disableCacheFinalizersForFastThreadLocalThreads: false
2025-02-28 13:27:28 [ab77df35-c794-4fe6-bd0d-b726a769911d] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.allocator.type: pooled
2025-02-28 13:27:28 [ab77df35-c794-4fe6-bd0d-b726a769911d] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.threadLocalDirectBufferSize: 0
2025-02-28 13:27:28 [ab77df35-c794-4fe6-bd0d-b726a769911d] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.maxThreadLocalCharBufferSize: 16384
2025-02-28 13:27:28 [] DEBUG r.n.r.PooledConnectionProvider - [534b070a] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:27:28 [] DEBUG io.netty.buffer.AbstractByteBuf - -Dio.netty.buffer.checkAccessible: true
2025-02-28 13:27:28 [] DEBUG io.netty.buffer.AbstractByteBuf - -Dio.netty.buffer.checkBounds: true
2025-02-28 13:27:28 [] DEBUG i.n.util.ResourceLeakDetectorFactory - Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@36daf6b4
2025-02-28 13:27:28 [] DEBUG r.netty.transport.TransportConfig - [534b070a] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-28 13:27:28 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 13:27:28 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 13:27:28 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 13:27:28 [] DEBUG i.n.b.ChannelInitializerExtensions - -Dio.netty.bootstrap.extensions: null
2025-02-28 13:27:29 [] DEBUG r.netty.transport.TransportConnector - [534b070a] Connecting to [localhost/127.0.0.1:8081].
2025-02-28 13:27:29 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [534b070a, L:/127.0.0.1:58038 - R:localhost/127.0.0.1:8081] Registering pool release on close event for channel
2025-02-28 13:27:29 [] DEBUG r.n.r.PooledConnectionProvider - [534b070a, L:/127.0.0.1:58038 - R:localhost/127.0.0.1:8081] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:27:29 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [534b070a, L:/127.0.0.1:58038 - R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x534b070a, L:/127.0.0.1:58038 - R:localhost/127.0.0.1:8081]}, [connected])
2025-02-28 13:27:29 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [534b070a-1, L:/127.0.0.1:58038 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0x534b070a, L:/127.0.0.1:58038 - R:localhost/127.0.0.1:8081]}}, [configured])
2025-02-28 13:27:29 [] DEBUG r.n.http.client.HttpClientConnect - [534b070a-1, L:/127.0.0.1:58038 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY, method=GET}
2025-02-28 13:27:29 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [534b070a-1, L:/127.0.0.1:58038 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x534b070a, L:/127.0.0.1:58038 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 13:27:29 [] DEBUG r.n.http.client.HttpClientOperations - [534b070a-1, L:/127.0.0.1:58038 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 13:27:29 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.maxCapacityPerThread: 4096
2025-02-28 13:27:29 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.ratio: 8
2025-02-28 13:27:29 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.chunkSize: 32
2025-02-28 13:27:29 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.blocking: false
2025-02-28 13:27:29 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.batchFastThreadLocalOnly: true
2025-02-28 13:27:29 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [534b070a-1, L:/127.0.0.1:58038 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x534b070a, L:/127.0.0.1:58038 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 13:27:29 [] DEBUG i.n.handler.codec.compression.Zstd - zstd-jni not in the classpath; Zstd support will be unavailable.
2025-02-28 13:27:29 [] DEBUG r.n.http.client.HttpClientOperations - [534b070a-1, L:/127.0.0.1:58038 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-28 13:27:29 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [534b070a-1, L:/127.0.0.1:58038 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x534b070a, L:/127.0.0.1:58038 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 13:27:29 [] DEBUG r.n.http.client.HttpClientOperations - [534b070a-1, L:/127.0.0.1:58038 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 13:27:29 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [534b070a, L:/127.0.0.1:58038 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x534b070a, L:/127.0.0.1:58038 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 13:27:29 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [534b070a, L:/127.0.0.1:58038 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x534b070a, L:/127.0.0.1:58038 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 13:27:29 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [534b070a, L:/127.0.0.1:58038 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-28 13:27:29 [] DEBUG r.n.r.PooledConnectionProvider - [534b070a, L:/127.0.0.1:58038 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-28 13:27:29 [] DEBUG reactor.netty.channel.FluxReceive - [2717a9d2, L:/127.0.0.1:58038 ! R:localhost/127.0.0.1:8081] [terminated=true, cancelled=false, pending=1, error=null]: subscribing inbound receiver
2025-02-28 13:27:34 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 13:27:34 [f6218b35-9a9d-4baf-b52c-2cb006562418] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 13:27:34 [] DEBUG r.n.r.PooledConnectionProvider - [534b070a, L:/127.0.0.1:58038 - R:localhost/127.0.0.1:8081] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:27:34 [] DEBUG r.n.http.client.HttpClientConnect - [534b070a-2, L:/127.0.0.1:58038 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY, method=GET}
2025-02-28 13:27:34 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [534b070a-2, L:/127.0.0.1:58038 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x534b070a, L:/127.0.0.1:58038 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 13:27:34 [] DEBUG r.n.http.client.HttpClientOperations - [534b070a-2, L:/127.0.0.1:58038 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 13:27:34 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [534b070a-2, L:/127.0.0.1:58038 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x534b070a, L:/127.0.0.1:58038 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 13:27:34 [] DEBUG r.n.http.client.HttpClientOperations - [534b070a-2, L:/127.0.0.1:58038 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-28 13:27:34 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [534b070a-2, L:/127.0.0.1:58038 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x534b070a, L:/127.0.0.1:58038 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 13:27:34 [] DEBUG reactor.netty.channel.FluxReceive - [534b070a-2, L:/127.0.0.1:58038 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=1, error=null]: subscribing inbound receiver
2025-02-28 13:27:34 [] DEBUG r.n.http.client.HttpClientOperations - [534b070a-2, L:/127.0.0.1:58038 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 13:27:34 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [534b070a, L:/127.0.0.1:58038 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x534b070a, L:/127.0.0.1:58038 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 13:27:34 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [534b070a, L:/127.0.0.1:58038 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x534b070a, L:/127.0.0.1:58038 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 13:27:34 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [534b070a, L:/127.0.0.1:58038 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-28 13:27:34 [] DEBUG r.n.r.PooledConnectionProvider - [534b070a, L:/127.0.0.1:58038 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-28 13:27:39 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 13:27:39 [1e88d49d-5a45-4ee5-824d-ed1e6788833a] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 13:27:39 [] DEBUG r.n.r.PooledConnectionProvider - [534b070a, L:/127.0.0.1:58038 - R:localhost/127.0.0.1:8081] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:27:39 [] DEBUG r.n.http.client.HttpClientConnect - [534b070a-3, L:/127.0.0.1:58038 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY, method=GET}
2025-02-28 13:27:39 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [534b070a-3, L:/127.0.0.1:58038 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x534b070a, L:/127.0.0.1:58038 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 13:27:39 [] DEBUG r.n.http.client.HttpClientOperations - [534b070a-3, L:/127.0.0.1:58038 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 13:27:39 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [534b070a-3, L:/127.0.0.1:58038 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x534b070a, L:/127.0.0.1:58038 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 13:27:39 [] DEBUG r.n.http.client.HttpClientOperations - [534b070a-3, L:/127.0.0.1:58038 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-28 13:27:39 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [534b070a-3, L:/127.0.0.1:58038 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x534b070a, L:/127.0.0.1:58038 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 13:27:39 [] DEBUG r.n.http.client.HttpClientOperations - [534b070a-3, L:/127.0.0.1:58038 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 13:27:39 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [534b070a, L:/127.0.0.1:58038 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x534b070a, L:/127.0.0.1:58038 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 13:27:39 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [534b070a, L:/127.0.0.1:58038 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x534b070a, L:/127.0.0.1:58038 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 13:27:39 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [534b070a, L:/127.0.0.1:58038 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-28 13:27:39 [] DEBUG r.n.r.PooledConnectionProvider - [534b070a, L:/127.0.0.1:58038 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-28 13:27:39 [] DEBUG reactor.netty.channel.FluxReceive - [670bd1af, L:/127.0.0.1:58038 ! R:localhost/127.0.0.1:8081] [terminated=true, cancelled=false, pending=1, error=null]: subscribing inbound receiver
2025-02-28 13:27:48 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 13:27:48 [da192808-fa0f-41a8-9a3d-d04d62551d31] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 13:27:48 [da192808-fa0f-41a8-9a3d-d04d62551d31] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /users
2025-02-28 13:27:48 [da192808-fa0f-41a8-9a3d-d04d62551d31] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔄 Using HTTP Method: GET
2025-02-28 13:27:48 [da192808-fa0f-41a8-9a3d-d04d62551d31] DEBUG r.n.r.PooledConnectionProvider - Creating a new [http] client pool [PoolFactory{evictionInterval=PT0S, leasingStrategy=fifo, maxConnections=500, maxIdleTime=-1, maxLifeTime=-1, metricsEnabled=false, pendingAcquireMaxCount=1000, pendingAcquireTimeout=45000}] for [localhost/<unresolved>:8081]
2025-02-28 13:27:48 [] DEBUG r.n.r.PooledConnectionProvider - [a1b54005] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:27:48 [] DEBUG r.netty.transport.TransportConfig - [a1b54005] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-28 13:27:48 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 13:27:48 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 13:27:48 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 13:27:48 [] DEBUG r.netty.transport.TransportConnector - [a1b54005] Connecting to [localhost/127.0.0.1:8081].
2025-02-28 13:27:48 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [a1b54005, L:/127.0.0.1:58051 - R:localhost/127.0.0.1:8081] Registering pool release on close event for channel
2025-02-28 13:27:48 [] DEBUG r.n.r.PooledConnectionProvider - [a1b54005, L:/127.0.0.1:58051 - R:localhost/127.0.0.1:8081] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:27:48 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [a1b54005, L:/127.0.0.1:58051 - R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0xa1b54005, L:/127.0.0.1:58051 - R:localhost/127.0.0.1:8081]}, [connected])
2025-02-28 13:27:48 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [a1b54005-1, L:/127.0.0.1:58051 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0xa1b54005, L:/127.0.0.1:58051 - R:localhost/127.0.0.1:8081]}}, [configured])
2025-02-28 13:27:48 [] DEBUG r.n.http.client.HttpClientConnect - [a1b54005-1, L:/127.0.0.1:58051 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate, method=GET}
2025-02-28 13:27:48 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [a1b54005-1, L:/127.0.0.1:58051 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xa1b54005, L:/127.0.0.1:58051 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 13:27:48 [] DEBUG r.n.http.client.HttpClientOperations - [a1b54005-1, L:/127.0.0.1:58051 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 13:27:48 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [a1b54005-1, L:/127.0.0.1:58051 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xa1b54005, L:/127.0.0.1:58051 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 13:27:48 [] DEBUG r.n.http.client.HttpClientOperations - [a1b54005-1, L:/127.0.0.1:58051 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 500 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
Connection: <filtered>
2025-02-28 13:27:48 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [a1b54005-1, L:/127.0.0.1:58051 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xa1b54005, L:/127.0.0.1:58051 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 13:27:48 [] DEBUG reactor.netty.channel.FluxReceive - [a1b54005-1, L:/127.0.0.1:58051 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-28 13:27:48 [] DEBUG r.n.http.client.HttpClientOperations - [a1b54005-1, L:/127.0.0.1:58051 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 13:27:48 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [a1b54005, L:/127.0.0.1:58051 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xa1b54005, L:/127.0.0.1:58051 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 13:27:48 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [a1b54005, L:/127.0.0.1:58051 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xa1b54005, L:/127.0.0.1:58051 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 13:27:48 [] DEBUG r.n.r.PooledConnectionProvider - [a1b54005, L:/127.0.0.1:58051 ! R:localhost/127.0.0.1:8081] Channel closed, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:27:48 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [a1b54005, L:/127.0.0.1:58051 ! R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0xa1b54005, L:/127.0.0.1:58051 ! R:localhost/127.0.0.1:8081]}, [disconnecting])
2025-02-28 13:27:48 [da192808-fa0f-41a8-9a3d-d04d62551d31] ERROR c.c.c.g.c.c.ValidationInterceptor - ⚠️ Error calling validation service
org.springframework.web.reactive.function.client.WebClientResponseException$InternalServerError: 500 Internal Server Error from GET http://localhost:8081/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 500 INTERNAL_SERVER_ERROR from GET http://localhost:8081/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104)
		at reactor.core.publisher.Mono.block(Mono.java:1779)
		at com.citpl.common.gateway.commongateway.config.ValidationInterceptor.preHandle(ValidationInterceptor.java:70)
		at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:146)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1083)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
		at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at com.citpl.common.gateway.commongateway.filter.MDCFilter.doFilter(MDCFilter.java:37)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.cloud.gateway.server.mvc.filter.WeightCalculatorFilter.doFilter(WeightCalculatorFilter.java:229)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.cloud.gateway.server.mvc.filter.FormFilter.doFilter(FormFilter.java:93)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-28 13:27:48 [] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /error
2025-02-28 13:27:48 [] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔄 Using HTTP Method: GET
2025-02-28 13:27:48 [] DEBUG r.n.r.PooledConnectionProvider - [29d57ce3] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:27:48 [] DEBUG r.netty.transport.TransportConfig - [29d57ce3] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-28 13:27:48 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 13:27:48 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 13:27:48 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 13:27:48 [] DEBUG r.netty.transport.TransportConnector - [29d57ce3] Connecting to [localhost/127.0.0.1:8081].
2025-02-28 13:27:48 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [29d57ce3, L:/127.0.0.1:58052 - R:localhost/127.0.0.1:8081] Registering pool release on close event for channel
2025-02-28 13:27:48 [] DEBUG r.n.r.PooledConnectionProvider - [29d57ce3, L:/127.0.0.1:58052 - R:localhost/127.0.0.1:8081] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:27:48 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [29d57ce3, L:/127.0.0.1:58052 - R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x29d57ce3, L:/127.0.0.1:58052 - R:localhost/127.0.0.1:8081]}, [connected])
2025-02-28 13:27:48 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [29d57ce3-1, L:/127.0.0.1:58052 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0x29d57ce3, L:/127.0.0.1:58052 - R:localhost/127.0.0.1:8081]}}, [configured])
2025-02-28 13:27:48 [] DEBUG r.n.http.client.HttpClientConnect - [29d57ce3-1, L:/127.0.0.1:58052 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate, method=GET}
2025-02-28 13:27:48 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [29d57ce3-1, L:/127.0.0.1:58052 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x29d57ce3, L:/127.0.0.1:58052 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 13:27:48 [] DEBUG r.n.http.client.HttpClientOperations - [29d57ce3-1, L:/127.0.0.1:58052 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 13:27:48 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [29d57ce3-1, L:/127.0.0.1:58052 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x29d57ce3, L:/127.0.0.1:58052 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 13:27:48 [] DEBUG r.n.http.client.HttpClientOperations - [29d57ce3-1, L:/127.0.0.1:58052 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 500 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
Connection: <filtered>
2025-02-28 13:27:48 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [29d57ce3-1, L:/127.0.0.1:58052 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x29d57ce3, L:/127.0.0.1:58052 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 13:27:48 [] DEBUG reactor.netty.channel.FluxReceive - [29d57ce3-1, L:/127.0.0.1:58052 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-28 13:27:48 [] DEBUG r.n.http.client.HttpClientOperations - [29d57ce3-1, L:/127.0.0.1:58052 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 13:27:48 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [29d57ce3, L:/127.0.0.1:58052 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x29d57ce3, L:/127.0.0.1:58052 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 13:27:48 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [29d57ce3, L:/127.0.0.1:58052 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x29d57ce3, L:/127.0.0.1:58052 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 13:27:48 [] DEBUG r.n.r.PooledConnectionProvider - [29d57ce3, L:/127.0.0.1:58052 ! R:localhost/127.0.0.1:8081] Channel closed, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:27:48 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [29d57ce3, L:/127.0.0.1:58052 ! R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x29d57ce3, L:/127.0.0.1:58052 ! R:localhost/127.0.0.1:8081]}, [disconnecting])
2025-02-28 13:27:48 [] ERROR c.c.c.g.c.c.ValidationInterceptor - ⚠️ Error calling validation service
org.springframework.web.reactive.function.client.WebClientResponseException$InternalServerError: 500 Internal Server Error from GET http://localhost:8081/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 500 INTERNAL_SERVER_ERROR from GET http://localhost:8081/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104)
		at reactor.core.publisher.Mono.block(Mono.java:1779)
		at com.citpl.common.gateway.commongateway.config.ValidationInterceptor.preHandle(ValidationInterceptor.java:70)
		at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:146)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1083)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
		at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:633)
		at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:411)
		at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:331)
		at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:268)
		at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:380)
		at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:208)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:151)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-28 13:27:52 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 13:27:52 [d2f5630b-4141-43c9-8a5b-47355ef0619a] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 13:27:52 [d2f5630b-4141-43c9-8a5b-47355ef0619a] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /users
2025-02-28 13:27:52 [d2f5630b-4141-43c9-8a5b-47355ef0619a] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔄 Using HTTP Method: GET
2025-02-28 13:27:52 [] DEBUG r.n.r.PooledConnectionProvider - [37108868] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:27:52 [] DEBUG r.netty.transport.TransportConfig - [37108868] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-28 13:27:52 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 13:27:52 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 13:27:52 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 13:27:52 [] DEBUG r.netty.transport.TransportConnector - [37108868] Connecting to [localhost/127.0.0.1:8081].
2025-02-28 13:27:52 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [37108868, L:/127.0.0.1:58060 - R:localhost/127.0.0.1:8081] Registering pool release on close event for channel
2025-02-28 13:27:52 [] DEBUG r.n.r.PooledConnectionProvider - [37108868, L:/127.0.0.1:58060 - R:localhost/127.0.0.1:8081] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:27:52 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [37108868, L:/127.0.0.1:58060 - R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x37108868, L:/127.0.0.1:58060 - R:localhost/127.0.0.1:8081]}, [connected])
2025-02-28 13:27:52 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [37108868-1, L:/127.0.0.1:58060 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0x37108868, L:/127.0.0.1:58060 - R:localhost/127.0.0.1:8081]}}, [configured])
2025-02-28 13:27:52 [] DEBUG r.n.http.client.HttpClientConnect - [37108868-1, L:/127.0.0.1:58060 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate, method=GET}
2025-02-28 13:27:52 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [37108868-1, L:/127.0.0.1:58060 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x37108868, L:/127.0.0.1:58060 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 13:27:52 [] DEBUG r.n.http.client.HttpClientOperations - [37108868-1, L:/127.0.0.1:58060 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 13:27:52 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [37108868-1, L:/127.0.0.1:58060 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x37108868, L:/127.0.0.1:58060 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 13:27:52 [] DEBUG r.n.http.client.HttpClientOperations - [37108868-1, L:/127.0.0.1:58060 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 500 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
Connection: <filtered>
2025-02-28 13:27:52 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [37108868-1, L:/127.0.0.1:58060 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x37108868, L:/127.0.0.1:58060 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 13:27:52 [] DEBUG reactor.netty.channel.FluxReceive - [37108868-1, L:/127.0.0.1:58060 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-28 13:27:52 [] DEBUG r.n.http.client.HttpClientOperations - [37108868-1, L:/127.0.0.1:58060 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 13:27:52 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [37108868, L:/127.0.0.1:58060 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x37108868, L:/127.0.0.1:58060 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 13:27:52 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [37108868, L:/127.0.0.1:58060 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x37108868, L:/127.0.0.1:58060 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 13:27:52 [] DEBUG r.n.r.PooledConnectionProvider - [37108868, L:/127.0.0.1:58060 ! R:localhost/127.0.0.1:8081] Channel closed, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:27:52 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [37108868, L:/127.0.0.1:58060 ! R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x37108868, L:/127.0.0.1:58060 ! R:localhost/127.0.0.1:8081]}, [disconnecting])
2025-02-28 13:27:52 [d2f5630b-4141-43c9-8a5b-47355ef0619a] ERROR c.c.c.g.c.c.ValidationInterceptor - ⚠️ Error calling validation service
org.springframework.web.reactive.function.client.WebClientResponseException$InternalServerError: 500 Internal Server Error from GET http://localhost:8081/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 500 INTERNAL_SERVER_ERROR from GET http://localhost:8081/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104)
		at reactor.core.publisher.Mono.block(Mono.java:1779)
		at com.citpl.common.gateway.commongateway.config.ValidationInterceptor.preHandle(ValidationInterceptor.java:70)
		at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:146)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1083)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
		at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at com.citpl.common.gateway.commongateway.filter.MDCFilter.doFilter(MDCFilter.java:37)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.cloud.gateway.server.mvc.filter.WeightCalculatorFilter.doFilter(WeightCalculatorFilter.java:229)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.cloud.gateway.server.mvc.filter.FormFilter.doFilter(FormFilter.java:93)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-28 13:27:52 [] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /error
2025-02-28 13:27:52 [] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔄 Using HTTP Method: GET
2025-02-28 13:27:52 [] DEBUG r.n.r.PooledConnectionProvider - [abb0e428] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:27:52 [] DEBUG r.netty.transport.TransportConfig - [abb0e428] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-28 13:27:52 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 13:27:52 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 13:27:52 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 13:27:52 [] DEBUG r.netty.transport.TransportConnector - [abb0e428] Connecting to [localhost/127.0.0.1:8081].
2025-02-28 13:27:52 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [abb0e428, L:/127.0.0.1:58061 - R:localhost/127.0.0.1:8081] Registering pool release on close event for channel
2025-02-28 13:27:52 [] DEBUG r.n.r.PooledConnectionProvider - [abb0e428, L:/127.0.0.1:58061 - R:localhost/127.0.0.1:8081] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:27:52 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [abb0e428, L:/127.0.0.1:58061 - R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0xabb0e428, L:/127.0.0.1:58061 - R:localhost/127.0.0.1:8081]}, [connected])
2025-02-28 13:27:52 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [abb0e428-1, L:/127.0.0.1:58061 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0xabb0e428, L:/127.0.0.1:58061 - R:localhost/127.0.0.1:8081]}}, [configured])
2025-02-28 13:27:52 [] DEBUG r.n.http.client.HttpClientConnect - [abb0e428-1, L:/127.0.0.1:58061 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate, method=GET}
2025-02-28 13:27:52 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [abb0e428-1, L:/127.0.0.1:58061 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xabb0e428, L:/127.0.0.1:58061 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 13:27:52 [] DEBUG r.n.http.client.HttpClientOperations - [abb0e428-1, L:/127.0.0.1:58061 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 13:27:52 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [abb0e428-1, L:/127.0.0.1:58061 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xabb0e428, L:/127.0.0.1:58061 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 13:27:52 [] DEBUG r.n.http.client.HttpClientOperations - [abb0e428-1, L:/127.0.0.1:58061 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 500 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
Connection: <filtered>
2025-02-28 13:27:52 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [abb0e428-1, L:/127.0.0.1:58061 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xabb0e428, L:/127.0.0.1:58061 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 13:27:52 [] DEBUG reactor.netty.channel.FluxReceive - [abb0e428-1, L:/127.0.0.1:58061 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-28 13:27:52 [] DEBUG r.n.http.client.HttpClientOperations - [abb0e428-1, L:/127.0.0.1:58061 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 13:27:52 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [abb0e428, L:/127.0.0.1:58061 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xabb0e428, L:/127.0.0.1:58061 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 13:27:52 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [abb0e428, L:/127.0.0.1:58061 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xabb0e428, L:/127.0.0.1:58061 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 13:27:52 [] DEBUG r.n.r.PooledConnectionProvider - [abb0e428, L:/127.0.0.1:58061 ! R:localhost/127.0.0.1:8081] Channel closed, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:27:52 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [abb0e428, L:/127.0.0.1:58061 ! R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0xabb0e428, L:/127.0.0.1:58061 ! R:localhost/127.0.0.1:8081]}, [disconnecting])
2025-02-28 13:27:52 [] ERROR c.c.c.g.c.c.ValidationInterceptor - ⚠️ Error calling validation service
org.springframework.web.reactive.function.client.WebClientResponseException$InternalServerError: 500 Internal Server Error from GET http://localhost:8081/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 500 INTERNAL_SERVER_ERROR from GET http://localhost:8081/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104)
		at reactor.core.publisher.Mono.block(Mono.java:1779)
		at com.citpl.common.gateway.commongateway.config.ValidationInterceptor.preHandle(ValidationInterceptor.java:70)
		at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:146)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1083)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
		at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:633)
		at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:411)
		at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:331)
		at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:268)
		at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:380)
		at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:208)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:151)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-28 13:27:54 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 13:27:54 [63d11985-ceec-41fc-92ff-420f4da066b8] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 13:27:54 [63d11985-ceec-41fc-92ff-420f4da066b8] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /users
2025-02-28 13:27:54 [63d11985-ceec-41fc-92ff-420f4da066b8] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔄 Using HTTP Method: GET
2025-02-28 13:27:54 [] DEBUG r.n.r.PooledConnectionProvider - [246e9d05] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:27:54 [] DEBUG r.netty.transport.TransportConfig - [246e9d05] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-28 13:27:54 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 13:27:54 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 13:27:54 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 13:27:54 [] DEBUG r.netty.transport.TransportConnector - [246e9d05] Connecting to [localhost/127.0.0.1:8081].
2025-02-28 13:27:54 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [246e9d05, L:/127.0.0.1:58066 - R:localhost/127.0.0.1:8081] Registering pool release on close event for channel
2025-02-28 13:27:54 [] DEBUG r.n.r.PooledConnectionProvider - [246e9d05, L:/127.0.0.1:58066 - R:localhost/127.0.0.1:8081] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:27:54 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [246e9d05, L:/127.0.0.1:58066 - R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x246e9d05, L:/127.0.0.1:58066 - R:localhost/127.0.0.1:8081]}, [connected])
2025-02-28 13:27:54 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [246e9d05-1, L:/127.0.0.1:58066 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0x246e9d05, L:/127.0.0.1:58066 - R:localhost/127.0.0.1:8081]}}, [configured])
2025-02-28 13:27:54 [] DEBUG r.n.http.client.HttpClientConnect - [246e9d05-1, L:/127.0.0.1:58066 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate, method=GET}
2025-02-28 13:27:54 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [246e9d05-1, L:/127.0.0.1:58066 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x246e9d05, L:/127.0.0.1:58066 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 13:27:54 [] DEBUG r.n.http.client.HttpClientOperations - [246e9d05-1, L:/127.0.0.1:58066 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 13:27:54 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [246e9d05-1, L:/127.0.0.1:58066 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x246e9d05, L:/127.0.0.1:58066 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 13:27:54 [] DEBUG r.n.http.client.HttpClientOperations - [246e9d05-1, L:/127.0.0.1:58066 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 500 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
Connection: <filtered>
2025-02-28 13:27:54 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [246e9d05-1, L:/127.0.0.1:58066 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x246e9d05, L:/127.0.0.1:58066 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 13:27:54 [] DEBUG reactor.netty.channel.FluxReceive - [246e9d05-1, L:/127.0.0.1:58066 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-28 13:27:54 [] DEBUG r.n.http.client.HttpClientOperations - [246e9d05-1, L:/127.0.0.1:58066 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 13:27:54 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [246e9d05, L:/127.0.0.1:58066 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x246e9d05, L:/127.0.0.1:58066 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 13:27:54 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [246e9d05, L:/127.0.0.1:58066 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x246e9d05, L:/127.0.0.1:58066 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 13:27:54 [] DEBUG r.n.r.PooledConnectionProvider - [246e9d05, L:/127.0.0.1:58066 ! R:localhost/127.0.0.1:8081] Channel closed, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:27:54 [63d11985-ceec-41fc-92ff-420f4da066b8] ERROR c.c.c.g.c.c.ValidationInterceptor - ⚠️ Error calling validation service
org.springframework.web.reactive.function.client.WebClientResponseException$InternalServerError: 500 Internal Server Error from GET http://localhost:8081/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 500 INTERNAL_SERVER_ERROR from GET http://localhost:8081/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104)
		at reactor.core.publisher.Mono.block(Mono.java:1779)
		at com.citpl.common.gateway.commongateway.config.ValidationInterceptor.preHandle(ValidationInterceptor.java:70)
		at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:146)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1083)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
		at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at com.citpl.common.gateway.commongateway.filter.MDCFilter.doFilter(MDCFilter.java:37)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.cloud.gateway.server.mvc.filter.WeightCalculatorFilter.doFilter(WeightCalculatorFilter.java:229)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.cloud.gateway.server.mvc.filter.FormFilter.doFilter(FormFilter.java:93)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-28 13:27:54 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [246e9d05, L:/127.0.0.1:58066 ! R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x246e9d05, L:/127.0.0.1:58066 ! R:localhost/127.0.0.1:8081]}, [disconnecting])
2025-02-28 13:27:54 [] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /error
2025-02-28 13:27:54 [] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔄 Using HTTP Method: GET
2025-02-28 13:27:54 [] DEBUG r.n.r.PooledConnectionProvider - [6102bc0e] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:27:54 [] DEBUG r.netty.transport.TransportConfig - [6102bc0e] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-28 13:27:54 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 13:27:54 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 13:27:54 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 13:27:54 [] DEBUG r.netty.transport.TransportConnector - [6102bc0e] Connecting to [localhost/127.0.0.1:8081].
2025-02-28 13:27:54 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [6102bc0e, L:/127.0.0.1:58067 - R:localhost/127.0.0.1:8081] Registering pool release on close event for channel
2025-02-28 13:27:54 [] DEBUG r.n.r.PooledConnectionProvider - [6102bc0e, L:/127.0.0.1:58067 - R:localhost/127.0.0.1:8081] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:27:54 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [6102bc0e, L:/127.0.0.1:58067 - R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x6102bc0e, L:/127.0.0.1:58067 - R:localhost/127.0.0.1:8081]}, [connected])
2025-02-28 13:27:54 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [6102bc0e-1, L:/127.0.0.1:58067 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0x6102bc0e, L:/127.0.0.1:58067 - R:localhost/127.0.0.1:8081]}}, [configured])
2025-02-28 13:27:54 [] DEBUG r.n.http.client.HttpClientConnect - [6102bc0e-1, L:/127.0.0.1:58067 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate, method=GET}
2025-02-28 13:27:54 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [6102bc0e-1, L:/127.0.0.1:58067 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x6102bc0e, L:/127.0.0.1:58067 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 13:27:54 [] DEBUG r.n.http.client.HttpClientOperations - [6102bc0e-1, L:/127.0.0.1:58067 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 13:27:54 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [6102bc0e-1, L:/127.0.0.1:58067 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x6102bc0e, L:/127.0.0.1:58067 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 13:27:54 [] DEBUG r.n.http.client.HttpClientOperations - [6102bc0e-1, L:/127.0.0.1:58067 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 500 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
Connection: <filtered>
2025-02-28 13:27:54 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [6102bc0e-1, L:/127.0.0.1:58067 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x6102bc0e, L:/127.0.0.1:58067 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 13:27:54 [] DEBUG reactor.netty.channel.FluxReceive - [6102bc0e-1, L:/127.0.0.1:58067 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-28 13:27:54 [] DEBUG r.n.http.client.HttpClientOperations - [6102bc0e-1, L:/127.0.0.1:58067 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 13:27:54 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [6102bc0e, L:/127.0.0.1:58067 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x6102bc0e, L:/127.0.0.1:58067 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 13:27:54 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [6102bc0e, L:/127.0.0.1:58067 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x6102bc0e, L:/127.0.0.1:58067 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 13:27:54 [] DEBUG r.n.r.PooledConnectionProvider - [6102bc0e, L:/127.0.0.1:58067 ! R:localhost/127.0.0.1:8081] Channel closed, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:27:54 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [6102bc0e, L:/127.0.0.1:58067 ! R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x6102bc0e, L:/127.0.0.1:58067 ! R:localhost/127.0.0.1:8081]}, [disconnecting])
2025-02-28 13:27:54 [] ERROR c.c.c.g.c.c.ValidationInterceptor - ⚠️ Error calling validation service
org.springframework.web.reactive.function.client.WebClientResponseException$InternalServerError: 500 Internal Server Error from GET http://localhost:8081/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 500 INTERNAL_SERVER_ERROR from GET http://localhost:8081/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104)
		at reactor.core.publisher.Mono.block(Mono.java:1779)
		at com.citpl.common.gateway.commongateway.config.ValidationInterceptor.preHandle(ValidationInterceptor.java:70)
		at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:146)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1083)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
		at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:633)
		at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:411)
		at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:331)
		at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:268)
		at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:380)
		at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:208)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:151)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-28 13:28:00 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 13:28:00 [70716fbc-2fc0-4816-a55b-025d13750125] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 13:28:00 [70716fbc-2fc0-4816-a55b-025d13750125] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /users
2025-02-28 13:28:00 [70716fbc-2fc0-4816-a55b-025d13750125] WARN  c.c.c.g.c.c.ValidationInterceptor - ❌ Missing X-Validation-Token or X-Org-Id!
2025-02-28 13:28:00 [] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /error
2025-02-28 13:28:00 [] WARN  c.c.c.g.c.c.ValidationInterceptor - ❌ Missing X-Validation-Token or X-Org-Id!
2025-02-28 13:28:05 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 13:28:05 [4935ad14-3f9a-41c4-b82c-671823718bdf] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 13:28:05 [4935ad14-3f9a-41c4-b82c-671823718bdf] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /users
2025-02-28 13:28:05 [4935ad14-3f9a-41c4-b82c-671823718bdf] WARN  c.c.c.g.c.c.ValidationInterceptor - ❌ Missing X-Validation-Token or X-Org-Id!
2025-02-28 13:28:05 [] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /error
2025-02-28 13:28:05 [] WARN  c.c.c.g.c.c.ValidationInterceptor - ❌ Missing X-Validation-Token or X-Org-Id!
2025-02-28 13:28:14 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 13:28:14 [0bb51ace-9941-4875-a0d7-52eb4cd4f970] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 13:28:14 [0bb51ace-9941-4875-a0d7-52eb4cd4f970] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /users
2025-02-28 13:28:14 [0bb51ace-9941-4875-a0d7-52eb4cd4f970] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔄 Using HTTP Method: GET
2025-02-28 13:28:14 [] DEBUG r.n.r.PooledConnectionProvider - [e2ae581a] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:28:14 [] DEBUG r.netty.transport.TransportConfig - [e2ae581a] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-28 13:28:14 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 13:28:14 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 13:28:14 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 13:28:14 [] DEBUG r.netty.transport.TransportConnector - [e2ae581a] Connecting to [localhost/127.0.0.1:8081].
2025-02-28 13:28:14 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [e2ae581a, L:/127.0.0.1:58079 - R:localhost/127.0.0.1:8081] Registering pool release on close event for channel
2025-02-28 13:28:14 [] DEBUG r.n.r.PooledConnectionProvider - [e2ae581a, L:/127.0.0.1:58079 - R:localhost/127.0.0.1:8081] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:28:14 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [e2ae581a, L:/127.0.0.1:58079 - R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0xe2ae581a, L:/127.0.0.1:58079 - R:localhost/127.0.0.1:8081]}, [connected])
2025-02-28 13:28:14 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [e2ae581a-1, L:/127.0.0.1:58079 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0xe2ae581a, L:/127.0.0.1:58079 - R:localhost/127.0.0.1:8081]}}, [configured])
2025-02-28 13:28:14 [] DEBUG r.n.http.client.HttpClientConnect - [e2ae581a-1, L:/127.0.0.1:58079 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate, method=GET}
2025-02-28 13:28:14 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [e2ae581a-1, L:/127.0.0.1:58079 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xe2ae581a, L:/127.0.0.1:58079 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 13:28:14 [] DEBUG r.n.http.client.HttpClientOperations - [e2ae581a-1, L:/127.0.0.1:58079 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 13:28:14 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [e2ae581a-1, L:/127.0.0.1:58079 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xe2ae581a, L:/127.0.0.1:58079 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 13:28:14 [] DEBUG r.n.http.client.HttpClientOperations - [e2ae581a-1, L:/127.0.0.1:58079 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 500 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
Connection: <filtered>
2025-02-28 13:28:14 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [e2ae581a-1, L:/127.0.0.1:58079 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xe2ae581a, L:/127.0.0.1:58079 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 13:28:14 [] DEBUG reactor.netty.channel.FluxReceive - [e2ae581a-1, L:/127.0.0.1:58079 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-28 13:28:14 [] DEBUG r.n.http.client.HttpClientOperations - [e2ae581a-1, L:/127.0.0.1:58079 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 13:28:14 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [e2ae581a, L:/127.0.0.1:58079 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xe2ae581a, L:/127.0.0.1:58079 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 13:28:14 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [e2ae581a, L:/127.0.0.1:58079 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xe2ae581a, L:/127.0.0.1:58079 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 13:28:14 [] DEBUG r.n.r.PooledConnectionProvider - [e2ae581a, L:/127.0.0.1:58079 ! R:localhost/127.0.0.1:8081] Channel closed, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:28:14 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [e2ae581a, L:/127.0.0.1:58079 ! R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0xe2ae581a, L:/127.0.0.1:58079 ! R:localhost/127.0.0.1:8081]}, [disconnecting])
2025-02-28 13:28:14 [0bb51ace-9941-4875-a0d7-52eb4cd4f970] ERROR c.c.c.g.c.c.ValidationInterceptor - ⚠️ Error calling validation service
org.springframework.web.reactive.function.client.WebClientResponseException$InternalServerError: 500 Internal Server Error from GET http://localhost:8081/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 500 INTERNAL_SERVER_ERROR from GET http://localhost:8081/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104)
		at reactor.core.publisher.Mono.block(Mono.java:1779)
		at com.citpl.common.gateway.commongateway.config.ValidationInterceptor.preHandle(ValidationInterceptor.java:70)
		at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:146)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1083)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
		at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at com.citpl.common.gateway.commongateway.filter.MDCFilter.doFilter(MDCFilter.java:37)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.cloud.gateway.server.mvc.filter.WeightCalculatorFilter.doFilter(WeightCalculatorFilter.java:229)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.cloud.gateway.server.mvc.filter.FormFilter.doFilter(FormFilter.java:93)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-28 13:28:14 [] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /error
2025-02-28 13:28:14 [] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔄 Using HTTP Method: GET
2025-02-28 13:28:14 [] DEBUG r.n.r.PooledConnectionProvider - [92c3024b] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:28:14 [] DEBUG r.netty.transport.TransportConfig - [92c3024b] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-28 13:28:14 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 13:28:14 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 13:28:14 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 13:28:14 [] DEBUG r.netty.transport.TransportConnector - [92c3024b] Connecting to [localhost/127.0.0.1:8081].
2025-02-28 13:28:14 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [92c3024b, L:/127.0.0.1:58080 - R:localhost/127.0.0.1:8081] Registering pool release on close event for channel
2025-02-28 13:28:14 [] DEBUG r.n.r.PooledConnectionProvider - [92c3024b, L:/127.0.0.1:58080 - R:localhost/127.0.0.1:8081] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:28:14 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [92c3024b, L:/127.0.0.1:58080 - R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x92c3024b, L:/127.0.0.1:58080 - R:localhost/127.0.0.1:8081]}, [connected])
2025-02-28 13:28:14 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [92c3024b-1, L:/127.0.0.1:58080 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0x92c3024b, L:/127.0.0.1:58080 - R:localhost/127.0.0.1:8081]}}, [configured])
2025-02-28 13:28:14 [] DEBUG r.n.http.client.HttpClientConnect - [92c3024b-1, L:/127.0.0.1:58080 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate, method=GET}
2025-02-28 13:28:14 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [92c3024b-1, L:/127.0.0.1:58080 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x92c3024b, L:/127.0.0.1:58080 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 13:28:14 [] DEBUG r.n.http.client.HttpClientOperations - [92c3024b-1, L:/127.0.0.1:58080 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 13:28:14 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [92c3024b-1, L:/127.0.0.1:58080 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x92c3024b, L:/127.0.0.1:58080 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 13:28:14 [] DEBUG r.n.http.client.HttpClientOperations - [92c3024b-1, L:/127.0.0.1:58080 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 500 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
Connection: <filtered>
2025-02-28 13:28:14 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [92c3024b-1, L:/127.0.0.1:58080 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x92c3024b, L:/127.0.0.1:58080 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 13:28:14 [] DEBUG reactor.netty.channel.FluxReceive - [92c3024b-1, L:/127.0.0.1:58080 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-28 13:28:14 [] DEBUG r.n.http.client.HttpClientOperations - [92c3024b-1, L:/127.0.0.1:58080 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 13:28:14 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [92c3024b, L:/127.0.0.1:58080 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x92c3024b, L:/127.0.0.1:58080 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 13:28:14 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [92c3024b, L:/127.0.0.1:58080 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x92c3024b, L:/127.0.0.1:58080 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 13:28:14 [] ERROR c.c.c.g.c.c.ValidationInterceptor - ⚠️ Error calling validation service
org.springframework.web.reactive.function.client.WebClientResponseException$InternalServerError: 500 Internal Server Error from GET http://localhost:8081/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 500 INTERNAL_SERVER_ERROR from GET http://localhost:8081/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104)
		at reactor.core.publisher.Mono.block(Mono.java:1779)
		at com.citpl.common.gateway.commongateway.config.ValidationInterceptor.preHandle(ValidationInterceptor.java:70)
		at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:146)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1083)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
		at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:633)
		at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:411)
		at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:331)
		at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:268)
		at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:380)
		at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:208)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:151)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-28 13:28:14 [] DEBUG r.n.r.PooledConnectionProvider - [92c3024b, L:/127.0.0.1:58080 ! R:localhost/127.0.0.1:8081] Channel closed, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:28:14 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [92c3024b, L:/127.0.0.1:58080 ! R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x92c3024b, L:/127.0.0.1:58080 ! R:localhost/127.0.0.1:8081]}, [disconnecting])
2025-02-28 13:28:21 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 13:28:21 [be7f020b-aadb-4714-b852-71297cbbab8d] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 13:28:21 [be7f020b-aadb-4714-b852-71297cbbab8d] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /users
2025-02-28 13:28:21 [be7f020b-aadb-4714-b852-71297cbbab8d] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔄 Using HTTP Method: GET
2025-02-28 13:28:21 [] DEBUG r.n.r.PooledConnectionProvider - [563013c0] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:28:21 [] DEBUG r.netty.transport.TransportConfig - [563013c0] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-28 13:28:21 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 13:28:21 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 13:28:21 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 13:28:21 [] DEBUG r.netty.transport.TransportConnector - [563013c0] Connecting to [localhost/127.0.0.1:8081].
2025-02-28 13:28:21 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [563013c0, L:/127.0.0.1:58091 - R:localhost/127.0.0.1:8081] Registering pool release on close event for channel
2025-02-28 13:28:21 [] DEBUG r.n.r.PooledConnectionProvider - [563013c0, L:/127.0.0.1:58091 - R:localhost/127.0.0.1:8081] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:28:21 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [563013c0, L:/127.0.0.1:58091 - R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x563013c0, L:/127.0.0.1:58091 - R:localhost/127.0.0.1:8081]}, [connected])
2025-02-28 13:28:21 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [563013c0-1, L:/127.0.0.1:58091 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0x563013c0, L:/127.0.0.1:58091 - R:localhost/127.0.0.1:8081]}}, [configured])
2025-02-28 13:28:21 [] DEBUG r.n.http.client.HttpClientConnect - [563013c0-1, L:/127.0.0.1:58091 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate, method=GET}
2025-02-28 13:28:21 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [563013c0-1, L:/127.0.0.1:58091 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x563013c0, L:/127.0.0.1:58091 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 13:28:21 [] DEBUG r.n.http.client.HttpClientOperations - [563013c0-1, L:/127.0.0.1:58091 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 13:28:21 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [563013c0-1, L:/127.0.0.1:58091 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x563013c0, L:/127.0.0.1:58091 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 13:28:21 [] DEBUG r.n.http.client.HttpClientOperations - [563013c0-1, L:/127.0.0.1:58091 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 500 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
Connection: <filtered>
2025-02-28 13:28:21 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [563013c0-1, L:/127.0.0.1:58091 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x563013c0, L:/127.0.0.1:58091 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 13:28:21 [] DEBUG reactor.netty.channel.FluxReceive - [563013c0-1, L:/127.0.0.1:58091 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-28 13:28:21 [] DEBUG r.n.http.client.HttpClientOperations - [563013c0-1, L:/127.0.0.1:58091 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 13:28:21 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [563013c0, L:/127.0.0.1:58091 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x563013c0, L:/127.0.0.1:58091 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 13:28:21 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [563013c0, L:/127.0.0.1:58091 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x563013c0, L:/127.0.0.1:58091 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 13:28:21 [] DEBUG r.n.r.PooledConnectionProvider - [563013c0, L:/127.0.0.1:58091 ! R:localhost/127.0.0.1:8081] Channel closed, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:28:21 [be7f020b-aadb-4714-b852-71297cbbab8d] ERROR c.c.c.g.c.c.ValidationInterceptor - ⚠️ Error calling validation service
org.springframework.web.reactive.function.client.WebClientResponseException$InternalServerError: 500 Internal Server Error from GET http://localhost:8081/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 500 INTERNAL_SERVER_ERROR from GET http://localhost:8081/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104)
		at reactor.core.publisher.Mono.block(Mono.java:1779)
		at com.citpl.common.gateway.commongateway.config.ValidationInterceptor.preHandle(ValidationInterceptor.java:70)
		at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:146)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1083)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
		at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at com.citpl.common.gateway.commongateway.filter.MDCFilter.doFilter(MDCFilter.java:37)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.cloud.gateway.server.mvc.filter.WeightCalculatorFilter.doFilter(WeightCalculatorFilter.java:229)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.cloud.gateway.server.mvc.filter.FormFilter.doFilter(FormFilter.java:93)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-28 13:28:21 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [563013c0, L:/127.0.0.1:58091 ! R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x563013c0, L:/127.0.0.1:58091 ! R:localhost/127.0.0.1:8081]}, [disconnecting])
2025-02-28 13:28:21 [] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /error
2025-02-28 13:28:21 [] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔄 Using HTTP Method: GET
2025-02-28 13:28:21 [] DEBUG r.n.r.PooledConnectionProvider - [5baefb8b] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:28:21 [] DEBUG r.netty.transport.TransportConfig - [5baefb8b] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-28 13:28:21 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 13:28:21 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 13:28:21 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 13:28:21 [] DEBUG r.netty.transport.TransportConnector - [5baefb8b] Connecting to [localhost/127.0.0.1:8081].
2025-02-28 13:28:21 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [5baefb8b, L:/127.0.0.1:58092 - R:localhost/127.0.0.1:8081] Registering pool release on close event for channel
2025-02-28 13:28:21 [] DEBUG r.n.r.PooledConnectionProvider - [5baefb8b, L:/127.0.0.1:58092 - R:localhost/127.0.0.1:8081] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:28:21 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [5baefb8b, L:/127.0.0.1:58092 - R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x5baefb8b, L:/127.0.0.1:58092 - R:localhost/127.0.0.1:8081]}, [connected])
2025-02-28 13:28:21 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [5baefb8b-1, L:/127.0.0.1:58092 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0x5baefb8b, L:/127.0.0.1:58092 - R:localhost/127.0.0.1:8081]}}, [configured])
2025-02-28 13:28:21 [] DEBUG r.n.http.client.HttpClientConnect - [5baefb8b-1, L:/127.0.0.1:58092 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate, method=GET}
2025-02-28 13:28:21 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [5baefb8b-1, L:/127.0.0.1:58092 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x5baefb8b, L:/127.0.0.1:58092 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 13:28:21 [] DEBUG r.n.http.client.HttpClientOperations - [5baefb8b-1, L:/127.0.0.1:58092 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 13:28:21 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [5baefb8b-1, L:/127.0.0.1:58092 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x5baefb8b, L:/127.0.0.1:58092 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 13:28:21 [] DEBUG r.n.http.client.HttpClientOperations - [5baefb8b-1, L:/127.0.0.1:58092 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 500 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
Connection: <filtered>
2025-02-28 13:28:21 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [5baefb8b-1, L:/127.0.0.1:58092 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x5baefb8b, L:/127.0.0.1:58092 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 13:28:21 [] DEBUG reactor.netty.channel.FluxReceive - [5baefb8b-1, L:/127.0.0.1:58092 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-28 13:28:21 [] DEBUG r.n.http.client.HttpClientOperations - [5baefb8b-1, L:/127.0.0.1:58092 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 13:28:21 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [5baefb8b, L:/127.0.0.1:58092 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x5baefb8b, L:/127.0.0.1:58092 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 13:28:21 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [5baefb8b, L:/127.0.0.1:58092 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x5baefb8b, L:/127.0.0.1:58092 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 13:28:21 [] DEBUG r.n.r.PooledConnectionProvider - [5baefb8b, L:/127.0.0.1:58092 ! R:localhost/127.0.0.1:8081] Channel closed, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:28:21 [] ERROR c.c.c.g.c.c.ValidationInterceptor - ⚠️ Error calling validation service
org.springframework.web.reactive.function.client.WebClientResponseException$InternalServerError: 500 Internal Server Error from GET http://localhost:8081/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 500 INTERNAL_SERVER_ERROR from GET http://localhost:8081/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104)
		at reactor.core.publisher.Mono.block(Mono.java:1779)
		at com.citpl.common.gateway.commongateway.config.ValidationInterceptor.preHandle(ValidationInterceptor.java:70)
		at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:146)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1083)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
		at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:633)
		at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:411)
		at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:331)
		at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:268)
		at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:380)
		at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:208)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:151)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-28 13:28:21 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [5baefb8b, L:/127.0.0.1:58092 ! R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x5baefb8b, L:/127.0.0.1:58092 ! R:localhost/127.0.0.1:8081]}, [disconnecting])
2025-02-28 13:28:27 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 13:28:27 [56ffb889-d639-4909-b0bf-8cecc0e99887] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 13:28:27 [56ffb889-d639-4909-b0bf-8cecc0e99887] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /users
2025-02-28 13:28:27 [56ffb889-d639-4909-b0bf-8cecc0e99887] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔄 Using HTTP Method: GET
2025-02-28 13:28:27 [] DEBUG r.n.r.PooledConnectionProvider - [4f57bd9f] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:28:27 [] DEBUG r.netty.transport.TransportConfig - [4f57bd9f] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-28 13:28:27 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 13:28:27 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 13:28:27 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 13:28:27 [] DEBUG r.netty.transport.TransportConnector - [4f57bd9f] Connecting to [localhost/127.0.0.1:8081].
2025-02-28 13:28:27 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [4f57bd9f, L:/127.0.0.1:58097 - R:localhost/127.0.0.1:8081] Registering pool release on close event for channel
2025-02-28 13:28:27 [] DEBUG r.n.r.PooledConnectionProvider - [4f57bd9f, L:/127.0.0.1:58097 - R:localhost/127.0.0.1:8081] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:28:27 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [4f57bd9f, L:/127.0.0.1:58097 - R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x4f57bd9f, L:/127.0.0.1:58097 - R:localhost/127.0.0.1:8081]}, [connected])
2025-02-28 13:28:27 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [4f57bd9f-1, L:/127.0.0.1:58097 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0x4f57bd9f, L:/127.0.0.1:58097 - R:localhost/127.0.0.1:8081]}}, [configured])
2025-02-28 13:28:27 [] DEBUG r.n.http.client.HttpClientConnect - [4f57bd9f-1, L:/127.0.0.1:58097 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate, method=GET}
2025-02-28 13:28:27 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [4f57bd9f-1, L:/127.0.0.1:58097 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x4f57bd9f, L:/127.0.0.1:58097 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 13:28:27 [] DEBUG r.n.http.client.HttpClientOperations - [4f57bd9f-1, L:/127.0.0.1:58097 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 13:28:27 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [4f57bd9f-1, L:/127.0.0.1:58097 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x4f57bd9f, L:/127.0.0.1:58097 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 13:28:27 [] DEBUG r.n.http.client.HttpClientOperations - [4f57bd9f-1, L:/127.0.0.1:58097 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 500 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
Connection: <filtered>
2025-02-28 13:28:27 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [4f57bd9f-1, L:/127.0.0.1:58097 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x4f57bd9f, L:/127.0.0.1:58097 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 13:28:27 [] DEBUG reactor.netty.channel.FluxReceive - [4f57bd9f-1, L:/127.0.0.1:58097 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-28 13:28:27 [] DEBUG r.n.http.client.HttpClientOperations - [4f57bd9f-1, L:/127.0.0.1:58097 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 13:28:27 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [4f57bd9f, L:/127.0.0.1:58097 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x4f57bd9f, L:/127.0.0.1:58097 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 13:28:27 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [4f57bd9f, L:/127.0.0.1:58097 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x4f57bd9f, L:/127.0.0.1:58097 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 13:28:27 [56ffb889-d639-4909-b0bf-8cecc0e99887] ERROR c.c.c.g.c.c.ValidationInterceptor - ⚠️ Error calling validation service
org.springframework.web.reactive.function.client.WebClientResponseException$InternalServerError: 500 Internal Server Error from GET http://localhost:8081/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 500 INTERNAL_SERVER_ERROR from GET http://localhost:8081/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104)
		at reactor.core.publisher.Mono.block(Mono.java:1779)
		at com.citpl.common.gateway.commongateway.config.ValidationInterceptor.preHandle(ValidationInterceptor.java:70)
		at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:146)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1083)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
		at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at com.citpl.common.gateway.commongateway.filter.MDCFilter.doFilter(MDCFilter.java:37)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.cloud.gateway.server.mvc.filter.WeightCalculatorFilter.doFilter(WeightCalculatorFilter.java:229)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.cloud.gateway.server.mvc.filter.FormFilter.doFilter(FormFilter.java:93)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-28 13:28:27 [] DEBUG r.n.r.PooledConnectionProvider - [4f57bd9f, L:/127.0.0.1:58097 ! R:localhost/127.0.0.1:8081] Channel closed, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:28:27 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [4f57bd9f, L:/127.0.0.1:58097 ! R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x4f57bd9f, L:/127.0.0.1:58097 ! R:localhost/127.0.0.1:8081]}, [disconnecting])
2025-02-28 13:28:27 [] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /error
2025-02-28 13:28:27 [] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔄 Using HTTP Method: GET
2025-02-28 13:28:27 [] DEBUG r.n.r.PooledConnectionProvider - [0c02ec54] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:28:27 [] DEBUG r.netty.transport.TransportConfig - [0c02ec54] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-28 13:28:27 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 13:28:27 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 13:28:27 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 13:28:27 [] DEBUG r.netty.transport.TransportConnector - [0c02ec54] Connecting to [localhost/127.0.0.1:8081].
2025-02-28 13:28:27 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [0c02ec54, L:/127.0.0.1:58098 - R:localhost/127.0.0.1:8081] Registering pool release on close event for channel
2025-02-28 13:28:27 [] DEBUG r.n.r.PooledConnectionProvider - [0c02ec54, L:/127.0.0.1:58098 - R:localhost/127.0.0.1:8081] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:28:27 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [0c02ec54, L:/127.0.0.1:58098 - R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x0c02ec54, L:/127.0.0.1:58098 - R:localhost/127.0.0.1:8081]}, [connected])
2025-02-28 13:28:27 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [0c02ec54-1, L:/127.0.0.1:58098 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0x0c02ec54, L:/127.0.0.1:58098 - R:localhost/127.0.0.1:8081]}}, [configured])
2025-02-28 13:28:27 [] DEBUG r.n.http.client.HttpClientConnect - [0c02ec54-1, L:/127.0.0.1:58098 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate, method=GET}
2025-02-28 13:28:27 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [0c02ec54-1, L:/127.0.0.1:58098 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x0c02ec54, L:/127.0.0.1:58098 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 13:28:27 [] DEBUG r.n.http.client.HttpClientOperations - [0c02ec54-1, L:/127.0.0.1:58098 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 13:28:27 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [0c02ec54-1, L:/127.0.0.1:58098 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x0c02ec54, L:/127.0.0.1:58098 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 13:28:27 [] DEBUG r.n.http.client.HttpClientOperations - [0c02ec54-1, L:/127.0.0.1:58098 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 500 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
Connection: <filtered>
2025-02-28 13:28:27 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [0c02ec54-1, L:/127.0.0.1:58098 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x0c02ec54, L:/127.0.0.1:58098 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 13:28:27 [] DEBUG reactor.netty.channel.FluxReceive - [0c02ec54-1, L:/127.0.0.1:58098 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-28 13:28:27 [] DEBUG r.n.http.client.HttpClientOperations - [0c02ec54-1, L:/127.0.0.1:58098 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 13:28:27 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [0c02ec54, L:/127.0.0.1:58098 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x0c02ec54, L:/127.0.0.1:58098 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 13:28:27 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [0c02ec54, L:/127.0.0.1:58098 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x0c02ec54, L:/127.0.0.1:58098 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 13:28:27 [] DEBUG r.n.r.PooledConnectionProvider - [0c02ec54, L:/127.0.0.1:58098 ! R:localhost/127.0.0.1:8081] Channel closed, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:28:27 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [0c02ec54, L:/127.0.0.1:58098 ! R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x0c02ec54, L:/127.0.0.1:58098 ! R:localhost/127.0.0.1:8081]}, [disconnecting])
2025-02-28 13:28:27 [] ERROR c.c.c.g.c.c.ValidationInterceptor - ⚠️ Error calling validation service
org.springframework.web.reactive.function.client.WebClientResponseException$InternalServerError: 500 Internal Server Error from GET http://localhost:8081/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 500 INTERNAL_SERVER_ERROR from GET http://localhost:8081/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104)
		at reactor.core.publisher.Mono.block(Mono.java:1779)
		at com.citpl.common.gateway.commongateway.config.ValidationInterceptor.preHandle(ValidationInterceptor.java:70)
		at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:146)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1083)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
		at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:633)
		at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:411)
		at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:331)
		at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:268)
		at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:380)
		at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:208)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:151)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-28 13:28:39 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [534b070a, L:/127.0.0.1:58038 ! R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x534b070a, L:/127.0.0.1:58038 ! R:localhost/127.0.0.1:8081]}, [disconnecting])
2025-02-28 13:28:57 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 13:28:57 [b00446d4-04c3-4c65-a7e6-bdf2d8f22486] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 13:28:57 [b00446d4-04c3-4c65-a7e6-bdf2d8f22486] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /users
2025-02-28 13:28:57 [b00446d4-04c3-4c65-a7e6-bdf2d8f22486] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔄 Using HTTP Method: GET
2025-02-28 13:28:57 [] DEBUG r.n.r.PooledConnectionProvider - [2c972551] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:28:57 [] DEBUG r.netty.transport.TransportConfig - [2c972551] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-28 13:28:57 [] DEBUG r.netty.transport.TransportConnector - [2c972551] Connecting to [localhost/127.0.0.1:8081].
2025-02-28 13:28:57 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [2c972551, L:/127.0.0.1:58115 - R:localhost/127.0.0.1:8081] Registering pool release on close event for channel
2025-02-28 13:28:57 [] DEBUG r.n.r.PooledConnectionProvider - [2c972551, L:/127.0.0.1:58115 - R:localhost/127.0.0.1:8081] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:28:57 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [2c972551, L:/127.0.0.1:58115 - R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x2c972551, L:/127.0.0.1:58115 - R:localhost/127.0.0.1:8081]}, [connected])
2025-02-28 13:28:57 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [2c972551-1, L:/127.0.0.1:58115 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0x2c972551, L:/127.0.0.1:58115 - R:localhost/127.0.0.1:8081]}}, [configured])
2025-02-28 13:28:57 [] DEBUG r.n.http.client.HttpClientConnect - [2c972551-1, L:/127.0.0.1:58115 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate, method=GET}
2025-02-28 13:28:57 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [2c972551-1, L:/127.0.0.1:58115 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x2c972551, L:/127.0.0.1:58115 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 13:28:57 [] DEBUG r.n.http.client.HttpClientOperations - [2c972551-1, L:/127.0.0.1:58115 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 13:28:57 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [2c972551-1, L:/127.0.0.1:58115 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x2c972551, L:/127.0.0.1:58115 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 13:28:58 [] DEBUG r.n.http.client.HttpClientOperations - [2c972551-1, L:/127.0.0.1:58115 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 500 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
Connection: <filtered>
2025-02-28 13:28:58 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [2c972551-1, L:/127.0.0.1:58115 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x2c972551, L:/127.0.0.1:58115 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 13:28:58 [] DEBUG reactor.netty.channel.FluxReceive - [2c972551-1, L:/127.0.0.1:58115 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-28 13:28:58 [] DEBUG r.n.http.client.HttpClientOperations - [2c972551-1, L:/127.0.0.1:58115 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 13:28:58 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [2c972551, L:/127.0.0.1:58115 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x2c972551, L:/127.0.0.1:58115 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 13:28:58 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [2c972551, L:/127.0.0.1:58115 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x2c972551, L:/127.0.0.1:58115 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 13:28:58 [] DEBUG r.n.r.PooledConnectionProvider - [2c972551, L:/127.0.0.1:58115 ! R:localhost/127.0.0.1:8081] Channel closed, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:28:58 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [2c972551, L:/127.0.0.1:58115 ! R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x2c972551, L:/127.0.0.1:58115 ! R:localhost/127.0.0.1:8081]}, [disconnecting])
2025-02-28 13:28:58 [b00446d4-04c3-4c65-a7e6-bdf2d8f22486] ERROR c.c.c.g.c.c.ValidationInterceptor - ⚠️ Error calling validation service
org.springframework.web.reactive.function.client.WebClientResponseException$InternalServerError: 500 Internal Server Error from GET http://localhost:8081/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 500 INTERNAL_SERVER_ERROR from GET http://localhost:8081/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104)
		at reactor.core.publisher.Mono.block(Mono.java:1779)
		at com.citpl.common.gateway.commongateway.config.ValidationInterceptor.preHandle(ValidationInterceptor.java:70)
		at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:146)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1083)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
		at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at com.citpl.common.gateway.commongateway.filter.MDCFilter.doFilter(MDCFilter.java:37)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.cloud.gateway.server.mvc.filter.WeightCalculatorFilter.doFilter(WeightCalculatorFilter.java:229)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.cloud.gateway.server.mvc.filter.FormFilter.doFilter(FormFilter.java:93)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-28 13:28:58 [] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /error
2025-02-28 13:28:58 [] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔄 Using HTTP Method: GET
2025-02-28 13:28:58 [] DEBUG r.n.r.PooledConnectionProvider - [765243ab] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:28:58 [] DEBUG r.netty.transport.TransportConfig - [765243ab] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-28 13:28:58 [] DEBUG r.netty.transport.TransportConnector - [765243ab] Connecting to [localhost/127.0.0.1:8081].
2025-02-28 13:28:58 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [765243ab, L:/127.0.0.1:58116 - R:localhost/127.0.0.1:8081] Registering pool release on close event for channel
2025-02-28 13:28:58 [] DEBUG r.n.r.PooledConnectionProvider - [765243ab, L:/127.0.0.1:58116 - R:localhost/127.0.0.1:8081] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:28:58 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [765243ab, L:/127.0.0.1:58116 - R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x765243ab, L:/127.0.0.1:58116 - R:localhost/127.0.0.1:8081]}, [connected])
2025-02-28 13:28:58 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [765243ab-1, L:/127.0.0.1:58116 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0x765243ab, L:/127.0.0.1:58116 - R:localhost/127.0.0.1:8081]}}, [configured])
2025-02-28 13:28:58 [] DEBUG r.n.http.client.HttpClientConnect - [765243ab-1, L:/127.0.0.1:58116 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate, method=GET}
2025-02-28 13:28:58 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [765243ab-1, L:/127.0.0.1:58116 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x765243ab, L:/127.0.0.1:58116 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 13:28:58 [] DEBUG r.n.http.client.HttpClientOperations - [765243ab-1, L:/127.0.0.1:58116 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 13:28:58 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [765243ab-1, L:/127.0.0.1:58116 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x765243ab, L:/127.0.0.1:58116 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 13:28:58 [] DEBUG r.n.http.client.HttpClientOperations - [765243ab-1, L:/127.0.0.1:58116 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 500 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
Connection: <filtered>
2025-02-28 13:28:58 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [765243ab-1, L:/127.0.0.1:58116 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x765243ab, L:/127.0.0.1:58116 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 13:28:58 [] DEBUG reactor.netty.channel.FluxReceive - [765243ab-1, L:/127.0.0.1:58116 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-28 13:28:58 [] DEBUG r.n.http.client.HttpClientOperations - [765243ab-1, L:/127.0.0.1:58116 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 13:28:58 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [765243ab, L:/127.0.0.1:58116 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x765243ab, L:/127.0.0.1:58116 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 13:28:58 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [765243ab, L:/127.0.0.1:58116 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x765243ab, L:/127.0.0.1:58116 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 13:28:58 [] DEBUG r.n.r.PooledConnectionProvider - [765243ab, L:/127.0.0.1:58116 ! R:localhost/127.0.0.1:8081] Channel closed, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:28:58 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [765243ab, L:/127.0.0.1:58116 ! R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x765243ab, L:/127.0.0.1:58116 ! R:localhost/127.0.0.1:8081]}, [disconnecting])
2025-02-28 13:28:58 [] ERROR c.c.c.g.c.c.ValidationInterceptor - ⚠️ Error calling validation service
org.springframework.web.reactive.function.client.WebClientResponseException$InternalServerError: 500 Internal Server Error from GET http://localhost:8081/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 500 INTERNAL_SERVER_ERROR from GET http://localhost:8081/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104)
		at reactor.core.publisher.Mono.block(Mono.java:1779)
		at com.citpl.common.gateway.commongateway.config.ValidationInterceptor.preHandle(ValidationInterceptor.java:70)
		at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:146)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1083)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
		at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:633)
		at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:411)
		at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:331)
		at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:268)
		at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:380)
		at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:208)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:151)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-28 13:28:59 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 13:28:59 [514b4338-e562-4370-bdf9-e6dc7e368fb3] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 13:28:59 [514b4338-e562-4370-bdf9-e6dc7e368fb3] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /users
2025-02-28 13:28:59 [514b4338-e562-4370-bdf9-e6dc7e368fb3] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔄 Using HTTP Method: GET
2025-02-28 13:28:59 [] DEBUG r.n.r.PooledConnectionProvider - [1dec5078] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:28:59 [] DEBUG r.netty.transport.TransportConfig - [1dec5078] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-28 13:28:59 [] DEBUG r.netty.transport.TransportConnector - [1dec5078] Connecting to [localhost/127.0.0.1:8081].
2025-02-28 13:28:59 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [1dec5078, L:/127.0.0.1:58123 - R:localhost/127.0.0.1:8081] Registering pool release on close event for channel
2025-02-28 13:28:59 [] DEBUG r.n.r.PooledConnectionProvider - [1dec5078, L:/127.0.0.1:58123 - R:localhost/127.0.0.1:8081] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:28:59 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [1dec5078, L:/127.0.0.1:58123 - R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x1dec5078, L:/127.0.0.1:58123 - R:localhost/127.0.0.1:8081]}, [connected])
2025-02-28 13:28:59 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [1dec5078-1, L:/127.0.0.1:58123 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0x1dec5078, L:/127.0.0.1:58123 - R:localhost/127.0.0.1:8081]}}, [configured])
2025-02-28 13:28:59 [] DEBUG r.n.http.client.HttpClientConnect - [1dec5078-1, L:/127.0.0.1:58123 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate, method=GET}
2025-02-28 13:28:59 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [1dec5078-1, L:/127.0.0.1:58123 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x1dec5078, L:/127.0.0.1:58123 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 13:28:59 [] DEBUG r.n.http.client.HttpClientOperations - [1dec5078-1, L:/127.0.0.1:58123 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 13:28:59 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [1dec5078-1, L:/127.0.0.1:58123 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x1dec5078, L:/127.0.0.1:58123 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 13:28:59 [] DEBUG r.n.http.client.HttpClientOperations - [1dec5078-1, L:/127.0.0.1:58123 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 500 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
Connection: <filtered>
2025-02-28 13:28:59 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [1dec5078-1, L:/127.0.0.1:58123 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x1dec5078, L:/127.0.0.1:58123 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 13:28:59 [] DEBUG reactor.netty.channel.FluxReceive - [1dec5078-1, L:/127.0.0.1:58123 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-28 13:28:59 [] DEBUG r.n.http.client.HttpClientOperations - [1dec5078-1, L:/127.0.0.1:58123 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 13:28:59 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [1dec5078, L:/127.0.0.1:58123 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x1dec5078, L:/127.0.0.1:58123 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 13:28:59 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [1dec5078, L:/127.0.0.1:58123 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x1dec5078, L:/127.0.0.1:58123 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 13:28:59 [] DEBUG r.n.r.PooledConnectionProvider - [1dec5078, L:/127.0.0.1:58123 ! R:localhost/127.0.0.1:8081] Channel closed, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:28:59 [514b4338-e562-4370-bdf9-e6dc7e368fb3] ERROR c.c.c.g.c.c.ValidationInterceptor - ⚠️ Error calling validation service
org.springframework.web.reactive.function.client.WebClientResponseException$InternalServerError: 500 Internal Server Error from GET http://localhost:8081/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 500 INTERNAL_SERVER_ERROR from GET http://localhost:8081/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104)
		at reactor.core.publisher.Mono.block(Mono.java:1779)
		at com.citpl.common.gateway.commongateway.config.ValidationInterceptor.preHandle(ValidationInterceptor.java:70)
		at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:146)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1083)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
		at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at com.citpl.common.gateway.commongateway.filter.MDCFilter.doFilter(MDCFilter.java:37)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.cloud.gateway.server.mvc.filter.WeightCalculatorFilter.doFilter(WeightCalculatorFilter.java:229)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.cloud.gateway.server.mvc.filter.FormFilter.doFilter(FormFilter.java:93)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-28 13:28:59 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [1dec5078, L:/127.0.0.1:58123 ! R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x1dec5078, L:/127.0.0.1:58123 ! R:localhost/127.0.0.1:8081]}, [disconnecting])
2025-02-28 13:28:59 [] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /error
2025-02-28 13:28:59 [] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔄 Using HTTP Method: GET
2025-02-28 13:28:59 [] DEBUG r.n.r.PooledConnectionProvider - [f01ce3c1] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:28:59 [] DEBUG r.netty.transport.TransportConfig - [f01ce3c1] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-28 13:28:59 [] DEBUG r.netty.transport.TransportConnector - [f01ce3c1] Connecting to [localhost/127.0.0.1:8081].
2025-02-28 13:28:59 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f01ce3c1, L:/127.0.0.1:58124 - R:localhost/127.0.0.1:8081] Registering pool release on close event for channel
2025-02-28 13:28:59 [] DEBUG r.n.r.PooledConnectionProvider - [f01ce3c1, L:/127.0.0.1:58124 - R:localhost/127.0.0.1:8081] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:28:59 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f01ce3c1, L:/127.0.0.1:58124 - R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0xf01ce3c1, L:/127.0.0.1:58124 - R:localhost/127.0.0.1:8081]}, [connected])
2025-02-28 13:28:59 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f01ce3c1-1, L:/127.0.0.1:58124 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0xf01ce3c1, L:/127.0.0.1:58124 - R:localhost/127.0.0.1:8081]}}, [configured])
2025-02-28 13:28:59 [] DEBUG r.n.http.client.HttpClientConnect - [f01ce3c1-1, L:/127.0.0.1:58124 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate, method=GET}
2025-02-28 13:28:59 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f01ce3c1-1, L:/127.0.0.1:58124 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xf01ce3c1, L:/127.0.0.1:58124 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 13:28:59 [] DEBUG r.n.http.client.HttpClientOperations - [f01ce3c1-1, L:/127.0.0.1:58124 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 13:28:59 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f01ce3c1-1, L:/127.0.0.1:58124 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xf01ce3c1, L:/127.0.0.1:58124 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 13:28:59 [] DEBUG r.n.http.client.HttpClientOperations - [f01ce3c1-1, L:/127.0.0.1:58124 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 500 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
Connection: <filtered>
2025-02-28 13:28:59 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f01ce3c1-1, L:/127.0.0.1:58124 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xf01ce3c1, L:/127.0.0.1:58124 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 13:28:59 [] DEBUG reactor.netty.channel.FluxReceive - [f01ce3c1-1, L:/127.0.0.1:58124 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-28 13:28:59 [] DEBUG r.n.http.client.HttpClientOperations - [f01ce3c1-1, L:/127.0.0.1:58124 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 13:28:59 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f01ce3c1, L:/127.0.0.1:58124 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xf01ce3c1, L:/127.0.0.1:58124 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 13:28:59 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f01ce3c1, L:/127.0.0.1:58124 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xf01ce3c1, L:/127.0.0.1:58124 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 13:28:59 [] DEBUG r.n.r.PooledConnectionProvider - [f01ce3c1, L:/127.0.0.1:58124 ! R:localhost/127.0.0.1:8081] Channel closed, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:28:59 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f01ce3c1, L:/127.0.0.1:58124 ! R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0xf01ce3c1, L:/127.0.0.1:58124 ! R:localhost/127.0.0.1:8081]}, [disconnecting])
2025-02-28 13:28:59 [] ERROR c.c.c.g.c.c.ValidationInterceptor - ⚠️ Error calling validation service
org.springframework.web.reactive.function.client.WebClientResponseException$InternalServerError: 500 Internal Server Error from GET http://localhost:8081/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 500 INTERNAL_SERVER_ERROR from GET http://localhost:8081/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104)
		at reactor.core.publisher.Mono.block(Mono.java:1779)
		at com.citpl.common.gateway.commongateway.config.ValidationInterceptor.preHandle(ValidationInterceptor.java:70)
		at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:146)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1083)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
		at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:633)
		at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:411)
		at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:331)
		at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:268)
		at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:380)
		at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:208)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:151)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-28 13:29:01 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 13:29:01 [2aad458d-2a45-48ba-883d-00a2aaa3b593] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 13:29:01 [2aad458d-2a45-48ba-883d-00a2aaa3b593] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /users
2025-02-28 13:29:01 [2aad458d-2a45-48ba-883d-00a2aaa3b593] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔄 Using HTTP Method: GET
2025-02-28 13:29:01 [] DEBUG r.n.r.PooledConnectionProvider - [6b256462] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:29:01 [] DEBUG r.netty.transport.TransportConfig - [6b256462] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-28 13:29:01 [] DEBUG r.netty.transport.TransportConnector - [6b256462] Connecting to [localhost/127.0.0.1:8081].
2025-02-28 13:29:01 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [6b256462, L:/127.0.0.1:58127 - R:localhost/127.0.0.1:8081] Registering pool release on close event for channel
2025-02-28 13:29:01 [] DEBUG r.n.r.PooledConnectionProvider - [6b256462, L:/127.0.0.1:58127 - R:localhost/127.0.0.1:8081] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:29:01 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [6b256462, L:/127.0.0.1:58127 - R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x6b256462, L:/127.0.0.1:58127 - R:localhost/127.0.0.1:8081]}, [connected])
2025-02-28 13:29:01 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [6b256462-1, L:/127.0.0.1:58127 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0x6b256462, L:/127.0.0.1:58127 - R:localhost/127.0.0.1:8081]}}, [configured])
2025-02-28 13:29:01 [] DEBUG r.n.http.client.HttpClientConnect - [6b256462-1, L:/127.0.0.1:58127 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate, method=GET}
2025-02-28 13:29:01 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [6b256462-1, L:/127.0.0.1:58127 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x6b256462, L:/127.0.0.1:58127 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 13:29:01 [] DEBUG r.n.http.client.HttpClientOperations - [6b256462-1, L:/127.0.0.1:58127 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 13:29:01 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [6b256462-1, L:/127.0.0.1:58127 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x6b256462, L:/127.0.0.1:58127 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 13:29:01 [] DEBUG r.n.http.client.HttpClientOperations - [6b256462-1, L:/127.0.0.1:58127 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 500 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
Connection: <filtered>
2025-02-28 13:29:01 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [6b256462-1, L:/127.0.0.1:58127 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x6b256462, L:/127.0.0.1:58127 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 13:29:01 [] DEBUG reactor.netty.channel.FluxReceive - [6b256462-1, L:/127.0.0.1:58127 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-28 13:29:01 [] DEBUG r.n.http.client.HttpClientOperations - [6b256462-1, L:/127.0.0.1:58127 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 13:29:01 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [6b256462, L:/127.0.0.1:58127 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x6b256462, L:/127.0.0.1:58127 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 13:29:01 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [6b256462, L:/127.0.0.1:58127 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x6b256462, L:/127.0.0.1:58127 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 13:29:01 [] DEBUG r.n.r.PooledConnectionProvider - [6b256462, L:/127.0.0.1:58127 ! R:localhost/127.0.0.1:8081] Channel closed, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:29:01 [2aad458d-2a45-48ba-883d-00a2aaa3b593] ERROR c.c.c.g.c.c.ValidationInterceptor - ⚠️ Error calling validation service
org.springframework.web.reactive.function.client.WebClientResponseException$InternalServerError: 500 Internal Server Error from GET http://localhost:8081/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 500 INTERNAL_SERVER_ERROR from GET http://localhost:8081/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104)
		at reactor.core.publisher.Mono.block(Mono.java:1779)
		at com.citpl.common.gateway.commongateway.config.ValidationInterceptor.preHandle(ValidationInterceptor.java:70)
		at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:146)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1083)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
		at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at com.citpl.common.gateway.commongateway.filter.MDCFilter.doFilter(MDCFilter.java:37)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.cloud.gateway.server.mvc.filter.WeightCalculatorFilter.doFilter(WeightCalculatorFilter.java:229)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.cloud.gateway.server.mvc.filter.FormFilter.doFilter(FormFilter.java:93)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-28 13:29:01 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [6b256462, L:/127.0.0.1:58127 ! R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x6b256462, L:/127.0.0.1:58127 ! R:localhost/127.0.0.1:8081]}, [disconnecting])
2025-02-28 13:29:01 [] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /error
2025-02-28 13:29:01 [] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔄 Using HTTP Method: GET
2025-02-28 13:29:01 [] DEBUG r.n.r.PooledConnectionProvider - [35bcf9ff] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:29:01 [] DEBUG r.netty.transport.TransportConfig - [35bcf9ff] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-28 13:29:01 [] DEBUG r.netty.transport.TransportConnector - [35bcf9ff] Connecting to [localhost/127.0.0.1:8081].
2025-02-28 13:29:01 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [35bcf9ff, L:/127.0.0.1:58128 - R:localhost/127.0.0.1:8081] Registering pool release on close event for channel
2025-02-28 13:29:01 [] DEBUG r.n.r.PooledConnectionProvider - [35bcf9ff, L:/127.0.0.1:58128 - R:localhost/127.0.0.1:8081] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:29:01 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [35bcf9ff, L:/127.0.0.1:58128 - R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x35bcf9ff, L:/127.0.0.1:58128 - R:localhost/127.0.0.1:8081]}, [connected])
2025-02-28 13:29:01 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [35bcf9ff-1, L:/127.0.0.1:58128 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0x35bcf9ff, L:/127.0.0.1:58128 - R:localhost/127.0.0.1:8081]}}, [configured])
2025-02-28 13:29:01 [] DEBUG r.n.http.client.HttpClientConnect - [35bcf9ff-1, L:/127.0.0.1:58128 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate, method=GET}
2025-02-28 13:29:01 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [35bcf9ff-1, L:/127.0.0.1:58128 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x35bcf9ff, L:/127.0.0.1:58128 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 13:29:01 [] DEBUG r.n.http.client.HttpClientOperations - [35bcf9ff-1, L:/127.0.0.1:58128 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 13:29:01 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [35bcf9ff-1, L:/127.0.0.1:58128 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x35bcf9ff, L:/127.0.0.1:58128 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 13:29:01 [] DEBUG r.n.http.client.HttpClientOperations - [35bcf9ff-1, L:/127.0.0.1:58128 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 500 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
Connection: <filtered>
2025-02-28 13:29:01 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [35bcf9ff-1, L:/127.0.0.1:58128 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x35bcf9ff, L:/127.0.0.1:58128 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 13:29:01 [] DEBUG reactor.netty.channel.FluxReceive - [35bcf9ff-1, L:/127.0.0.1:58128 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-28 13:29:01 [] DEBUG r.n.http.client.HttpClientOperations - [35bcf9ff-1, L:/127.0.0.1:58128 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 13:29:01 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [35bcf9ff, L:/127.0.0.1:58128 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x35bcf9ff, L:/127.0.0.1:58128 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 13:29:01 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [35bcf9ff, L:/127.0.0.1:58128 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x35bcf9ff, L:/127.0.0.1:58128 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 13:29:01 [] ERROR c.c.c.g.c.c.ValidationInterceptor - ⚠️ Error calling validation service
org.springframework.web.reactive.function.client.WebClientResponseException$InternalServerError: 500 Internal Server Error from GET http://localhost:8081/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 500 INTERNAL_SERVER_ERROR from GET http://localhost:8081/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104)
		at reactor.core.publisher.Mono.block(Mono.java:1779)
		at com.citpl.common.gateway.commongateway.config.ValidationInterceptor.preHandle(ValidationInterceptor.java:70)
		at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:146)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1083)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
		at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:633)
		at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:411)
		at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:331)
		at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:268)
		at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:380)
		at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:208)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:151)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-28 13:29:01 [] DEBUG r.n.r.PooledConnectionProvider - [35bcf9ff, L:/127.0.0.1:58128 ! R:localhost/127.0.0.1:8081] Channel closed, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:29:01 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [35bcf9ff, L:/127.0.0.1:58128 ! R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x35bcf9ff, L:/127.0.0.1:58128 ! R:localhost/127.0.0.1:8081]}, [disconnecting])
2025-02-28 13:29:26 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 13:29:26 [c8fb82b4-a8a8-46e4-945c-748f4166f06b] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 13:29:26 [c8fb82b4-a8a8-46e4-945c-748f4166f06b] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /users
2025-02-28 13:29:26 [c8fb82b4-a8a8-46e4-945c-748f4166f06b] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔄 Using HTTP Method: GET
2025-02-28 13:29:26 [] DEBUG r.n.r.PooledConnectionProvider - [de02ada6] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:29:26 [] DEBUG r.netty.transport.TransportConfig - [de02ada6] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-28 13:29:26 [] DEBUG r.netty.transport.TransportConnector - [de02ada6] Connecting to [localhost/127.0.0.1:8081].
2025-02-28 13:29:26 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [de02ada6, L:/127.0.0.1:58140 - R:localhost/127.0.0.1:8081] Registering pool release on close event for channel
2025-02-28 13:29:26 [] DEBUG r.n.r.PooledConnectionProvider - [de02ada6, L:/127.0.0.1:58140 - R:localhost/127.0.0.1:8081] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:29:26 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [de02ada6, L:/127.0.0.1:58140 - R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0xde02ada6, L:/127.0.0.1:58140 - R:localhost/127.0.0.1:8081]}, [connected])
2025-02-28 13:29:26 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [de02ada6-1, L:/127.0.0.1:58140 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0xde02ada6, L:/127.0.0.1:58140 - R:localhost/127.0.0.1:8081]}}, [configured])
2025-02-28 13:29:26 [] DEBUG r.n.http.client.HttpClientConnect - [de02ada6-1, L:/127.0.0.1:58140 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate, method=GET}
2025-02-28 13:29:26 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [de02ada6-1, L:/127.0.0.1:58140 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xde02ada6, L:/127.0.0.1:58140 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 13:29:26 [] DEBUG r.n.http.client.HttpClientOperations - [de02ada6-1, L:/127.0.0.1:58140 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 13:29:26 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [de02ada6-1, L:/127.0.0.1:58140 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xde02ada6, L:/127.0.0.1:58140 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 13:29:26 [] DEBUG r.n.http.client.HttpClientOperations - [de02ada6-1, L:/127.0.0.1:58140 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 500 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
Connection: <filtered>
2025-02-28 13:29:26 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [de02ada6-1, L:/127.0.0.1:58140 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xde02ada6, L:/127.0.0.1:58140 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 13:29:26 [] DEBUG reactor.netty.channel.FluxReceive - [de02ada6-1, L:/127.0.0.1:58140 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-28 13:29:26 [] DEBUG r.n.http.client.HttpClientOperations - [de02ada6-1, L:/127.0.0.1:58140 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 13:29:26 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [de02ada6, L:/127.0.0.1:58140 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xde02ada6, L:/127.0.0.1:58140 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 13:29:26 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [de02ada6, L:/127.0.0.1:58140 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xde02ada6, L:/127.0.0.1:58140 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 13:29:26 [] DEBUG r.n.r.PooledConnectionProvider - [de02ada6, L:/127.0.0.1:58140 ! R:localhost/127.0.0.1:8081] Channel closed, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:29:26 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [de02ada6, L:/127.0.0.1:58140 ! R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0xde02ada6, L:/127.0.0.1:58140 ! R:localhost/127.0.0.1:8081]}, [disconnecting])
2025-02-28 13:29:26 [c8fb82b4-a8a8-46e4-945c-748f4166f06b] ERROR c.c.c.g.c.c.ValidationInterceptor - ⚠️ Error calling validation service
org.springframework.web.reactive.function.client.WebClientResponseException$InternalServerError: 500 Internal Server Error from GET http://localhost:8081/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 500 INTERNAL_SERVER_ERROR from GET http://localhost:8081/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104)
		at reactor.core.publisher.Mono.block(Mono.java:1779)
		at com.citpl.common.gateway.commongateway.config.ValidationInterceptor.preHandle(ValidationInterceptor.java:70)
		at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:146)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1083)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
		at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at com.citpl.common.gateway.commongateway.filter.MDCFilter.doFilter(MDCFilter.java:37)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.cloud.gateway.server.mvc.filter.WeightCalculatorFilter.doFilter(WeightCalculatorFilter.java:229)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.cloud.gateway.server.mvc.filter.FormFilter.doFilter(FormFilter.java:93)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-28 13:29:26 [] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /error
2025-02-28 13:29:26 [] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔄 Using HTTP Method: GET
2025-02-28 13:29:26 [] DEBUG r.n.r.PooledConnectionProvider - [57ba6fce] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:29:26 [] DEBUG r.netty.transport.TransportConfig - [57ba6fce] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-28 13:29:26 [] DEBUG r.netty.transport.TransportConnector - [57ba6fce] Connecting to [localhost/127.0.0.1:8081].
2025-02-28 13:29:26 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [57ba6fce, L:/127.0.0.1:58141 - R:localhost/127.0.0.1:8081] Registering pool release on close event for channel
2025-02-28 13:29:26 [] DEBUG r.n.r.PooledConnectionProvider - [57ba6fce, L:/127.0.0.1:58141 - R:localhost/127.0.0.1:8081] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:29:26 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [57ba6fce, L:/127.0.0.1:58141 - R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x57ba6fce, L:/127.0.0.1:58141 - R:localhost/127.0.0.1:8081]}, [connected])
2025-02-28 13:29:26 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [57ba6fce-1, L:/127.0.0.1:58141 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0x57ba6fce, L:/127.0.0.1:58141 - R:localhost/127.0.0.1:8081]}}, [configured])
2025-02-28 13:29:26 [] DEBUG r.n.http.client.HttpClientConnect - [57ba6fce-1, L:/127.0.0.1:58141 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate, method=GET}
2025-02-28 13:29:26 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [57ba6fce-1, L:/127.0.0.1:58141 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x57ba6fce, L:/127.0.0.1:58141 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 13:29:26 [] DEBUG r.n.http.client.HttpClientOperations - [57ba6fce-1, L:/127.0.0.1:58141 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 13:29:26 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [57ba6fce-1, L:/127.0.0.1:58141 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x57ba6fce, L:/127.0.0.1:58141 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 13:29:26 [] DEBUG r.n.http.client.HttpClientOperations - [57ba6fce-1, L:/127.0.0.1:58141 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 500 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
Connection: <filtered>
2025-02-28 13:29:26 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [57ba6fce-1, L:/127.0.0.1:58141 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x57ba6fce, L:/127.0.0.1:58141 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 13:29:26 [] DEBUG reactor.netty.channel.FluxReceive - [57ba6fce-1, L:/127.0.0.1:58141 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-28 13:29:26 [] DEBUG r.n.http.client.HttpClientOperations - [57ba6fce-1, L:/127.0.0.1:58141 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 13:29:26 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [57ba6fce, L:/127.0.0.1:58141 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x57ba6fce, L:/127.0.0.1:58141 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 13:29:26 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [57ba6fce, L:/127.0.0.1:58141 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x57ba6fce, L:/127.0.0.1:58141 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 13:29:26 [] DEBUG r.n.r.PooledConnectionProvider - [57ba6fce, L:/127.0.0.1:58141 ! R:localhost/127.0.0.1:8081] Channel closed, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:29:26 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [57ba6fce, L:/127.0.0.1:58141 ! R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x57ba6fce, L:/127.0.0.1:58141 ! R:localhost/127.0.0.1:8081]}, [disconnecting])
2025-02-28 13:29:26 [] ERROR c.c.c.g.c.c.ValidationInterceptor - ⚠️ Error calling validation service
org.springframework.web.reactive.function.client.WebClientResponseException$InternalServerError: 500 Internal Server Error from GET http://localhost:8081/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 500 INTERNAL_SERVER_ERROR from GET http://localhost:8081/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104)
		at reactor.core.publisher.Mono.block(Mono.java:1779)
		at com.citpl.common.gateway.commongateway.config.ValidationInterceptor.preHandle(ValidationInterceptor.java:70)
		at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:146)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1083)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
		at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:633)
		at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:411)
		at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:331)
		at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:268)
		at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:380)
		at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:208)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:151)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-28 13:30:40 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 13:30:40 [9957339c-58f7-4531-b362-fa505ddf2c45] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 13:30:40 [9957339c-58f7-4531-b362-fa505ddf2c45] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /users
2025-02-28 13:30:40 [9957339c-58f7-4531-b362-fa505ddf2c45] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔄 Using HTTP Method: GET
2025-02-28 13:30:40 [] DEBUG r.n.r.PooledConnectionProvider - [d8403f3d] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:30:40 [] DEBUG r.netty.transport.TransportConfig - [d8403f3d] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-28 13:30:40 [] DEBUG r.netty.transport.TransportConnector - [d8403f3d] Connecting to [localhost/127.0.0.1:8081].
2025-02-28 13:30:40 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [d8403f3d, L:/127.0.0.1:58171 - R:localhost/127.0.0.1:8081] Registering pool release on close event for channel
2025-02-28 13:30:40 [] DEBUG r.n.r.PooledConnectionProvider - [d8403f3d, L:/127.0.0.1:58171 - R:localhost/127.0.0.1:8081] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:30:40 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [d8403f3d, L:/127.0.0.1:58171 - R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0xd8403f3d, L:/127.0.0.1:58171 - R:localhost/127.0.0.1:8081]}, [connected])
2025-02-28 13:30:40 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [d8403f3d-1, L:/127.0.0.1:58171 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0xd8403f3d, L:/127.0.0.1:58171 - R:localhost/127.0.0.1:8081]}}, [configured])
2025-02-28 13:30:40 [] DEBUG r.n.http.client.HttpClientConnect - [d8403f3d-1, L:/127.0.0.1:58171 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate, method=GET}
2025-02-28 13:30:40 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [d8403f3d-1, L:/127.0.0.1:58171 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xd8403f3d, L:/127.0.0.1:58171 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 13:30:40 [] DEBUG r.n.http.client.HttpClientOperations - [d8403f3d-1, L:/127.0.0.1:58171 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 13:30:40 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [d8403f3d-1, L:/127.0.0.1:58171 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xd8403f3d, L:/127.0.0.1:58171 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 13:30:40 [] DEBUG r.n.http.client.HttpClientOperations - [d8403f3d-1, L:/127.0.0.1:58171 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 500 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
Connection: <filtered>
2025-02-28 13:30:40 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [d8403f3d-1, L:/127.0.0.1:58171 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xd8403f3d, L:/127.0.0.1:58171 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 13:30:40 [] DEBUG reactor.netty.channel.FluxReceive - [d8403f3d-1, L:/127.0.0.1:58171 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-28 13:30:40 [] DEBUG r.n.http.client.HttpClientOperations - [d8403f3d-1, L:/127.0.0.1:58171 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 13:30:40 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [d8403f3d, L:/127.0.0.1:58171 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xd8403f3d, L:/127.0.0.1:58171 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 13:30:40 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [d8403f3d, L:/127.0.0.1:58171 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xd8403f3d, L:/127.0.0.1:58171 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 13:30:40 [] DEBUG r.n.r.PooledConnectionProvider - [d8403f3d, L:/127.0.0.1:58171 ! R:localhost/127.0.0.1:8081] Channel closed, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:30:40 [9957339c-58f7-4531-b362-fa505ddf2c45] ERROR c.c.c.g.c.c.ValidationInterceptor - ⚠️ Error calling validation service
org.springframework.web.reactive.function.client.WebClientResponseException$InternalServerError: 500 Internal Server Error from GET http://localhost:8081/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 500 INTERNAL_SERVER_ERROR from GET http://localhost:8081/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104)
		at reactor.core.publisher.Mono.block(Mono.java:1779)
		at com.citpl.common.gateway.commongateway.config.ValidationInterceptor.preHandle(ValidationInterceptor.java:70)
		at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:146)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1083)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
		at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at com.citpl.common.gateway.commongateway.filter.MDCFilter.doFilter(MDCFilter.java:37)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.cloud.gateway.server.mvc.filter.WeightCalculatorFilter.doFilter(WeightCalculatorFilter.java:229)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.cloud.gateway.server.mvc.filter.FormFilter.doFilter(FormFilter.java:93)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-28 13:30:40 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [d8403f3d, L:/127.0.0.1:58171 ! R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0xd8403f3d, L:/127.0.0.1:58171 ! R:localhost/127.0.0.1:8081]}, [disconnecting])
2025-02-28 13:30:40 [] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /error
2025-02-28 13:30:40 [] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔄 Using HTTP Method: GET
2025-02-28 13:30:40 [] DEBUG r.n.r.PooledConnectionProvider - [f8092133] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:30:40 [] DEBUG r.netty.transport.TransportConfig - [f8092133] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-28 13:30:40 [] DEBUG r.netty.transport.TransportConnector - [f8092133] Connecting to [localhost/127.0.0.1:8081].
2025-02-28 13:30:40 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f8092133, L:/127.0.0.1:58172 - R:localhost/127.0.0.1:8081] Registering pool release on close event for channel
2025-02-28 13:30:40 [] DEBUG r.n.r.PooledConnectionProvider - [f8092133, L:/127.0.0.1:58172 - R:localhost/127.0.0.1:8081] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:30:40 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f8092133, L:/127.0.0.1:58172 - R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0xf8092133, L:/127.0.0.1:58172 - R:localhost/127.0.0.1:8081]}, [connected])
2025-02-28 13:30:40 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f8092133-1, L:/127.0.0.1:58172 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0xf8092133, L:/127.0.0.1:58172 - R:localhost/127.0.0.1:8081]}}, [configured])
2025-02-28 13:30:40 [] DEBUG r.n.http.client.HttpClientConnect - [f8092133-1, L:/127.0.0.1:58172 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate, method=GET}
2025-02-28 13:30:40 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f8092133-1, L:/127.0.0.1:58172 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xf8092133, L:/127.0.0.1:58172 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 13:30:40 [] DEBUG r.n.http.client.HttpClientOperations - [f8092133-1, L:/127.0.0.1:58172 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 13:30:40 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f8092133-1, L:/127.0.0.1:58172 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xf8092133, L:/127.0.0.1:58172 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 13:30:40 [] DEBUG r.n.http.client.HttpClientOperations - [f8092133-1, L:/127.0.0.1:58172 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 500 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
Connection: <filtered>
2025-02-28 13:30:40 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f8092133-1, L:/127.0.0.1:58172 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xf8092133, L:/127.0.0.1:58172 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 13:30:40 [] DEBUG reactor.netty.channel.FluxReceive - [f8092133-1, L:/127.0.0.1:58172 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-28 13:30:40 [] DEBUG r.n.http.client.HttpClientOperations - [f8092133-1, L:/127.0.0.1:58172 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 13:30:40 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f8092133, L:/127.0.0.1:58172 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xf8092133, L:/127.0.0.1:58172 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 13:30:40 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f8092133, L:/127.0.0.1:58172 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xf8092133, L:/127.0.0.1:58172 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 13:30:40 [] DEBUG r.n.r.PooledConnectionProvider - [f8092133, L:/127.0.0.1:58172 ! R:localhost/127.0.0.1:8081] Channel closed, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:30:40 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f8092133, L:/127.0.0.1:58172 ! R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0xf8092133, L:/127.0.0.1:58172 ! R:localhost/127.0.0.1:8081]}, [disconnecting])
2025-02-28 13:30:40 [] ERROR c.c.c.g.c.c.ValidationInterceptor - ⚠️ Error calling validation service
org.springframework.web.reactive.function.client.WebClientResponseException$InternalServerError: 500 Internal Server Error from GET http://localhost:8081/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 500 INTERNAL_SERVER_ERROR from GET http://localhost:8081/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104)
		at reactor.core.publisher.Mono.block(Mono.java:1779)
		at com.citpl.common.gateway.commongateway.config.ValidationInterceptor.preHandle(ValidationInterceptor.java:70)
		at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:146)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1083)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
		at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:633)
		at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:411)
		at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:331)
		at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:268)
		at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:380)
		at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:208)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:151)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-28 13:30:42 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 13:30:42 [88e71dee-82a4-4538-ad5f-06cbe1c75fc2] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 13:30:42 [88e71dee-82a4-4538-ad5f-06cbe1c75fc2] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /users
2025-02-28 13:30:42 [88e71dee-82a4-4538-ad5f-06cbe1c75fc2] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔄 Using HTTP Method: GET
2025-02-28 13:30:42 [] DEBUG r.n.r.PooledConnectionProvider - [b3a8686b] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:30:42 [] DEBUG r.netty.transport.TransportConfig - [b3a8686b] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-28 13:30:42 [] DEBUG r.netty.transport.TransportConnector - [b3a8686b] Connecting to [localhost/127.0.0.1:8081].
2025-02-28 13:30:42 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b3a8686b, L:/127.0.0.1:58179 - R:localhost/127.0.0.1:8081] Registering pool release on close event for channel
2025-02-28 13:30:42 [] DEBUG r.n.r.PooledConnectionProvider - [b3a8686b, L:/127.0.0.1:58179 - R:localhost/127.0.0.1:8081] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:30:42 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b3a8686b, L:/127.0.0.1:58179 - R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0xb3a8686b, L:/127.0.0.1:58179 - R:localhost/127.0.0.1:8081]}, [connected])
2025-02-28 13:30:42 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b3a8686b-1, L:/127.0.0.1:58179 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0xb3a8686b, L:/127.0.0.1:58179 - R:localhost/127.0.0.1:8081]}}, [configured])
2025-02-28 13:30:42 [] DEBUG r.n.http.client.HttpClientConnect - [b3a8686b-1, L:/127.0.0.1:58179 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate, method=GET}
2025-02-28 13:30:42 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b3a8686b-1, L:/127.0.0.1:58179 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xb3a8686b, L:/127.0.0.1:58179 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 13:30:42 [] DEBUG r.n.http.client.HttpClientOperations - [b3a8686b-1, L:/127.0.0.1:58179 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 13:30:42 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b3a8686b-1, L:/127.0.0.1:58179 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xb3a8686b, L:/127.0.0.1:58179 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 13:30:42 [] DEBUG r.n.http.client.HttpClientOperations - [b3a8686b-1, L:/127.0.0.1:58179 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 500 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
Connection: <filtered>
2025-02-28 13:30:42 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b3a8686b-1, L:/127.0.0.1:58179 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xb3a8686b, L:/127.0.0.1:58179 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 13:30:42 [] DEBUG reactor.netty.channel.FluxReceive - [b3a8686b-1, L:/127.0.0.1:58179 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-28 13:30:42 [] DEBUG r.n.http.client.HttpClientOperations - [b3a8686b-1, L:/127.0.0.1:58179 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 13:30:42 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b3a8686b, L:/127.0.0.1:58179 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xb3a8686b, L:/127.0.0.1:58179 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 13:30:42 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b3a8686b, L:/127.0.0.1:58179 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xb3a8686b, L:/127.0.0.1:58179 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 13:30:42 [] DEBUG r.n.r.PooledConnectionProvider - [b3a8686b, L:/127.0.0.1:58179 ! R:localhost/127.0.0.1:8081] Channel closed, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:30:42 [88e71dee-82a4-4538-ad5f-06cbe1c75fc2] ERROR c.c.c.g.c.c.ValidationInterceptor - ⚠️ Error calling validation service
org.springframework.web.reactive.function.client.WebClientResponseException$InternalServerError: 500 Internal Server Error from GET http://localhost:8081/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 500 INTERNAL_SERVER_ERROR from GET http://localhost:8081/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104)
		at reactor.core.publisher.Mono.block(Mono.java:1779)
		at com.citpl.common.gateway.commongateway.config.ValidationInterceptor.preHandle(ValidationInterceptor.java:70)
		at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:146)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1083)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
		at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at com.citpl.common.gateway.commongateway.filter.MDCFilter.doFilter(MDCFilter.java:37)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.cloud.gateway.server.mvc.filter.WeightCalculatorFilter.doFilter(WeightCalculatorFilter.java:229)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.cloud.gateway.server.mvc.filter.FormFilter.doFilter(FormFilter.java:93)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-28 13:30:42 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b3a8686b, L:/127.0.0.1:58179 ! R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0xb3a8686b, L:/127.0.0.1:58179 ! R:localhost/127.0.0.1:8081]}, [disconnecting])
2025-02-28 13:30:42 [] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /error
2025-02-28 13:30:42 [] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔄 Using HTTP Method: GET
2025-02-28 13:30:42 [] DEBUG r.n.r.PooledConnectionProvider - [ceb199ba] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:30:42 [] DEBUG r.netty.transport.TransportConfig - [ceb199ba] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-28 13:30:42 [] DEBUG r.netty.transport.TransportConnector - [ceb199ba] Connecting to [localhost/127.0.0.1:8081].
2025-02-28 13:30:42 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [ceb199ba, L:/127.0.0.1:58180 - R:localhost/127.0.0.1:8081] Registering pool release on close event for channel
2025-02-28 13:30:42 [] DEBUG r.n.r.PooledConnectionProvider - [ceb199ba, L:/127.0.0.1:58180 - R:localhost/127.0.0.1:8081] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:30:42 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [ceb199ba, L:/127.0.0.1:58180 - R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0xceb199ba, L:/127.0.0.1:58180 - R:localhost/127.0.0.1:8081]}, [connected])
2025-02-28 13:30:42 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [ceb199ba-1, L:/127.0.0.1:58180 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0xceb199ba, L:/127.0.0.1:58180 - R:localhost/127.0.0.1:8081]}}, [configured])
2025-02-28 13:30:42 [] DEBUG r.n.http.client.HttpClientConnect - [ceb199ba-1, L:/127.0.0.1:58180 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate, method=GET}
2025-02-28 13:30:42 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [ceb199ba-1, L:/127.0.0.1:58180 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xceb199ba, L:/127.0.0.1:58180 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 13:30:42 [] DEBUG r.n.http.client.HttpClientOperations - [ceb199ba-1, L:/127.0.0.1:58180 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 13:30:42 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [ceb199ba-1, L:/127.0.0.1:58180 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xceb199ba, L:/127.0.0.1:58180 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 13:30:42 [] DEBUG r.n.http.client.HttpClientOperations - [ceb199ba-1, L:/127.0.0.1:58180 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 500 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
Connection: <filtered>
2025-02-28 13:30:42 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [ceb199ba-1, L:/127.0.0.1:58180 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xceb199ba, L:/127.0.0.1:58180 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 13:30:42 [] DEBUG reactor.netty.channel.FluxReceive - [ceb199ba-1, L:/127.0.0.1:58180 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-28 13:30:42 [] DEBUG r.n.http.client.HttpClientOperations - [ceb199ba-1, L:/127.0.0.1:58180 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 13:30:42 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [ceb199ba, L:/127.0.0.1:58180 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xceb199ba, L:/127.0.0.1:58180 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 13:30:42 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [ceb199ba, L:/127.0.0.1:58180 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xceb199ba, L:/127.0.0.1:58180 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 13:30:42 [] ERROR c.c.c.g.c.c.ValidationInterceptor - ⚠️ Error calling validation service
org.springframework.web.reactive.function.client.WebClientResponseException$InternalServerError: 500 Internal Server Error from GET http://localhost:8081/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 500 INTERNAL_SERVER_ERROR from GET http://localhost:8081/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104)
		at reactor.core.publisher.Mono.block(Mono.java:1779)
		at com.citpl.common.gateway.commongateway.config.ValidationInterceptor.preHandle(ValidationInterceptor.java:70)
		at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:146)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1083)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
		at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:633)
		at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:411)
		at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:331)
		at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:268)
		at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:380)
		at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:208)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:151)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-28 13:30:42 [] DEBUG r.n.r.PooledConnectionProvider - [ceb199ba, L:/127.0.0.1:58180 ! R:localhost/127.0.0.1:8081] Channel closed, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:30:42 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [ceb199ba, L:/127.0.0.1:58180 ! R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0xceb199ba, L:/127.0.0.1:58180 ! R:localhost/127.0.0.1:8081]}, [disconnecting])
2025-02-28 13:30:57 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 13:30:57 [d6f0a845-cee9-4a99-8bfa-e39184c2ce1c] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 13:30:57 [d6f0a845-cee9-4a99-8bfa-e39184c2ce1c] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /users
2025-02-28 13:30:57 [d6f0a845-cee9-4a99-8bfa-e39184c2ce1c] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔄 Using HTTP Method: GET
2025-02-28 13:30:57 [] DEBUG r.n.r.PooledConnectionProvider - [9210ab7e] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:30:57 [] DEBUG r.netty.transport.TransportConfig - [9210ab7e] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-28 13:30:57 [] DEBUG r.netty.transport.TransportConnector - [9210ab7e] Connecting to [localhost/127.0.0.1:8081].
2025-02-28 13:30:57 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [9210ab7e, L:/127.0.0.1:58241 - R:localhost/127.0.0.1:8081] Registering pool release on close event for channel
2025-02-28 13:30:57 [] DEBUG r.n.r.PooledConnectionProvider - [9210ab7e, L:/127.0.0.1:58241 - R:localhost/127.0.0.1:8081] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:30:57 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [9210ab7e, L:/127.0.0.1:58241 - R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x9210ab7e, L:/127.0.0.1:58241 - R:localhost/127.0.0.1:8081]}, [connected])
2025-02-28 13:30:57 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [9210ab7e-1, L:/127.0.0.1:58241 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0x9210ab7e, L:/127.0.0.1:58241 - R:localhost/127.0.0.1:8081]}}, [configured])
2025-02-28 13:30:57 [] DEBUG r.n.http.client.HttpClientConnect - [9210ab7e-1, L:/127.0.0.1:58241 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate, method=GET}
2025-02-28 13:30:57 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [9210ab7e-1, L:/127.0.0.1:58241 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x9210ab7e, L:/127.0.0.1:58241 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 13:30:57 [] DEBUG r.n.http.client.HttpClientOperations - [9210ab7e-1, L:/127.0.0.1:58241 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 13:30:57 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [9210ab7e-1, L:/127.0.0.1:58241 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x9210ab7e, L:/127.0.0.1:58241 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 13:30:57 [] DEBUG r.n.http.client.HttpClientOperations - [9210ab7e-1, L:/127.0.0.1:58241 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 500 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
Connection: <filtered>
2025-02-28 13:30:57 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [9210ab7e-1, L:/127.0.0.1:58241 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x9210ab7e, L:/127.0.0.1:58241 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 13:30:57 [] DEBUG reactor.netty.channel.FluxReceive - [9210ab7e-1, L:/127.0.0.1:58241 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-28 13:30:57 [] DEBUG r.n.http.client.HttpClientOperations - [9210ab7e-1, L:/127.0.0.1:58241 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 13:30:57 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [9210ab7e, L:/127.0.0.1:58241 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x9210ab7e, L:/127.0.0.1:58241 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 13:30:57 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [9210ab7e, L:/127.0.0.1:58241 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x9210ab7e, L:/127.0.0.1:58241 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 13:30:57 [d6f0a845-cee9-4a99-8bfa-e39184c2ce1c] ERROR c.c.c.g.c.c.ValidationInterceptor - ⚠️ Error calling validation service
org.springframework.web.reactive.function.client.WebClientResponseException$InternalServerError: 500 Internal Server Error from GET http://localhost:8081/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 500 INTERNAL_SERVER_ERROR from GET http://localhost:8081/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104)
		at reactor.core.publisher.Mono.block(Mono.java:1779)
		at com.citpl.common.gateway.commongateway.config.ValidationInterceptor.preHandle(ValidationInterceptor.java:70)
		at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:146)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1083)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
		at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at com.citpl.common.gateway.commongateway.filter.MDCFilter.doFilter(MDCFilter.java:37)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.cloud.gateway.server.mvc.filter.WeightCalculatorFilter.doFilter(WeightCalculatorFilter.java:229)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.cloud.gateway.server.mvc.filter.FormFilter.doFilter(FormFilter.java:93)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-28 13:30:57 [] DEBUG r.n.r.PooledConnectionProvider - [9210ab7e, L:/127.0.0.1:58241 ! R:localhost/127.0.0.1:8081] Channel closed, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:30:57 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [9210ab7e, L:/127.0.0.1:58241 ! R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x9210ab7e, L:/127.0.0.1:58241 ! R:localhost/127.0.0.1:8081]}, [disconnecting])
2025-02-28 13:30:57 [] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /error
2025-02-28 13:30:57 [] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔄 Using HTTP Method: GET
2025-02-28 13:30:57 [] DEBUG r.n.r.PooledConnectionProvider - [eeed7a44] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:30:57 [] DEBUG r.netty.transport.TransportConfig - [eeed7a44] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-28 13:30:57 [] DEBUG r.netty.transport.TransportConnector - [eeed7a44] Connecting to [localhost/127.0.0.1:8081].
2025-02-28 13:30:57 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [eeed7a44, L:/127.0.0.1:58242 - R:localhost/127.0.0.1:8081] Registering pool release on close event for channel
2025-02-28 13:30:57 [] DEBUG r.n.r.PooledConnectionProvider - [eeed7a44, L:/127.0.0.1:58242 - R:localhost/127.0.0.1:8081] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:30:57 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [eeed7a44, L:/127.0.0.1:58242 - R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0xeeed7a44, L:/127.0.0.1:58242 - R:localhost/127.0.0.1:8081]}, [connected])
2025-02-28 13:30:57 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [eeed7a44-1, L:/127.0.0.1:58242 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0xeeed7a44, L:/127.0.0.1:58242 - R:localhost/127.0.0.1:8081]}}, [configured])
2025-02-28 13:30:57 [] DEBUG r.n.http.client.HttpClientConnect - [eeed7a44-1, L:/127.0.0.1:58242 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate, method=GET}
2025-02-28 13:30:57 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [eeed7a44-1, L:/127.0.0.1:58242 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xeeed7a44, L:/127.0.0.1:58242 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 13:30:57 [] DEBUG r.n.http.client.HttpClientOperations - [eeed7a44-1, L:/127.0.0.1:58242 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 13:30:57 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [eeed7a44-1, L:/127.0.0.1:58242 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xeeed7a44, L:/127.0.0.1:58242 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 13:30:57 [] DEBUG r.n.http.client.HttpClientOperations - [eeed7a44-1, L:/127.0.0.1:58242 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 500 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
Connection: <filtered>
2025-02-28 13:30:57 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [eeed7a44-1, L:/127.0.0.1:58242 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xeeed7a44, L:/127.0.0.1:58242 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 13:30:57 [] DEBUG reactor.netty.channel.FluxReceive - [eeed7a44-1, L:/127.0.0.1:58242 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-28 13:30:57 [] DEBUG r.n.http.client.HttpClientOperations - [eeed7a44-1, L:/127.0.0.1:58242 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 13:30:57 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [eeed7a44, L:/127.0.0.1:58242 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xeeed7a44, L:/127.0.0.1:58242 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 13:30:57 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [eeed7a44, L:/127.0.0.1:58242 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xeeed7a44, L:/127.0.0.1:58242 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 13:30:57 [] DEBUG r.n.r.PooledConnectionProvider - [eeed7a44, L:/127.0.0.1:58242 ! R:localhost/127.0.0.1:8081] Channel closed, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:30:57 [] ERROR c.c.c.g.c.c.ValidationInterceptor - ⚠️ Error calling validation service
org.springframework.web.reactive.function.client.WebClientResponseException$InternalServerError: 500 Internal Server Error from GET http://localhost:8081/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 500 INTERNAL_SERVER_ERROR from GET http://localhost:8081/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104)
		at reactor.core.publisher.Mono.block(Mono.java:1779)
		at com.citpl.common.gateway.commongateway.config.ValidationInterceptor.preHandle(ValidationInterceptor.java:70)
		at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:146)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1083)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
		at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:633)
		at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:411)
		at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:331)
		at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:268)
		at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:380)
		at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:208)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:151)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-28 13:30:57 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [eeed7a44, L:/127.0.0.1:58242 ! R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0xeeed7a44, L:/127.0.0.1:58242 ! R:localhost/127.0.0.1:8081]}, [disconnecting])
2025-02-28 13:31:04 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 13:31:04 [9f033686-8588-4f13-b385-39e6bfed8bbd] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 13:31:04 [9f033686-8588-4f13-b385-39e6bfed8bbd] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /users
2025-02-28 13:31:04 [9f033686-8588-4f13-b385-39e6bfed8bbd] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔄 Using HTTP Method: GET
2025-02-28 13:31:04 [] DEBUG r.n.r.PooledConnectionProvider - [2878e360] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:31:04 [] DEBUG r.netty.transport.TransportConfig - [2878e360] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-28 13:31:04 [] DEBUG r.netty.transport.TransportConnector - [2878e360] Connecting to [localhost/127.0.0.1:8081].
2025-02-28 13:31:04 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [2878e360, L:/127.0.0.1:58254 - R:localhost/127.0.0.1:8081] Registering pool release on close event for channel
2025-02-28 13:31:04 [] DEBUG r.n.r.PooledConnectionProvider - [2878e360, L:/127.0.0.1:58254 - R:localhost/127.0.0.1:8081] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:31:04 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [2878e360, L:/127.0.0.1:58254 - R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x2878e360, L:/127.0.0.1:58254 - R:localhost/127.0.0.1:8081]}, [connected])
2025-02-28 13:31:04 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [2878e360-1, L:/127.0.0.1:58254 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0x2878e360, L:/127.0.0.1:58254 - R:localhost/127.0.0.1:8081]}}, [configured])
2025-02-28 13:31:04 [] DEBUG r.n.http.client.HttpClientConnect - [2878e360-1, L:/127.0.0.1:58254 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate, method=GET}
2025-02-28 13:31:04 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [2878e360-1, L:/127.0.0.1:58254 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x2878e360, L:/127.0.0.1:58254 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 13:31:04 [] DEBUG r.n.http.client.HttpClientOperations - [2878e360-1, L:/127.0.0.1:58254 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 13:31:04 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [2878e360-1, L:/127.0.0.1:58254 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x2878e360, L:/127.0.0.1:58254 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 13:31:04 [] DEBUG r.n.http.client.HttpClientOperations - [2878e360-1, L:/127.0.0.1:58254 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 500 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
Connection: <filtered>
2025-02-28 13:31:04 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [2878e360-1, L:/127.0.0.1:58254 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x2878e360, L:/127.0.0.1:58254 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 13:31:04 [] DEBUG reactor.netty.channel.FluxReceive - [2878e360-1, L:/127.0.0.1:58254 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-28 13:31:04 [] DEBUG r.n.http.client.HttpClientOperations - [2878e360-1, L:/127.0.0.1:58254 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 13:31:04 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [2878e360, L:/127.0.0.1:58254 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x2878e360, L:/127.0.0.1:58254 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 13:31:04 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [2878e360, L:/127.0.0.1:58254 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x2878e360, L:/127.0.0.1:58254 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 13:31:04 [] DEBUG r.n.r.PooledConnectionProvider - [2878e360, L:/127.0.0.1:58254 ! R:localhost/127.0.0.1:8081] Channel closed, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:31:04 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [2878e360, L:/127.0.0.1:58254 ! R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x2878e360, L:/127.0.0.1:58254 ! R:localhost/127.0.0.1:8081]}, [disconnecting])
2025-02-28 13:31:04 [9f033686-8588-4f13-b385-39e6bfed8bbd] ERROR c.c.c.g.c.c.ValidationInterceptor - ⚠️ Error calling validation service
org.springframework.web.reactive.function.client.WebClientResponseException$InternalServerError: 500 Internal Server Error from GET http://localhost:8081/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 500 INTERNAL_SERVER_ERROR from GET http://localhost:8081/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104)
		at reactor.core.publisher.Mono.block(Mono.java:1779)
		at com.citpl.common.gateway.commongateway.config.ValidationInterceptor.preHandle(ValidationInterceptor.java:70)
		at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:146)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1083)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
		at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at com.citpl.common.gateway.commongateway.filter.MDCFilter.doFilter(MDCFilter.java:37)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.cloud.gateway.server.mvc.filter.WeightCalculatorFilter.doFilter(WeightCalculatorFilter.java:229)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.cloud.gateway.server.mvc.filter.FormFilter.doFilter(FormFilter.java:93)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-28 13:31:04 [] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /error
2025-02-28 13:31:04 [] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔄 Using HTTP Method: GET
2025-02-28 13:31:04 [] DEBUG r.n.r.PooledConnectionProvider - [ed293d92] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:31:04 [] DEBUG r.netty.transport.TransportConfig - [ed293d92] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-28 13:31:04 [] DEBUG r.netty.transport.TransportConnector - [ed293d92] Connecting to [localhost/127.0.0.1:8081].
2025-02-28 13:31:04 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [ed293d92, L:/127.0.0.1:58255 - R:localhost/127.0.0.1:8081] Registering pool release on close event for channel
2025-02-28 13:31:04 [] DEBUG r.n.r.PooledConnectionProvider - [ed293d92, L:/127.0.0.1:58255 - R:localhost/127.0.0.1:8081] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:31:04 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [ed293d92, L:/127.0.0.1:58255 - R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0xed293d92, L:/127.0.0.1:58255 - R:localhost/127.0.0.1:8081]}, [connected])
2025-02-28 13:31:04 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [ed293d92-1, L:/127.0.0.1:58255 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0xed293d92, L:/127.0.0.1:58255 - R:localhost/127.0.0.1:8081]}}, [configured])
2025-02-28 13:31:04 [] DEBUG r.n.http.client.HttpClientConnect - [ed293d92-1, L:/127.0.0.1:58255 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate, method=GET}
2025-02-28 13:31:04 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [ed293d92-1, L:/127.0.0.1:58255 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xed293d92, L:/127.0.0.1:58255 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 13:31:04 [] DEBUG r.n.http.client.HttpClientOperations - [ed293d92-1, L:/127.0.0.1:58255 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 13:31:04 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [ed293d92-1, L:/127.0.0.1:58255 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xed293d92, L:/127.0.0.1:58255 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 13:31:04 [] DEBUG r.n.http.client.HttpClientOperations - [ed293d92-1, L:/127.0.0.1:58255 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 500 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
Connection: <filtered>
2025-02-28 13:31:04 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [ed293d92-1, L:/127.0.0.1:58255 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xed293d92, L:/127.0.0.1:58255 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 13:31:04 [] DEBUG reactor.netty.channel.FluxReceive - [ed293d92-1, L:/127.0.0.1:58255 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-28 13:31:04 [] DEBUG r.n.http.client.HttpClientOperations - [ed293d92-1, L:/127.0.0.1:58255 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 13:31:04 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [ed293d92, L:/127.0.0.1:58255 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xed293d92, L:/127.0.0.1:58255 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 13:31:04 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [ed293d92, L:/127.0.0.1:58255 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xed293d92, L:/127.0.0.1:58255 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 13:31:04 [] DEBUG r.n.r.PooledConnectionProvider - [ed293d92, L:/127.0.0.1:58255 ! R:localhost/127.0.0.1:8081] Channel closed, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:31:04 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [ed293d92, L:/127.0.0.1:58255 ! R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0xed293d92, L:/127.0.0.1:58255 ! R:localhost/127.0.0.1:8081]}, [disconnecting])
2025-02-28 13:31:04 [] ERROR c.c.c.g.c.c.ValidationInterceptor - ⚠️ Error calling validation service
org.springframework.web.reactive.function.client.WebClientResponseException$InternalServerError: 500 Internal Server Error from GET http://localhost:8081/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 500 INTERNAL_SERVER_ERROR from GET http://localhost:8081/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104)
		at reactor.core.publisher.Mono.block(Mono.java:1779)
		at com.citpl.common.gateway.commongateway.config.ValidationInterceptor.preHandle(ValidationInterceptor.java:70)
		at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:146)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1083)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
		at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:633)
		at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:411)
		at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:331)
		at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:268)
		at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:380)
		at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:208)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:151)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-28 13:31:44 [] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-02-28 13:31:44 [] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-02-28 13:31:44 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 4 thread-local buffer(s) from thread: reactor-http-nio-6
2025-02-28 13:31:44 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 4 thread-local buffer(s) from thread: reactor-http-nio-12
2025-02-28 13:31:44 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 4 thread-local buffer(s) from thread: reactor-http-nio-7
2025-02-28 13:31:44 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 4 thread-local buffer(s) from thread: reactor-http-nio-5
2025-02-28 13:31:44 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 4 thread-local buffer(s) from thread: reactor-http-nio-11
2025-02-28 13:31:44 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 4 thread-local buffer(s) from thread: reactor-http-nio-4
2025-02-28 13:31:44 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 7 thread-local buffer(s) from thread: reactor-http-nio-3
2025-02-28 13:31:44 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 4 thread-local buffer(s) from thread: reactor-http-nio-8
2025-02-28 13:31:44 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 4 thread-local buffer(s) from thread: reactor-http-nio-2
2025-02-28 13:31:44 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 4 thread-local buffer(s) from thread: reactor-http-nio-1
2025-02-28 13:31:44 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 4 thread-local buffer(s) from thread: reactor-http-nio-10
2025-02-28 13:31:44 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 4 thread-local buffer(s) from thread: reactor-http-nio-9
2025-02-28 13:31:48 [] DEBUG org.jboss.logging - Logging Provider: org.jboss.logging.Slf4jLoggerProvider found via system property
2025-02-28 13:31:48 [] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final
2025-02-28 13:31:48 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-02-28 13:31:48 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-02-28 13:31:48 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-02-28 13:31:48 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-02-28 13:31:48 [] DEBUG o.h.v.i.e.r.TraversableResolvers - Cannot find jakarta.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2025-02-28 13:31:48 [] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-02-28 13:31:48 [] INFO  c.c.c.g.c.CommongatewayApplication - Starting CommongatewayApplication using Java 17.0.12 with PID 21872 (D:\WORKSPACE\API-GATEWAY\commongateway\target\classes started by CITPL in D:\WORKSPACE\API-GATEWAY)
2025-02-28 13:31:48 [] DEBUG c.c.c.g.c.CommongatewayApplication - Running with Spring Boot v3.4.2, Spring v6.2.2
2025-02-28 13:31:48 [] INFO  c.c.c.g.c.CommongatewayApplication - No active profile set, falling back to 1 default profile: "default"
2025-02-28 13:31:48 [] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-02-28 13:31:48 [] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-02-28 13:31:48 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-02-28 13:31:48 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-02-28 13:31:48 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-02-28 13:31:48 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-02-28 13:31:48 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-02-28 13:31:48 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-02-28 13:31:49 [] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=d2aee5ef-86a6-3b95-abd8-708d95e66676
2025-02-28 13:31:49 [] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-02-28 13:31:49 [] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-02-28 13:31:49 [] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-02-28 13:31:49 [] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.34]
2025-02-28 13:31:49 [] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-02-28 13:31:49 [] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1595 ms
2025-02-28 13:31:49 [] DEBUG i.n.u.i.l.InternalLoggerFactory - Using SLF4J as the default logging framework
2025-02-28 13:31:49 [] DEBUG i.n.util.internal.PlatformDependent0 - -Dio.netty.noUnsafe: false
2025-02-28 13:31:49 [] DEBUG i.n.util.internal.PlatformDependent0 - Java version: 17
2025-02-28 13:31:49 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe.theUnsafe: available
2025-02-28 13:31:50 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe base methods: all available
2025-02-28 13:31:50 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe.storeFence: available
2025-02-28 13:31:50 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.Buffer.address: available
2025-02-28 13:31:50 [] DEBUG i.n.util.internal.PlatformDependent0 - direct buffer constructor: unavailable: Reflective setAccessible(true) disabled
2025-02-28 13:31:50 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.Bits.unaligned: available, true
2025-02-28 13:31:50 [] DEBUG i.n.util.internal.PlatformDependent0 - jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable: class io.netty.util.internal.PlatformDependent0$7 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @3e77a1ed
2025-02-28 13:31:50 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.DirectByteBuffer.<init>(long, {int,long}): unavailable
2025-02-28 13:31:50 [] DEBUG i.n.util.internal.PlatformDependent - sun.misc.Unsafe: available
2025-02-28 13:31:50 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.tmpdir: C:\Users\CITPL\AppData\Local\Temp (java.io.tmpdir)
2025-02-28 13:31:50 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.bitMode: 64 (sun.arch.data.model)
2025-02-28 13:31:50 [] DEBUG i.n.util.internal.PlatformDependent - Platform: Windows
2025-02-28 13:31:50 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.maxDirectMemory: -1 bytes
2025-02-28 13:31:50 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.uninitializedArrayAllocationThreshold: -1
2025-02-28 13:31:50 [] DEBUG io.netty.util.internal.CleanerJava9 - java.nio.ByteBuffer.cleaner(): available
2025-02-28 13:31:50 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.noPreferDirect: false
2025-02-28 13:31:50 [] DEBUG reactor.util.Loggers - Using Slf4j logging framework
2025-02-28 13:31:50 [] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-02-28 13:31:50 [] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2025-02-28 13:31:50 [] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2025-02-28 13:31:50 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-02-28 13:31:50 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via user class loader
2025-02-28 13:31:50 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-02-28 13:31:50 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-02-28 13:31:50 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-02-28 13:31:50 [] DEBUG o.h.v.i.e.r.TraversableResolvers - Cannot find jakarta.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2025-02-28 13:31:50 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-02-28 13:31:50 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-02-28 13:31:50 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-02-28 13:31:50 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-02-28 13:31:50 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-02-28 13:31:50 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-02-28 13:31:50 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	c.c.c.g.c.c.HomeController:
	{GET [/home]}: get()
2025-02-28 13:31:50 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2025-02-28 13:31:50 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 'beanNameHandlerMapping' {}
2025-02-28 13:31:50 [] DEBUG _.s.w.s.HandlerMapping.Mappings - Mapped /validate/** -> ProxyExchangeHandlerFunction
/users/** -> ProxyExchangeHandlerFunction
2025-02-28 13:31:50 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2025-02-28 13:31:50 [] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-02-28 13:31:51 [] DEBUG i.n.u.i.InternalThreadLocalMap - -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2025-02-28 13:31:51 [] DEBUG i.n.u.i.InternalThreadLocalMap - -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2025-02-28 13:31:51 [] DEBUG io.netty.util.ResourceLeakDetector - -Dio.netty.leakDetection.level: simple
2025-02-28 13:31:51 [] DEBUG io.netty.util.ResourceLeakDetector - -Dio.netty.leakDetection.targetRecords: 4
2025-02-28 13:31:51 [] DEBUG i.n.handler.codec.compression.Brotli - brotli4j not in the classpath; Brotli support will be unavailable.
2025-02-28 13:31:51 [] DEBUG reactor.netty.tcp.TcpResources - [http] resources will use the default LoopResources: DefaultLoopResources {prefix=reactor-http, daemon=true, selectCount=12, workerCount=12}
2025-02-28 13:31:51 [] DEBUG reactor.netty.tcp.TcpResources - [http] resources will use the default ConnectionProvider: reactor.netty.resources.DefaultPooledConnectionProvider@6b108bb6
2025-02-28 13:31:51 [] DEBUG r.netty.resources.DefaultLoopIOUring - Default io_uring support : false
2025-02-28 13:31:51 [] DEBUG r.netty.resources.DefaultLoopEpoll - Default Epoll support : false
2025-02-28 13:31:51 [] DEBUG r.netty.resources.DefaultLoopKQueue - Default KQueue support : false
2025-02-28 13:31:51 [] DEBUG i.n.c.MultithreadEventLoopGroup - -Dio.netty.eventLoopThreads: 24
2025-02-28 13:31:51 [] DEBUG i.n.u.concurrent.GlobalEventExecutor - -Dio.netty.globalEventExecutor.quietPeriodSeconds: 1
2025-02-28 13:31:51 [] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.noKeySetOptimization: false
2025-02-28 13:31:51 [] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.selectorAutoRebuildThreshold: 512
2025-02-28 13:31:51 [] DEBUG i.n.util.internal.PlatformDependent - org.jctools-core.MpscChunkedArrayQueue: available
2025-02-28 13:31:51 [] DEBUG io.netty.util.NetUtil - -Djava.net.preferIPv4Stack: false
2025-02-28 13:31:51 [] DEBUG io.netty.util.NetUtil - -Djava.net.preferIPv6Addresses: false
2025-02-28 13:31:51 [] DEBUG i.netty.util.NetUtilInitializations - Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2025-02-28 13:31:51 [] DEBUG io.netty.util.NetUtil - Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2025-02-28 13:31:51 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default ResolvedAddressTypes: IPV4_ONLY
2025-02-28 13:31:51 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Localhost address: localhost/127.0.0.1
2025-02-28 13:31:51 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Windows hostname: DESKTOP-P307093
2025-02-28 13:31:51 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default search domains: []
2025-02-28 13:31:51 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default UnixResolverOptions{ndots=1, timeout=5, attempts=16}
2025-02-28 13:31:51 [] DEBUG i.n.r.DefaultHostsFileEntriesResolver - -Dio.netty.hostsFileRefreshInterval: 0
2025-02-28 13:31:51 [] DEBUG i.n.r.d.DefaultDnsServerAddressStreamProvider - Default DNS servers: [/8.8.8.8:53, /4.2.2.2:53] (sun.net.dns.ResolverConfiguration)
2025-02-28 13:31:51 [] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-02-28 13:31:51 [] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-02-28 13:31:51 [] INFO  c.c.c.g.c.CommongatewayApplication - Started CommongatewayApplication in 3.963 seconds (process running for 4.904)
2025-02-28 13:31:57 [] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-02-28 13:31:57 [] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-02-28 13:31:57 [] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 0 ms
2025-02-28 13:31:57 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 13:31:57 [cb7e6cd9-3e52-490b-9814-1ce89f94de22] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 13:31:57 [cb7e6cd9-3e52-490b-9814-1ce89f94de22] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /users
2025-02-28 13:31:57 [cb7e6cd9-3e52-490b-9814-1ce89f94de22] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔄 Using HTTP Method: GET
2025-02-28 13:31:57 [cb7e6cd9-3e52-490b-9814-1ce89f94de22] DEBUG r.n.r.PooledConnectionProvider - Creating a new [http] client pool [PoolFactory{evictionInterval=PT0S, leasingStrategy=fifo, maxConnections=500, maxIdleTime=-1, maxLifeTime=-1, metricsEnabled=false, pendingAcquireMaxCount=1000, pendingAcquireTimeout=45000}] for [localhost/<unresolved>:8081]
2025-02-28 13:31:57 [cb7e6cd9-3e52-490b-9814-1ce89f94de22] DEBUG io.netty.channel.DefaultChannelId - -Dio.netty.processId: 21872 (auto-detected)
2025-02-28 13:31:57 [cb7e6cd9-3e52-490b-9814-1ce89f94de22] DEBUG io.netty.channel.DefaultChannelId - -Dio.netty.machineId: 00:15:5d:ff:fe:02:b5:1f (auto-detected)
2025-02-28 13:31:57 [cb7e6cd9-3e52-490b-9814-1ce89f94de22] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.numHeapArenas: 24
2025-02-28 13:31:57 [cb7e6cd9-3e52-490b-9814-1ce89f94de22] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.numDirectArenas: 24
2025-02-28 13:31:57 [cb7e6cd9-3e52-490b-9814-1ce89f94de22] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.pageSize: 8192
2025-02-28 13:31:57 [cb7e6cd9-3e52-490b-9814-1ce89f94de22] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxOrder: 9
2025-02-28 13:31:57 [cb7e6cd9-3e52-490b-9814-1ce89f94de22] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.chunkSize: 4194304
2025-02-28 13:31:57 [cb7e6cd9-3e52-490b-9814-1ce89f94de22] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.smallCacheSize: 256
2025-02-28 13:31:57 [cb7e6cd9-3e52-490b-9814-1ce89f94de22] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.normalCacheSize: 64
2025-02-28 13:31:57 [cb7e6cd9-3e52-490b-9814-1ce89f94de22] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2025-02-28 13:31:57 [cb7e6cd9-3e52-490b-9814-1ce89f94de22] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.cacheTrimInterval: 8192
2025-02-28 13:31:57 [cb7e6cd9-3e52-490b-9814-1ce89f94de22] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.cacheTrimIntervalMillis: 0
2025-02-28 13:31:57 [cb7e6cd9-3e52-490b-9814-1ce89f94de22] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.useCacheForAllThreads: false
2025-02-28 13:31:57 [cb7e6cd9-3e52-490b-9814-1ce89f94de22] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
2025-02-28 13:31:57 [cb7e6cd9-3e52-490b-9814-1ce89f94de22] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.disableCacheFinalizersForFastThreadLocalThreads: false
2025-02-28 13:31:57 [cb7e6cd9-3e52-490b-9814-1ce89f94de22] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.allocator.type: pooled
2025-02-28 13:31:57 [cb7e6cd9-3e52-490b-9814-1ce89f94de22] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.threadLocalDirectBufferSize: 0
2025-02-28 13:31:57 [cb7e6cd9-3e52-490b-9814-1ce89f94de22] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.maxThreadLocalCharBufferSize: 16384
2025-02-28 13:31:57 [] DEBUG r.n.r.PooledConnectionProvider - [1095c413] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:31:57 [] DEBUG io.netty.buffer.AbstractByteBuf - -Dio.netty.buffer.checkAccessible: true
2025-02-28 13:31:57 [] DEBUG io.netty.buffer.AbstractByteBuf - -Dio.netty.buffer.checkBounds: true
2025-02-28 13:31:57 [] DEBUG i.n.util.ResourceLeakDetectorFactory - Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@1eba7d81
2025-02-28 13:31:57 [] DEBUG r.netty.transport.TransportConfig - [1095c413] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-28 13:31:57 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 13:31:57 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 13:31:57 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 13:31:57 [] DEBUG i.n.b.ChannelInitializerExtensions - -Dio.netty.bootstrap.extensions: null
2025-02-28 13:31:57 [] DEBUG r.netty.transport.TransportConnector - [1095c413] Connecting to [localhost/127.0.0.1:8081].
2025-02-28 13:31:57 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [1095c413, L:/127.0.0.1:58282 - R:localhost/127.0.0.1:8081] Registering pool release on close event for channel
2025-02-28 13:31:57 [] DEBUG r.n.r.PooledConnectionProvider - [1095c413, L:/127.0.0.1:58282 - R:localhost/127.0.0.1:8081] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:31:57 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [1095c413, L:/127.0.0.1:58282 - R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x1095c413, L:/127.0.0.1:58282 - R:localhost/127.0.0.1:8081]}, [connected])
2025-02-28 13:31:57 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [1095c413-1, L:/127.0.0.1:58282 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0x1095c413, L:/127.0.0.1:58282 - R:localhost/127.0.0.1:8081]}}, [configured])
2025-02-28 13:31:57 [] DEBUG r.n.http.client.HttpClientConnect - [1095c413-1, L:/127.0.0.1:58282 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate, method=GET}
2025-02-28 13:31:57 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [1095c413-1, L:/127.0.0.1:58282 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x1095c413, L:/127.0.0.1:58282 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 13:31:57 [] DEBUG r.n.http.client.HttpClientOperations - [1095c413-1, L:/127.0.0.1:58282 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 13:31:57 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.maxCapacityPerThread: 4096
2025-02-28 13:31:57 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.ratio: 8
2025-02-28 13:31:57 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.chunkSize: 32
2025-02-28 13:31:57 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.blocking: false
2025-02-28 13:31:57 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.batchFastThreadLocalOnly: true
2025-02-28 13:31:57 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [1095c413-1, L:/127.0.0.1:58282 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x1095c413, L:/127.0.0.1:58282 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 13:31:57 [] DEBUG i.n.handler.codec.compression.Zstd - zstd-jni not in the classpath; Zstd support will be unavailable.
2025-02-28 13:31:57 [] DEBUG r.n.http.client.HttpClientOperations - [1095c413-1, L:/127.0.0.1:58282 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 500 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
Connection: <filtered>
2025-02-28 13:31:57 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [1095c413-1, L:/127.0.0.1:58282 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x1095c413, L:/127.0.0.1:58282 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 13:31:57 [] DEBUG reactor.netty.channel.FluxReceive - [1095c413-1, L:/127.0.0.1:58282 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-28 13:31:57 [] DEBUG r.n.http.client.HttpClientOperations - [1095c413-1, L:/127.0.0.1:58282 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 13:31:57 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [1095c413, L:/127.0.0.1:58282 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x1095c413, L:/127.0.0.1:58282 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 13:31:57 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [1095c413, L:/127.0.0.1:58282 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x1095c413, L:/127.0.0.1:58282 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 13:31:57 [] DEBUG r.n.r.PooledConnectionProvider - [1095c413, L:/127.0.0.1:58282 ! R:localhost/127.0.0.1:8081] Channel closed, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:31:57 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [1095c413, L:/127.0.0.1:58282 ! R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x1095c413, L:/127.0.0.1:58282 ! R:localhost/127.0.0.1:8081]}, [disconnecting])
2025-02-28 13:31:57 [cb7e6cd9-3e52-490b-9814-1ce89f94de22] ERROR c.c.c.g.c.c.ValidationInterceptor - ⚠️ Error calling validation service
org.springframework.web.reactive.function.client.WebClientResponseException$InternalServerError: 500 Internal Server Error from GET http://localhost:8081/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 500 INTERNAL_SERVER_ERROR from GET http://localhost:8081/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104)
		at reactor.core.publisher.Mono.block(Mono.java:1779)
		at com.citpl.common.gateway.commongateway.config.ValidationInterceptor.preHandle(ValidationInterceptor.java:70)
		at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:146)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1083)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
		at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at com.citpl.common.gateway.commongateway.filter.MDCFilter.doFilter(MDCFilter.java:37)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.cloud.gateway.server.mvc.filter.WeightCalculatorFilter.doFilter(WeightCalculatorFilter.java:229)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.cloud.gateway.server.mvc.filter.FormFilter.doFilter(FormFilter.java:93)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-28 13:31:57 [] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /error
2025-02-28 13:31:57 [] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔄 Using HTTP Method: GET
2025-02-28 13:31:57 [] DEBUG r.n.r.PooledConnectionProvider - [fa25d72e] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:31:57 [] DEBUG r.netty.transport.TransportConfig - [fa25d72e] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-28 13:31:57 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 13:31:57 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 13:31:57 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 13:31:57 [] DEBUG r.netty.transport.TransportConnector - [fa25d72e] Connecting to [localhost/127.0.0.1:8081].
2025-02-28 13:31:57 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [fa25d72e, L:/127.0.0.1:58283 - R:localhost/127.0.0.1:8081] Registering pool release on close event for channel
2025-02-28 13:31:57 [] DEBUG r.n.r.PooledConnectionProvider - [fa25d72e, L:/127.0.0.1:58283 - R:localhost/127.0.0.1:8081] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:31:57 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [fa25d72e, L:/127.0.0.1:58283 - R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0xfa25d72e, L:/127.0.0.1:58283 - R:localhost/127.0.0.1:8081]}, [connected])
2025-02-28 13:31:57 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [fa25d72e-1, L:/127.0.0.1:58283 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0xfa25d72e, L:/127.0.0.1:58283 - R:localhost/127.0.0.1:8081]}}, [configured])
2025-02-28 13:31:57 [] DEBUG r.n.http.client.HttpClientConnect - [fa25d72e-1, L:/127.0.0.1:58283 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate, method=GET}
2025-02-28 13:31:57 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [fa25d72e-1, L:/127.0.0.1:58283 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xfa25d72e, L:/127.0.0.1:58283 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 13:31:57 [] DEBUG r.n.http.client.HttpClientOperations - [fa25d72e-1, L:/127.0.0.1:58283 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 13:31:57 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [fa25d72e-1, L:/127.0.0.1:58283 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xfa25d72e, L:/127.0.0.1:58283 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 13:31:57 [] DEBUG r.n.http.client.HttpClientOperations - [fa25d72e-1, L:/127.0.0.1:58283 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 500 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
Connection: <filtered>
2025-02-28 13:31:57 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [fa25d72e-1, L:/127.0.0.1:58283 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xfa25d72e, L:/127.0.0.1:58283 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 13:31:57 [] DEBUG reactor.netty.channel.FluxReceive - [fa25d72e-1, L:/127.0.0.1:58283 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-28 13:31:57 [] DEBUG r.n.http.client.HttpClientOperations - [fa25d72e-1, L:/127.0.0.1:58283 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 13:31:57 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [fa25d72e, L:/127.0.0.1:58283 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xfa25d72e, L:/127.0.0.1:58283 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 13:31:57 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [fa25d72e, L:/127.0.0.1:58283 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xfa25d72e, L:/127.0.0.1:58283 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 13:31:57 [] DEBUG r.n.r.PooledConnectionProvider - [fa25d72e, L:/127.0.0.1:58283 ! R:localhost/127.0.0.1:8081] Channel closed, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:31:57 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [fa25d72e, L:/127.0.0.1:58283 ! R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0xfa25d72e, L:/127.0.0.1:58283 ! R:localhost/127.0.0.1:8081]}, [disconnecting])
2025-02-28 13:31:57 [] ERROR c.c.c.g.c.c.ValidationInterceptor - ⚠️ Error calling validation service
org.springframework.web.reactive.function.client.WebClientResponseException$InternalServerError: 500 Internal Server Error from GET http://localhost:8081/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 500 INTERNAL_SERVER_ERROR from GET http://localhost:8081/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104)
		at reactor.core.publisher.Mono.block(Mono.java:1779)
		at com.citpl.common.gateway.commongateway.config.ValidationInterceptor.preHandle(ValidationInterceptor.java:70)
		at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:146)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1083)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
		at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:633)
		at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:411)
		at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:331)
		at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:268)
		at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:380)
		at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:208)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:151)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-28 13:32:38 [] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-02-28 13:32:38 [] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-02-28 13:32:38 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 4 thread-local buffer(s) from thread: reactor-http-nio-3
2025-02-28 13:32:38 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 3 thread-local buffer(s) from thread: reactor-http-nio-2
2025-02-28 13:32:40 [] DEBUG org.jboss.logging - Logging Provider: org.jboss.logging.Slf4jLoggerProvider found via system property
2025-02-28 13:32:40 [] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final
2025-02-28 13:32:40 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-02-28 13:32:40 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-02-28 13:32:40 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-02-28 13:32:40 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-02-28 13:32:40 [] DEBUG o.h.v.i.e.r.TraversableResolvers - Cannot find jakarta.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2025-02-28 13:32:40 [] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-02-28 13:32:41 [] INFO  c.c.c.g.c.CommongatewayApplication - Starting CommongatewayApplication using Java 17.0.12 with PID 8660 (D:\WORKSPACE\API-GATEWAY\commongateway\target\classes started by CITPL in D:\WORKSPACE\API-GATEWAY)
2025-02-28 13:32:41 [] DEBUG c.c.c.g.c.CommongatewayApplication - Running with Spring Boot v3.4.2, Spring v6.2.2
2025-02-28 13:32:41 [] INFO  c.c.c.g.c.CommongatewayApplication - No active profile set, falling back to 1 default profile: "default"
2025-02-28 13:32:41 [] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-02-28 13:32:41 [] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-02-28 13:32:41 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-02-28 13:32:41 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-02-28 13:32:41 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-02-28 13:32:41 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-02-28 13:32:41 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-02-28 13:32:41 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-02-28 13:32:42 [] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=d2aee5ef-86a6-3b95-abd8-708d95e66676
2025-02-28 13:32:42 [] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-02-28 13:32:42 [] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-02-28 13:32:42 [] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-02-28 13:32:42 [] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.34]
2025-02-28 13:32:42 [] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-02-28 13:32:42 [] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1556 ms
2025-02-28 13:32:42 [] DEBUG i.n.u.i.l.InternalLoggerFactory - Using SLF4J as the default logging framework
2025-02-28 13:32:42 [] DEBUG i.n.util.internal.PlatformDependent0 - -Dio.netty.noUnsafe: false
2025-02-28 13:32:42 [] DEBUG i.n.util.internal.PlatformDependent0 - Java version: 17
2025-02-28 13:32:42 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe.theUnsafe: available
2025-02-28 13:32:42 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe base methods: all available
2025-02-28 13:32:42 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe.storeFence: available
2025-02-28 13:32:42 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.Buffer.address: available
2025-02-28 13:32:42 [] DEBUG i.n.util.internal.PlatformDependent0 - direct buffer constructor: unavailable: Reflective setAccessible(true) disabled
2025-02-28 13:32:42 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.Bits.unaligned: available, true
2025-02-28 13:32:42 [] DEBUG i.n.util.internal.PlatformDependent0 - jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable: class io.netty.util.internal.PlatformDependent0$7 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @3e77a1ed
2025-02-28 13:32:42 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.DirectByteBuffer.<init>(long, {int,long}): unavailable
2025-02-28 13:32:42 [] DEBUG i.n.util.internal.PlatformDependent - sun.misc.Unsafe: available
2025-02-28 13:32:42 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.tmpdir: C:\Users\CITPL\AppData\Local\Temp (java.io.tmpdir)
2025-02-28 13:32:42 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.bitMode: 64 (sun.arch.data.model)
2025-02-28 13:32:42 [] DEBUG i.n.util.internal.PlatformDependent - Platform: Windows
2025-02-28 13:32:42 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.maxDirectMemory: -1 bytes
2025-02-28 13:32:42 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.uninitializedArrayAllocationThreshold: -1
2025-02-28 13:32:42 [] DEBUG io.netty.util.internal.CleanerJava9 - java.nio.ByteBuffer.cleaner(): available
2025-02-28 13:32:42 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.noPreferDirect: false
2025-02-28 13:32:42 [] DEBUG reactor.util.Loggers - Using Slf4j logging framework
2025-02-28 13:32:43 [] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-02-28 13:32:43 [] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2025-02-28 13:32:43 [] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2025-02-28 13:32:43 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-02-28 13:32:43 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via user class loader
2025-02-28 13:32:43 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-02-28 13:32:43 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-02-28 13:32:43 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-02-28 13:32:43 [] DEBUG o.h.v.i.e.r.TraversableResolvers - Cannot find jakarta.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2025-02-28 13:32:43 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-02-28 13:32:43 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-02-28 13:32:43 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-02-28 13:32:43 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-02-28 13:32:43 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-02-28 13:32:43 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-02-28 13:32:43 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	c.c.c.g.c.c.HomeController:
	{GET [/home]}: get()
2025-02-28 13:32:43 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2025-02-28 13:32:43 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 'beanNameHandlerMapping' {}
2025-02-28 13:32:43 [] DEBUG _.s.w.s.HandlerMapping.Mappings - Mapped /validate/** -> ProxyExchangeHandlerFunction
/users/** -> ProxyExchangeHandlerFunction
2025-02-28 13:32:43 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2025-02-28 13:32:43 [] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-02-28 13:32:43 [] DEBUG i.n.u.i.InternalThreadLocalMap - -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2025-02-28 13:32:43 [] DEBUG i.n.u.i.InternalThreadLocalMap - -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2025-02-28 13:32:43 [] DEBUG io.netty.util.ResourceLeakDetector - -Dio.netty.leakDetection.level: simple
2025-02-28 13:32:43 [] DEBUG io.netty.util.ResourceLeakDetector - -Dio.netty.leakDetection.targetRecords: 4
2025-02-28 13:32:43 [] DEBUG i.n.handler.codec.compression.Brotli - brotli4j not in the classpath; Brotli support will be unavailable.
2025-02-28 13:32:43 [] DEBUG reactor.netty.tcp.TcpResources - [http] resources will use the default LoopResources: DefaultLoopResources {prefix=reactor-http, daemon=true, selectCount=12, workerCount=12}
2025-02-28 13:32:43 [] DEBUG reactor.netty.tcp.TcpResources - [http] resources will use the default ConnectionProvider: reactor.netty.resources.DefaultPooledConnectionProvider@41c3f5aa
2025-02-28 13:32:43 [] DEBUG r.netty.resources.DefaultLoopIOUring - Default io_uring support : false
2025-02-28 13:32:43 [] DEBUG r.netty.resources.DefaultLoopEpoll - Default Epoll support : false
2025-02-28 13:32:43 [] DEBUG r.netty.resources.DefaultLoopKQueue - Default KQueue support : false
2025-02-28 13:32:43 [] DEBUG i.n.c.MultithreadEventLoopGroup - -Dio.netty.eventLoopThreads: 24
2025-02-28 13:32:43 [] DEBUG i.n.u.concurrent.GlobalEventExecutor - -Dio.netty.globalEventExecutor.quietPeriodSeconds: 1
2025-02-28 13:32:43 [] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.noKeySetOptimization: false
2025-02-28 13:32:43 [] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.selectorAutoRebuildThreshold: 512
2025-02-28 13:32:43 [] DEBUG i.n.util.internal.PlatformDependent - org.jctools-core.MpscChunkedArrayQueue: available
2025-02-28 13:32:43 [] DEBUG io.netty.util.NetUtil - -Djava.net.preferIPv4Stack: false
2025-02-28 13:32:43 [] DEBUG io.netty.util.NetUtil - -Djava.net.preferIPv6Addresses: false
2025-02-28 13:32:44 [] DEBUG i.netty.util.NetUtilInitializations - Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2025-02-28 13:32:44 [] DEBUG io.netty.util.NetUtil - Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2025-02-28 13:32:44 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default ResolvedAddressTypes: IPV4_ONLY
2025-02-28 13:32:44 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Localhost address: localhost/127.0.0.1
2025-02-28 13:32:44 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Windows hostname: DESKTOP-P307093
2025-02-28 13:32:44 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default search domains: []
2025-02-28 13:32:44 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default UnixResolverOptions{ndots=1, timeout=5, attempts=16}
2025-02-28 13:32:44 [] DEBUG i.n.r.DefaultHostsFileEntriesResolver - -Dio.netty.hostsFileRefreshInterval: 0
2025-02-28 13:32:44 [] DEBUG i.n.r.d.DefaultDnsServerAddressStreamProvider - Default DNS servers: [/8.8.8.8:53, /4.2.2.2:53] (sun.net.dns.ResolverConfiguration)
2025-02-28 13:32:44 [] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-02-28 13:32:44 [] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-02-28 13:32:44 [] INFO  c.c.c.g.c.CommongatewayApplication - Started CommongatewayApplication in 3.816 seconds (process running for 4.78)
2025-02-28 13:32:51 [] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-02-28 13:32:51 [] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-02-28 13:32:51 [] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 0 ms
2025-02-28 13:32:51 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 13:32:51 [0acf3be7-41da-4012-b410-7a18316f674e] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 13:32:52 [0acf3be7-41da-4012-b410-7a18316f674e] DEBUG i.m.c.u.i.l.InternalLoggerFactory - Using SLF4J as the default logging framework
2025-02-28 13:32:52 [0acf3be7-41da-4012-b410-7a18316f674e] DEBUG r.n.r.PooledConnectionProvider - Creating a new [http] client pool [PoolFactory{evictionInterval=PT0S, leasingStrategy=fifo, maxConnections=500, maxIdleTime=-1, maxLifeTime=-1, metricsEnabled=false, pendingAcquireMaxCount=1000, pendingAcquireTimeout=45000}] for [localhost/<unresolved>:8081]
2025-02-28 13:32:52 [0acf3be7-41da-4012-b410-7a18316f674e] DEBUG io.netty.channel.DefaultChannelId - -Dio.netty.processId: 8660 (auto-detected)
2025-02-28 13:32:52 [0acf3be7-41da-4012-b410-7a18316f674e] DEBUG io.netty.channel.DefaultChannelId - -Dio.netty.machineId: 00:15:5d:ff:fe:02:b5:1f (auto-detected)
2025-02-28 13:32:52 [0acf3be7-41da-4012-b410-7a18316f674e] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.numHeapArenas: 24
2025-02-28 13:32:52 [0acf3be7-41da-4012-b410-7a18316f674e] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.numDirectArenas: 24
2025-02-28 13:32:52 [0acf3be7-41da-4012-b410-7a18316f674e] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.pageSize: 8192
2025-02-28 13:32:52 [0acf3be7-41da-4012-b410-7a18316f674e] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxOrder: 9
2025-02-28 13:32:52 [0acf3be7-41da-4012-b410-7a18316f674e] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.chunkSize: 4194304
2025-02-28 13:32:52 [0acf3be7-41da-4012-b410-7a18316f674e] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.smallCacheSize: 256
2025-02-28 13:32:52 [0acf3be7-41da-4012-b410-7a18316f674e] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.normalCacheSize: 64
2025-02-28 13:32:52 [0acf3be7-41da-4012-b410-7a18316f674e] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2025-02-28 13:32:52 [0acf3be7-41da-4012-b410-7a18316f674e] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.cacheTrimInterval: 8192
2025-02-28 13:32:52 [0acf3be7-41da-4012-b410-7a18316f674e] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.cacheTrimIntervalMillis: 0
2025-02-28 13:32:52 [0acf3be7-41da-4012-b410-7a18316f674e] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.useCacheForAllThreads: false
2025-02-28 13:32:52 [0acf3be7-41da-4012-b410-7a18316f674e] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
2025-02-28 13:32:52 [0acf3be7-41da-4012-b410-7a18316f674e] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.disableCacheFinalizersForFastThreadLocalThreads: false
2025-02-28 13:32:52 [0acf3be7-41da-4012-b410-7a18316f674e] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.allocator.type: pooled
2025-02-28 13:32:52 [0acf3be7-41da-4012-b410-7a18316f674e] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.threadLocalDirectBufferSize: 0
2025-02-28 13:32:52 [0acf3be7-41da-4012-b410-7a18316f674e] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.maxThreadLocalCharBufferSize: 16384
2025-02-28 13:32:52 [] DEBUG r.n.r.PooledConnectionProvider - [b81c0800] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:32:52 [] DEBUG io.netty.buffer.AbstractByteBuf - -Dio.netty.buffer.checkAccessible: true
2025-02-28 13:32:52 [] DEBUG io.netty.buffer.AbstractByteBuf - -Dio.netty.buffer.checkBounds: true
2025-02-28 13:32:52 [] DEBUG i.n.util.ResourceLeakDetectorFactory - Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@434a6a3
2025-02-28 13:32:52 [] DEBUG r.netty.transport.TransportConfig - [b81c0800] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-28 13:32:52 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 13:32:52 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 13:32:52 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 13:32:52 [] DEBUG i.n.b.ChannelInitializerExtensions - -Dio.netty.bootstrap.extensions: null
2025-02-28 13:32:52 [] DEBUG r.netty.transport.TransportConnector - [b81c0800] Connecting to [localhost/127.0.0.1:8081].
2025-02-28 13:32:52 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b81c0800, L:/127.0.0.1:58309 - R:localhost/127.0.0.1:8081] Registering pool release on close event for channel
2025-02-28 13:32:52 [] DEBUG r.n.r.PooledConnectionProvider - [b81c0800, L:/127.0.0.1:58309 - R:localhost/127.0.0.1:8081] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:32:52 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b81c0800, L:/127.0.0.1:58309 - R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0xb81c0800, L:/127.0.0.1:58309 - R:localhost/127.0.0.1:8081]}, [connected])
2025-02-28 13:32:52 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b81c0800-1, L:/127.0.0.1:58309 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0xb81c0800, L:/127.0.0.1:58309 - R:localhost/127.0.0.1:8081]}}, [configured])
2025-02-28 13:32:52 [] DEBUG r.n.http.client.HttpClientConnect - [b81c0800-1, L:/127.0.0.1:58309 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY, method=GET}
2025-02-28 13:32:52 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b81c0800-1, L:/127.0.0.1:58309 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xb81c0800, L:/127.0.0.1:58309 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 13:32:52 [] DEBUG r.n.http.client.HttpClientOperations - [b81c0800-1, L:/127.0.0.1:58309 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 13:32:52 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.maxCapacityPerThread: 4096
2025-02-28 13:32:52 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.ratio: 8
2025-02-28 13:32:52 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.chunkSize: 32
2025-02-28 13:32:52 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.blocking: false
2025-02-28 13:32:52 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.batchFastThreadLocalOnly: true
2025-02-28 13:32:52 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b81c0800-1, L:/127.0.0.1:58309 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xb81c0800, L:/127.0.0.1:58309 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 13:32:52 [] DEBUG i.n.handler.codec.compression.Zstd - zstd-jni not in the classpath; Zstd support will be unavailable.
2025-02-28 13:32:52 [] DEBUG r.n.http.client.HttpClientOperations - [b81c0800-1, L:/127.0.0.1:58309 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-28 13:32:52 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b81c0800-1, L:/127.0.0.1:58309 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xb81c0800, L:/127.0.0.1:58309 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 13:32:52 [] DEBUG r.n.http.client.HttpClientOperations - [b81c0800-1, L:/127.0.0.1:58309 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 13:32:52 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b81c0800, L:/127.0.0.1:58309 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xb81c0800, L:/127.0.0.1:58309 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 13:32:52 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b81c0800, L:/127.0.0.1:58309 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xb81c0800, L:/127.0.0.1:58309 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 13:32:52 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b81c0800, L:/127.0.0.1:58309 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-28 13:32:52 [] DEBUG r.n.r.PooledConnectionProvider - [b81c0800, L:/127.0.0.1:58309 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-28 13:32:52 [] DEBUG reactor.netty.channel.FluxReceive - [22d43248, L:/127.0.0.1:58309 ! R:localhost/127.0.0.1:8081] [terminated=true, cancelled=false, pending=1, error=null]: subscribing inbound receiver
2025-02-28 13:32:57 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 13:32:57 [e70442f7-7be1-463d-81b4-8dbcfa3eca16] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 13:32:57 [e70442f7-7be1-463d-81b4-8dbcfa3eca16] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /users
2025-02-28 13:32:57 [e70442f7-7be1-463d-81b4-8dbcfa3eca16] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔄 Using HTTP Method: GET
2025-02-28 13:32:57 [e70442f7-7be1-463d-81b4-8dbcfa3eca16] DEBUG r.n.r.PooledConnectionProvider - Creating a new [http] client pool [PoolFactory{evictionInterval=PT0S, leasingStrategy=fifo, maxConnections=500, maxIdleTime=-1, maxLifeTime=-1, metricsEnabled=false, pendingAcquireMaxCount=1000, pendingAcquireTimeout=45000}] for [localhost/<unresolved>:8081]
2025-02-28 13:32:57 [] DEBUG r.n.r.PooledConnectionProvider - [183cab79] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:32:57 [] DEBUG r.netty.transport.TransportConfig - [183cab79] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-28 13:32:57 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 13:32:57 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 13:32:57 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 13:32:57 [] DEBUG r.netty.transport.TransportConnector - [183cab79] Connecting to [localhost/127.0.0.1:8081].
2025-02-28 13:32:57 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [183cab79, L:/127.0.0.1:58311 - R:localhost/127.0.0.1:8081] Registering pool release on close event for channel
2025-02-28 13:32:57 [] DEBUG r.n.r.PooledConnectionProvider - [183cab79, L:/127.0.0.1:58311 - R:localhost/127.0.0.1:8081] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:32:57 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [183cab79, L:/127.0.0.1:58311 - R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x183cab79, L:/127.0.0.1:58311 - R:localhost/127.0.0.1:8081]}, [connected])
2025-02-28 13:32:57 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [183cab79-1, L:/127.0.0.1:58311 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0x183cab79, L:/127.0.0.1:58311 - R:localhost/127.0.0.1:8081]}}, [configured])
2025-02-28 13:32:57 [] DEBUG r.n.http.client.HttpClientConnect - [183cab79-1, L:/127.0.0.1:58311 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate, method=GET}
2025-02-28 13:32:57 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [183cab79-1, L:/127.0.0.1:58311 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x183cab79, L:/127.0.0.1:58311 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 13:32:57 [] DEBUG r.n.http.client.HttpClientOperations - [183cab79-1, L:/127.0.0.1:58311 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 13:32:57 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [183cab79-1, L:/127.0.0.1:58311 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x183cab79, L:/127.0.0.1:58311 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 13:32:57 [] DEBUG r.n.http.client.HttpClientOperations - [183cab79-1, L:/127.0.0.1:58311 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 500 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
Connection: <filtered>
2025-02-28 13:32:57 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [183cab79-1, L:/127.0.0.1:58311 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x183cab79, L:/127.0.0.1:58311 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 13:32:57 [] DEBUG reactor.netty.channel.FluxReceive - [183cab79-1, L:/127.0.0.1:58311 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-28 13:32:57 [] DEBUG r.n.http.client.HttpClientOperations - [183cab79-1, L:/127.0.0.1:58311 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 13:32:57 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [183cab79, L:/127.0.0.1:58311 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x183cab79, L:/127.0.0.1:58311 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 13:32:57 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [183cab79, L:/127.0.0.1:58311 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x183cab79, L:/127.0.0.1:58311 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 13:32:57 [] DEBUG r.n.r.PooledConnectionProvider - [183cab79, L:/127.0.0.1:58311 ! R:localhost/127.0.0.1:8081] Channel closed, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:32:57 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [183cab79, L:/127.0.0.1:58311 ! R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x183cab79, L:/127.0.0.1:58311 ! R:localhost/127.0.0.1:8081]}, [disconnecting])
2025-02-28 13:32:57 [e70442f7-7be1-463d-81b4-8dbcfa3eca16] ERROR c.c.c.g.c.c.ValidationInterceptor - ⚠️ Error calling validation service
org.springframework.web.reactive.function.client.WebClientResponseException$InternalServerError: 500 Internal Server Error from GET http://localhost:8081/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 500 INTERNAL_SERVER_ERROR from GET http://localhost:8081/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104)
		at reactor.core.publisher.Mono.block(Mono.java:1779)
		at com.citpl.common.gateway.commongateway.config.ValidationInterceptor.preHandle(ValidationInterceptor.java:70)
		at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:146)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1083)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
		at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at com.citpl.common.gateway.commongateway.filter.MDCFilter.doFilter(MDCFilter.java:37)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.cloud.gateway.server.mvc.filter.WeightCalculatorFilter.doFilter(WeightCalculatorFilter.java:229)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.cloud.gateway.server.mvc.filter.FormFilter.doFilter(FormFilter.java:93)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-28 13:32:57 [] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /error
2025-02-28 13:32:57 [] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔄 Using HTTP Method: GET
2025-02-28 13:32:57 [] DEBUG r.n.r.PooledConnectionProvider - [63326843] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:32:57 [] DEBUG r.netty.transport.TransportConfig - [63326843] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-28 13:32:57 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 13:32:57 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 13:32:57 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 13:32:57 [] DEBUG r.netty.transport.TransportConnector - [63326843] Connecting to [localhost/127.0.0.1:8081].
2025-02-28 13:32:57 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [63326843, L:/127.0.0.1:58312 - R:localhost/127.0.0.1:8081] Registering pool release on close event for channel
2025-02-28 13:32:57 [] DEBUG r.n.r.PooledConnectionProvider - [63326843, L:/127.0.0.1:58312 - R:localhost/127.0.0.1:8081] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:32:57 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [63326843, L:/127.0.0.1:58312 - R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x63326843, L:/127.0.0.1:58312 - R:localhost/127.0.0.1:8081]}, [connected])
2025-02-28 13:32:57 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [63326843-1, L:/127.0.0.1:58312 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0x63326843, L:/127.0.0.1:58312 - R:localhost/127.0.0.1:8081]}}, [configured])
2025-02-28 13:32:57 [] DEBUG r.n.http.client.HttpClientConnect - [63326843-1, L:/127.0.0.1:58312 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate, method=GET}
2025-02-28 13:32:57 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [63326843-1, L:/127.0.0.1:58312 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x63326843, L:/127.0.0.1:58312 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 13:32:57 [] DEBUG r.n.http.client.HttpClientOperations - [63326843-1, L:/127.0.0.1:58312 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 13:32:57 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [63326843-1, L:/127.0.0.1:58312 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x63326843, L:/127.0.0.1:58312 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 13:32:57 [] DEBUG r.n.http.client.HttpClientOperations - [63326843-1, L:/127.0.0.1:58312 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 500 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
Connection: <filtered>
2025-02-28 13:32:57 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [63326843-1, L:/127.0.0.1:58312 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x63326843, L:/127.0.0.1:58312 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 13:32:57 [] DEBUG reactor.netty.channel.FluxReceive - [63326843-1, L:/127.0.0.1:58312 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-28 13:32:57 [] DEBUG r.n.http.client.HttpClientOperations - [63326843-1, L:/127.0.0.1:58312 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 13:32:57 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [63326843, L:/127.0.0.1:58312 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x63326843, L:/127.0.0.1:58312 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 13:32:57 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [63326843, L:/127.0.0.1:58312 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x63326843, L:/127.0.0.1:58312 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 13:32:57 [] DEBUG r.n.r.PooledConnectionProvider - [63326843, L:/127.0.0.1:58312 ! R:localhost/127.0.0.1:8081] Channel closed, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:32:57 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [63326843, L:/127.0.0.1:58312 ! R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x63326843, L:/127.0.0.1:58312 ! R:localhost/127.0.0.1:8081]}, [disconnecting])
2025-02-28 13:32:57 [] ERROR c.c.c.g.c.c.ValidationInterceptor - ⚠️ Error calling validation service
org.springframework.web.reactive.function.client.WebClientResponseException$InternalServerError: 500 Internal Server Error from GET http://localhost:8081/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 500 INTERNAL_SERVER_ERROR from GET http://localhost:8081/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104)
		at reactor.core.publisher.Mono.block(Mono.java:1779)
		at com.citpl.common.gateway.commongateway.config.ValidationInterceptor.preHandle(ValidationInterceptor.java:70)
		at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:146)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1083)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
		at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:633)
		at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:411)
		at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:331)
		at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:268)
		at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:380)
		at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:208)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:151)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-28 13:33:52 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b81c0800, L:/127.0.0.1:58309 ! R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0xb81c0800, L:/127.0.0.1:58309 ! R:localhost/127.0.0.1:8081]}, [disconnecting])
2025-02-28 13:37:33 [] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-02-28 13:37:33 [] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-02-28 13:37:33 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 4 thread-local buffer(s) from thread: reactor-http-nio-4
2025-02-28 13:37:33 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 4 thread-local buffer(s) from thread: reactor-http-nio-5
2025-02-28 13:37:33 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 4 thread-local buffer(s) from thread: reactor-http-nio-3
2025-02-28 13:37:38 [] DEBUG org.jboss.logging - Logging Provider: org.jboss.logging.Slf4jLoggerProvider found via system property
2025-02-28 13:37:38 [] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final
2025-02-28 13:37:38 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-02-28 13:37:38 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-02-28 13:37:38 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-02-28 13:37:38 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-02-28 13:37:38 [] DEBUG o.h.v.i.e.r.TraversableResolvers - Cannot find jakarta.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2025-02-28 13:37:38 [] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-02-28 13:37:38 [] INFO  c.c.c.g.c.CommongatewayApplication - Starting CommongatewayApplication using Java 17.0.12 with PID 7824 (D:\WORKSPACE\API-GATEWAY\commongateway\target\classes started by CITPL in D:\WORKSPACE\API-GATEWAY)
2025-02-28 13:37:38 [] DEBUG c.c.c.g.c.CommongatewayApplication - Running with Spring Boot v3.4.2, Spring v6.2.2
2025-02-28 13:37:38 [] INFO  c.c.c.g.c.CommongatewayApplication - No active profile set, falling back to 1 default profile: "default"
2025-02-28 13:37:38 [] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-02-28 13:37:38 [] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-02-28 13:37:38 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-02-28 13:37:38 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-02-28 13:37:38 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-02-28 13:37:38 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-02-28 13:37:38 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-02-28 13:37:38 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-02-28 13:37:39 [] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=d2aee5ef-86a6-3b95-abd8-708d95e66676
2025-02-28 13:37:39 [] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-02-28 13:37:39 [] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-02-28 13:37:39 [] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-02-28 13:37:39 [] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.34]
2025-02-28 13:37:40 [] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-02-28 13:37:40 [] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1654 ms
2025-02-28 13:37:40 [] DEBUG i.n.u.i.l.InternalLoggerFactory - Using SLF4J as the default logging framework
2025-02-28 13:37:40 [] DEBUG i.n.util.internal.PlatformDependent0 - -Dio.netty.noUnsafe: false
2025-02-28 13:37:40 [] DEBUG i.n.util.internal.PlatformDependent0 - Java version: 17
2025-02-28 13:37:40 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe.theUnsafe: available
2025-02-28 13:37:40 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe base methods: all available
2025-02-28 13:37:40 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe.storeFence: available
2025-02-28 13:37:40 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.Buffer.address: available
2025-02-28 13:37:40 [] DEBUG i.n.util.internal.PlatformDependent0 - direct buffer constructor: unavailable: Reflective setAccessible(true) disabled
2025-02-28 13:37:40 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.Bits.unaligned: available, true
2025-02-28 13:37:40 [] DEBUG i.n.util.internal.PlatformDependent0 - jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable: class io.netty.util.internal.PlatformDependent0$7 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @3e77a1ed
2025-02-28 13:37:40 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.DirectByteBuffer.<init>(long, {int,long}): unavailable
2025-02-28 13:37:40 [] DEBUG i.n.util.internal.PlatformDependent - sun.misc.Unsafe: available
2025-02-28 13:37:40 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.tmpdir: C:\Users\CITPL\AppData\Local\Temp (java.io.tmpdir)
2025-02-28 13:37:40 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.bitMode: 64 (sun.arch.data.model)
2025-02-28 13:37:40 [] DEBUG i.n.util.internal.PlatformDependent - Platform: Windows
2025-02-28 13:37:40 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.maxDirectMemory: -1 bytes
2025-02-28 13:37:40 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.uninitializedArrayAllocationThreshold: -1
2025-02-28 13:37:40 [] DEBUG io.netty.util.internal.CleanerJava9 - java.nio.ByteBuffer.cleaner(): available
2025-02-28 13:37:40 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.noPreferDirect: false
2025-02-28 13:37:40 [] DEBUG reactor.util.Loggers - Using Slf4j logging framework
2025-02-28 13:37:40 [] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-02-28 13:37:40 [] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2025-02-28 13:37:40 [] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2025-02-28 13:37:40 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-02-28 13:37:40 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via user class loader
2025-02-28 13:37:40 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-02-28 13:37:40 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-02-28 13:37:40 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-02-28 13:37:40 [] DEBUG o.h.v.i.e.r.TraversableResolvers - Cannot find jakarta.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2025-02-28 13:37:40 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-02-28 13:37:40 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-02-28 13:37:40 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-02-28 13:37:40 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-02-28 13:37:40 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-02-28 13:37:40 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-02-28 13:37:40 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	c.c.c.g.c.c.HomeController:
	{GET [/home]}: get()
2025-02-28 13:37:40 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2025-02-28 13:37:40 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 'beanNameHandlerMapping' {}
2025-02-28 13:37:40 [] DEBUG _.s.w.s.HandlerMapping.Mappings - Mapped /validate/** -> ProxyExchangeHandlerFunction
/users/** -> ProxyExchangeHandlerFunction
2025-02-28 13:37:40 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2025-02-28 13:37:40 [] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-02-28 13:37:41 [] DEBUG i.n.u.i.InternalThreadLocalMap - -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2025-02-28 13:37:41 [] DEBUG i.n.u.i.InternalThreadLocalMap - -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2025-02-28 13:37:41 [] DEBUG io.netty.util.ResourceLeakDetector - -Dio.netty.leakDetection.level: simple
2025-02-28 13:37:41 [] DEBUG io.netty.util.ResourceLeakDetector - -Dio.netty.leakDetection.targetRecords: 4
2025-02-28 13:37:41 [] DEBUG i.n.handler.codec.compression.Brotli - brotli4j not in the classpath; Brotli support will be unavailable.
2025-02-28 13:37:41 [] DEBUG reactor.netty.tcp.TcpResources - [http] resources will use the default LoopResources: DefaultLoopResources {prefix=reactor-http, daemon=true, selectCount=12, workerCount=12}
2025-02-28 13:37:41 [] DEBUG reactor.netty.tcp.TcpResources - [http] resources will use the default ConnectionProvider: reactor.netty.resources.DefaultPooledConnectionProvider@150677ad
2025-02-28 13:37:41 [] DEBUG r.netty.resources.DefaultLoopIOUring - Default io_uring support : false
2025-02-28 13:37:41 [] DEBUG r.netty.resources.DefaultLoopEpoll - Default Epoll support : false
2025-02-28 13:37:41 [] DEBUG r.netty.resources.DefaultLoopKQueue - Default KQueue support : false
2025-02-28 13:37:41 [] DEBUG i.n.c.MultithreadEventLoopGroup - -Dio.netty.eventLoopThreads: 24
2025-02-28 13:37:41 [] DEBUG i.n.u.concurrent.GlobalEventExecutor - -Dio.netty.globalEventExecutor.quietPeriodSeconds: 1
2025-02-28 13:37:41 [] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.noKeySetOptimization: false
2025-02-28 13:37:41 [] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.selectorAutoRebuildThreshold: 512
2025-02-28 13:37:41 [] DEBUG i.n.util.internal.PlatformDependent - org.jctools-core.MpscChunkedArrayQueue: available
2025-02-28 13:37:41 [] DEBUG io.netty.util.NetUtil - -Djava.net.preferIPv4Stack: false
2025-02-28 13:37:41 [] DEBUG io.netty.util.NetUtil - -Djava.net.preferIPv6Addresses: false
2025-02-28 13:37:41 [] DEBUG i.netty.util.NetUtilInitializations - Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2025-02-28 13:37:41 [] DEBUG io.netty.util.NetUtil - Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2025-02-28 13:37:41 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default ResolvedAddressTypes: IPV4_ONLY
2025-02-28 13:37:41 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Localhost address: localhost/127.0.0.1
2025-02-28 13:37:41 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Windows hostname: DESKTOP-P307093
2025-02-28 13:37:41 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default search domains: []
2025-02-28 13:37:41 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default UnixResolverOptions{ndots=1, timeout=5, attempts=16}
2025-02-28 13:37:41 [] DEBUG i.n.r.DefaultHostsFileEntriesResolver - -Dio.netty.hostsFileRefreshInterval: 0
2025-02-28 13:37:41 [] DEBUG i.n.r.d.DefaultDnsServerAddressStreamProvider - Default DNS servers: [/8.8.8.8:53, /4.2.2.2:53] (sun.net.dns.ResolverConfiguration)
2025-02-28 13:37:41 [] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-02-28 13:37:41 [] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-02-28 13:37:41 [] INFO  c.c.c.g.c.CommongatewayApplication - Started CommongatewayApplication in 3.785 seconds (process running for 4.706)
2025-02-28 13:37:44 [] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-02-28 13:37:44 [] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-02-28 13:37:44 [] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 0 ms
2025-02-28 13:37:44 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 13:37:44 [2da1faa3-42fd-491b-9778-cb7a094d22a3] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 13:37:44 [2da1faa3-42fd-491b-9778-cb7a094d22a3] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /users
2025-02-28 13:37:44 [2da1faa3-42fd-491b-9778-cb7a094d22a3] DEBUG r.n.r.PooledConnectionProvider - Creating a new [http] client pool [PoolFactory{evictionInterval=PT0S, leasingStrategy=fifo, maxConnections=500, maxIdleTime=-1, maxLifeTime=-1, metricsEnabled=false, pendingAcquireMaxCount=1000, pendingAcquireTimeout=45000}] for [localhost/<unresolved>:8081]
2025-02-28 13:37:44 [2da1faa3-42fd-491b-9778-cb7a094d22a3] DEBUG io.netty.channel.DefaultChannelId - -Dio.netty.processId: 7824 (auto-detected)
2025-02-28 13:37:44 [2da1faa3-42fd-491b-9778-cb7a094d22a3] DEBUG io.netty.channel.DefaultChannelId - -Dio.netty.machineId: 00:15:5d:ff:fe:02:b5:1f (auto-detected)
2025-02-28 13:37:44 [2da1faa3-42fd-491b-9778-cb7a094d22a3] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.numHeapArenas: 24
2025-02-28 13:37:44 [2da1faa3-42fd-491b-9778-cb7a094d22a3] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.numDirectArenas: 24
2025-02-28 13:37:44 [2da1faa3-42fd-491b-9778-cb7a094d22a3] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.pageSize: 8192
2025-02-28 13:37:44 [2da1faa3-42fd-491b-9778-cb7a094d22a3] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxOrder: 9
2025-02-28 13:37:44 [2da1faa3-42fd-491b-9778-cb7a094d22a3] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.chunkSize: 4194304
2025-02-28 13:37:44 [2da1faa3-42fd-491b-9778-cb7a094d22a3] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.smallCacheSize: 256
2025-02-28 13:37:44 [2da1faa3-42fd-491b-9778-cb7a094d22a3] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.normalCacheSize: 64
2025-02-28 13:37:44 [2da1faa3-42fd-491b-9778-cb7a094d22a3] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2025-02-28 13:37:44 [2da1faa3-42fd-491b-9778-cb7a094d22a3] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.cacheTrimInterval: 8192
2025-02-28 13:37:44 [2da1faa3-42fd-491b-9778-cb7a094d22a3] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.cacheTrimIntervalMillis: 0
2025-02-28 13:37:44 [2da1faa3-42fd-491b-9778-cb7a094d22a3] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.useCacheForAllThreads: false
2025-02-28 13:37:44 [2da1faa3-42fd-491b-9778-cb7a094d22a3] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
2025-02-28 13:37:44 [2da1faa3-42fd-491b-9778-cb7a094d22a3] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.disableCacheFinalizersForFastThreadLocalThreads: false
2025-02-28 13:37:44 [2da1faa3-42fd-491b-9778-cb7a094d22a3] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.allocator.type: pooled
2025-02-28 13:37:44 [2da1faa3-42fd-491b-9778-cb7a094d22a3] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.threadLocalDirectBufferSize: 0
2025-02-28 13:37:44 [2da1faa3-42fd-491b-9778-cb7a094d22a3] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.maxThreadLocalCharBufferSize: 16384
2025-02-28 13:37:44 [] DEBUG r.n.r.PooledConnectionProvider - [94fc84f3] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:37:44 [] DEBUG io.netty.buffer.AbstractByteBuf - -Dio.netty.buffer.checkAccessible: true
2025-02-28 13:37:44 [] DEBUG io.netty.buffer.AbstractByteBuf - -Dio.netty.buffer.checkBounds: true
2025-02-28 13:37:44 [] DEBUG i.n.util.ResourceLeakDetectorFactory - Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@edec0a3
2025-02-28 13:37:44 [] DEBUG r.netty.transport.TransportConfig - [94fc84f3] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-28 13:37:44 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 13:37:44 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 13:37:44 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 13:37:44 [] DEBUG i.n.b.ChannelInitializerExtensions - -Dio.netty.bootstrap.extensions: null
2025-02-28 13:37:44 [] DEBUG r.netty.transport.TransportConnector - [94fc84f3] Connecting to [localhost/127.0.0.1:8081].
2025-02-28 13:37:44 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [94fc84f3, L:/127.0.0.1:58406 - R:localhost/127.0.0.1:8081] Registering pool release on close event for channel
2025-02-28 13:37:44 [] DEBUG r.n.r.PooledConnectionProvider - [94fc84f3, L:/127.0.0.1:58406 - R:localhost/127.0.0.1:8081] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:37:44 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [94fc84f3, L:/127.0.0.1:58406 - R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x94fc84f3, L:/127.0.0.1:58406 - R:localhost/127.0.0.1:8081]}, [connected])
2025-02-28 13:37:44 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [94fc84f3-1, L:/127.0.0.1:58406 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0x94fc84f3, L:/127.0.0.1:58406 - R:localhost/127.0.0.1:8081]}}, [configured])
2025-02-28 13:37:44 [] DEBUG r.n.http.client.HttpClientConnect - [94fc84f3-1, L:/127.0.0.1:58406 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY, method=GET}
2025-02-28 13:37:44 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [94fc84f3-1, L:/127.0.0.1:58406 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x94fc84f3, L:/127.0.0.1:58406 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 13:37:44 [] DEBUG r.n.http.client.HttpClientOperations - [94fc84f3-1, L:/127.0.0.1:58406 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 13:37:44 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.maxCapacityPerThread: 4096
2025-02-28 13:37:44 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.ratio: 8
2025-02-28 13:37:44 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.chunkSize: 32
2025-02-28 13:37:44 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.blocking: false
2025-02-28 13:37:44 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.batchFastThreadLocalOnly: true
2025-02-28 13:37:44 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [94fc84f3-1, L:/127.0.0.1:58406 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x94fc84f3, L:/127.0.0.1:58406 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 13:37:44 [] DEBUG i.n.handler.codec.compression.Zstd - zstd-jni not in the classpath; Zstd support will be unavailable.
2025-02-28 13:37:44 [] DEBUG r.n.http.client.HttpClientOperations - [94fc84f3-1, L:/127.0.0.1:58406 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-28 13:37:44 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [94fc84f3-1, L:/127.0.0.1:58406 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x94fc84f3, L:/127.0.0.1:58406 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 13:37:44 [] DEBUG reactor.netty.channel.FluxReceive - [94fc84f3-1, L:/127.0.0.1:58406 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-28 13:37:44 [] DEBUG r.n.http.client.HttpClientOperations - [94fc84f3-1, L:/127.0.0.1:58406 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 13:37:44 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [94fc84f3, L:/127.0.0.1:58406 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x94fc84f3, L:/127.0.0.1:58406 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 13:37:44 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [94fc84f3, L:/127.0.0.1:58406 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x94fc84f3, L:/127.0.0.1:58406 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 13:37:44 [2da1faa3-42fd-491b-9778-cb7a094d22a3] INFO  c.c.c.g.c.c.ValidationInterceptor - ✅ Token Validated! Forwarding request...
2025-02-28 13:37:44 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [94fc84f3, L:/127.0.0.1:58406 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-28 13:37:44 [] DEBUG r.n.r.PooledConnectionProvider - [94fc84f3, L:/127.0.0.1:58406 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-28 13:37:44 [2da1faa3-42fd-491b-9778-cb7a094d22a3] DEBUG i.m.c.u.i.l.InternalLoggerFactory - Using SLF4J as the default logging framework
2025-02-28 13:37:44 [2da1faa3-42fd-491b-9778-cb7a094d22a3] DEBUG r.n.r.PooledConnectionProvider - Creating a new [http] client pool [PoolFactory{evictionInterval=PT0S, leasingStrategy=fifo, maxConnections=500, maxIdleTime=-1, maxLifeTime=-1, metricsEnabled=false, pendingAcquireMaxCount=1000, pendingAcquireTimeout=45000}] for [localhost/<unresolved>:8082]
2025-02-28 13:37:44 [] DEBUG r.n.r.PooledConnectionProvider - [e7c9b512] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:37:44 [] DEBUG r.netty.transport.TransportConfig - [e7c9b512] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-28 13:37:44 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 13:37:44 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 13:37:44 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 13:37:44 [] DEBUG r.netty.transport.TransportConnector - [e7c9b512] Connecting to [localhost/127.0.0.1:8082].
2025-02-28 13:37:44 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [e7c9b512, L:/127.0.0.1:58407 - R:localhost/127.0.0.1:8082] Registering pool release on close event for channel
2025-02-28 13:37:44 [] DEBUG r.n.r.PooledConnectionProvider - [e7c9b512, L:/127.0.0.1:58407 - R:localhost/127.0.0.1:8082] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:37:44 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [e7c9b512, L:/127.0.0.1:58407 - R:localhost/127.0.0.1:8082] onStateChange(PooledConnection{channel=[id: 0xe7c9b512, L:/127.0.0.1:58407 - R:localhost/127.0.0.1:8082]}, [connected])
2025-02-28 13:37:44 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [e7c9b512-1, L:/127.0.0.1:58407 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0xe7c9b512, L:/127.0.0.1:58407 - R:localhost/127.0.0.1:8082]}}, [configured])
2025-02-28 13:37:44 [] DEBUG r.n.http.client.HttpClientConnect - [e7c9b512-1, L:/127.0.0.1:58407 - R:localhost/127.0.0.1:8082] Handler is being applied: {uri=http://localhost:8082/users, method=GET}
2025-02-28 13:37:44 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [e7c9b512-1, L:/127.0.0.1:58407 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0xe7c9b512, L:/127.0.0.1:58407 - R:localhost/127.0.0.1:8082]}}, [request_prepared])
2025-02-28 13:37:44 [] DEBUG r.n.http.client.HttpClientOperations - [e7c9b512-1, L:/127.0.0.1:58407 - R:localhost/127.0.0.1:8082] No sendHeaders() called before complete, sending zero-length header
2025-02-28 13:37:44 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [e7c9b512-1, L:/127.0.0.1:58407 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0xe7c9b512, L:/127.0.0.1:58407 - R:localhost/127.0.0.1:8082]}}, [request_sent])
2025-02-28 13:37:44 [] DEBUG r.n.http.client.HttpClientOperations - [e7c9b512-1, L:/127.0.0.1:58407 - R:localhost/127.0.0.1:8082] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Content-Length: <filtered>
Date: <filtered>
2025-02-28 13:37:44 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [e7c9b512-1, L:/127.0.0.1:58407 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0xe7c9b512, L:/127.0.0.1:58407 - R:localhost/127.0.0.1:8082]}}, [response_received])
2025-02-28 13:37:44 [] DEBUG r.n.http.client.HttpClientOperations - [e7c9b512-1, L:/127.0.0.1:58407 - R:localhost/127.0.0.1:8082] Received last HTTP packet
2025-02-28 13:37:44 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [e7c9b512, L:/127.0.0.1:58407 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0xe7c9b512, L:/127.0.0.1:58407 - R:localhost/127.0.0.1:8082]}}, [response_completed])
2025-02-28 13:37:44 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [e7c9b512, L:/127.0.0.1:58407 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0xe7c9b512, L:/127.0.0.1:58407 - R:localhost/127.0.0.1:8082]}}, [disconnecting])
2025-02-28 13:37:44 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [e7c9b512, L:/127.0.0.1:58407 - R:localhost/127.0.0.1:8082] Releasing channel
2025-02-28 13:37:44 [] DEBUG r.n.r.PooledConnectionProvider - [e7c9b512, L:/127.0.0.1:58407 - R:localhost/127.0.0.1:8082] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-28 13:37:44 [] DEBUG reactor.netty.channel.FluxReceive - [21eaa183, L:/127.0.0.1:58407 ! R:localhost/127.0.0.1:8082] [terminated=true, cancelled=false, pending=1, error=null]: subscribing inbound receiver
2025-02-28 13:37:51 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 13:37:51 [2f816654-6f27-43c3-bad4-e6a2b6bc1a86] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 13:37:51 [2f816654-6f27-43c3-bad4-e6a2b6bc1a86] DEBUG r.n.r.PooledConnectionProvider - Creating a new [http] client pool [PoolFactory{evictionInterval=PT0S, leasingStrategy=fifo, maxConnections=500, maxIdleTime=-1, maxLifeTime=-1, metricsEnabled=false, pendingAcquireMaxCount=1000, pendingAcquireTimeout=45000}] for [localhost/<unresolved>:8081]
2025-02-28 13:37:51 [] DEBUG r.n.r.PooledConnectionProvider - [c458b725] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:37:51 [] DEBUG r.netty.transport.TransportConfig - [c458b725] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-28 13:37:51 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 13:37:51 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 13:37:51 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 13:37:51 [] DEBUG r.netty.transport.TransportConnector - [c458b725] Connecting to [localhost/127.0.0.1:8081].
2025-02-28 13:37:51 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [c458b725, L:/127.0.0.1:58415 - R:localhost/127.0.0.1:8081] Registering pool release on close event for channel
2025-02-28 13:37:51 [] DEBUG r.n.r.PooledConnectionProvider - [c458b725, L:/127.0.0.1:58415 - R:localhost/127.0.0.1:8081] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:37:51 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [c458b725, L:/127.0.0.1:58415 - R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0xc458b725, L:/127.0.0.1:58415 - R:localhost/127.0.0.1:8081]}, [connected])
2025-02-28 13:37:51 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [c458b725-1, L:/127.0.0.1:58415 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0xc458b725, L:/127.0.0.1:58415 - R:localhost/127.0.0.1:8081]}}, [configured])
2025-02-28 13:37:51 [] DEBUG r.n.http.client.HttpClientConnect - [c458b725-1, L:/127.0.0.1:58415 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY, method=GET}
2025-02-28 13:37:51 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [c458b725-1, L:/127.0.0.1:58415 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xc458b725, L:/127.0.0.1:58415 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 13:37:51 [] DEBUG r.n.http.client.HttpClientOperations - [c458b725-1, L:/127.0.0.1:58415 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 13:37:51 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [c458b725-1, L:/127.0.0.1:58415 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xc458b725, L:/127.0.0.1:58415 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 13:37:51 [] DEBUG r.n.http.client.HttpClientOperations - [c458b725-1, L:/127.0.0.1:58415 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-28 13:37:51 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [c458b725-1, L:/127.0.0.1:58415 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xc458b725, L:/127.0.0.1:58415 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 13:37:51 [] DEBUG reactor.netty.channel.FluxReceive - [c458b725-1, L:/127.0.0.1:58415 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=1, error=null]: subscribing inbound receiver
2025-02-28 13:37:51 [] DEBUG r.n.http.client.HttpClientOperations - [c458b725-1, L:/127.0.0.1:58415 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 13:37:51 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [c458b725, L:/127.0.0.1:58415 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xc458b725, L:/127.0.0.1:58415 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 13:37:51 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [c458b725, L:/127.0.0.1:58415 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xc458b725, L:/127.0.0.1:58415 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 13:37:51 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [c458b725, L:/127.0.0.1:58415 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-28 13:37:51 [] DEBUG r.n.r.PooledConnectionProvider - [c458b725, L:/127.0.0.1:58415 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-28 13:38:00 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 13:38:00 [de203cc9-9bd0-4861-8d28-771bf3e19a76] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 13:38:00 [de203cc9-9bd0-4861-8d28-771bf3e19a76] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /users
2025-02-28 13:38:00 [] DEBUG r.n.r.PooledConnectionProvider - [94fc84f3, L:/127.0.0.1:58406 - R:localhost/127.0.0.1:8081] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:38:00 [] DEBUG r.n.http.client.HttpClientConnect - [94fc84f3-2, L:/127.0.0.1:58406 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY, method=GET}
2025-02-28 13:38:00 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [94fc84f3-2, L:/127.0.0.1:58406 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x94fc84f3, L:/127.0.0.1:58406 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 13:38:00 [] DEBUG r.n.http.client.HttpClientOperations - [94fc84f3-2, L:/127.0.0.1:58406 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 13:38:00 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [94fc84f3-2, L:/127.0.0.1:58406 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x94fc84f3, L:/127.0.0.1:58406 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 13:38:00 [] DEBUG r.n.http.client.HttpClientOperations - [94fc84f3-2, L:/127.0.0.1:58406 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-28 13:38:00 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [94fc84f3-2, L:/127.0.0.1:58406 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x94fc84f3, L:/127.0.0.1:58406 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 13:38:00 [] DEBUG reactor.netty.channel.FluxReceive - [94fc84f3-2, L:/127.0.0.1:58406 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-28 13:38:00 [] DEBUG r.n.http.client.HttpClientOperations - [94fc84f3-2, L:/127.0.0.1:58406 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 13:38:00 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [94fc84f3, L:/127.0.0.1:58406 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x94fc84f3, L:/127.0.0.1:58406 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 13:38:00 [de203cc9-9bd0-4861-8d28-771bf3e19a76] INFO  c.c.c.g.c.c.ValidationInterceptor - ✅ Token Validated! Forwarding request...
2025-02-28 13:38:00 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [94fc84f3, L:/127.0.0.1:58406 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x94fc84f3, L:/127.0.0.1:58406 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 13:38:00 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [94fc84f3, L:/127.0.0.1:58406 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-28 13:38:00 [] DEBUG r.n.r.PooledConnectionProvider - [94fc84f3, L:/127.0.0.1:58406 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-28 13:38:00 [] DEBUG r.n.r.PooledConnectionProvider - [e7c9b512, L:/127.0.0.1:58407 - R:localhost/127.0.0.1:8082] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:38:00 [] DEBUG r.n.http.client.HttpClientConnect - [e7c9b512-2, L:/127.0.0.1:58407 - R:localhost/127.0.0.1:8082] Handler is being applied: {uri=http://localhost:8082/users, method=GET}
2025-02-28 13:38:00 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [e7c9b512-2, L:/127.0.0.1:58407 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0xe7c9b512, L:/127.0.0.1:58407 - R:localhost/127.0.0.1:8082]}}, [request_prepared])
2025-02-28 13:38:00 [] DEBUG r.n.http.client.HttpClientOperations - [e7c9b512-2, L:/127.0.0.1:58407 - R:localhost/127.0.0.1:8082] No sendHeaders() called before complete, sending zero-length header
2025-02-28 13:38:00 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [e7c9b512-2, L:/127.0.0.1:58407 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0xe7c9b512, L:/127.0.0.1:58407 - R:localhost/127.0.0.1:8082]}}, [request_sent])
2025-02-28 13:38:00 [] DEBUG r.n.http.client.HttpClientOperations - [e7c9b512-2, L:/127.0.0.1:58407 - R:localhost/127.0.0.1:8082] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Content-Length: <filtered>
Date: <filtered>
2025-02-28 13:38:00 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [e7c9b512-2, L:/127.0.0.1:58407 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0xe7c9b512, L:/127.0.0.1:58407 - R:localhost/127.0.0.1:8082]}}, [response_received])
2025-02-28 13:38:00 [] DEBUG r.n.http.client.HttpClientOperations - [e7c9b512-2, L:/127.0.0.1:58407 - R:localhost/127.0.0.1:8082] Received last HTTP packet
2025-02-28 13:38:00 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [e7c9b512, L:/127.0.0.1:58407 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0xe7c9b512, L:/127.0.0.1:58407 - R:localhost/127.0.0.1:8082]}}, [response_completed])
2025-02-28 13:38:00 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [e7c9b512, L:/127.0.0.1:58407 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0xe7c9b512, L:/127.0.0.1:58407 - R:localhost/127.0.0.1:8082]}}, [disconnecting])
2025-02-28 13:38:00 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [e7c9b512, L:/127.0.0.1:58407 - R:localhost/127.0.0.1:8082] Releasing channel
2025-02-28 13:38:00 [] DEBUG r.n.r.PooledConnectionProvider - [e7c9b512, L:/127.0.0.1:58407 - R:localhost/127.0.0.1:8082] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-28 13:38:00 [] DEBUG reactor.netty.channel.FluxReceive - [77681b46, L:/127.0.0.1:58407 ! R:localhost/127.0.0.1:8082] [terminated=true, cancelled=false, pending=1, error=null]: subscribing inbound receiver
2025-02-28 13:38:05 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 13:38:05 [04fcdd6a-16ed-4962-b69f-befc54af91a0] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 13:38:05 [04fcdd6a-16ed-4962-b69f-befc54af91a0] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /users
2025-02-28 13:38:05 [04fcdd6a-16ed-4962-b69f-befc54af91a0] WARN  c.c.c.g.c.c.ValidationInterceptor - ❌ Missing Validation Token or OrgId!
2025-02-28 13:38:05 [] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /error
2025-02-28 13:38:05 [] WARN  c.c.c.g.c.c.ValidationInterceptor - ❌ Missing Validation Token or OrgId!
2025-02-28 13:38:27 [] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-02-28 13:38:27 [] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-02-28 13:38:28 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [e7c9b512, L:/127.0.0.1:58407 ! R:localhost/127.0.0.1:8082] onStateChange(PooledConnection{channel=[id: 0xe7c9b512, L:/127.0.0.1:58407 ! R:localhost/127.0.0.1:8082]}, [disconnecting])
2025-02-28 13:38:28 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [c458b725, L:/127.0.0.1:58415 ! R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0xc458b725, L:/127.0.0.1:58415 ! R:localhost/127.0.0.1:8081]}, [disconnecting])
2025-02-28 13:38:28 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [94fc84f3, L:/127.0.0.1:58406 ! R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x94fc84f3, L:/127.0.0.1:58406 ! R:localhost/127.0.0.1:8081]}, [disconnecting])
2025-02-28 13:38:28 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 5 thread-local buffer(s) from thread: reactor-http-nio-4
2025-02-28 13:38:28 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 5 thread-local buffer(s) from thread: reactor-http-nio-5
2025-02-28 13:38:28 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 5 thread-local buffer(s) from thread: reactor-http-nio-2
2025-02-28 13:38:32 [] DEBUG org.jboss.logging - Logging Provider: org.jboss.logging.Slf4jLoggerProvider found via system property
2025-02-28 13:38:32 [] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final
2025-02-28 13:38:32 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-02-28 13:38:32 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-02-28 13:38:32 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-02-28 13:38:32 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-02-28 13:38:32 [] DEBUG o.h.v.i.e.r.TraversableResolvers - Cannot find jakarta.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2025-02-28 13:38:32 [] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-02-28 13:38:32 [] INFO  c.c.c.g.c.CommongatewayApplication - Starting CommongatewayApplication using Java 17.0.12 with PID 14396 (D:\WORKSPACE\API-GATEWAY\commongateway\target\classes started by CITPL in D:\WORKSPACE\API-GATEWAY)
2025-02-28 13:38:32 [] DEBUG c.c.c.g.c.CommongatewayApplication - Running with Spring Boot v3.4.2, Spring v6.2.2
2025-02-28 13:38:32 [] INFO  c.c.c.g.c.CommongatewayApplication - No active profile set, falling back to 1 default profile: "default"
2025-02-28 13:38:32 [] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-02-28 13:38:32 [] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-02-28 13:38:32 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-02-28 13:38:32 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-02-28 13:38:32 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-02-28 13:38:32 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-02-28 13:38:32 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-02-28 13:38:32 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-02-28 13:38:33 [] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=d2aee5ef-86a6-3b95-abd8-708d95e66676
2025-02-28 13:38:33 [] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-02-28 13:38:33 [] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-02-28 13:38:33 [] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-02-28 13:38:33 [] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.34]
2025-02-28 13:38:34 [] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-02-28 13:38:34 [] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1502 ms
2025-02-28 13:38:34 [] DEBUG i.n.u.i.l.InternalLoggerFactory - Using SLF4J as the default logging framework
2025-02-28 13:38:34 [] DEBUG i.n.util.internal.PlatformDependent0 - -Dio.netty.noUnsafe: false
2025-02-28 13:38:34 [] DEBUG i.n.util.internal.PlatformDependent0 - Java version: 17
2025-02-28 13:38:34 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe.theUnsafe: available
2025-02-28 13:38:34 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe base methods: all available
2025-02-28 13:38:34 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe.storeFence: available
2025-02-28 13:38:34 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.Buffer.address: available
2025-02-28 13:38:34 [] DEBUG i.n.util.internal.PlatformDependent0 - direct buffer constructor: unavailable: Reflective setAccessible(true) disabled
2025-02-28 13:38:34 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.Bits.unaligned: available, true
2025-02-28 13:38:34 [] DEBUG i.n.util.internal.PlatformDependent0 - jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable: class io.netty.util.internal.PlatformDependent0$7 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @3e77a1ed
2025-02-28 13:38:34 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.DirectByteBuffer.<init>(long, {int,long}): unavailable
2025-02-28 13:38:34 [] DEBUG i.n.util.internal.PlatformDependent - sun.misc.Unsafe: available
2025-02-28 13:38:34 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.tmpdir: C:\Users\CITPL\AppData\Local\Temp (java.io.tmpdir)
2025-02-28 13:38:34 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.bitMode: 64 (sun.arch.data.model)
2025-02-28 13:38:34 [] DEBUG i.n.util.internal.PlatformDependent - Platform: Windows
2025-02-28 13:38:34 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.maxDirectMemory: -1 bytes
2025-02-28 13:38:34 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.uninitializedArrayAllocationThreshold: -1
2025-02-28 13:38:34 [] DEBUG io.netty.util.internal.CleanerJava9 - java.nio.ByteBuffer.cleaner(): available
2025-02-28 13:38:34 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.noPreferDirect: false
2025-02-28 13:38:34 [] DEBUG reactor.util.Loggers - Using Slf4j logging framework
2025-02-28 13:38:34 [] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-02-28 13:38:34 [] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2025-02-28 13:38:34 [] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2025-02-28 13:38:34 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-02-28 13:38:34 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via user class loader
2025-02-28 13:38:34 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-02-28 13:38:34 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-02-28 13:38:34 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-02-28 13:38:34 [] DEBUG o.h.v.i.e.r.TraversableResolvers - Cannot find jakarta.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2025-02-28 13:38:34 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-02-28 13:38:34 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-02-28 13:38:34 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-02-28 13:38:34 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-02-28 13:38:34 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-02-28 13:38:34 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-02-28 13:38:34 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	c.c.c.g.c.c.HomeController:
	{GET [/home]}: get()
2025-02-28 13:38:34 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2025-02-28 13:38:34 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 'beanNameHandlerMapping' {}
2025-02-28 13:38:34 [] DEBUG _.s.w.s.HandlerMapping.Mappings - Mapped /validate/** -> ProxyExchangeHandlerFunction
/users/** -> ProxyExchangeHandlerFunction
2025-02-28 13:38:34 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2025-02-28 13:38:35 [] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-02-28 13:38:35 [] DEBUG i.n.u.i.InternalThreadLocalMap - -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2025-02-28 13:38:35 [] DEBUG i.n.u.i.InternalThreadLocalMap - -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2025-02-28 13:38:35 [] DEBUG io.netty.util.ResourceLeakDetector - -Dio.netty.leakDetection.level: simple
2025-02-28 13:38:35 [] DEBUG io.netty.util.ResourceLeakDetector - -Dio.netty.leakDetection.targetRecords: 4
2025-02-28 13:38:35 [] DEBUG i.n.handler.codec.compression.Brotli - brotli4j not in the classpath; Brotli support will be unavailable.
2025-02-28 13:38:35 [] DEBUG reactor.netty.tcp.TcpResources - [http] resources will use the default LoopResources: DefaultLoopResources {prefix=reactor-http, daemon=true, selectCount=12, workerCount=12}
2025-02-28 13:38:35 [] DEBUG reactor.netty.tcp.TcpResources - [http] resources will use the default ConnectionProvider: reactor.netty.resources.DefaultPooledConnectionProvider@150677ad
2025-02-28 13:38:35 [] DEBUG r.netty.resources.DefaultLoopIOUring - Default io_uring support : false
2025-02-28 13:38:35 [] DEBUG r.netty.resources.DefaultLoopEpoll - Default Epoll support : false
2025-02-28 13:38:35 [] DEBUG r.netty.resources.DefaultLoopKQueue - Default KQueue support : false
2025-02-28 13:38:35 [] DEBUG i.n.c.MultithreadEventLoopGroup - -Dio.netty.eventLoopThreads: 24
2025-02-28 13:38:35 [] DEBUG i.n.u.concurrent.GlobalEventExecutor - -Dio.netty.globalEventExecutor.quietPeriodSeconds: 1
2025-02-28 13:38:35 [] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.noKeySetOptimization: false
2025-02-28 13:38:35 [] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.selectorAutoRebuildThreshold: 512
2025-02-28 13:38:35 [] DEBUG i.n.util.internal.PlatformDependent - org.jctools-core.MpscChunkedArrayQueue: available
2025-02-28 13:38:35 [] DEBUG io.netty.util.NetUtil - -Djava.net.preferIPv4Stack: false
2025-02-28 13:38:35 [] DEBUG io.netty.util.NetUtil - -Djava.net.preferIPv6Addresses: false
2025-02-28 13:38:35 [] DEBUG i.netty.util.NetUtilInitializations - Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2025-02-28 13:38:35 [] DEBUG io.netty.util.NetUtil - Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2025-02-28 13:38:35 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default ResolvedAddressTypes: IPV4_ONLY
2025-02-28 13:38:35 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Localhost address: localhost/127.0.0.1
2025-02-28 13:38:35 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Windows hostname: DESKTOP-P307093
2025-02-28 13:38:35 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default search domains: []
2025-02-28 13:38:35 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default UnixResolverOptions{ndots=1, timeout=5, attempts=16}
2025-02-28 13:38:35 [] DEBUG i.n.r.DefaultHostsFileEntriesResolver - -Dio.netty.hostsFileRefreshInterval: 0
2025-02-28 13:38:35 [] DEBUG i.n.r.d.DefaultDnsServerAddressStreamProvider - Default DNS servers: [/8.8.8.8:53, /4.2.2.2:53] (sun.net.dns.ResolverConfiguration)
2025-02-28 13:38:35 [] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-02-28 13:38:35 [] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-02-28 13:38:35 [] INFO  c.c.c.g.c.CommongatewayApplication - Started CommongatewayApplication in 3.873 seconds (process running for 4.803)
2025-02-28 13:38:39 [] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-02-28 13:38:39 [] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-02-28 13:38:39 [] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-02-28 13:38:39 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 13:38:39 [d803056e-7735-4760-b8e3-c3623e81c3b1] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 13:38:39 [d803056e-7735-4760-b8e3-c3623e81c3b1] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /users
2025-02-28 13:38:39 [d803056e-7735-4760-b8e3-c3623e81c3b1] WARN  c.c.c.g.c.c.ValidationInterceptor - ❌ Missing Validation Token or OrgId!
2025-02-28 13:38:39 [] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /error
2025-02-28 13:38:39 [] WARN  c.c.c.g.c.c.ValidationInterceptor - ❌ Missing Validation Token or OrgId!
2025-02-28 13:38:44 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 13:38:44 [d6bb6be9-9225-42dd-940f-ee9b3d2a6b80] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 13:38:44 [d6bb6be9-9225-42dd-940f-ee9b3d2a6b80] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /users
2025-02-28 13:38:44 [d6bb6be9-9225-42dd-940f-ee9b3d2a6b80] WARN  c.c.c.g.c.c.ValidationInterceptor - ❌ Missing Validation Token or OrgId!
2025-02-28 13:38:44 [] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /error
2025-02-28 13:38:44 [] WARN  c.c.c.g.c.c.ValidationInterceptor - ❌ Missing Validation Token or OrgId!
2025-02-28 13:38:50 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 13:38:50 [80e7cf99-26ca-4730-bec3-c3198cb77ad3] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 13:38:50 [80e7cf99-26ca-4730-bec3-c3198cb77ad3] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /users
2025-02-28 13:38:50 [80e7cf99-26ca-4730-bec3-c3198cb77ad3] DEBUG r.n.r.PooledConnectionProvider - Creating a new [http] client pool [PoolFactory{evictionInterval=PT0S, leasingStrategy=fifo, maxConnections=500, maxIdleTime=-1, maxLifeTime=-1, metricsEnabled=false, pendingAcquireMaxCount=1000, pendingAcquireTimeout=45000}] for [localhost/<unresolved>:8081]
2025-02-28 13:38:50 [80e7cf99-26ca-4730-bec3-c3198cb77ad3] DEBUG io.netty.channel.DefaultChannelId - -Dio.netty.processId: 14396 (auto-detected)
2025-02-28 13:38:50 [80e7cf99-26ca-4730-bec3-c3198cb77ad3] DEBUG io.netty.channel.DefaultChannelId - -Dio.netty.machineId: 00:15:5d:ff:fe:02:b5:1f (auto-detected)
2025-02-28 13:38:50 [80e7cf99-26ca-4730-bec3-c3198cb77ad3] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.numHeapArenas: 24
2025-02-28 13:38:50 [80e7cf99-26ca-4730-bec3-c3198cb77ad3] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.numDirectArenas: 24
2025-02-28 13:38:50 [80e7cf99-26ca-4730-bec3-c3198cb77ad3] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.pageSize: 8192
2025-02-28 13:38:50 [80e7cf99-26ca-4730-bec3-c3198cb77ad3] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxOrder: 9
2025-02-28 13:38:50 [80e7cf99-26ca-4730-bec3-c3198cb77ad3] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.chunkSize: 4194304
2025-02-28 13:38:50 [80e7cf99-26ca-4730-bec3-c3198cb77ad3] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.smallCacheSize: 256
2025-02-28 13:38:50 [80e7cf99-26ca-4730-bec3-c3198cb77ad3] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.normalCacheSize: 64
2025-02-28 13:38:50 [80e7cf99-26ca-4730-bec3-c3198cb77ad3] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2025-02-28 13:38:50 [80e7cf99-26ca-4730-bec3-c3198cb77ad3] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.cacheTrimInterval: 8192
2025-02-28 13:38:50 [80e7cf99-26ca-4730-bec3-c3198cb77ad3] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.cacheTrimIntervalMillis: 0
2025-02-28 13:38:50 [80e7cf99-26ca-4730-bec3-c3198cb77ad3] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.useCacheForAllThreads: false
2025-02-28 13:38:50 [80e7cf99-26ca-4730-bec3-c3198cb77ad3] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
2025-02-28 13:38:50 [80e7cf99-26ca-4730-bec3-c3198cb77ad3] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.disableCacheFinalizersForFastThreadLocalThreads: false
2025-02-28 13:38:50 [80e7cf99-26ca-4730-bec3-c3198cb77ad3] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.allocator.type: pooled
2025-02-28 13:38:50 [80e7cf99-26ca-4730-bec3-c3198cb77ad3] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.threadLocalDirectBufferSize: 0
2025-02-28 13:38:50 [80e7cf99-26ca-4730-bec3-c3198cb77ad3] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.maxThreadLocalCharBufferSize: 16384
2025-02-28 13:38:50 [] DEBUG r.n.r.PooledConnectionProvider - [73f76a71] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:38:50 [] DEBUG io.netty.buffer.AbstractByteBuf - -Dio.netty.buffer.checkAccessible: true
2025-02-28 13:38:50 [] DEBUG io.netty.buffer.AbstractByteBuf - -Dio.netty.buffer.checkBounds: true
2025-02-28 13:38:50 [] DEBUG i.n.util.ResourceLeakDetectorFactory - Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@64e099f7
2025-02-28 13:38:50 [] DEBUG r.netty.transport.TransportConfig - [73f76a71] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-28 13:38:50 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 13:38:50 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 13:38:50 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 13:38:50 [] DEBUG i.n.b.ChannelInitializerExtensions - -Dio.netty.bootstrap.extensions: null
2025-02-28 13:38:50 [] DEBUG r.netty.transport.TransportConnector - [73f76a71] Connecting to [localhost/127.0.0.1:8081].
2025-02-28 13:38:50 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [73f76a71, L:/127.0.0.1:58446 - R:localhost/127.0.0.1:8081] Registering pool release on close event for channel
2025-02-28 13:38:50 [] DEBUG r.n.r.PooledConnectionProvider - [73f76a71, L:/127.0.0.1:58446 - R:localhost/127.0.0.1:8081] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:38:50 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [73f76a71, L:/127.0.0.1:58446 - R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x73f76a71, L:/127.0.0.1:58446 - R:localhost/127.0.0.1:8081]}, [connected])
2025-02-28 13:38:50 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [73f76a71-1, L:/127.0.0.1:58446 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0x73f76a71, L:/127.0.0.1:58446 - R:localhost/127.0.0.1:8081]}}, [configured])
2025-02-28 13:38:50 [] DEBUG r.n.http.client.HttpClientConnect - [73f76a71-1, L:/127.0.0.1:58446 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY, method=GET}
2025-02-28 13:38:50 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [73f76a71-1, L:/127.0.0.1:58446 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x73f76a71, L:/127.0.0.1:58446 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 13:38:50 [] DEBUG r.n.http.client.HttpClientOperations - [73f76a71-1, L:/127.0.0.1:58446 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 13:38:50 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.maxCapacityPerThread: 4096
2025-02-28 13:38:50 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.ratio: 8
2025-02-28 13:38:50 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.chunkSize: 32
2025-02-28 13:38:50 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.blocking: false
2025-02-28 13:38:50 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.batchFastThreadLocalOnly: true
2025-02-28 13:38:50 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [73f76a71-1, L:/127.0.0.1:58446 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x73f76a71, L:/127.0.0.1:58446 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 13:38:50 [] DEBUG i.n.handler.codec.compression.Zstd - zstd-jni not in the classpath; Zstd support will be unavailable.
2025-02-28 13:38:50 [] DEBUG r.n.http.client.HttpClientOperations - [73f76a71-1, L:/127.0.0.1:58446 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-28 13:38:50 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [73f76a71-1, L:/127.0.0.1:58446 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x73f76a71, L:/127.0.0.1:58446 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 13:38:50 [] DEBUG reactor.netty.channel.FluxReceive - [73f76a71-1, L:/127.0.0.1:58446 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-28 13:38:50 [] DEBUG r.n.http.client.HttpClientOperations - [73f76a71-1, L:/127.0.0.1:58446 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 13:38:50 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [73f76a71, L:/127.0.0.1:58446 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x73f76a71, L:/127.0.0.1:58446 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 13:38:50 [80e7cf99-26ca-4730-bec3-c3198cb77ad3] INFO  c.c.c.g.c.c.ValidationInterceptor - ✅ Token Validated! Forwarding request...
2025-02-28 13:38:50 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [73f76a71, L:/127.0.0.1:58446 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x73f76a71, L:/127.0.0.1:58446 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 13:38:50 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [73f76a71, L:/127.0.0.1:58446 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-28 13:38:50 [] DEBUG r.n.r.PooledConnectionProvider - [73f76a71, L:/127.0.0.1:58446 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-28 13:38:50 [80e7cf99-26ca-4730-bec3-c3198cb77ad3] DEBUG i.m.c.u.i.l.InternalLoggerFactory - Using SLF4J as the default logging framework
2025-02-28 13:38:50 [80e7cf99-26ca-4730-bec3-c3198cb77ad3] DEBUG r.n.r.PooledConnectionProvider - Creating a new [http] client pool [PoolFactory{evictionInterval=PT0S, leasingStrategy=fifo, maxConnections=500, maxIdleTime=-1, maxLifeTime=-1, metricsEnabled=false, pendingAcquireMaxCount=1000, pendingAcquireTimeout=45000}] for [localhost/<unresolved>:8082]
2025-02-28 13:38:50 [] DEBUG r.n.r.PooledConnectionProvider - [549e3bd2] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:38:50 [] DEBUG r.netty.transport.TransportConfig - [549e3bd2] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-28 13:38:50 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 13:38:50 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 13:38:50 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 13:38:50 [] DEBUG r.netty.transport.TransportConnector - [549e3bd2] Connecting to [localhost/127.0.0.1:8082].
2025-02-28 13:38:50 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [549e3bd2, L:/127.0.0.1:58447 - R:localhost/127.0.0.1:8082] Registering pool release on close event for channel
2025-02-28 13:38:50 [] DEBUG r.n.r.PooledConnectionProvider - [549e3bd2, L:/127.0.0.1:58447 - R:localhost/127.0.0.1:8082] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 13:38:50 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [549e3bd2, L:/127.0.0.1:58447 - R:localhost/127.0.0.1:8082] onStateChange(PooledConnection{channel=[id: 0x549e3bd2, L:/127.0.0.1:58447 - R:localhost/127.0.0.1:8082]}, [connected])
2025-02-28 13:38:50 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [549e3bd2-1, L:/127.0.0.1:58447 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0x549e3bd2, L:/127.0.0.1:58447 - R:localhost/127.0.0.1:8082]}}, [configured])
2025-02-28 13:38:50 [] DEBUG r.n.http.client.HttpClientConnect - [549e3bd2-1, L:/127.0.0.1:58447 - R:localhost/127.0.0.1:8082] Handler is being applied: {uri=http://localhost:8082/users, method=GET}
2025-02-28 13:38:50 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [549e3bd2-1, L:/127.0.0.1:58447 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0x549e3bd2, L:/127.0.0.1:58447 - R:localhost/127.0.0.1:8082]}}, [request_prepared])
2025-02-28 13:38:50 [] DEBUG r.n.http.client.HttpClientOperations - [549e3bd2-1, L:/127.0.0.1:58447 - R:localhost/127.0.0.1:8082] No sendHeaders() called before complete, sending zero-length header
2025-02-28 13:38:50 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [549e3bd2-1, L:/127.0.0.1:58447 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0x549e3bd2, L:/127.0.0.1:58447 - R:localhost/127.0.0.1:8082]}}, [request_sent])
2025-02-28 13:38:50 [] DEBUG r.n.http.client.HttpClientOperations - [549e3bd2-1, L:/127.0.0.1:58447 - R:localhost/127.0.0.1:8082] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Content-Length: <filtered>
Date: <filtered>
2025-02-28 13:38:50 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [549e3bd2-1, L:/127.0.0.1:58447 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0x549e3bd2, L:/127.0.0.1:58447 - R:localhost/127.0.0.1:8082]}}, [response_received])
2025-02-28 13:38:50 [] DEBUG r.n.http.client.HttpClientOperations - [549e3bd2-1, L:/127.0.0.1:58447 - R:localhost/127.0.0.1:8082] Received last HTTP packet
2025-02-28 13:38:50 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [549e3bd2, L:/127.0.0.1:58447 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0x549e3bd2, L:/127.0.0.1:58447 - R:localhost/127.0.0.1:8082]}}, [response_completed])
2025-02-28 13:38:50 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [549e3bd2, L:/127.0.0.1:58447 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0x549e3bd2, L:/127.0.0.1:58447 - R:localhost/127.0.0.1:8082]}}, [disconnecting])
2025-02-28 13:38:50 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [549e3bd2, L:/127.0.0.1:58447 - R:localhost/127.0.0.1:8082] Releasing channel
2025-02-28 13:38:50 [] DEBUG r.n.r.PooledConnectionProvider - [549e3bd2, L:/127.0.0.1:58447 - R:localhost/127.0.0.1:8082] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-28 13:38:50 [] DEBUG reactor.netty.channel.FluxReceive - [d5a268a0, L:/127.0.0.1:58447 ! R:localhost/127.0.0.1:8082] [terminated=true, cancelled=false, pending=1, error=null]: subscribing inbound receiver
2025-02-28 13:39:51 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [73f76a71, L:/127.0.0.1:58446 ! R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x73f76a71, L:/127.0.0.1:58446 ! R:localhost/127.0.0.1:8081]}, [disconnecting])
2025-02-28 13:39:51 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [549e3bd2, L:/127.0.0.1:58447 ! R:localhost/127.0.0.1:8082] onStateChange(PooledConnection{channel=[id: 0x549e3bd2, L:/127.0.0.1:58447 ! R:localhost/127.0.0.1:8082]}, [disconnecting])
2025-02-28 14:01:34 [] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-02-28 14:01:34 [] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-02-28 14:01:34 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 4 thread-local buffer(s) from thread: reactor-http-nio-4
2025-02-28 14:01:34 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 3 thread-local buffer(s) from thread: reactor-http-nio-2
2025-02-28 14:01:38 [] DEBUG org.jboss.logging - Logging Provider: org.jboss.logging.Slf4jLoggerProvider found via system property
2025-02-28 14:01:38 [] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final
2025-02-28 14:01:38 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-02-28 14:01:38 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-02-28 14:01:38 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-02-28 14:01:38 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-02-28 14:01:38 [] DEBUG o.h.v.i.e.r.TraversableResolvers - Cannot find jakarta.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2025-02-28 14:01:38 [] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-02-28 14:01:38 [] INFO  c.c.c.g.c.CommongatewayApplication - Starting CommongatewayApplication using Java 17.0.12 with PID 21664 (D:\WORKSPACE\API-GATEWAY\commongateway\target\classes started by CITPL in D:\WORKSPACE\API-GATEWAY)
2025-02-28 14:01:38 [] DEBUG c.c.c.g.c.CommongatewayApplication - Running with Spring Boot v3.4.2, Spring v6.2.2
2025-02-28 14:01:38 [] INFO  c.c.c.g.c.CommongatewayApplication - No active profile set, falling back to 1 default profile: "default"
2025-02-28 14:01:38 [] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-02-28 14:01:38 [] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-02-28 14:01:38 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-02-28 14:01:38 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-02-28 14:01:38 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-02-28 14:01:38 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-02-28 14:01:38 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-02-28 14:01:38 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-02-28 14:01:39 [] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=d2aee5ef-86a6-3b95-abd8-708d95e66676
2025-02-28 14:01:40 [] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-02-28 14:01:40 [] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-02-28 14:01:40 [] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-02-28 14:01:40 [] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.34]
2025-02-28 14:01:40 [] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-02-28 14:01:40 [] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1620 ms
2025-02-28 14:01:40 [] DEBUG i.n.u.i.l.InternalLoggerFactory - Using SLF4J as the default logging framework
2025-02-28 14:01:40 [] DEBUG i.n.util.internal.PlatformDependent0 - -Dio.netty.noUnsafe: false
2025-02-28 14:01:40 [] DEBUG i.n.util.internal.PlatformDependent0 - Java version: 17
2025-02-28 14:01:40 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe.theUnsafe: available
2025-02-28 14:01:40 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe base methods: all available
2025-02-28 14:01:40 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe.storeFence: available
2025-02-28 14:01:40 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.Buffer.address: available
2025-02-28 14:01:40 [] DEBUG i.n.util.internal.PlatformDependent0 - direct buffer constructor: unavailable: Reflective setAccessible(true) disabled
2025-02-28 14:01:40 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.Bits.unaligned: available, true
2025-02-28 14:01:40 [] DEBUG i.n.util.internal.PlatformDependent0 - jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable: class io.netty.util.internal.PlatformDependent0$7 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @3e77a1ed
2025-02-28 14:01:40 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.DirectByteBuffer.<init>(long, {int,long}): unavailable
2025-02-28 14:01:40 [] DEBUG i.n.util.internal.PlatformDependent - sun.misc.Unsafe: available
2025-02-28 14:01:40 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.tmpdir: C:\Users\CITPL\AppData\Local\Temp (java.io.tmpdir)
2025-02-28 14:01:40 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.bitMode: 64 (sun.arch.data.model)
2025-02-28 14:01:40 [] DEBUG i.n.util.internal.PlatformDependent - Platform: Windows
2025-02-28 14:01:40 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.maxDirectMemory: -1 bytes
2025-02-28 14:01:40 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.uninitializedArrayAllocationThreshold: -1
2025-02-28 14:01:40 [] DEBUG io.netty.util.internal.CleanerJava9 - java.nio.ByteBuffer.cleaner(): available
2025-02-28 14:01:40 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.noPreferDirect: false
2025-02-28 14:01:40 [] DEBUG reactor.util.Loggers - Using Slf4j logging framework
2025-02-28 14:01:40 [] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-02-28 14:01:40 [] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2025-02-28 14:01:40 [] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2025-02-28 14:01:40 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-02-28 14:01:40 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via user class loader
2025-02-28 14:01:40 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-02-28 14:01:40 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-02-28 14:01:40 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-02-28 14:01:40 [] DEBUG o.h.v.i.e.r.TraversableResolvers - Cannot find jakarta.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2025-02-28 14:01:40 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-02-28 14:01:40 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-02-28 14:01:40 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-02-28 14:01:40 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-02-28 14:01:40 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-02-28 14:01:40 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-02-28 14:01:41 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	c.c.c.g.c.c.HomeController:
	{GET [/home]}: get()
2025-02-28 14:01:41 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2025-02-28 14:01:41 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 'beanNameHandlerMapping' {}
2025-02-28 14:01:41 [] DEBUG _.s.w.s.HandlerMapping.Mappings - Mapped /validate/** -> ProxyExchangeHandlerFunction
/users/** -> ProxyExchangeHandlerFunction
2025-02-28 14:01:41 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2025-02-28 14:01:41 [] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-02-28 14:01:41 [] DEBUG i.n.u.i.InternalThreadLocalMap - -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2025-02-28 14:01:41 [] DEBUG i.n.u.i.InternalThreadLocalMap - -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2025-02-28 14:01:41 [] DEBUG io.netty.util.ResourceLeakDetector - -Dio.netty.leakDetection.level: simple
2025-02-28 14:01:41 [] DEBUG io.netty.util.ResourceLeakDetector - -Dio.netty.leakDetection.targetRecords: 4
2025-02-28 14:01:41 [] DEBUG i.n.handler.codec.compression.Brotli - brotli4j not in the classpath; Brotli support will be unavailable.
2025-02-28 14:01:41 [] DEBUG reactor.netty.tcp.TcpResources - [http] resources will use the default LoopResources: DefaultLoopResources {prefix=reactor-http, daemon=true, selectCount=12, workerCount=12}
2025-02-28 14:01:41 [] DEBUG reactor.netty.tcp.TcpResources - [http] resources will use the default ConnectionProvider: reactor.netty.resources.DefaultPooledConnectionProvider@7b926325
2025-02-28 14:01:41 [] DEBUG r.netty.resources.DefaultLoopIOUring - Default io_uring support : false
2025-02-28 14:01:41 [] DEBUG r.netty.resources.DefaultLoopEpoll - Default Epoll support : false
2025-02-28 14:01:41 [] DEBUG r.netty.resources.DefaultLoopKQueue - Default KQueue support : false
2025-02-28 14:01:41 [] DEBUG i.n.c.MultithreadEventLoopGroup - -Dio.netty.eventLoopThreads: 24
2025-02-28 14:01:41 [] DEBUG i.n.u.concurrent.GlobalEventExecutor - -Dio.netty.globalEventExecutor.quietPeriodSeconds: 1
2025-02-28 14:01:41 [] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.noKeySetOptimization: false
2025-02-28 14:01:41 [] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.selectorAutoRebuildThreshold: 512
2025-02-28 14:01:41 [] DEBUG i.n.util.internal.PlatformDependent - org.jctools-core.MpscChunkedArrayQueue: available
2025-02-28 14:01:41 [] DEBUG io.netty.util.NetUtil - -Djava.net.preferIPv4Stack: false
2025-02-28 14:01:41 [] DEBUG io.netty.util.NetUtil - -Djava.net.preferIPv6Addresses: false
2025-02-28 14:01:41 [] DEBUG i.netty.util.NetUtilInitializations - Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2025-02-28 14:01:41 [] DEBUG io.netty.util.NetUtil - Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2025-02-28 14:01:41 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default ResolvedAddressTypes: IPV4_ONLY
2025-02-28 14:01:41 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Localhost address: localhost/127.0.0.1
2025-02-28 14:01:41 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Windows hostname: DESKTOP-P307093
2025-02-28 14:01:41 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default search domains: []
2025-02-28 14:01:41 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default UnixResolverOptions{ndots=1, timeout=5, attempts=16}
2025-02-28 14:01:41 [] DEBUG i.n.r.DefaultHostsFileEntriesResolver - -Dio.netty.hostsFileRefreshInterval: 0
2025-02-28 14:01:41 [] DEBUG i.n.r.d.DefaultDnsServerAddressStreamProvider - Default DNS servers: [/8.8.8.8:53, /4.2.2.2:53] (sun.net.dns.ResolverConfiguration)
2025-02-28 14:01:41 [] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-02-28 14:01:41 [] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-02-28 14:01:42 [] INFO  c.c.c.g.c.CommongatewayApplication - Started CommongatewayApplication in 4.071 seconds (process running for 4.983)
2025-02-28 14:01:47 [] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-02-28 14:01:47 [] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-02-28 14:01:47 [] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-02-28 14:01:47 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 14:01:47 [ef36208a-c5cd-4a56-824c-568bae53534d] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 14:01:47 [ef36208a-c5cd-4a56-824c-568bae53534d] DEBUG i.m.c.u.i.l.InternalLoggerFactory - Using SLF4J as the default logging framework
2025-02-28 14:01:47 [ef36208a-c5cd-4a56-824c-568bae53534d] DEBUG r.n.r.PooledConnectionProvider - Creating a new [http] client pool [PoolFactory{evictionInterval=PT0S, leasingStrategy=fifo, maxConnections=500, maxIdleTime=-1, maxLifeTime=-1, metricsEnabled=false, pendingAcquireMaxCount=1000, pendingAcquireTimeout=45000}] for [localhost/<unresolved>:8081]
2025-02-28 14:01:47 [ef36208a-c5cd-4a56-824c-568bae53534d] DEBUG io.netty.channel.DefaultChannelId - -Dio.netty.processId: 21664 (auto-detected)
2025-02-28 14:01:48 [ef36208a-c5cd-4a56-824c-568bae53534d] DEBUG io.netty.channel.DefaultChannelId - -Dio.netty.machineId: 00:15:5d:ff:fe:02:b5:1f (auto-detected)
2025-02-28 14:01:48 [ef36208a-c5cd-4a56-824c-568bae53534d] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.numHeapArenas: 24
2025-02-28 14:01:48 [ef36208a-c5cd-4a56-824c-568bae53534d] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.numDirectArenas: 24
2025-02-28 14:01:48 [ef36208a-c5cd-4a56-824c-568bae53534d] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.pageSize: 8192
2025-02-28 14:01:48 [ef36208a-c5cd-4a56-824c-568bae53534d] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxOrder: 9
2025-02-28 14:01:48 [ef36208a-c5cd-4a56-824c-568bae53534d] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.chunkSize: 4194304
2025-02-28 14:01:48 [ef36208a-c5cd-4a56-824c-568bae53534d] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.smallCacheSize: 256
2025-02-28 14:01:48 [ef36208a-c5cd-4a56-824c-568bae53534d] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.normalCacheSize: 64
2025-02-28 14:01:48 [ef36208a-c5cd-4a56-824c-568bae53534d] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2025-02-28 14:01:48 [ef36208a-c5cd-4a56-824c-568bae53534d] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.cacheTrimInterval: 8192
2025-02-28 14:01:48 [ef36208a-c5cd-4a56-824c-568bae53534d] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.cacheTrimIntervalMillis: 0
2025-02-28 14:01:48 [ef36208a-c5cd-4a56-824c-568bae53534d] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.useCacheForAllThreads: false
2025-02-28 14:01:48 [ef36208a-c5cd-4a56-824c-568bae53534d] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
2025-02-28 14:01:48 [ef36208a-c5cd-4a56-824c-568bae53534d] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.disableCacheFinalizersForFastThreadLocalThreads: false
2025-02-28 14:01:48 [ef36208a-c5cd-4a56-824c-568bae53534d] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.allocator.type: pooled
2025-02-28 14:01:48 [ef36208a-c5cd-4a56-824c-568bae53534d] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.threadLocalDirectBufferSize: 0
2025-02-28 14:01:48 [ef36208a-c5cd-4a56-824c-568bae53534d] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.maxThreadLocalCharBufferSize: 16384
2025-02-28 14:01:48 [] DEBUG r.n.r.PooledConnectionProvider - [06531071] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 14:01:48 [] DEBUG io.netty.buffer.AbstractByteBuf - -Dio.netty.buffer.checkAccessible: true
2025-02-28 14:01:48 [] DEBUG io.netty.buffer.AbstractByteBuf - -Dio.netty.buffer.checkBounds: true
2025-02-28 14:01:48 [] DEBUG i.n.util.ResourceLeakDetectorFactory - Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@434a6a3
2025-02-28 14:01:48 [] DEBUG r.netty.transport.TransportConfig - [06531071] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-28 14:01:48 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 14:01:48 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 14:01:48 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 14:01:48 [] DEBUG i.n.b.ChannelInitializerExtensions - -Dio.netty.bootstrap.extensions: null
2025-02-28 14:01:48 [] DEBUG r.netty.transport.TransportConnector - [06531071] Connecting to [localhost/127.0.0.1:8081].
2025-02-28 14:01:48 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [06531071, L:/127.0.0.1:58838 - R:localhost/127.0.0.1:8081] Registering pool release on close event for channel
2025-02-28 14:01:48 [] DEBUG r.n.r.PooledConnectionProvider - [06531071, L:/127.0.0.1:58838 - R:localhost/127.0.0.1:8081] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 14:01:48 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [06531071, L:/127.0.0.1:58838 - R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x06531071, L:/127.0.0.1:58838 - R:localhost/127.0.0.1:8081]}, [connected])
2025-02-28 14:01:48 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [06531071-1, L:/127.0.0.1:58838 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0x06531071, L:/127.0.0.1:58838 - R:localhost/127.0.0.1:8081]}}, [configured])
2025-02-28 14:01:48 [] DEBUG r.n.http.client.HttpClientConnect - [06531071-1, L:/127.0.0.1:58838 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY, method=GET}
2025-02-28 14:01:48 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [06531071-1, L:/127.0.0.1:58838 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x06531071, L:/127.0.0.1:58838 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 14:01:48 [] DEBUG r.n.http.client.HttpClientOperations - [06531071-1, L:/127.0.0.1:58838 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 14:01:48 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.maxCapacityPerThread: 4096
2025-02-28 14:01:48 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.ratio: 8
2025-02-28 14:01:48 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.chunkSize: 32
2025-02-28 14:01:48 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.blocking: false
2025-02-28 14:01:48 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.batchFastThreadLocalOnly: true
2025-02-28 14:01:48 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [06531071-1, L:/127.0.0.1:58838 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x06531071, L:/127.0.0.1:58838 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 14:01:48 [] DEBUG i.n.handler.codec.compression.Zstd - zstd-jni not in the classpath; Zstd support will be unavailable.
2025-02-28 14:01:48 [] DEBUG r.n.http.client.HttpClientOperations - [06531071-1, L:/127.0.0.1:58838 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-28 14:01:48 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [06531071-1, L:/127.0.0.1:58838 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x06531071, L:/127.0.0.1:58838 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 14:01:48 [] DEBUG r.n.http.client.HttpClientOperations - [06531071-1, L:/127.0.0.1:58838 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 14:01:48 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [06531071, L:/127.0.0.1:58838 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x06531071, L:/127.0.0.1:58838 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 14:01:48 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [06531071, L:/127.0.0.1:58838 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x06531071, L:/127.0.0.1:58838 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 14:01:48 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [06531071, L:/127.0.0.1:58838 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-28 14:01:48 [] DEBUG r.n.r.PooledConnectionProvider - [06531071, L:/127.0.0.1:58838 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-28 14:01:48 [] DEBUG reactor.netty.channel.FluxReceive - [0a958895, L:/127.0.0.1:58838 ! R:localhost/127.0.0.1:8081] [terminated=true, cancelled=false, pending=1, error=null]: subscribing inbound receiver
2025-02-28 14:02:03 [] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-02-28 14:02:03 [] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-02-28 14:02:03 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [06531071, L:/127.0.0.1:58838 ! R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x06531071, L:/127.0.0.1:58838 ! R:localhost/127.0.0.1:8081]}, [disconnecting])
2025-02-28 14:02:03 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 4 thread-local buffer(s) from thread: reactor-http-nio-3
2025-02-28 14:02:05 [] DEBUG org.jboss.logging - Logging Provider: org.jboss.logging.Slf4jLoggerProvider found via system property
2025-02-28 14:02:05 [] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final
2025-02-28 14:02:05 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-02-28 14:02:05 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-02-28 14:02:05 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-02-28 14:02:05 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-02-28 14:02:05 [] DEBUG o.h.v.i.e.r.TraversableResolvers - Cannot find jakarta.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2025-02-28 14:02:05 [] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-02-28 14:02:05 [] INFO  c.c.c.g.c.CommongatewayApplication - Starting CommongatewayApplication using Java 17.0.12 with PID 12056 (D:\WORKSPACE\API-GATEWAY\commongateway\target\classes started by CITPL in D:\WORKSPACE\API-GATEWAY)
2025-02-28 14:02:05 [] DEBUG c.c.c.g.c.CommongatewayApplication - Running with Spring Boot v3.4.2, Spring v6.2.2
2025-02-28 14:02:05 [] INFO  c.c.c.g.c.CommongatewayApplication - No active profile set, falling back to 1 default profile: "default"
2025-02-28 14:02:05 [] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-02-28 14:02:05 [] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-02-28 14:02:06 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-02-28 14:02:06 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-02-28 14:02:06 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-02-28 14:02:06 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-02-28 14:02:06 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-02-28 14:02:06 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-02-28 14:02:07 [] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=d2aee5ef-86a6-3b95-abd8-708d95e66676
2025-02-28 14:02:07 [] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-02-28 14:02:07 [] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-02-28 14:02:07 [] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-02-28 14:02:07 [] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.34]
2025-02-28 14:02:07 [] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-02-28 14:02:07 [] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1618 ms
2025-02-28 14:02:07 [] DEBUG i.n.u.i.l.InternalLoggerFactory - Using SLF4J as the default logging framework
2025-02-28 14:02:07 [] DEBUG i.n.util.internal.PlatformDependent0 - -Dio.netty.noUnsafe: false
2025-02-28 14:02:07 [] DEBUG i.n.util.internal.PlatformDependent0 - Java version: 17
2025-02-28 14:02:07 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe.theUnsafe: available
2025-02-28 14:02:07 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe base methods: all available
2025-02-28 14:02:07 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe.storeFence: available
2025-02-28 14:02:07 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.Buffer.address: available
2025-02-28 14:02:07 [] DEBUG i.n.util.internal.PlatformDependent0 - direct buffer constructor: unavailable: Reflective setAccessible(true) disabled
2025-02-28 14:02:07 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.Bits.unaligned: available, true
2025-02-28 14:02:07 [] DEBUG i.n.util.internal.PlatformDependent0 - jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable: class io.netty.util.internal.PlatformDependent0$7 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @3e77a1ed
2025-02-28 14:02:07 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.DirectByteBuffer.<init>(long, {int,long}): unavailable
2025-02-28 14:02:07 [] DEBUG i.n.util.internal.PlatformDependent - sun.misc.Unsafe: available
2025-02-28 14:02:07 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.tmpdir: C:\Users\CITPL\AppData\Local\Temp (java.io.tmpdir)
2025-02-28 14:02:07 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.bitMode: 64 (sun.arch.data.model)
2025-02-28 14:02:07 [] DEBUG i.n.util.internal.PlatformDependent - Platform: Windows
2025-02-28 14:02:07 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.maxDirectMemory: -1 bytes
2025-02-28 14:02:07 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.uninitializedArrayAllocationThreshold: -1
2025-02-28 14:02:07 [] DEBUG io.netty.util.internal.CleanerJava9 - java.nio.ByteBuffer.cleaner(): available
2025-02-28 14:02:07 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.noPreferDirect: false
2025-02-28 14:02:07 [] DEBUG reactor.util.Loggers - Using Slf4j logging framework
2025-02-28 14:02:08 [] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-02-28 14:02:08 [] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2025-02-28 14:02:08 [] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2025-02-28 14:02:08 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-02-28 14:02:08 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via user class loader
2025-02-28 14:02:08 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-02-28 14:02:08 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-02-28 14:02:08 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-02-28 14:02:08 [] DEBUG o.h.v.i.e.r.TraversableResolvers - Cannot find jakarta.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2025-02-28 14:02:08 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-02-28 14:02:08 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-02-28 14:02:08 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-02-28 14:02:08 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-02-28 14:02:08 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-02-28 14:02:08 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-02-28 14:02:08 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	c.c.c.g.c.c.HomeController:
	{GET [/home]}: get()
2025-02-28 14:02:08 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2025-02-28 14:02:08 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 'beanNameHandlerMapping' {}
2025-02-28 14:02:08 [] DEBUG _.s.w.s.HandlerMapping.Mappings - Mapped /validate/** -> ProxyExchangeHandlerFunction
/users/** -> ProxyExchangeHandlerFunction
2025-02-28 14:02:08 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2025-02-28 14:02:08 [] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-02-28 14:02:08 [] DEBUG i.n.u.i.InternalThreadLocalMap - -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2025-02-28 14:02:08 [] DEBUG i.n.u.i.InternalThreadLocalMap - -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2025-02-28 14:02:08 [] DEBUG io.netty.util.ResourceLeakDetector - -Dio.netty.leakDetection.level: simple
2025-02-28 14:02:08 [] DEBUG io.netty.util.ResourceLeakDetector - -Dio.netty.leakDetection.targetRecords: 4
2025-02-28 14:02:08 [] DEBUG i.n.handler.codec.compression.Brotli - brotli4j not in the classpath; Brotli support will be unavailable.
2025-02-28 14:02:09 [] DEBUG reactor.netty.tcp.TcpResources - [http] resources will use the default LoopResources: DefaultLoopResources {prefix=reactor-http, daemon=true, selectCount=12, workerCount=12}
2025-02-28 14:02:09 [] DEBUG reactor.netty.tcp.TcpResources - [http] resources will use the default ConnectionProvider: reactor.netty.resources.DefaultPooledConnectionProvider@47dc35a0
2025-02-28 14:02:09 [] DEBUG r.netty.resources.DefaultLoopIOUring - Default io_uring support : false
2025-02-28 14:02:09 [] DEBUG r.netty.resources.DefaultLoopEpoll - Default Epoll support : false
2025-02-28 14:02:09 [] DEBUG r.netty.resources.DefaultLoopKQueue - Default KQueue support : false
2025-02-28 14:02:09 [] DEBUG i.n.c.MultithreadEventLoopGroup - -Dio.netty.eventLoopThreads: 24
2025-02-28 14:02:09 [] DEBUG i.n.u.concurrent.GlobalEventExecutor - -Dio.netty.globalEventExecutor.quietPeriodSeconds: 1
2025-02-28 14:02:09 [] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.noKeySetOptimization: false
2025-02-28 14:02:09 [] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.selectorAutoRebuildThreshold: 512
2025-02-28 14:02:09 [] DEBUG i.n.util.internal.PlatformDependent - org.jctools-core.MpscChunkedArrayQueue: available
2025-02-28 14:02:09 [] DEBUG io.netty.util.NetUtil - -Djava.net.preferIPv4Stack: false
2025-02-28 14:02:09 [] DEBUG io.netty.util.NetUtil - -Djava.net.preferIPv6Addresses: false
2025-02-28 14:02:09 [] DEBUG i.netty.util.NetUtilInitializations - Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2025-02-28 14:02:09 [] DEBUG io.netty.util.NetUtil - Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2025-02-28 14:02:09 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default ResolvedAddressTypes: IPV4_ONLY
2025-02-28 14:02:09 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Localhost address: localhost/127.0.0.1
2025-02-28 14:02:09 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Windows hostname: DESKTOP-P307093
2025-02-28 14:02:09 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default search domains: []
2025-02-28 14:02:09 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default UnixResolverOptions{ndots=1, timeout=5, attempts=16}
2025-02-28 14:02:09 [] DEBUG i.n.r.DefaultHostsFileEntriesResolver - -Dio.netty.hostsFileRefreshInterval: 0
2025-02-28 14:02:09 [] DEBUG i.n.r.d.DefaultDnsServerAddressStreamProvider - Default DNS servers: [/8.8.8.8:53, /4.2.2.2:53] (sun.net.dns.ResolverConfiguration)
2025-02-28 14:02:09 [] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-02-28 14:02:09 [] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-02-28 14:02:09 [] INFO  c.c.c.g.c.CommongatewayApplication - Started CommongatewayApplication in 4.108 seconds (process running for 5.024)
2025-02-28 14:02:16 [] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-02-28 14:02:16 [] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-02-28 14:02:19 [] DEBUG org.jboss.logging - Logging Provider: org.jboss.logging.Slf4jLoggerProvider found via system property
2025-02-28 14:02:19 [] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final
2025-02-28 14:02:19 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-02-28 14:02:19 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-02-28 14:02:19 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-02-28 14:02:19 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-02-28 14:02:19 [] DEBUG o.h.v.i.e.r.TraversableResolvers - Cannot find jakarta.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2025-02-28 14:02:19 [] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-02-28 14:02:19 [] INFO  c.c.c.g.c.CommongatewayApplication - Starting CommongatewayApplication using Java 17.0.12 with PID 18788 (D:\WORKSPACE\API-GATEWAY\commongateway\target\classes started by CITPL in D:\WORKSPACE\API-GATEWAY)
2025-02-28 14:02:19 [] DEBUG c.c.c.g.c.CommongatewayApplication - Running with Spring Boot v3.4.2, Spring v6.2.2
2025-02-28 14:02:19 [] INFO  c.c.c.g.c.CommongatewayApplication - No active profile set, falling back to 1 default profile: "default"
2025-02-28 14:02:19 [] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-02-28 14:02:19 [] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-02-28 14:02:19 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-02-28 14:02:19 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-02-28 14:02:19 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-02-28 14:02:19 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-02-28 14:02:19 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-02-28 14:02:19 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-02-28 14:02:20 [] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=d2aee5ef-86a6-3b95-abd8-708d95e66676
2025-02-28 14:02:21 [] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-02-28 14:02:21 [] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-02-28 14:02:21 [] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-02-28 14:02:21 [] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.34]
2025-02-28 14:02:21 [] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-02-28 14:02:21 [] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1970 ms
2025-02-28 14:02:21 [] DEBUG i.n.u.i.l.InternalLoggerFactory - Using SLF4J as the default logging framework
2025-02-28 14:02:21 [] DEBUG i.n.util.internal.PlatformDependent0 - -Dio.netty.noUnsafe: false
2025-02-28 14:02:21 [] DEBUG i.n.util.internal.PlatformDependent0 - Java version: 17
2025-02-28 14:02:21 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe.theUnsafe: available
2025-02-28 14:02:21 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe base methods: all available
2025-02-28 14:02:21 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe.storeFence: available
2025-02-28 14:02:21 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.Buffer.address: available
2025-02-28 14:02:21 [] DEBUG i.n.util.internal.PlatformDependent0 - direct buffer constructor: unavailable: Reflective setAccessible(true) disabled
2025-02-28 14:02:21 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.Bits.unaligned: available, true
2025-02-28 14:02:21 [] DEBUG i.n.util.internal.PlatformDependent0 - jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable: class io.netty.util.internal.PlatformDependent0$7 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @3e77a1ed
2025-02-28 14:02:21 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.DirectByteBuffer.<init>(long, {int,long}): unavailable
2025-02-28 14:02:21 [] DEBUG i.n.util.internal.PlatformDependent - sun.misc.Unsafe: available
2025-02-28 14:02:21 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.tmpdir: C:\Users\CITPL\AppData\Local\Temp (java.io.tmpdir)
2025-02-28 14:02:21 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.bitMode: 64 (sun.arch.data.model)
2025-02-28 14:02:21 [] DEBUG i.n.util.internal.PlatformDependent - Platform: Windows
2025-02-28 14:02:21 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.maxDirectMemory: -1 bytes
2025-02-28 14:02:21 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.uninitializedArrayAllocationThreshold: -1
2025-02-28 14:02:21 [] DEBUG io.netty.util.internal.CleanerJava9 - java.nio.ByteBuffer.cleaner(): available
2025-02-28 14:02:21 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.noPreferDirect: false
2025-02-28 14:02:21 [] DEBUG reactor.util.Loggers - Using Slf4j logging framework
2025-02-28 14:02:21 [] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-02-28 14:02:21 [] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2025-02-28 14:02:21 [] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2025-02-28 14:02:21 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-02-28 14:02:21 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via user class loader
2025-02-28 14:02:21 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-02-28 14:02:21 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-02-28 14:02:21 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-02-28 14:02:21 [] DEBUG o.h.v.i.e.r.TraversableResolvers - Cannot find jakarta.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2025-02-28 14:02:21 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-02-28 14:02:21 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-02-28 14:02:21 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-02-28 14:02:21 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-02-28 14:02:21 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-02-28 14:02:21 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-02-28 14:02:21 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	c.c.c.g.c.c.HomeController:
	{GET [/home]}: get()
2025-02-28 14:02:21 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2025-02-28 14:02:21 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 'beanNameHandlerMapping' {}
2025-02-28 14:02:21 [] DEBUG _.s.w.s.HandlerMapping.Mappings - Mapped /validate/** -> ProxyExchangeHandlerFunction
/users/** -> ProxyExchangeHandlerFunction
2025-02-28 14:02:21 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2025-02-28 14:02:22 [] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-02-28 14:02:22 [] DEBUG i.n.u.i.InternalThreadLocalMap - -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2025-02-28 14:02:22 [] DEBUG i.n.u.i.InternalThreadLocalMap - -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2025-02-28 14:02:22 [] DEBUG io.netty.util.ResourceLeakDetector - -Dio.netty.leakDetection.level: simple
2025-02-28 14:02:22 [] DEBUG io.netty.util.ResourceLeakDetector - -Dio.netty.leakDetection.targetRecords: 4
2025-02-28 14:02:22 [] DEBUG i.n.handler.codec.compression.Brotli - brotli4j not in the classpath; Brotli support will be unavailable.
2025-02-28 14:02:22 [] DEBUG reactor.netty.tcp.TcpResources - [http] resources will use the default LoopResources: DefaultLoopResources {prefix=reactor-http, daemon=true, selectCount=12, workerCount=12}
2025-02-28 14:02:22 [] DEBUG reactor.netty.tcp.TcpResources - [http] resources will use the default ConnectionProvider: reactor.netty.resources.DefaultPooledConnectionProvider@7b926325
2025-02-28 14:02:22 [] DEBUG r.netty.resources.DefaultLoopIOUring - Default io_uring support : false
2025-02-28 14:02:22 [] DEBUG r.netty.resources.DefaultLoopEpoll - Default Epoll support : false
2025-02-28 14:02:22 [] DEBUG r.netty.resources.DefaultLoopKQueue - Default KQueue support : false
2025-02-28 14:02:22 [] DEBUG i.n.c.MultithreadEventLoopGroup - -Dio.netty.eventLoopThreads: 24
2025-02-28 14:02:22 [] DEBUG i.n.u.concurrent.GlobalEventExecutor - -Dio.netty.globalEventExecutor.quietPeriodSeconds: 1
2025-02-28 14:02:22 [] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.noKeySetOptimization: false
2025-02-28 14:02:22 [] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.selectorAutoRebuildThreshold: 512
2025-02-28 14:02:22 [] DEBUG i.n.util.internal.PlatformDependent - org.jctools-core.MpscChunkedArrayQueue: available
2025-02-28 14:02:22 [] DEBUG io.netty.util.NetUtil - -Djava.net.preferIPv4Stack: false
2025-02-28 14:02:22 [] DEBUG io.netty.util.NetUtil - -Djava.net.preferIPv6Addresses: false
2025-02-28 14:02:22 [] DEBUG i.netty.util.NetUtilInitializations - Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2025-02-28 14:02:22 [] DEBUG io.netty.util.NetUtil - Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2025-02-28 14:02:22 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default ResolvedAddressTypes: IPV4_ONLY
2025-02-28 14:02:22 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Localhost address: localhost/127.0.0.1
2025-02-28 14:02:22 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Windows hostname: DESKTOP-P307093
2025-02-28 14:02:22 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default search domains: []
2025-02-28 14:02:22 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default UnixResolverOptions{ndots=1, timeout=5, attempts=16}
2025-02-28 14:02:22 [] DEBUG i.n.r.DefaultHostsFileEntriesResolver - -Dio.netty.hostsFileRefreshInterval: 0
2025-02-28 14:02:22 [] DEBUG i.n.r.d.DefaultDnsServerAddressStreamProvider - Default DNS servers: [/8.8.8.8:53, /4.2.2.2:53] (sun.net.dns.ResolverConfiguration)
2025-02-28 14:02:22 [] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-02-28 14:02:22 [] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-02-28 14:02:22 [] INFO  c.c.c.g.c.CommongatewayApplication - Started CommongatewayApplication in 4.409 seconds (process running for 5.388)
2025-02-28 14:02:23 [] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-02-28 14:02:23 [] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-02-28 14:02:23 [] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 0 ms
2025-02-28 14:02:23 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 14:02:23 [858df541-23b8-4070-aa2f-b438a175bef8] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 14:02:23 [858df541-23b8-4070-aa2f-b438a175bef8] DEBUG i.m.c.u.i.l.InternalLoggerFactory - Using SLF4J as the default logging framework
2025-02-28 14:02:23 [858df541-23b8-4070-aa2f-b438a175bef8] DEBUG r.n.r.PooledConnectionProvider - Creating a new [http] client pool [PoolFactory{evictionInterval=PT0S, leasingStrategy=fifo, maxConnections=500, maxIdleTime=-1, maxLifeTime=-1, metricsEnabled=false, pendingAcquireMaxCount=1000, pendingAcquireTimeout=45000}] for [localhost/<unresolved>:8081]
2025-02-28 14:02:23 [858df541-23b8-4070-aa2f-b438a175bef8] DEBUG io.netty.channel.DefaultChannelId - -Dio.netty.processId: 18788 (auto-detected)
2025-02-28 14:02:23 [858df541-23b8-4070-aa2f-b438a175bef8] DEBUG io.netty.channel.DefaultChannelId - -Dio.netty.machineId: 00:15:5d:ff:fe:02:b5:1f (auto-detected)
2025-02-28 14:02:23 [858df541-23b8-4070-aa2f-b438a175bef8] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.numHeapArenas: 24
2025-02-28 14:02:23 [858df541-23b8-4070-aa2f-b438a175bef8] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.numDirectArenas: 24
2025-02-28 14:02:23 [858df541-23b8-4070-aa2f-b438a175bef8] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.pageSize: 8192
2025-02-28 14:02:23 [858df541-23b8-4070-aa2f-b438a175bef8] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxOrder: 9
2025-02-28 14:02:23 [858df541-23b8-4070-aa2f-b438a175bef8] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.chunkSize: 4194304
2025-02-28 14:02:23 [858df541-23b8-4070-aa2f-b438a175bef8] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.smallCacheSize: 256
2025-02-28 14:02:23 [858df541-23b8-4070-aa2f-b438a175bef8] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.normalCacheSize: 64
2025-02-28 14:02:23 [858df541-23b8-4070-aa2f-b438a175bef8] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2025-02-28 14:02:23 [858df541-23b8-4070-aa2f-b438a175bef8] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.cacheTrimInterval: 8192
2025-02-28 14:02:23 [858df541-23b8-4070-aa2f-b438a175bef8] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.cacheTrimIntervalMillis: 0
2025-02-28 14:02:23 [858df541-23b8-4070-aa2f-b438a175bef8] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.useCacheForAllThreads: false
2025-02-28 14:02:23 [858df541-23b8-4070-aa2f-b438a175bef8] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
2025-02-28 14:02:23 [858df541-23b8-4070-aa2f-b438a175bef8] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.disableCacheFinalizersForFastThreadLocalThreads: false
2025-02-28 14:02:23 [858df541-23b8-4070-aa2f-b438a175bef8] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.allocator.type: pooled
2025-02-28 14:02:23 [858df541-23b8-4070-aa2f-b438a175bef8] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.threadLocalDirectBufferSize: 0
2025-02-28 14:02:23 [858df541-23b8-4070-aa2f-b438a175bef8] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.maxThreadLocalCharBufferSize: 16384
2025-02-28 14:02:23 [] DEBUG r.n.r.PooledConnectionProvider - [67e53173] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 14:02:24 [] DEBUG io.netty.buffer.AbstractByteBuf - -Dio.netty.buffer.checkAccessible: true
2025-02-28 14:02:24 [] DEBUG io.netty.buffer.AbstractByteBuf - -Dio.netty.buffer.checkBounds: true
2025-02-28 14:02:24 [] DEBUG i.n.util.ResourceLeakDetectorFactory - Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@1f828184
2025-02-28 14:02:24 [] DEBUG r.netty.transport.TransportConfig - [67e53173] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-28 14:02:24 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 14:02:24 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 14:02:24 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 14:02:24 [] DEBUG i.n.b.ChannelInitializerExtensions - -Dio.netty.bootstrap.extensions: null
2025-02-28 14:02:24 [] DEBUG r.netty.transport.TransportConnector - [67e53173] Connecting to [localhost/127.0.0.1:8081].
2025-02-28 14:02:24 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [67e53173, L:/127.0.0.1:58866 - R:localhost/127.0.0.1:8081] Registering pool release on close event for channel
2025-02-28 14:02:24 [] DEBUG r.n.r.PooledConnectionProvider - [67e53173, L:/127.0.0.1:58866 - R:localhost/127.0.0.1:8081] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 14:02:24 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [67e53173, L:/127.0.0.1:58866 - R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x67e53173, L:/127.0.0.1:58866 - R:localhost/127.0.0.1:8081]}, [connected])
2025-02-28 14:02:24 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [67e53173-1, L:/127.0.0.1:58866 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0x67e53173, L:/127.0.0.1:58866 - R:localhost/127.0.0.1:8081]}}, [configured])
2025-02-28 14:02:24 [] DEBUG r.n.http.client.HttpClientConnect - [67e53173-1, L:/127.0.0.1:58866 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY, method=GET}
2025-02-28 14:02:24 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [67e53173-1, L:/127.0.0.1:58866 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x67e53173, L:/127.0.0.1:58866 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 14:02:24 [] DEBUG r.n.http.client.HttpClientOperations - [67e53173-1, L:/127.0.0.1:58866 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 14:02:24 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.maxCapacityPerThread: 4096
2025-02-28 14:02:24 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.ratio: 8
2025-02-28 14:02:24 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.chunkSize: 32
2025-02-28 14:02:24 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.blocking: false
2025-02-28 14:02:24 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.batchFastThreadLocalOnly: true
2025-02-28 14:02:24 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [67e53173-1, L:/127.0.0.1:58866 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x67e53173, L:/127.0.0.1:58866 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 14:02:24 [] DEBUG i.n.handler.codec.compression.Zstd - zstd-jni not in the classpath; Zstd support will be unavailable.
2025-02-28 14:02:24 [] DEBUG r.n.http.client.HttpClientOperations - [67e53173-1, L:/127.0.0.1:58866 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-28 14:02:24 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [67e53173-1, L:/127.0.0.1:58866 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x67e53173, L:/127.0.0.1:58866 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 14:02:24 [] DEBUG r.n.http.client.HttpClientOperations - [67e53173-1, L:/127.0.0.1:58866 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 14:02:24 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [67e53173, L:/127.0.0.1:58866 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x67e53173, L:/127.0.0.1:58866 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 14:02:24 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [67e53173, L:/127.0.0.1:58866 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x67e53173, L:/127.0.0.1:58866 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 14:02:24 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [67e53173, L:/127.0.0.1:58866 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-28 14:02:24 [] DEBUG r.n.r.PooledConnectionProvider - [67e53173, L:/127.0.0.1:58866 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-28 14:02:24 [] DEBUG reactor.netty.channel.FluxReceive - [53c189f1, L:/127.0.0.1:58866 ! R:localhost/127.0.0.1:8081] [terminated=true, cancelled=false, pending=1, error=null]: subscribing inbound receiver
2025-02-28 14:02:29 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 14:02:29 [0398e6c0-a48c-454f-8fca-ea411fa07fae] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 14:02:29 [] DEBUG r.n.r.PooledConnectionProvider - [67e53173, L:/127.0.0.1:58866 - R:localhost/127.0.0.1:8081] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 14:02:29 [] DEBUG r.n.http.client.HttpClientConnect - [67e53173-2, L:/127.0.0.1:58866 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY, method=GET}
2025-02-28 14:02:29 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [67e53173-2, L:/127.0.0.1:58866 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x67e53173, L:/127.0.0.1:58866 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 14:02:29 [] DEBUG r.n.http.client.HttpClientOperations - [67e53173-2, L:/127.0.0.1:58866 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 14:02:29 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [67e53173-2, L:/127.0.0.1:58866 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x67e53173, L:/127.0.0.1:58866 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 14:02:29 [] DEBUG r.n.http.client.HttpClientOperations - [67e53173-2, L:/127.0.0.1:58866 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-28 14:02:29 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [67e53173-2, L:/127.0.0.1:58866 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x67e53173, L:/127.0.0.1:58866 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 14:02:29 [] DEBUG reactor.netty.channel.FluxReceive - [67e53173-2, L:/127.0.0.1:58866 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=1, error=null]: subscribing inbound receiver
2025-02-28 14:02:29 [] DEBUG r.n.http.client.HttpClientOperations - [67e53173-2, L:/127.0.0.1:58866 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 14:02:29 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [67e53173, L:/127.0.0.1:58866 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x67e53173, L:/127.0.0.1:58866 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 14:02:29 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [67e53173, L:/127.0.0.1:58866 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x67e53173, L:/127.0.0.1:58866 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 14:02:29 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [67e53173, L:/127.0.0.1:58866 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-28 14:02:29 [] DEBUG r.n.r.PooledConnectionProvider - [67e53173, L:/127.0.0.1:58866 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-28 14:02:38 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 14:02:38 [67430817-3027-4813-9d9e-0d4569fe7df3] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 14:02:38 [67430817-3027-4813-9d9e-0d4569fe7df3] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /users
2025-02-28 14:02:38 [67430817-3027-4813-9d9e-0d4569fe7df3] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔄 Using HTTP Method: GET
2025-02-28 14:02:38 [67430817-3027-4813-9d9e-0d4569fe7df3] DEBUG r.n.r.PooledConnectionProvider - Creating a new [http] client pool [PoolFactory{evictionInterval=PT0S, leasingStrategy=fifo, maxConnections=500, maxIdleTime=-1, maxLifeTime=-1, metricsEnabled=false, pendingAcquireMaxCount=1000, pendingAcquireTimeout=45000}] for [$%257Bspring.cloud.gateway.mvc.routes.uri/<unresolved>:80]
2025-02-28 14:02:38 [] DEBUG r.n.r.PooledConnectionProvider - [477d0183] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 14:02:38 [] DEBUG r.netty.transport.TransportConfig - [477d0183] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-28 14:02:38 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 14:02:38 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 14:02:38 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 14:02:38 [] DEBUG i.n.resolver.dns.DnsResolveContext - -Dio.netty.resolver.dns.tryCnameOnAddressLookups: false
2025-02-28 14:02:38 [] DEBUG i.netty.resolver.dns.DnsQueryContext - -Dio.netty.resolver.dns.idReuseOnTimeoutDelayMillis: 10000
2025-02-28 14:02:38 [] DEBUG i.n.util.ResourceLeakDetectorFactory - Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@6a6209c7
2025-02-28 14:02:38 [] DEBUG i.netty.resolver.dns.DnsQueryContext - [id: 0x2f88283b, L:/[0:0:0:0:0:0:0:0]:51413] WRITE: UDP, [10059: /8.8.8.8:53], DefaultDnsQuestion($%257Bspring.cloud.gateway.mvc.routes.uri. IN A)
2025-02-28 14:02:38 [] DEBUG i.netty.resolver.dns.DnsNameResolver - [id: 0x2f88283b, L:/[0:0:0:0:0:0:0:0]:51413] RECEIVED: UDP [10059: /8.8.8.8:53], DatagramDnsResponse(from: /8.8.8.8:53, to: /[0:0:0:0:0:0:0:0]:51413, id: 10059, QUERY(0), NXDomain(3), RD RA)
	DefaultDnsQuestion($%257Bspring.cloud.gateway.mvc.routes.uri. IN A)
	DefaultDnsRawRecord(. 86362 IN SOA 64B)
	DefaultDnsRawRecord(OPT flags:0 udp:512 0B)
2025-02-28 14:02:38 [] DEBUG i.netty.resolver.dns.DnsQueryContext - [id: 0x2f88283b, L:/[0:0:0:0:0:0:0:0]:51413] WRITE: UDP, [3873: /4.2.2.2:53], DefaultDnsQuestion($%257Bspring.cloud.gateway.mvc.routes.uri. IN A)
2025-02-28 14:02:38 [] DEBUG i.netty.resolver.dns.DnsNameResolver - [id: 0x2f88283b, L:/[0:0:0:0:0:0:0:0]:51413] RECEIVED: UDP [3873: /4.2.2.2:53], DatagramDnsResponse(from: /4.2.2.2:53, to: /[0:0:0:0:0:0:0:0]:51413, id: 3873, QUERY(0), NXDomain(3), RD RA)
	DefaultDnsQuestion($%257Bspring.cloud.gateway.mvc.routes.uri. IN A)
	DefaultDnsRawRecord(. 1870 IN SOA 64B)
	DefaultDnsRawRecord(OPT flags:0 udp:4096 0B)
2025-02-28 14:02:38 [67430817-3027-4813-9d9e-0d4569fe7df3] ERROR c.c.c.g.c.c.ValidationInterceptor - ⚠️ Error calling validation service
org.springframework.web.reactive.function.client.WebClientRequestException: Failed to resolve '$%257Bspring.cloud.gateway.mvc.routes.uri' [A(1)] after 2 queries 
	at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:137)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ Request to GET $%257Bspring.cloud.gateway.mvc.routes.uri [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:137)
		at reactor.core.publisher.MonoErrorSupplied.subscribe(MonoErrorSupplied.java:55)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.MonoNext$NextSubscriber.onError(MonoNext.java:93)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onError(MonoFlatMapMany.java:205)
		at reactor.core.publisher.SerializedSubscriber.onError(SerializedSubscriber.java:124)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.whenError(FluxRetryWhen.java:229)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenOtherSubscriber.onError(FluxRetryWhen.java:279)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onError(FluxContextWrite.java:121)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.maybeOnError(FluxConcatMapNoPrefetch.java:327)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onNext(FluxConcatMapNoPrefetch.java:212)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.SinkManyEmitterProcessor.drain(SinkManyEmitterProcessor.java:476)
		at reactor.core.publisher.SinkManyEmitterProcessor$EmitterInner.drainParent(SinkManyEmitterProcessor.java:620)
		at reactor.core.publisher.FluxPublish$PubSubInner.request(FluxPublish.java:874)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
		at reactor.core.publisher.Operators$DeferredSubscription.request(Operators.java:1743)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.onError(FluxRetryWhen.java:196)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:205)
		at reactor.netty.http.client.HttpClientConnect$MonoHttpConnect$ClientTransportSubscriber.onError(HttpClientConnect.java:318)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:205)
		at reactor.netty.resources.DefaultPooledConnectionProvider$DisposableAcquire.onError(DefaultPooledConnectionProvider.java:174)
		at reactor.netty.internal.shaded.reactor.pool.AbstractPool$Borrower.fail(AbstractPool.java:479)
		at reactor.netty.internal.shaded.reactor.pool.SimpleDequePool.lambda$drainLoop$9(SimpleDequePool.java:442)
		at reactor.core.publisher.FluxDoOnEach$DoOnEachSubscriber.onError(FluxDoOnEach.java:186)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:205)
		at reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnectionAllocator$PooledConnectionInitializer.onError(DefaultPooledConnectionProvider.java:593)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.secondError(MonoFlatMap.java:241)
		at reactor.core.publisher.MonoFlatMap$FlatMapInner.onError(MonoFlatMap.java:315)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:106)
		at reactor.core.publisher.Operators.error(Operators.java:198)
		at reactor.core.publisher.MonoError.subscribe(MonoError.java:53)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
		at reactor.netty.transport.TransportConnector$MonoChannelPromise.tryFailure(TransportConnector.java:576)
		at reactor.netty.transport.TransportConnector.lambda$doResolveAndConnect$11(TransportConnector.java:375)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:557)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
		at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:629)
		at io.netty.util.concurrent.DefaultPromise.setFailure(DefaultPromise.java:110)
		at io.netty.resolver.InetSocketAddressResolver$2.operationComplete(InetSocketAddressResolver.java:86)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:583)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:559)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
		at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:629)
		at io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:118)
		at io.netty.resolver.dns.DnsResolveContext.finishResolve(DnsResolveContext.java:1158)
		at io.netty.resolver.dns.DnsResolveContext.tryToFinishResolve(DnsResolveContext.java:1097)
		at io.netty.resolver.dns.DnsResolveContext.query(DnsResolveContext.java:455)
		at io.netty.resolver.dns.DnsResolveContext.onResponse(DnsResolveContext.java:686)
		at io.netty.resolver.dns.DnsResolveContext.access$500(DnsResolveContext.java:70)
		at io.netty.resolver.dns.DnsResolveContext$2.operationComplete(DnsResolveContext.java:513)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:583)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:559)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
		at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:625)
		at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:105)
		at io.netty.resolver.dns.DnsQueryContext.trySuccess(DnsQueryContext.java:308)
		at io.netty.resolver.dns.DnsQueryContext.finishSuccess(DnsQueryContext.java:299)
		at io.netty.resolver.dns.DnsNameResolver$DnsResponseHandler.channelRead(DnsNameResolver.java:1491)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioMessageChannel$NioMessageUnsafe.read(AbstractNioMessageChannel.java:97)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104)
		at reactor.core.publisher.Mono.block(Mono.java:1779)
		at com.citpl.common.gateway.commongateway.config.ValidationInterceptor.preHandle(ValidationInterceptor.java:70)
		at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:146)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1083)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
		at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at com.citpl.common.gateway.commongateway.filter.MDCFilter.doFilter(MDCFilter.java:37)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.cloud.gateway.server.mvc.filter.WeightCalculatorFilter.doFilter(WeightCalculatorFilter.java:229)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.cloud.gateway.server.mvc.filter.FormFilter.doFilter(FormFilter.java:93)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: java.net.UnknownHostException: Failed to resolve '$%257Bspring.cloud.gateway.mvc.routes.uri' [A(1)] after 2 queries 
	at io.netty.resolver.dns.DnsResolveContext.finishResolve(DnsResolveContext.java:1150)
	at io.netty.resolver.dns.DnsResolveContext.tryToFinishResolve(DnsResolveContext.java:1097)
	at io.netty.resolver.dns.DnsResolveContext.query(DnsResolveContext.java:455)
	at io.netty.resolver.dns.DnsResolveContext.onResponse(DnsResolveContext.java:686)
	at io.netty.resolver.dns.DnsResolveContext.access$500(DnsResolveContext.java:70)
	at io.netty.resolver.dns.DnsResolveContext$2.operationComplete(DnsResolveContext.java:513)
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:583)
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:559)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
	at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:625)
	at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:105)
	at io.netty.resolver.dns.DnsQueryContext.trySuccess(DnsQueryContext.java:308)
	at io.netty.resolver.dns.DnsQueryContext.finishSuccess(DnsQueryContext.java:299)
	at io.netty.resolver.dns.DnsNameResolver$DnsResponseHandler.channelRead(DnsNameResolver.java:1491)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioMessageChannel$NioMessageUnsafe.read(AbstractNioMessageChannel.java:97)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.netty.resolver.dns.DnsErrorCauseException: Query failed with NXDOMAIN
	at io.netty.resolver.dns.DnsResolveContext.onResponse(..)(Unknown Source)
2025-02-28 14:02:39 [] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /error
2025-02-28 14:02:39 [] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔄 Using HTTP Method: GET
2025-02-28 14:02:39 [] DEBUG r.n.r.PooledConnectionProvider - [c89664ba] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 14:02:39 [] DEBUG r.netty.transport.TransportConfig - [c89664ba] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-28 14:02:39 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 14:02:39 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 14:02:39 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 14:02:39 [] DEBUG i.netty.resolver.dns.DnsQueryContext - [id: 0x88bc870b, L:/[0:0:0:0:0:0:0:0]:51414] WRITE: UDP, [2101: /8.8.8.8:53], DefaultDnsQuestion($%257Bspring.cloud.gateway.mvc.routes.uri. IN A)
2025-02-28 14:02:39 [] DEBUG i.netty.resolver.dns.DnsNameResolver - [id: 0x88bc870b, L:/[0:0:0:0:0:0:0:0]:51414] RECEIVED: UDP [2101: /8.8.8.8:53], DatagramDnsResponse(from: /8.8.8.8:53, to: /[0:0:0:0:0:0:0:0]:51414, id: 2101, QUERY(0), NXDomain(3), RD RA)
	DefaultDnsQuestion($%257Bspring.cloud.gateway.mvc.routes.uri. IN A)
	DefaultDnsRawRecord(. 86362 IN SOA 64B)
	DefaultDnsRawRecord(OPT flags:0 udp:512 0B)
2025-02-28 14:02:39 [] DEBUG i.netty.resolver.dns.DnsQueryContext - [id: 0x88bc870b, L:/[0:0:0:0:0:0:0:0]:51414] WRITE: UDP, [7593: /4.2.2.2:53], DefaultDnsQuestion($%257Bspring.cloud.gateway.mvc.routes.uri. IN A)
2025-02-28 14:02:39 [] DEBUG i.netty.resolver.dns.DnsNameResolver - [id: 0x88bc870b, L:/[0:0:0:0:0:0:0:0]:51414] RECEIVED: UDP [7593: /4.2.2.2:53], DatagramDnsResponse(from: /4.2.2.2:53, to: /[0:0:0:0:0:0:0:0]:51414, id: 7593, QUERY(0), NXDomain(3), RD RA)
	DefaultDnsQuestion($%257Bspring.cloud.gateway.mvc.routes.uri. IN A)
	DefaultDnsRawRecord(. 1838 IN SOA 64B)
	DefaultDnsRawRecord(OPT flags:0 udp:4096 0B)
2025-02-28 14:02:39 [] ERROR c.c.c.g.c.c.ValidationInterceptor - ⚠️ Error calling validation service
org.springframework.web.reactive.function.client.WebClientRequestException: Failed to resolve '$%257Bspring.cloud.gateway.mvc.routes.uri' [A(1)] after 2 queries 
	at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:137)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ Request to GET $%257Bspring.cloud.gateway.mvc.routes.uri [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:137)
		at reactor.core.publisher.MonoErrorSupplied.subscribe(MonoErrorSupplied.java:55)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.MonoNext$NextSubscriber.onError(MonoNext.java:93)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onError(MonoFlatMapMany.java:205)
		at reactor.core.publisher.SerializedSubscriber.onError(SerializedSubscriber.java:124)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.whenError(FluxRetryWhen.java:229)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenOtherSubscriber.onError(FluxRetryWhen.java:279)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onError(FluxContextWrite.java:121)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.maybeOnError(FluxConcatMapNoPrefetch.java:327)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onNext(FluxConcatMapNoPrefetch.java:212)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.SinkManyEmitterProcessor.drain(SinkManyEmitterProcessor.java:476)
		at reactor.core.publisher.SinkManyEmitterProcessor$EmitterInner.drainParent(SinkManyEmitterProcessor.java:620)
		at reactor.core.publisher.FluxPublish$PubSubInner.request(FluxPublish.java:874)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
		at reactor.core.publisher.Operators$DeferredSubscription.request(Operators.java:1743)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.onError(FluxRetryWhen.java:196)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:205)
		at reactor.netty.http.client.HttpClientConnect$MonoHttpConnect$ClientTransportSubscriber.onError(HttpClientConnect.java:318)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:205)
		at reactor.netty.resources.DefaultPooledConnectionProvider$DisposableAcquire.onError(DefaultPooledConnectionProvider.java:174)
		at reactor.netty.internal.shaded.reactor.pool.AbstractPool$Borrower.fail(AbstractPool.java:479)
		at reactor.netty.internal.shaded.reactor.pool.SimpleDequePool.lambda$drainLoop$9(SimpleDequePool.java:442)
		at reactor.core.publisher.FluxDoOnEach$DoOnEachSubscriber.onError(FluxDoOnEach.java:186)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:205)
		at reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnectionAllocator$PooledConnectionInitializer.onError(DefaultPooledConnectionProvider.java:593)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.secondError(MonoFlatMap.java:241)
		at reactor.core.publisher.MonoFlatMap$FlatMapInner.onError(MonoFlatMap.java:315)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:106)
		at reactor.core.publisher.Operators.error(Operators.java:198)
		at reactor.core.publisher.MonoError.subscribe(MonoError.java:53)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
		at reactor.netty.transport.TransportConnector$MonoChannelPromise.tryFailure(TransportConnector.java:576)
		at reactor.netty.transport.TransportConnector.lambda$doResolveAndConnect$11(TransportConnector.java:375)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:557)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
		at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:629)
		at io.netty.util.concurrent.DefaultPromise.setFailure(DefaultPromise.java:110)
		at io.netty.resolver.InetSocketAddressResolver$2.operationComplete(InetSocketAddressResolver.java:86)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:583)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:559)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
		at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:629)
		at io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:118)
		at io.netty.resolver.dns.DnsResolveContext.finishResolve(DnsResolveContext.java:1158)
		at io.netty.resolver.dns.DnsResolveContext.tryToFinishResolve(DnsResolveContext.java:1097)
		at io.netty.resolver.dns.DnsResolveContext.query(DnsResolveContext.java:455)
		at io.netty.resolver.dns.DnsResolveContext.onResponse(DnsResolveContext.java:686)
		at io.netty.resolver.dns.DnsResolveContext.access$500(DnsResolveContext.java:70)
		at io.netty.resolver.dns.DnsResolveContext$2.operationComplete(DnsResolveContext.java:513)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:583)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:559)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
		at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:625)
		at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:105)
		at io.netty.resolver.dns.DnsQueryContext.trySuccess(DnsQueryContext.java:308)
		at io.netty.resolver.dns.DnsQueryContext.finishSuccess(DnsQueryContext.java:299)
		at io.netty.resolver.dns.DnsNameResolver$DnsResponseHandler.channelRead(DnsNameResolver.java:1491)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioMessageChannel$NioMessageUnsafe.read(AbstractNioMessageChannel.java:97)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104)
		at reactor.core.publisher.Mono.block(Mono.java:1779)
		at com.citpl.common.gateway.commongateway.config.ValidationInterceptor.preHandle(ValidationInterceptor.java:70)
		at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:146)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1083)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
		at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:633)
		at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:411)
		at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:331)
		at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:268)
		at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:380)
		at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:208)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:151)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: java.net.UnknownHostException: Failed to resolve '$%257Bspring.cloud.gateway.mvc.routes.uri' [A(1)] after 2 queries 
	at io.netty.resolver.dns.DnsResolveContext.finishResolve(DnsResolveContext.java:1150)
	at io.netty.resolver.dns.DnsResolveContext.tryToFinishResolve(DnsResolveContext.java:1097)
	at io.netty.resolver.dns.DnsResolveContext.query(DnsResolveContext.java:455)
	at io.netty.resolver.dns.DnsResolveContext.onResponse(DnsResolveContext.java:686)
	at io.netty.resolver.dns.DnsResolveContext.access$500(DnsResolveContext.java:70)
	at io.netty.resolver.dns.DnsResolveContext$2.operationComplete(DnsResolveContext.java:513)
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:583)
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:559)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
	at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:625)
	at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:105)
	at io.netty.resolver.dns.DnsQueryContext.trySuccess(DnsQueryContext.java:308)
	at io.netty.resolver.dns.DnsQueryContext.finishSuccess(DnsQueryContext.java:299)
	at io.netty.resolver.dns.DnsNameResolver$DnsResponseHandler.channelRead(DnsNameResolver.java:1491)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioMessageChannel$NioMessageUnsafe.read(AbstractNioMessageChannel.java:97)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.netty.resolver.dns.DnsErrorCauseException: Query failed with NXDOMAIN
	at io.netty.resolver.dns.DnsResolveContext.onResponse(..)(Unknown Source)
2025-02-28 14:02:49 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 14:02:49 [80ec56ca-33ce-4c5c-86d1-d1999865a32f] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 14:02:49 [80ec56ca-33ce-4c5c-86d1-d1999865a32f] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /users
2025-02-28 14:02:49 [80ec56ca-33ce-4c5c-86d1-d1999865a32f] WARN  c.c.c.g.c.c.ValidationInterceptor - ❌ Missing X-Validation-Token or X-Org-Id!
2025-02-28 14:02:49 [] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /error
2025-02-28 14:02:49 [] WARN  c.c.c.g.c.c.ValidationInterceptor - ❌ Missing X-Validation-Token or X-Org-Id!
2025-02-28 14:02:56 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 14:02:56 [81fdaae4-1034-4285-86fb-35d91077fb94] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 14:02:56 [81fdaae4-1034-4285-86fb-35d91077fb94] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /users
2025-02-28 14:02:56 [81fdaae4-1034-4285-86fb-35d91077fb94] WARN  c.c.c.g.c.c.ValidationInterceptor - ❌ Missing X-Validation-Token or X-Org-Id!
2025-02-28 14:02:56 [] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /error
2025-02-28 14:02:56 [] WARN  c.c.c.g.c.c.ValidationInterceptor - ❌ Missing X-Validation-Token or X-Org-Id!
2025-02-28 14:03:17 [] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-02-28 14:03:17 [] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-02-28 14:03:17 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [67e53173, L:/127.0.0.1:58866 ! R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x67e53173, L:/127.0.0.1:58866 ! R:localhost/127.0.0.1:8081]}, [disconnecting])
2025-02-28 14:03:17 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 2 thread-local buffer(s) from thread: reactor-http-nio-1
2025-02-28 14:03:17 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 5 thread-local buffer(s) from thread: reactor-http-nio-3
2025-02-28 14:03:20 [] DEBUG org.jboss.logging - Logging Provider: org.jboss.logging.Slf4jLoggerProvider found via system property
2025-02-28 14:03:20 [] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final
2025-02-28 14:03:20 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-02-28 14:03:20 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-02-28 14:03:20 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-02-28 14:03:20 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-02-28 14:03:20 [] DEBUG o.h.v.i.e.r.TraversableResolvers - Cannot find jakarta.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2025-02-28 14:03:20 [] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-02-28 14:03:20 [] INFO  c.c.c.g.c.CommongatewayApplication - Starting CommongatewayApplication using Java 17.0.12 with PID 18228 (D:\WORKSPACE\API-GATEWAY\commongateway\target\classes started by CITPL in D:\WORKSPACE\API-GATEWAY)
2025-02-28 14:03:20 [] DEBUG c.c.c.g.c.CommongatewayApplication - Running with Spring Boot v3.4.2, Spring v6.2.2
2025-02-28 14:03:20 [] INFO  c.c.c.g.c.CommongatewayApplication - No active profile set, falling back to 1 default profile: "default"
2025-02-28 14:03:20 [] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-02-28 14:03:20 [] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-02-28 14:03:20 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-02-28 14:03:20 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-02-28 14:03:20 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-02-28 14:03:20 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-02-28 14:03:20 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-02-28 14:03:20 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-02-28 14:03:21 [] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=d2aee5ef-86a6-3b95-abd8-708d95e66676
2025-02-28 14:03:21 [] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-02-28 14:03:21 [] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-02-28 14:03:21 [] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-02-28 14:03:21 [] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.34]
2025-02-28 14:03:21 [] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-02-28 14:03:21 [] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1517 ms
2025-02-28 14:03:21 [] DEBUG i.n.u.i.l.InternalLoggerFactory - Using SLF4J as the default logging framework
2025-02-28 14:03:21 [] DEBUG i.n.util.internal.PlatformDependent0 - -Dio.netty.noUnsafe: false
2025-02-28 14:03:21 [] DEBUG i.n.util.internal.PlatformDependent0 - Java version: 17
2025-02-28 14:03:21 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe.theUnsafe: available
2025-02-28 14:03:21 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe base methods: all available
2025-02-28 14:03:21 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe.storeFence: available
2025-02-28 14:03:21 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.Buffer.address: available
2025-02-28 14:03:21 [] DEBUG i.n.util.internal.PlatformDependent0 - direct buffer constructor: unavailable: Reflective setAccessible(true) disabled
2025-02-28 14:03:21 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.Bits.unaligned: available, true
2025-02-28 14:03:21 [] DEBUG i.n.util.internal.PlatformDependent0 - jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable: class io.netty.util.internal.PlatformDependent0$7 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @3e77a1ed
2025-02-28 14:03:21 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.DirectByteBuffer.<init>(long, {int,long}): unavailable
2025-02-28 14:03:21 [] DEBUG i.n.util.internal.PlatformDependent - sun.misc.Unsafe: available
2025-02-28 14:03:21 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.tmpdir: C:\Users\CITPL\AppData\Local\Temp (java.io.tmpdir)
2025-02-28 14:03:21 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.bitMode: 64 (sun.arch.data.model)
2025-02-28 14:03:21 [] DEBUG i.n.util.internal.PlatformDependent - Platform: Windows
2025-02-28 14:03:21 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.maxDirectMemory: -1 bytes
2025-02-28 14:03:21 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.uninitializedArrayAllocationThreshold: -1
2025-02-28 14:03:21 [] DEBUG io.netty.util.internal.CleanerJava9 - java.nio.ByteBuffer.cleaner(): available
2025-02-28 14:03:21 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.noPreferDirect: false
2025-02-28 14:03:22 [] DEBUG reactor.util.Loggers - Using Slf4j logging framework
2025-02-28 14:03:22 [] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-02-28 14:03:22 [] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2025-02-28 14:03:22 [] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2025-02-28 14:03:22 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-02-28 14:03:22 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via user class loader
2025-02-28 14:03:22 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-02-28 14:03:22 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-02-28 14:03:22 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-02-28 14:03:22 [] DEBUG o.h.v.i.e.r.TraversableResolvers - Cannot find jakarta.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2025-02-28 14:03:22 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-02-28 14:03:22 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-02-28 14:03:22 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-02-28 14:03:22 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-02-28 14:03:22 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-02-28 14:03:22 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-02-28 14:03:22 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	c.c.c.g.c.c.HomeController:
	{GET [/home]}: get()
2025-02-28 14:03:22 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2025-02-28 14:03:22 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 'beanNameHandlerMapping' {}
2025-02-28 14:03:22 [] DEBUG _.s.w.s.HandlerMapping.Mappings - Mapped /validate/** -> ProxyExchangeHandlerFunction
/users/** -> ProxyExchangeHandlerFunction
2025-02-28 14:03:22 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2025-02-28 14:03:22 [] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-02-28 14:03:22 [] DEBUG i.n.u.i.InternalThreadLocalMap - -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2025-02-28 14:03:22 [] DEBUG i.n.u.i.InternalThreadLocalMap - -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2025-02-28 14:03:22 [] DEBUG io.netty.util.ResourceLeakDetector - -Dio.netty.leakDetection.level: simple
2025-02-28 14:03:22 [] DEBUG io.netty.util.ResourceLeakDetector - -Dio.netty.leakDetection.targetRecords: 4
2025-02-28 14:03:22 [] DEBUG i.n.handler.codec.compression.Brotli - brotli4j not in the classpath; Brotli support will be unavailable.
2025-02-28 14:03:22 [] DEBUG reactor.netty.tcp.TcpResources - [http] resources will use the default LoopResources: DefaultLoopResources {prefix=reactor-http, daemon=true, selectCount=12, workerCount=12}
2025-02-28 14:03:22 [] DEBUG reactor.netty.tcp.TcpResources - [http] resources will use the default ConnectionProvider: reactor.netty.resources.DefaultPooledConnectionProvider@6b108bb6
2025-02-28 14:03:22 [] DEBUG r.netty.resources.DefaultLoopIOUring - Default io_uring support : false
2025-02-28 14:03:22 [] DEBUG r.netty.resources.DefaultLoopEpoll - Default Epoll support : false
2025-02-28 14:03:22 [] DEBUG r.netty.resources.DefaultLoopKQueue - Default KQueue support : false
2025-02-28 14:03:22 [] DEBUG i.n.c.MultithreadEventLoopGroup - -Dio.netty.eventLoopThreads: 24
2025-02-28 14:03:23 [] DEBUG i.n.u.concurrent.GlobalEventExecutor - -Dio.netty.globalEventExecutor.quietPeriodSeconds: 1
2025-02-28 14:03:23 [] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.noKeySetOptimization: false
2025-02-28 14:03:23 [] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.selectorAutoRebuildThreshold: 512
2025-02-28 14:03:23 [] DEBUG i.n.util.internal.PlatformDependent - org.jctools-core.MpscChunkedArrayQueue: available
2025-02-28 14:03:23 [] DEBUG io.netty.util.NetUtil - -Djava.net.preferIPv4Stack: false
2025-02-28 14:03:23 [] DEBUG io.netty.util.NetUtil - -Djava.net.preferIPv6Addresses: false
2025-02-28 14:03:23 [] DEBUG i.netty.util.NetUtilInitializations - Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2025-02-28 14:03:23 [] DEBUG io.netty.util.NetUtil - Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2025-02-28 14:03:23 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default ResolvedAddressTypes: IPV4_ONLY
2025-02-28 14:03:23 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Localhost address: localhost/127.0.0.1
2025-02-28 14:03:23 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Windows hostname: DESKTOP-P307093
2025-02-28 14:03:23 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default search domains: []
2025-02-28 14:03:23 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default UnixResolverOptions{ndots=1, timeout=5, attempts=16}
2025-02-28 14:03:23 [] DEBUG i.n.r.DefaultHostsFileEntriesResolver - -Dio.netty.hostsFileRefreshInterval: 0
2025-02-28 14:03:23 [] DEBUG i.n.r.d.DefaultDnsServerAddressStreamProvider - Default DNS servers: [/8.8.8.8:53, /4.2.2.2:53] (sun.net.dns.ResolverConfiguration)
2025-02-28 14:03:23 [] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-02-28 14:03:23 [] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-02-28 14:03:23 [] INFO  c.c.c.g.c.CommongatewayApplication - Started CommongatewayApplication in 3.675 seconds (process running for 4.632)
2025-02-28 14:03:48 [] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-02-28 14:03:48 [] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-02-28 14:03:51 [] DEBUG org.jboss.logging - Logging Provider: org.jboss.logging.Slf4jLoggerProvider found via system property
2025-02-28 14:03:51 [] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final
2025-02-28 14:03:51 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-02-28 14:03:51 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-02-28 14:03:51 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-02-28 14:03:51 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-02-28 14:03:51 [] DEBUG o.h.v.i.e.r.TraversableResolvers - Cannot find jakarta.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2025-02-28 14:03:51 [] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-02-28 14:03:51 [] INFO  c.c.c.g.c.CommongatewayApplication - Starting CommongatewayApplication using Java 17.0.12 with PID 12756 (D:\WORKSPACE\API-GATEWAY\commongateway\target\classes started by CITPL in D:\WORKSPACE\API-GATEWAY)
2025-02-28 14:03:51 [] DEBUG c.c.c.g.c.CommongatewayApplication - Running with Spring Boot v3.4.2, Spring v6.2.2
2025-02-28 14:03:51 [] INFO  c.c.c.g.c.CommongatewayApplication - No active profile set, falling back to 1 default profile: "default"
2025-02-28 14:03:51 [] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-02-28 14:03:51 [] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-02-28 14:03:51 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-02-28 14:03:51 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-02-28 14:03:51 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-02-28 14:03:51 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-02-28 14:03:51 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-02-28 14:03:51 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-02-28 14:03:52 [] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=d2aee5ef-86a6-3b95-abd8-708d95e66676
2025-02-28 14:03:53 [] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-02-28 14:03:53 [] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-02-28 14:03:53 [] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-02-28 14:03:53 [] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.34]
2025-02-28 14:03:53 [] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-02-28 14:03:53 [] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1780 ms
2025-02-28 14:03:53 [] DEBUG i.n.u.i.l.InternalLoggerFactory - Using SLF4J as the default logging framework
2025-02-28 14:03:53 [] DEBUG i.n.util.internal.PlatformDependent0 - -Dio.netty.noUnsafe: false
2025-02-28 14:03:53 [] DEBUG i.n.util.internal.PlatformDependent0 - Java version: 17
2025-02-28 14:03:53 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe.theUnsafe: available
2025-02-28 14:03:53 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe base methods: all available
2025-02-28 14:03:53 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe.storeFence: available
2025-02-28 14:03:53 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.Buffer.address: available
2025-02-28 14:03:53 [] DEBUG i.n.util.internal.PlatformDependent0 - direct buffer constructor: unavailable: Reflective setAccessible(true) disabled
2025-02-28 14:03:53 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.Bits.unaligned: available, true
2025-02-28 14:03:53 [] DEBUG i.n.util.internal.PlatformDependent0 - jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable: class io.netty.util.internal.PlatformDependent0$7 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @3e77a1ed
2025-02-28 14:03:53 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.DirectByteBuffer.<init>(long, {int,long}): unavailable
2025-02-28 14:03:53 [] DEBUG i.n.util.internal.PlatformDependent - sun.misc.Unsafe: available
2025-02-28 14:03:53 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.tmpdir: C:\Users\CITPL\AppData\Local\Temp (java.io.tmpdir)
2025-02-28 14:03:53 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.bitMode: 64 (sun.arch.data.model)
2025-02-28 14:03:53 [] DEBUG i.n.util.internal.PlatformDependent - Platform: Windows
2025-02-28 14:03:53 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.maxDirectMemory: -1 bytes
2025-02-28 14:03:53 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.uninitializedArrayAllocationThreshold: -1
2025-02-28 14:03:53 [] DEBUG io.netty.util.internal.CleanerJava9 - java.nio.ByteBuffer.cleaner(): available
2025-02-28 14:03:53 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.noPreferDirect: false
2025-02-28 14:03:53 [] DEBUG reactor.util.Loggers - Using Slf4j logging framework
2025-02-28 14:03:53 [] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-02-28 14:03:53 [] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2025-02-28 14:03:53 [] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2025-02-28 14:03:53 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-02-28 14:03:53 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via user class loader
2025-02-28 14:03:53 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-02-28 14:03:53 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-02-28 14:03:53 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-02-28 14:03:53 [] DEBUG o.h.v.i.e.r.TraversableResolvers - Cannot find jakarta.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2025-02-28 14:03:53 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-02-28 14:03:53 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-02-28 14:03:53 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-02-28 14:03:53 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-02-28 14:03:53 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-02-28 14:03:53 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-02-28 14:03:53 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	c.c.c.g.c.c.HomeController:
	{GET [/home]}: get()
2025-02-28 14:03:53 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2025-02-28 14:03:53 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 'beanNameHandlerMapping' {}
2025-02-28 14:03:53 [] DEBUG _.s.w.s.HandlerMapping.Mappings - Mapped /validate/** -> ProxyExchangeHandlerFunction
/users/** -> ProxyExchangeHandlerFunction
2025-02-28 14:03:53 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2025-02-28 14:03:54 [] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-02-28 14:03:54 [] DEBUG i.n.u.i.InternalThreadLocalMap - -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2025-02-28 14:03:54 [] DEBUG i.n.u.i.InternalThreadLocalMap - -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2025-02-28 14:03:54 [] DEBUG io.netty.util.ResourceLeakDetector - -Dio.netty.leakDetection.level: simple
2025-02-28 14:03:54 [] DEBUG io.netty.util.ResourceLeakDetector - -Dio.netty.leakDetection.targetRecords: 4
2025-02-28 14:03:54 [] DEBUG i.n.handler.codec.compression.Brotli - brotli4j not in the classpath; Brotli support will be unavailable.
2025-02-28 14:03:54 [] DEBUG reactor.netty.tcp.TcpResources - [http] resources will use the default LoopResources: DefaultLoopResources {prefix=reactor-http, daemon=true, selectCount=12, workerCount=12}
2025-02-28 14:03:54 [] DEBUG reactor.netty.tcp.TcpResources - [http] resources will use the default ConnectionProvider: reactor.netty.resources.DefaultPooledConnectionProvider@87c3356
2025-02-28 14:03:54 [] DEBUG r.netty.resources.DefaultLoopIOUring - Default io_uring support : false
2025-02-28 14:03:54 [] DEBUG r.netty.resources.DefaultLoopEpoll - Default Epoll support : false
2025-02-28 14:03:54 [] DEBUG r.netty.resources.DefaultLoopKQueue - Default KQueue support : false
2025-02-28 14:03:54 [] DEBUG i.n.c.MultithreadEventLoopGroup - -Dio.netty.eventLoopThreads: 24
2025-02-28 14:03:54 [] DEBUG i.n.u.concurrent.GlobalEventExecutor - -Dio.netty.globalEventExecutor.quietPeriodSeconds: 1
2025-02-28 14:03:54 [] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.noKeySetOptimization: false
2025-02-28 14:03:54 [] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.selectorAutoRebuildThreshold: 512
2025-02-28 14:03:54 [] DEBUG i.n.util.internal.PlatformDependent - org.jctools-core.MpscChunkedArrayQueue: available
2025-02-28 14:03:54 [] DEBUG io.netty.util.NetUtil - -Djava.net.preferIPv4Stack: false
2025-02-28 14:03:54 [] DEBUG io.netty.util.NetUtil - -Djava.net.preferIPv6Addresses: false
2025-02-28 14:03:54 [] DEBUG i.netty.util.NetUtilInitializations - Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2025-02-28 14:03:54 [] DEBUG io.netty.util.NetUtil - Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2025-02-28 14:03:54 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default ResolvedAddressTypes: IPV4_ONLY
2025-02-28 14:03:54 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Localhost address: localhost/127.0.0.1
2025-02-28 14:03:54 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Windows hostname: DESKTOP-P307093
2025-02-28 14:03:54 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default search domains: []
2025-02-28 14:03:54 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default UnixResolverOptions{ndots=1, timeout=5, attempts=16}
2025-02-28 14:03:54 [] DEBUG i.n.r.DefaultHostsFileEntriesResolver - -Dio.netty.hostsFileRefreshInterval: 0
2025-02-28 14:03:54 [] DEBUG i.n.r.d.DefaultDnsServerAddressStreamProvider - Default DNS servers: [/8.8.8.8:53, /4.2.2.2:53] (sun.net.dns.ResolverConfiguration)
2025-02-28 14:03:54 [] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-02-28 14:03:54 [] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-02-28 14:03:54 [] INFO  c.c.c.g.c.CommongatewayApplication - Started CommongatewayApplication in 4.117 seconds (process running for 5.035)
2025-02-28 14:03:55 [] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-02-28 14:03:55 [] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-02-28 14:03:55 [] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-02-28 14:03:55 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 14:03:55 [52732f51-b4f8-45cc-a418-307d9671b62f] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 14:03:55 [52732f51-b4f8-45cc-a418-307d9671b62f] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /users
2025-02-28 14:03:55 [52732f51-b4f8-45cc-a418-307d9671b62f] WARN  c.c.c.g.c.c.ValidationInterceptor - ❌ Missing X-Validation-Token or X-Org-Id!
2025-02-28 14:03:55 [] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /error
2025-02-28 14:03:55 [] WARN  c.c.c.g.c.c.ValidationInterceptor - ❌ Missing X-Validation-Token or X-Org-Id!
2025-02-28 14:03:56 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 14:03:56 [059a8862-9ae1-4742-b127-1f896cb80ca4] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 14:03:56 [059a8862-9ae1-4742-b127-1f896cb80ca4] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /users
2025-02-28 14:03:56 [059a8862-9ae1-4742-b127-1f896cb80ca4] WARN  c.c.c.g.c.c.ValidationInterceptor - ❌ Missing X-Validation-Token or X-Org-Id!
2025-02-28 14:03:56 [] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /error
2025-02-28 14:03:56 [] WARN  c.c.c.g.c.c.ValidationInterceptor - ❌ Missing X-Validation-Token or X-Org-Id!
2025-02-28 14:04:01 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 14:04:01 [44e6fc93-2d0b-4825-b3a2-996fe1afc500] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 14:04:01 [44e6fc93-2d0b-4825-b3a2-996fe1afc500] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /users
2025-02-28 14:04:01 [44e6fc93-2d0b-4825-b3a2-996fe1afc500] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔄 Using HTTP Method: GET
2025-02-28 14:04:01 [44e6fc93-2d0b-4825-b3a2-996fe1afc500] DEBUG r.n.r.PooledConnectionProvider - Creating a new [http] client pool [PoolFactory{evictionInterval=PT0S, leasingStrategy=fifo, maxConnections=500, maxIdleTime=-1, maxLifeTime=-1, metricsEnabled=false, pendingAcquireMaxCount=1000, pendingAcquireTimeout=45000}] for [$%257Bspring.cloud.gateway.mvc.routes.uri/<unresolved>:80]
2025-02-28 14:04:01 [44e6fc93-2d0b-4825-b3a2-996fe1afc500] DEBUG io.netty.channel.DefaultChannelId - -Dio.netty.processId: 12756 (auto-detected)
2025-02-28 14:04:01 [44e6fc93-2d0b-4825-b3a2-996fe1afc500] DEBUG io.netty.channel.DefaultChannelId - -Dio.netty.machineId: 00:15:5d:ff:fe:02:b5:1f (auto-detected)
2025-02-28 14:04:01 [44e6fc93-2d0b-4825-b3a2-996fe1afc500] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.numHeapArenas: 24
2025-02-28 14:04:01 [44e6fc93-2d0b-4825-b3a2-996fe1afc500] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.numDirectArenas: 24
2025-02-28 14:04:01 [44e6fc93-2d0b-4825-b3a2-996fe1afc500] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.pageSize: 8192
2025-02-28 14:04:01 [44e6fc93-2d0b-4825-b3a2-996fe1afc500] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxOrder: 9
2025-02-28 14:04:01 [44e6fc93-2d0b-4825-b3a2-996fe1afc500] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.chunkSize: 4194304
2025-02-28 14:04:01 [44e6fc93-2d0b-4825-b3a2-996fe1afc500] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.smallCacheSize: 256
2025-02-28 14:04:01 [44e6fc93-2d0b-4825-b3a2-996fe1afc500] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.normalCacheSize: 64
2025-02-28 14:04:01 [44e6fc93-2d0b-4825-b3a2-996fe1afc500] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2025-02-28 14:04:01 [44e6fc93-2d0b-4825-b3a2-996fe1afc500] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.cacheTrimInterval: 8192
2025-02-28 14:04:01 [44e6fc93-2d0b-4825-b3a2-996fe1afc500] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.cacheTrimIntervalMillis: 0
2025-02-28 14:04:01 [44e6fc93-2d0b-4825-b3a2-996fe1afc500] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.useCacheForAllThreads: false
2025-02-28 14:04:01 [44e6fc93-2d0b-4825-b3a2-996fe1afc500] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
2025-02-28 14:04:01 [44e6fc93-2d0b-4825-b3a2-996fe1afc500] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.disableCacheFinalizersForFastThreadLocalThreads: false
2025-02-28 14:04:01 [44e6fc93-2d0b-4825-b3a2-996fe1afc500] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.allocator.type: pooled
2025-02-28 14:04:01 [44e6fc93-2d0b-4825-b3a2-996fe1afc500] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.threadLocalDirectBufferSize: 0
2025-02-28 14:04:01 [44e6fc93-2d0b-4825-b3a2-996fe1afc500] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.maxThreadLocalCharBufferSize: 16384
2025-02-28 14:04:01 [] DEBUG r.n.r.PooledConnectionProvider - [696d899a] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 14:04:01 [] DEBUG io.netty.buffer.AbstractByteBuf - -Dio.netty.buffer.checkAccessible: true
2025-02-28 14:04:01 [] DEBUG io.netty.buffer.AbstractByteBuf - -Dio.netty.buffer.checkBounds: true
2025-02-28 14:04:01 [] DEBUG i.n.util.ResourceLeakDetectorFactory - Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@772492c
2025-02-28 14:04:01 [] DEBUG r.netty.transport.TransportConfig - [696d899a] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-28 14:04:01 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 14:04:01 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 14:04:01 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 14:04:01 [] DEBUG i.n.b.ChannelInitializerExtensions - -Dio.netty.bootstrap.extensions: null
2025-02-28 14:04:01 [] DEBUG i.n.resolver.dns.DnsResolveContext - -Dio.netty.resolver.dns.tryCnameOnAddressLookups: false
2025-02-28 14:04:01 [] DEBUG i.netty.resolver.dns.DnsQueryContext - -Dio.netty.resolver.dns.idReuseOnTimeoutDelayMillis: 10000
2025-02-28 14:04:01 [] DEBUG i.n.util.ResourceLeakDetectorFactory - Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@258f4931
2025-02-28 14:04:01 [] DEBUG i.netty.resolver.dns.DnsQueryContext - [id: 0xe5151811, L:/[0:0:0:0:0:0:0:0]:63813] WRITE: UDP, [10209: /8.8.8.8:53], DefaultDnsQuestion($%257Bspring.cloud.gateway.mvc.routes.uri. IN A)
2025-02-28 14:04:01 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.maxCapacityPerThread: 4096
2025-02-28 14:04:01 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.ratio: 8
2025-02-28 14:04:01 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.chunkSize: 32
2025-02-28 14:04:01 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.blocking: false
2025-02-28 14:04:01 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.batchFastThreadLocalOnly: true
2025-02-28 14:04:01 [] DEBUG i.netty.resolver.dns.DnsNameResolver - [id: 0xe5151811, L:/[0:0:0:0:0:0:0:0]:63813] RECEIVED: UDP [10209: /8.8.8.8:53], DatagramDnsResponse(from: /8.8.8.8:53, to: /[0:0:0:0:0:0:0:0]:63813, id: 10209, QUERY(0), NXDomain(3), RD RA)
	DefaultDnsQuestion($%257Bspring.cloud.gateway.mvc.routes.uri. IN A)
	DefaultDnsRawRecord(. 86365 IN SOA 64B)
	DefaultDnsRawRecord(OPT flags:0 udp:512 0B)
2025-02-28 14:04:01 [] DEBUG i.netty.resolver.dns.DnsQueryContext - [id: 0xe5151811, L:/[0:0:0:0:0:0:0:0]:63813] WRITE: UDP, [3798: /4.2.2.2:53], DefaultDnsQuestion($%257Bspring.cloud.gateway.mvc.routes.uri. IN A)
2025-02-28 14:04:02 [] DEBUG i.netty.resolver.dns.DnsNameResolver - [id: 0xe5151811, L:/[0:0:0:0:0:0:0:0]:63813] RECEIVED: UDP [3798: /4.2.2.2:53], DatagramDnsResponse(from: /4.2.2.2:53, to: /[0:0:0:0:0:0:0:0]:63813, id: 3798, QUERY(0), NXDomain(3), RD RA)
	DefaultDnsQuestion($%257Bspring.cloud.gateway.mvc.routes.uri. IN A)
	DefaultDnsRawRecord(. 1787 IN SOA 64B)
	DefaultDnsRawRecord(OPT flags:0 udp:4096 0B)
2025-02-28 14:04:02 [44e6fc93-2d0b-4825-b3a2-996fe1afc500] ERROR c.c.c.g.c.c.ValidationInterceptor - ⚠️ Error calling validation service
org.springframework.web.reactive.function.client.WebClientRequestException: Failed to resolve '$%257Bspring.cloud.gateway.mvc.routes.uri' [A(1)] after 2 queries 
	at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:137)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ Request to GET $%257Bspring.cloud.gateway.mvc.routes.uri [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:137)
		at reactor.core.publisher.MonoErrorSupplied.subscribe(MonoErrorSupplied.java:55)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.MonoNext$NextSubscriber.onError(MonoNext.java:93)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onError(MonoFlatMapMany.java:205)
		at reactor.core.publisher.SerializedSubscriber.onError(SerializedSubscriber.java:124)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.whenError(FluxRetryWhen.java:229)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenOtherSubscriber.onError(FluxRetryWhen.java:279)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onError(FluxContextWrite.java:121)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.maybeOnError(FluxConcatMapNoPrefetch.java:327)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onNext(FluxConcatMapNoPrefetch.java:212)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.SinkManyEmitterProcessor.drain(SinkManyEmitterProcessor.java:476)
		at reactor.core.publisher.SinkManyEmitterProcessor$EmitterInner.drainParent(SinkManyEmitterProcessor.java:620)
		at reactor.core.publisher.FluxPublish$PubSubInner.request(FluxPublish.java:874)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
		at reactor.core.publisher.Operators$DeferredSubscription.request(Operators.java:1743)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.onError(FluxRetryWhen.java:196)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:205)
		at reactor.netty.http.client.HttpClientConnect$MonoHttpConnect$ClientTransportSubscriber.onError(HttpClientConnect.java:318)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:205)
		at reactor.netty.resources.DefaultPooledConnectionProvider$DisposableAcquire.onError(DefaultPooledConnectionProvider.java:174)
		at reactor.netty.internal.shaded.reactor.pool.AbstractPool$Borrower.fail(AbstractPool.java:479)
		at reactor.netty.internal.shaded.reactor.pool.SimpleDequePool.lambda$drainLoop$9(SimpleDequePool.java:442)
		at reactor.core.publisher.FluxDoOnEach$DoOnEachSubscriber.onError(FluxDoOnEach.java:186)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:205)
		at reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnectionAllocator$PooledConnectionInitializer.onError(DefaultPooledConnectionProvider.java:593)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.secondError(MonoFlatMap.java:241)
		at reactor.core.publisher.MonoFlatMap$FlatMapInner.onError(MonoFlatMap.java:315)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:106)
		at reactor.core.publisher.Operators.error(Operators.java:198)
		at reactor.core.publisher.MonoError.subscribe(MonoError.java:53)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
		at reactor.netty.transport.TransportConnector$MonoChannelPromise.tryFailure(TransportConnector.java:576)
		at reactor.netty.transport.TransportConnector.lambda$doResolveAndConnect$11(TransportConnector.java:375)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:557)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
		at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:629)
		at io.netty.util.concurrent.DefaultPromise.setFailure(DefaultPromise.java:110)
		at io.netty.resolver.InetSocketAddressResolver$2.operationComplete(InetSocketAddressResolver.java:86)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:583)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:559)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
		at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:629)
		at io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:118)
		at io.netty.resolver.dns.DnsResolveContext.finishResolve(DnsResolveContext.java:1158)
		at io.netty.resolver.dns.DnsResolveContext.tryToFinishResolve(DnsResolveContext.java:1097)
		at io.netty.resolver.dns.DnsResolveContext.query(DnsResolveContext.java:455)
		at io.netty.resolver.dns.DnsResolveContext.onResponse(DnsResolveContext.java:686)
		at io.netty.resolver.dns.DnsResolveContext.access$500(DnsResolveContext.java:70)
		at io.netty.resolver.dns.DnsResolveContext$2.operationComplete(DnsResolveContext.java:513)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:583)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:559)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
		at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:625)
		at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:105)
		at io.netty.resolver.dns.DnsQueryContext.trySuccess(DnsQueryContext.java:308)
		at io.netty.resolver.dns.DnsQueryContext.finishSuccess(DnsQueryContext.java:299)
		at io.netty.resolver.dns.DnsNameResolver$DnsResponseHandler.channelRead(DnsNameResolver.java:1491)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioMessageChannel$NioMessageUnsafe.read(AbstractNioMessageChannel.java:97)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104)
		at reactor.core.publisher.Mono.block(Mono.java:1779)
		at com.citpl.common.gateway.commongateway.config.ValidationInterceptor.preHandle(ValidationInterceptor.java:70)
		at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:146)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1083)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
		at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at com.citpl.common.gateway.commongateway.filter.MDCFilter.doFilter(MDCFilter.java:37)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.cloud.gateway.server.mvc.filter.WeightCalculatorFilter.doFilter(WeightCalculatorFilter.java:229)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.cloud.gateway.server.mvc.filter.FormFilter.doFilter(FormFilter.java:93)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: java.net.UnknownHostException: Failed to resolve '$%257Bspring.cloud.gateway.mvc.routes.uri' [A(1)] after 2 queries 
	at io.netty.resolver.dns.DnsResolveContext.finishResolve(DnsResolveContext.java:1150)
	at io.netty.resolver.dns.DnsResolveContext.tryToFinishResolve(DnsResolveContext.java:1097)
	at io.netty.resolver.dns.DnsResolveContext.query(DnsResolveContext.java:455)
	at io.netty.resolver.dns.DnsResolveContext.onResponse(DnsResolveContext.java:686)
	at io.netty.resolver.dns.DnsResolveContext.access$500(DnsResolveContext.java:70)
	at io.netty.resolver.dns.DnsResolveContext$2.operationComplete(DnsResolveContext.java:513)
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:583)
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:559)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
	at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:625)
	at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:105)
	at io.netty.resolver.dns.DnsQueryContext.trySuccess(DnsQueryContext.java:308)
	at io.netty.resolver.dns.DnsQueryContext.finishSuccess(DnsQueryContext.java:299)
	at io.netty.resolver.dns.DnsNameResolver$DnsResponseHandler.channelRead(DnsNameResolver.java:1491)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioMessageChannel$NioMessageUnsafe.read(AbstractNioMessageChannel.java:97)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.netty.resolver.dns.DnsErrorCauseException: Query failed with NXDOMAIN
	at io.netty.resolver.dns.DnsResolveContext.onResponse(..)(Unknown Source)
2025-02-28 14:04:02 [] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /error
2025-02-28 14:04:02 [] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔄 Using HTTP Method: GET
2025-02-28 14:04:02 [] DEBUG r.n.r.PooledConnectionProvider - [086021cd] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 14:04:02 [] DEBUG r.netty.transport.TransportConfig - [086021cd] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-28 14:04:02 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 14:04:02 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 14:04:02 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 14:04:02 [] DEBUG i.netty.resolver.dns.DnsQueryContext - [id: 0xc3010401, L:/[0:0:0:0:0:0:0:0]:63814] WRITE: UDP, [9605: /8.8.8.8:53], DefaultDnsQuestion($%257Bspring.cloud.gateway.mvc.routes.uri. IN A)
2025-02-28 14:04:02 [] DEBUG i.netty.resolver.dns.DnsNameResolver - [id: 0xc3010401, L:/[0:0:0:0:0:0:0:0]:63814] RECEIVED: UDP [9605: /8.8.8.8:53], DatagramDnsResponse(from: /8.8.8.8:53, to: /[0:0:0:0:0:0:0:0]:63814, id: 9605, QUERY(0), NXDomain(3), RD RA)
	DefaultDnsQuestion($%257Bspring.cloud.gateway.mvc.routes.uri. IN A)
	DefaultDnsRawRecord(. 86365 IN SOA 64B)
	DefaultDnsRawRecord(OPT flags:0 udp:512 0B)
2025-02-28 14:04:02 [] DEBUG i.netty.resolver.dns.DnsQueryContext - [id: 0xc3010401, L:/[0:0:0:0:0:0:0:0]:63814] WRITE: UDP, [617: /4.2.2.2:53], DefaultDnsQuestion($%257Bspring.cloud.gateway.mvc.routes.uri. IN A)
2025-02-28 14:04:02 [] DEBUG i.netty.resolver.dns.DnsNameResolver - [id: 0xc3010401, L:/[0:0:0:0:0:0:0:0]:63814] RECEIVED: UDP [617: /4.2.2.2:53], DatagramDnsResponse(from: /4.2.2.2:53, to: /[0:0:0:0:0:0:0:0]:63814, id: 617, QUERY(0), NXDomain(3), RD RA)
	DefaultDnsQuestion($%257Bspring.cloud.gateway.mvc.routes.uri. IN A)
	DefaultDnsRawRecord(. 1755 IN SOA 64B)
	DefaultDnsRawRecord(OPT flags:0 udp:4096 0B)
2025-02-28 14:04:02 [] ERROR c.c.c.g.c.c.ValidationInterceptor - ⚠️ Error calling validation service
org.springframework.web.reactive.function.client.WebClientRequestException: Failed to resolve '$%257Bspring.cloud.gateway.mvc.routes.uri' [A(1)] after 2 queries 
	at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:137)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ Request to GET $%257Bspring.cloud.gateway.mvc.routes.uri [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:137)
		at reactor.core.publisher.MonoErrorSupplied.subscribe(MonoErrorSupplied.java:55)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.MonoNext$NextSubscriber.onError(MonoNext.java:93)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onError(MonoFlatMapMany.java:205)
		at reactor.core.publisher.SerializedSubscriber.onError(SerializedSubscriber.java:124)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.whenError(FluxRetryWhen.java:229)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenOtherSubscriber.onError(FluxRetryWhen.java:279)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onError(FluxContextWrite.java:121)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.maybeOnError(FluxConcatMapNoPrefetch.java:327)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onNext(FluxConcatMapNoPrefetch.java:212)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.SinkManyEmitterProcessor.drain(SinkManyEmitterProcessor.java:476)
		at reactor.core.publisher.SinkManyEmitterProcessor$EmitterInner.drainParent(SinkManyEmitterProcessor.java:620)
		at reactor.core.publisher.FluxPublish$PubSubInner.request(FluxPublish.java:874)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
		at reactor.core.publisher.Operators$DeferredSubscription.request(Operators.java:1743)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.onError(FluxRetryWhen.java:196)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:205)
		at reactor.netty.http.client.HttpClientConnect$MonoHttpConnect$ClientTransportSubscriber.onError(HttpClientConnect.java:318)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:205)
		at reactor.netty.resources.DefaultPooledConnectionProvider$DisposableAcquire.onError(DefaultPooledConnectionProvider.java:174)
		at reactor.netty.internal.shaded.reactor.pool.AbstractPool$Borrower.fail(AbstractPool.java:479)
		at reactor.netty.internal.shaded.reactor.pool.SimpleDequePool.lambda$drainLoop$9(SimpleDequePool.java:442)
		at reactor.core.publisher.FluxDoOnEach$DoOnEachSubscriber.onError(FluxDoOnEach.java:186)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:205)
		at reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnectionAllocator$PooledConnectionInitializer.onError(DefaultPooledConnectionProvider.java:593)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.secondError(MonoFlatMap.java:241)
		at reactor.core.publisher.MonoFlatMap$FlatMapInner.onError(MonoFlatMap.java:315)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:106)
		at reactor.core.publisher.Operators.error(Operators.java:198)
		at reactor.core.publisher.MonoError.subscribe(MonoError.java:53)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
		at reactor.netty.transport.TransportConnector$MonoChannelPromise.tryFailure(TransportConnector.java:576)
		at reactor.netty.transport.TransportConnector.lambda$doResolveAndConnect$11(TransportConnector.java:375)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:557)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
		at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:629)
		at io.netty.util.concurrent.DefaultPromise.setFailure(DefaultPromise.java:110)
		at io.netty.resolver.InetSocketAddressResolver$2.operationComplete(InetSocketAddressResolver.java:86)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:583)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:559)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
		at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:629)
		at io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:118)
		at io.netty.resolver.dns.DnsResolveContext.finishResolve(DnsResolveContext.java:1158)
		at io.netty.resolver.dns.DnsResolveContext.tryToFinishResolve(DnsResolveContext.java:1097)
		at io.netty.resolver.dns.DnsResolveContext.query(DnsResolveContext.java:455)
		at io.netty.resolver.dns.DnsResolveContext.onResponse(DnsResolveContext.java:686)
		at io.netty.resolver.dns.DnsResolveContext.access$500(DnsResolveContext.java:70)
		at io.netty.resolver.dns.DnsResolveContext$2.operationComplete(DnsResolveContext.java:513)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:583)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:559)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
		at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:625)
		at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:105)
		at io.netty.resolver.dns.DnsQueryContext.trySuccess(DnsQueryContext.java:308)
		at io.netty.resolver.dns.DnsQueryContext.finishSuccess(DnsQueryContext.java:299)
		at io.netty.resolver.dns.DnsNameResolver$DnsResponseHandler.channelRead(DnsNameResolver.java:1491)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioMessageChannel$NioMessageUnsafe.read(AbstractNioMessageChannel.java:97)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104)
		at reactor.core.publisher.Mono.block(Mono.java:1779)
		at com.citpl.common.gateway.commongateway.config.ValidationInterceptor.preHandle(ValidationInterceptor.java:70)
		at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:146)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1083)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
		at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:633)
		at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:411)
		at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:331)
		at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:268)
		at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:380)
		at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:208)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:151)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: java.net.UnknownHostException: Failed to resolve '$%257Bspring.cloud.gateway.mvc.routes.uri' [A(1)] after 2 queries 
	at io.netty.resolver.dns.DnsResolveContext.finishResolve(DnsResolveContext.java:1150)
	at io.netty.resolver.dns.DnsResolveContext.tryToFinishResolve(DnsResolveContext.java:1097)
	at io.netty.resolver.dns.DnsResolveContext.query(DnsResolveContext.java:455)
	at io.netty.resolver.dns.DnsResolveContext.onResponse(DnsResolveContext.java:686)
	at io.netty.resolver.dns.DnsResolveContext.access$500(DnsResolveContext.java:70)
	at io.netty.resolver.dns.DnsResolveContext$2.operationComplete(DnsResolveContext.java:513)
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:583)
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:559)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
	at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:625)
	at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:105)
	at io.netty.resolver.dns.DnsQueryContext.trySuccess(DnsQueryContext.java:308)
	at io.netty.resolver.dns.DnsQueryContext.finishSuccess(DnsQueryContext.java:299)
	at io.netty.resolver.dns.DnsNameResolver$DnsResponseHandler.channelRead(DnsNameResolver.java:1491)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioMessageChannel$NioMessageUnsafe.read(AbstractNioMessageChannel.java:97)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.netty.resolver.dns.DnsErrorCauseException: Query failed with NXDOMAIN
	at io.netty.resolver.dns.DnsResolveContext.onResponse(..)(Unknown Source)
2025-02-28 14:04:08 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 14:04:08 [e3c11e5e-6412-4fba-8a6d-0a608cf678c8] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 14:04:08 [e3c11e5e-6412-4fba-8a6d-0a608cf678c8] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /users
2025-02-28 14:04:08 [e3c11e5e-6412-4fba-8a6d-0a608cf678c8] WARN  c.c.c.g.c.c.ValidationInterceptor - ❌ Missing X-Validation-Token or X-Org-Id!
2025-02-28 14:04:08 [] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /error
2025-02-28 14:04:08 [] WARN  c.c.c.g.c.c.ValidationInterceptor - ❌ Missing X-Validation-Token or X-Org-Id!
2025-02-28 14:04:34 [] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-02-28 14:04:34 [] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-02-28 14:04:34 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 2 thread-local buffer(s) from thread: reactor-http-nio-1
2025-02-28 14:04:36 [] DEBUG org.jboss.logging - Logging Provider: org.jboss.logging.Slf4jLoggerProvider found via system property
2025-02-28 14:04:36 [] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final
2025-02-28 14:04:36 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-02-28 14:04:37 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-02-28 14:04:37 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-02-28 14:04:37 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-02-28 14:04:37 [] DEBUG o.h.v.i.e.r.TraversableResolvers - Cannot find jakarta.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2025-02-28 14:04:37 [] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-02-28 14:04:37 [] INFO  c.c.c.g.c.CommongatewayApplication - Starting CommongatewayApplication using Java 17.0.12 with PID 17368 (D:\WORKSPACE\API-GATEWAY\commongateway\target\classes started by CITPL in D:\WORKSPACE\API-GATEWAY)
2025-02-28 14:04:37 [] DEBUG c.c.c.g.c.CommongatewayApplication - Running with Spring Boot v3.4.2, Spring v6.2.2
2025-02-28 14:04:37 [] INFO  c.c.c.g.c.CommongatewayApplication - No active profile set, falling back to 1 default profile: "default"
2025-02-28 14:04:37 [] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-02-28 14:04:37 [] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-02-28 14:04:37 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-02-28 14:04:37 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-02-28 14:04:37 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-02-28 14:04:37 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-02-28 14:04:37 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-02-28 14:04:37 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-02-28 14:04:38 [] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=d2aee5ef-86a6-3b95-abd8-708d95e66676
2025-02-28 14:04:38 [] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-02-28 14:04:38 [] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-02-28 14:04:38 [] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-02-28 14:04:38 [] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.34]
2025-02-28 14:04:38 [] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-02-28 14:04:38 [] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1562 ms
2025-02-28 14:04:38 [] DEBUG i.n.u.i.l.InternalLoggerFactory - Using SLF4J as the default logging framework
2025-02-28 14:04:38 [] DEBUG i.n.util.internal.PlatformDependent0 - -Dio.netty.noUnsafe: false
2025-02-28 14:04:38 [] DEBUG i.n.util.internal.PlatformDependent0 - Java version: 17
2025-02-28 14:04:38 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe.theUnsafe: available
2025-02-28 14:04:38 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe base methods: all available
2025-02-28 14:04:38 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe.storeFence: available
2025-02-28 14:04:38 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.Buffer.address: available
2025-02-28 14:04:38 [] DEBUG i.n.util.internal.PlatformDependent0 - direct buffer constructor: unavailable: Reflective setAccessible(true) disabled
2025-02-28 14:04:38 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.Bits.unaligned: available, true
2025-02-28 14:04:38 [] DEBUG i.n.util.internal.PlatformDependent0 - jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable: class io.netty.util.internal.PlatformDependent0$7 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @3e77a1ed
2025-02-28 14:04:38 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.DirectByteBuffer.<init>(long, {int,long}): unavailable
2025-02-28 14:04:38 [] DEBUG i.n.util.internal.PlatformDependent - sun.misc.Unsafe: available
2025-02-28 14:04:38 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.tmpdir: C:\Users\CITPL\AppData\Local\Temp (java.io.tmpdir)
2025-02-28 14:04:38 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.bitMode: 64 (sun.arch.data.model)
2025-02-28 14:04:38 [] DEBUG i.n.util.internal.PlatformDependent - Platform: Windows
2025-02-28 14:04:38 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.maxDirectMemory: -1 bytes
2025-02-28 14:04:38 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.uninitializedArrayAllocationThreshold: -1
2025-02-28 14:04:38 [] DEBUG io.netty.util.internal.CleanerJava9 - java.nio.ByteBuffer.cleaner(): available
2025-02-28 14:04:38 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.noPreferDirect: false
2025-02-28 14:04:39 [] DEBUG reactor.util.Loggers - Using Slf4j logging framework
2025-02-28 14:04:39 [] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-02-28 14:04:39 [] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2025-02-28 14:04:39 [] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2025-02-28 14:04:39 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-02-28 14:04:39 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via user class loader
2025-02-28 14:04:39 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-02-28 14:04:39 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-02-28 14:04:39 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-02-28 14:04:39 [] DEBUG o.h.v.i.e.r.TraversableResolvers - Cannot find jakarta.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2025-02-28 14:04:39 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-02-28 14:04:39 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-02-28 14:04:39 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-02-28 14:04:39 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-02-28 14:04:39 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-02-28 14:04:39 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-02-28 14:04:39 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	c.c.c.g.c.c.HomeController:
	{GET [/home]}: get()
2025-02-28 14:04:39 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
	{ [/error]}: error(HttpServletRequest)
2025-02-28 14:04:39 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 'beanNameHandlerMapping' {}
2025-02-28 14:04:39 [] DEBUG _.s.w.s.HandlerMapping.Mappings - Mapped /validate/** -> ProxyExchangeHandlerFunction
/users/** -> ProxyExchangeHandlerFunction
2025-02-28 14:04:39 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2025-02-28 14:04:39 [] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-02-28 14:04:40 [] DEBUG i.n.u.i.InternalThreadLocalMap - -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2025-02-28 14:04:40 [] DEBUG i.n.u.i.InternalThreadLocalMap - -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2025-02-28 14:04:40 [] DEBUG io.netty.util.ResourceLeakDetector - -Dio.netty.leakDetection.level: simple
2025-02-28 14:04:40 [] DEBUG io.netty.util.ResourceLeakDetector - -Dio.netty.leakDetection.targetRecords: 4
2025-02-28 14:04:40 [] DEBUG i.n.handler.codec.compression.Brotli - brotli4j not in the classpath; Brotli support will be unavailable.
2025-02-28 14:04:40 [] DEBUG reactor.netty.tcp.TcpResources - [http] resources will use the default LoopResources: DefaultLoopResources {prefix=reactor-http, daemon=true, selectCount=12, workerCount=12}
2025-02-28 14:04:40 [] DEBUG reactor.netty.tcp.TcpResources - [http] resources will use the default ConnectionProvider: reactor.netty.resources.DefaultPooledConnectionProvider@25fe53c3
2025-02-28 14:04:40 [] DEBUG r.netty.resources.DefaultLoopIOUring - Default io_uring support : false
2025-02-28 14:04:40 [] DEBUG r.netty.resources.DefaultLoopEpoll - Default Epoll support : false
2025-02-28 14:04:40 [] DEBUG r.netty.resources.DefaultLoopKQueue - Default KQueue support : false
2025-02-28 14:04:40 [] DEBUG i.n.c.MultithreadEventLoopGroup - -Dio.netty.eventLoopThreads: 24
2025-02-28 14:04:40 [] DEBUG i.n.u.concurrent.GlobalEventExecutor - -Dio.netty.globalEventExecutor.quietPeriodSeconds: 1
2025-02-28 14:04:40 [] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.noKeySetOptimization: false
2025-02-28 14:04:40 [] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.selectorAutoRebuildThreshold: 512
2025-02-28 14:04:40 [] DEBUG i.n.util.internal.PlatformDependent - org.jctools-core.MpscChunkedArrayQueue: available
2025-02-28 14:04:40 [] DEBUG io.netty.util.NetUtil - -Djava.net.preferIPv4Stack: false
2025-02-28 14:04:40 [] DEBUG io.netty.util.NetUtil - -Djava.net.preferIPv6Addresses: false
2025-02-28 14:04:40 [] DEBUG i.netty.util.NetUtilInitializations - Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2025-02-28 14:04:40 [] DEBUG io.netty.util.NetUtil - Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2025-02-28 14:04:40 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default ResolvedAddressTypes: IPV4_ONLY
2025-02-28 14:04:40 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Localhost address: localhost/127.0.0.1
2025-02-28 14:04:40 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Windows hostname: DESKTOP-P307093
2025-02-28 14:04:40 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default search domains: []
2025-02-28 14:04:40 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default UnixResolverOptions{ndots=1, timeout=5, attempts=16}
2025-02-28 14:04:40 [] DEBUG i.n.r.DefaultHostsFileEntriesResolver - -Dio.netty.hostsFileRefreshInterval: 0
2025-02-28 14:04:40 [] DEBUG i.n.r.d.DefaultDnsServerAddressStreamProvider - Default DNS servers: [/8.8.8.8:53, /4.2.2.2:53] (sun.net.dns.ResolverConfiguration)
2025-02-28 14:04:40 [] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-02-28 14:04:40 [] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-02-28 14:04:40 [] INFO  c.c.c.g.c.CommongatewayApplication - Started CommongatewayApplication in 4.001 seconds (process running for 4.954)
2025-02-28 14:05:03 [] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-02-28 14:05:03 [] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-02-28 14:05:03 [] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-02-28 14:05:03 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 14:05:03 [10b2da42-6ce7-438d-871e-ecea5312db2d] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 14:05:03 [10b2da42-6ce7-438d-871e-ecea5312db2d] DEBUG i.m.c.u.i.l.InternalLoggerFactory - Using SLF4J as the default logging framework
2025-02-28 14:05:03 [10b2da42-6ce7-438d-871e-ecea5312db2d] DEBUG r.n.r.PooledConnectionProvider - Creating a new [http] client pool [PoolFactory{evictionInterval=PT0S, leasingStrategy=fifo, maxConnections=500, maxIdleTime=-1, maxLifeTime=-1, metricsEnabled=false, pendingAcquireMaxCount=1000, pendingAcquireTimeout=45000}] for [localhost/<unresolved>:8081]
2025-02-28 14:05:03 [10b2da42-6ce7-438d-871e-ecea5312db2d] DEBUG io.netty.channel.DefaultChannelId - -Dio.netty.processId: 17368 (auto-detected)
2025-02-28 14:05:03 [10b2da42-6ce7-438d-871e-ecea5312db2d] DEBUG io.netty.channel.DefaultChannelId - -Dio.netty.machineId: 00:15:5d:ff:fe:02:b5:1f (auto-detected)
2025-02-28 14:05:03 [10b2da42-6ce7-438d-871e-ecea5312db2d] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.numHeapArenas: 24
2025-02-28 14:05:03 [10b2da42-6ce7-438d-871e-ecea5312db2d] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.numDirectArenas: 24
2025-02-28 14:05:03 [10b2da42-6ce7-438d-871e-ecea5312db2d] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.pageSize: 8192
2025-02-28 14:05:03 [10b2da42-6ce7-438d-871e-ecea5312db2d] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxOrder: 9
2025-02-28 14:05:03 [10b2da42-6ce7-438d-871e-ecea5312db2d] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.chunkSize: 4194304
2025-02-28 14:05:03 [10b2da42-6ce7-438d-871e-ecea5312db2d] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.smallCacheSize: 256
2025-02-28 14:05:03 [10b2da42-6ce7-438d-871e-ecea5312db2d] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.normalCacheSize: 64
2025-02-28 14:05:03 [10b2da42-6ce7-438d-871e-ecea5312db2d] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2025-02-28 14:05:03 [10b2da42-6ce7-438d-871e-ecea5312db2d] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.cacheTrimInterval: 8192
2025-02-28 14:05:03 [10b2da42-6ce7-438d-871e-ecea5312db2d] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.cacheTrimIntervalMillis: 0
2025-02-28 14:05:03 [10b2da42-6ce7-438d-871e-ecea5312db2d] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.useCacheForAllThreads: false
2025-02-28 14:05:03 [10b2da42-6ce7-438d-871e-ecea5312db2d] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
2025-02-28 14:05:03 [10b2da42-6ce7-438d-871e-ecea5312db2d] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.disableCacheFinalizersForFastThreadLocalThreads: false
2025-02-28 14:05:03 [10b2da42-6ce7-438d-871e-ecea5312db2d] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.allocator.type: pooled
2025-02-28 14:05:03 [10b2da42-6ce7-438d-871e-ecea5312db2d] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.threadLocalDirectBufferSize: 0
2025-02-28 14:05:03 [10b2da42-6ce7-438d-871e-ecea5312db2d] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.maxThreadLocalCharBufferSize: 16384
2025-02-28 14:05:03 [] DEBUG r.n.r.PooledConnectionProvider - [b690bd00] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 14:05:03 [] DEBUG io.netty.buffer.AbstractByteBuf - -Dio.netty.buffer.checkAccessible: true
2025-02-28 14:05:03 [] DEBUG io.netty.buffer.AbstractByteBuf - -Dio.netty.buffer.checkBounds: true
2025-02-28 14:05:03 [] DEBUG i.n.util.ResourceLeakDetectorFactory - Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@3f1a9895
2025-02-28 14:05:03 [] DEBUG r.netty.transport.TransportConfig - [b690bd00] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-28 14:05:03 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 14:05:03 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 14:05:03 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 14:05:03 [] DEBUG i.n.b.ChannelInitializerExtensions - -Dio.netty.bootstrap.extensions: null
2025-02-28 14:05:03 [] DEBUG r.netty.transport.TransportConnector - [b690bd00] Connecting to [localhost/127.0.0.1:8081].
2025-02-28 14:05:03 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b690bd00, L:/127.0.0.1:58961 - R:localhost/127.0.0.1:8081] Registering pool release on close event for channel
2025-02-28 14:05:03 [] DEBUG r.n.r.PooledConnectionProvider - [b690bd00, L:/127.0.0.1:58961 - R:localhost/127.0.0.1:8081] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 14:05:03 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b690bd00, L:/127.0.0.1:58961 - R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0xb690bd00, L:/127.0.0.1:58961 - R:localhost/127.0.0.1:8081]}, [connected])
2025-02-28 14:05:03 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b690bd00-1, L:/127.0.0.1:58961 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0xb690bd00, L:/127.0.0.1:58961 - R:localhost/127.0.0.1:8081]}}, [configured])
2025-02-28 14:05:03 [] DEBUG r.n.http.client.HttpClientConnect - [b690bd00-1, L:/127.0.0.1:58961 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY, method=GET}
2025-02-28 14:05:03 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b690bd00-1, L:/127.0.0.1:58961 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xb690bd00, L:/127.0.0.1:58961 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 14:05:03 [] DEBUG r.n.http.client.HttpClientOperations - [b690bd00-1, L:/127.0.0.1:58961 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 14:05:03 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.maxCapacityPerThread: 4096
2025-02-28 14:05:03 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.ratio: 8
2025-02-28 14:05:03 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.chunkSize: 32
2025-02-28 14:05:03 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.blocking: false
2025-02-28 14:05:03 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.batchFastThreadLocalOnly: true
2025-02-28 14:05:03 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b690bd00-1, L:/127.0.0.1:58961 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xb690bd00, L:/127.0.0.1:58961 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 14:05:03 [] DEBUG i.n.handler.codec.compression.Zstd - zstd-jni not in the classpath; Zstd support will be unavailable.
2025-02-28 14:05:03 [] DEBUG r.n.http.client.HttpClientOperations - [b690bd00-1, L:/127.0.0.1:58961 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-28 14:05:03 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b690bd00-1, L:/127.0.0.1:58961 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xb690bd00, L:/127.0.0.1:58961 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 14:05:03 [] DEBUG r.n.http.client.HttpClientOperations - [b690bd00-1, L:/127.0.0.1:58961 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 14:05:03 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b690bd00, L:/127.0.0.1:58961 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xb690bd00, L:/127.0.0.1:58961 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 14:05:03 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b690bd00, L:/127.0.0.1:58961 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xb690bd00, L:/127.0.0.1:58961 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 14:05:03 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b690bd00, L:/127.0.0.1:58961 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-28 14:05:03 [] DEBUG r.n.r.PooledConnectionProvider - [b690bd00, L:/127.0.0.1:58961 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-28 14:05:03 [] DEBUG reactor.netty.channel.FluxReceive - [3599a0d1, L:/127.0.0.1:58961 ! R:localhost/127.0.0.1:8081] [terminated=true, cancelled=false, pending=1, error=null]: subscribing inbound receiver
2025-02-28 14:05:21 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 14:05:21 [c55925f9-0d7b-42b5-af03-df5e0085f89d] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 14:05:21 [c55925f9-0d7b-42b5-af03-df5e0085f89d] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /users
2025-02-28 14:05:21 [c55925f9-0d7b-42b5-af03-df5e0085f89d] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔄 Using HTTP Method: GET
2025-02-28 14:05:21 [c55925f9-0d7b-42b5-af03-df5e0085f89d] DEBUG r.n.r.PooledConnectionProvider - Creating a new [http] client pool [PoolFactory{evictionInterval=PT0S, leasingStrategy=fifo, maxConnections=500, maxIdleTime=-1, maxLifeTime=-1, metricsEnabled=false, pendingAcquireMaxCount=1000, pendingAcquireTimeout=45000}] for [$%257Bspring.cloud.gateway.mvc.routes.uri/<unresolved>:80]
2025-02-28 14:05:21 [] DEBUG r.n.r.PooledConnectionProvider - [e6e20160] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 14:05:21 [] DEBUG r.netty.transport.TransportConfig - [e6e20160] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-28 14:05:21 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 14:05:21 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 14:05:21 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 14:05:21 [] DEBUG i.n.resolver.dns.DnsResolveContext - -Dio.netty.resolver.dns.tryCnameOnAddressLookups: false
2025-02-28 14:05:21 [] DEBUG i.netty.resolver.dns.DnsQueryContext - -Dio.netty.resolver.dns.idReuseOnTimeoutDelayMillis: 10000
2025-02-28 14:05:21 [] DEBUG i.n.util.ResourceLeakDetectorFactory - Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@839124
2025-02-28 14:05:21 [] DEBUG i.netty.resolver.dns.DnsQueryContext - [id: 0xb7f73eb7, L:/[0:0:0:0:0:0:0:0]:51313] WRITE: UDP, [2943: /8.8.8.8:53], DefaultDnsQuestion($%257Bspring.cloud.gateway.mvc.routes.uri. IN A)
2025-02-28 14:05:21 [] DEBUG i.netty.resolver.dns.DnsNameResolver - [id: 0xb7f73eb7, L:/[0:0:0:0:0:0:0:0]:51313] RECEIVED: UDP [2943: /8.8.8.8:53], DatagramDnsResponse(from: /8.8.8.8:53, to: /[0:0:0:0:0:0:0:0]:51313, id: 2943, QUERY(0), NXDomain(3), RD RA)
	DefaultDnsQuestion($%257Bspring.cloud.gateway.mvc.routes.uri. IN A)
	DefaultDnsRawRecord(. 86395 IN SOA 64B)
	DefaultDnsRawRecord(OPT flags:0 udp:512 0B)
2025-02-28 14:05:21 [] DEBUG i.netty.resolver.dns.DnsQueryContext - [id: 0xb7f73eb7, L:/[0:0:0:0:0:0:0:0]:51313] WRITE: UDP, [7543: /4.2.2.2:53], DefaultDnsQuestion($%257Bspring.cloud.gateway.mvc.routes.uri. IN A)
2025-02-28 14:05:21 [] DEBUG i.netty.resolver.dns.DnsNameResolver - [id: 0xb7f73eb7, L:/[0:0:0:0:0:0:0:0]:51313] RECEIVED: UDP [7543: /4.2.2.2:53], DatagramDnsResponse(from: /4.2.2.2:53, to: /[0:0:0:0:0:0:0:0]:51313, id: 7543, QUERY(0), NXDomain(3), RD RA)
	DefaultDnsQuestion($%257Bspring.cloud.gateway.mvc.routes.uri. IN A)
	DefaultDnsRawRecord(. 2828 IN SOA 64B)
	DefaultDnsRawRecord(OPT flags:0 udp:4096 0B)
2025-02-28 14:05:21 [c55925f9-0d7b-42b5-af03-df5e0085f89d] ERROR c.c.c.g.c.c.ValidationInterceptor - ⚠️ Error calling validation service
org.springframework.web.reactive.function.client.WebClientRequestException: Failed to resolve '$%257Bspring.cloud.gateway.mvc.routes.uri' [A(1)] after 2 queries 
	at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:137)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ Request to GET $%257Bspring.cloud.gateway.mvc.routes.uri [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:137)
		at reactor.core.publisher.MonoErrorSupplied.subscribe(MonoErrorSupplied.java:55)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.MonoNext$NextSubscriber.onError(MonoNext.java:93)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onError(MonoFlatMapMany.java:205)
		at reactor.core.publisher.SerializedSubscriber.onError(SerializedSubscriber.java:124)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.whenError(FluxRetryWhen.java:229)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenOtherSubscriber.onError(FluxRetryWhen.java:279)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onError(FluxContextWrite.java:121)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.maybeOnError(FluxConcatMapNoPrefetch.java:327)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onNext(FluxConcatMapNoPrefetch.java:212)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.SinkManyEmitterProcessor.drain(SinkManyEmitterProcessor.java:476)
		at reactor.core.publisher.SinkManyEmitterProcessor$EmitterInner.drainParent(SinkManyEmitterProcessor.java:620)
		at reactor.core.publisher.FluxPublish$PubSubInner.request(FluxPublish.java:874)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
		at reactor.core.publisher.Operators$DeferredSubscription.request(Operators.java:1743)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.onError(FluxRetryWhen.java:196)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:205)
		at reactor.netty.http.client.HttpClientConnect$MonoHttpConnect$ClientTransportSubscriber.onError(HttpClientConnect.java:318)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:205)
		at reactor.netty.resources.DefaultPooledConnectionProvider$DisposableAcquire.onError(DefaultPooledConnectionProvider.java:174)
		at reactor.netty.internal.shaded.reactor.pool.AbstractPool$Borrower.fail(AbstractPool.java:479)
		at reactor.netty.internal.shaded.reactor.pool.SimpleDequePool.lambda$drainLoop$9(SimpleDequePool.java:442)
		at reactor.core.publisher.FluxDoOnEach$DoOnEachSubscriber.onError(FluxDoOnEach.java:186)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:205)
		at reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnectionAllocator$PooledConnectionInitializer.onError(DefaultPooledConnectionProvider.java:593)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.secondError(MonoFlatMap.java:241)
		at reactor.core.publisher.MonoFlatMap$FlatMapInner.onError(MonoFlatMap.java:315)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:106)
		at reactor.core.publisher.Operators.error(Operators.java:198)
		at reactor.core.publisher.MonoError.subscribe(MonoError.java:53)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
		at reactor.netty.transport.TransportConnector$MonoChannelPromise.tryFailure(TransportConnector.java:576)
		at reactor.netty.transport.TransportConnector.lambda$doResolveAndConnect$11(TransportConnector.java:375)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:557)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
		at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:629)
		at io.netty.util.concurrent.DefaultPromise.setFailure(DefaultPromise.java:110)
		at io.netty.resolver.InetSocketAddressResolver$2.operationComplete(InetSocketAddressResolver.java:86)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:583)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:559)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
		at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:629)
		at io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:118)
		at io.netty.resolver.dns.DnsResolveContext.finishResolve(DnsResolveContext.java:1158)
		at io.netty.resolver.dns.DnsResolveContext.tryToFinishResolve(DnsResolveContext.java:1097)
		at io.netty.resolver.dns.DnsResolveContext.query(DnsResolveContext.java:455)
		at io.netty.resolver.dns.DnsResolveContext.onResponse(DnsResolveContext.java:686)
		at io.netty.resolver.dns.DnsResolveContext.access$500(DnsResolveContext.java:70)
		at io.netty.resolver.dns.DnsResolveContext$2.operationComplete(DnsResolveContext.java:513)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:583)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:559)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
		at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:625)
		at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:105)
		at io.netty.resolver.dns.DnsQueryContext.trySuccess(DnsQueryContext.java:308)
		at io.netty.resolver.dns.DnsQueryContext.finishSuccess(DnsQueryContext.java:299)
		at io.netty.resolver.dns.DnsNameResolver$DnsResponseHandler.channelRead(DnsNameResolver.java:1491)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioMessageChannel$NioMessageUnsafe.read(AbstractNioMessageChannel.java:97)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104)
		at reactor.core.publisher.Mono.block(Mono.java:1779)
		at com.citpl.common.gateway.commongateway.config.ValidationInterceptor.preHandle(ValidationInterceptor.java:70)
		at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:146)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1083)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
		at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at com.citpl.common.gateway.commongateway.filter.MDCFilter.doFilter(MDCFilter.java:37)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.cloud.gateway.server.mvc.filter.WeightCalculatorFilter.doFilter(WeightCalculatorFilter.java:229)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.cloud.gateway.server.mvc.filter.FormFilter.doFilter(FormFilter.java:93)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: java.net.UnknownHostException: Failed to resolve '$%257Bspring.cloud.gateway.mvc.routes.uri' [A(1)] after 2 queries 
	at io.netty.resolver.dns.DnsResolveContext.finishResolve(DnsResolveContext.java:1150)
	at io.netty.resolver.dns.DnsResolveContext.tryToFinishResolve(DnsResolveContext.java:1097)
	at io.netty.resolver.dns.DnsResolveContext.query(DnsResolveContext.java:455)
	at io.netty.resolver.dns.DnsResolveContext.onResponse(DnsResolveContext.java:686)
	at io.netty.resolver.dns.DnsResolveContext.access$500(DnsResolveContext.java:70)
	at io.netty.resolver.dns.DnsResolveContext$2.operationComplete(DnsResolveContext.java:513)
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:583)
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:559)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
	at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:625)
	at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:105)
	at io.netty.resolver.dns.DnsQueryContext.trySuccess(DnsQueryContext.java:308)
	at io.netty.resolver.dns.DnsQueryContext.finishSuccess(DnsQueryContext.java:299)
	at io.netty.resolver.dns.DnsNameResolver$DnsResponseHandler.channelRead(DnsNameResolver.java:1491)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioMessageChannel$NioMessageUnsafe.read(AbstractNioMessageChannel.java:97)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.netty.resolver.dns.DnsErrorCauseException: Query failed with NXDOMAIN
	at io.netty.resolver.dns.DnsResolveContext.onResponse(..)(Unknown Source)
2025-02-28 14:05:21 [] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /error
2025-02-28 14:05:21 [] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔄 Using HTTP Method: GET
2025-02-28 14:05:21 [] DEBUG r.n.r.PooledConnectionProvider - [28bbaecf] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 14:05:21 [] DEBUG r.netty.transport.TransportConfig - [28bbaecf] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-28 14:05:21 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 14:05:21 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 14:05:21 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 14:05:21 [] DEBUG i.netty.resolver.dns.DnsQueryContext - [id: 0x7e434476, L:/[0:0:0:0:0:0:0:0]:51314] WRITE: UDP, [4702: /8.8.8.8:53], DefaultDnsQuestion($%257Bspring.cloud.gateway.mvc.routes.uri. IN A)
2025-02-28 14:05:21 [] DEBUG i.netty.resolver.dns.DnsNameResolver - [id: 0x7e434476, L:/[0:0:0:0:0:0:0:0]:51314] RECEIVED: UDP [4702: /8.8.8.8:53], DatagramDnsResponse(from: /8.8.8.8:53, to: /[0:0:0:0:0:0:0:0]:51314, id: 4702, QUERY(0), NXDomain(3), RD RA)
	DefaultDnsQuestion($%257Bspring.cloud.gateway.mvc.routes.uri. IN A)
	DefaultDnsRawRecord(. 86397 IN SOA 64B)
	DefaultDnsRawRecord(OPT flags:0 udp:512 0B)
2025-02-28 14:05:21 [] DEBUG i.netty.resolver.dns.DnsQueryContext - [id: 0x7e434476, L:/[0:0:0:0:0:0:0:0]:51314] WRITE: UDP, [5413: /4.2.2.2:53], DefaultDnsQuestion($%257Bspring.cloud.gateway.mvc.routes.uri. IN A)
2025-02-28 14:05:21 [] DEBUG i.netty.resolver.dns.DnsNameResolver - [id: 0x7e434476, L:/[0:0:0:0:0:0:0:0]:51314] RECEIVED: UDP [5413: /4.2.2.2:53], DatagramDnsResponse(from: /4.2.2.2:53, to: /[0:0:0:0:0:0:0:0]:51314, id: 5413, QUERY(0), NXDomain(3), RD RA)
	DefaultDnsQuestion($%257Bspring.cloud.gateway.mvc.routes.uri. IN A)
	DefaultDnsRawRecord(. 2828 IN SOA 64B)
	DefaultDnsRawRecord(OPT flags:0 udp:4096 0B)
2025-02-28 14:05:21 [] ERROR c.c.c.g.c.c.ValidationInterceptor - ⚠️ Error calling validation service
org.springframework.web.reactive.function.client.WebClientRequestException: Failed to resolve '$%257Bspring.cloud.gateway.mvc.routes.uri' [A(1)] after 2 queries 
	at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:137)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ Request to GET $%257Bspring.cloud.gateway.mvc.routes.uri [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:137)
		at reactor.core.publisher.MonoErrorSupplied.subscribe(MonoErrorSupplied.java:55)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.MonoNext$NextSubscriber.onError(MonoNext.java:93)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onError(MonoFlatMapMany.java:205)
		at reactor.core.publisher.SerializedSubscriber.onError(SerializedSubscriber.java:124)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.whenError(FluxRetryWhen.java:229)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenOtherSubscriber.onError(FluxRetryWhen.java:279)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onError(FluxContextWrite.java:121)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.maybeOnError(FluxConcatMapNoPrefetch.java:327)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onNext(FluxConcatMapNoPrefetch.java:212)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.SinkManyEmitterProcessor.drain(SinkManyEmitterProcessor.java:476)
		at reactor.core.publisher.SinkManyEmitterProcessor$EmitterInner.drainParent(SinkManyEmitterProcessor.java:620)
		at reactor.core.publisher.FluxPublish$PubSubInner.request(FluxPublish.java:874)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
		at reactor.core.publisher.Operators$DeferredSubscription.request(Operators.java:1743)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.onError(FluxRetryWhen.java:196)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:205)
		at reactor.netty.http.client.HttpClientConnect$MonoHttpConnect$ClientTransportSubscriber.onError(HttpClientConnect.java:318)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:205)
		at reactor.netty.resources.DefaultPooledConnectionProvider$DisposableAcquire.onError(DefaultPooledConnectionProvider.java:174)
		at reactor.netty.internal.shaded.reactor.pool.AbstractPool$Borrower.fail(AbstractPool.java:479)
		at reactor.netty.internal.shaded.reactor.pool.SimpleDequePool.lambda$drainLoop$9(SimpleDequePool.java:442)
		at reactor.core.publisher.FluxDoOnEach$DoOnEachSubscriber.onError(FluxDoOnEach.java:186)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:205)
		at reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnectionAllocator$PooledConnectionInitializer.onError(DefaultPooledConnectionProvider.java:593)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.secondError(MonoFlatMap.java:241)
		at reactor.core.publisher.MonoFlatMap$FlatMapInner.onError(MonoFlatMap.java:315)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:106)
		at reactor.core.publisher.Operators.error(Operators.java:198)
		at reactor.core.publisher.MonoError.subscribe(MonoError.java:53)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
		at reactor.netty.transport.TransportConnector$MonoChannelPromise.tryFailure(TransportConnector.java:576)
		at reactor.netty.transport.TransportConnector.lambda$doResolveAndConnect$11(TransportConnector.java:375)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:557)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
		at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:629)
		at io.netty.util.concurrent.DefaultPromise.setFailure(DefaultPromise.java:110)
		at io.netty.resolver.InetSocketAddressResolver$2.operationComplete(InetSocketAddressResolver.java:86)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:583)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:559)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
		at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:629)
		at io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:118)
		at io.netty.resolver.dns.DnsResolveContext.finishResolve(DnsResolveContext.java:1158)
		at io.netty.resolver.dns.DnsResolveContext.tryToFinishResolve(DnsResolveContext.java:1097)
		at io.netty.resolver.dns.DnsResolveContext.query(DnsResolveContext.java:455)
		at io.netty.resolver.dns.DnsResolveContext.onResponse(DnsResolveContext.java:686)
		at io.netty.resolver.dns.DnsResolveContext.access$500(DnsResolveContext.java:70)
		at io.netty.resolver.dns.DnsResolveContext$2.operationComplete(DnsResolveContext.java:513)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:583)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:559)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
		at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:625)
		at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:105)
		at io.netty.resolver.dns.DnsQueryContext.trySuccess(DnsQueryContext.java:308)
		at io.netty.resolver.dns.DnsQueryContext.finishSuccess(DnsQueryContext.java:299)
		at io.netty.resolver.dns.DnsNameResolver$DnsResponseHandler.channelRead(DnsNameResolver.java:1491)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioMessageChannel$NioMessageUnsafe.read(AbstractNioMessageChannel.java:97)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104)
		at reactor.core.publisher.Mono.block(Mono.java:1779)
		at com.citpl.common.gateway.commongateway.config.ValidationInterceptor.preHandle(ValidationInterceptor.java:70)
		at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:146)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1083)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
		at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:633)
		at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:411)
		at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:331)
		at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:268)
		at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:380)
		at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:208)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:151)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: java.net.UnknownHostException: Failed to resolve '$%257Bspring.cloud.gateway.mvc.routes.uri' [A(1)] after 2 queries 
	at io.netty.resolver.dns.DnsResolveContext.finishResolve(DnsResolveContext.java:1150)
	at io.netty.resolver.dns.DnsResolveContext.tryToFinishResolve(DnsResolveContext.java:1097)
	at io.netty.resolver.dns.DnsResolveContext.query(DnsResolveContext.java:455)
	at io.netty.resolver.dns.DnsResolveContext.onResponse(DnsResolveContext.java:686)
	at io.netty.resolver.dns.DnsResolveContext.access$500(DnsResolveContext.java:70)
	at io.netty.resolver.dns.DnsResolveContext$2.operationComplete(DnsResolveContext.java:513)
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:583)
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:559)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
	at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:625)
	at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:105)
	at io.netty.resolver.dns.DnsQueryContext.trySuccess(DnsQueryContext.java:308)
	at io.netty.resolver.dns.DnsQueryContext.finishSuccess(DnsQueryContext.java:299)
	at io.netty.resolver.dns.DnsNameResolver$DnsResponseHandler.channelRead(DnsNameResolver.java:1491)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioMessageChannel$NioMessageUnsafe.read(AbstractNioMessageChannel.java:97)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.netty.resolver.dns.DnsErrorCauseException: Query failed with NXDOMAIN
	at io.netty.resolver.dns.DnsResolveContext.onResponse(..)(Unknown Source)
2025-02-28 14:06:03 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b690bd00, L:/127.0.0.1:58961 ! R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0xb690bd00, L:/127.0.0.1:58961 ! R:localhost/127.0.0.1:8081]}, [disconnecting])
2025-02-28 14:06:26 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 14:06:26 [7b4a8030-5c1d-4298-8c86-d16bc5a6b547] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 14:06:26 [7b4a8030-5c1d-4298-8c86-d16bc5a6b547] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /users
2025-02-28 14:06:26 [7b4a8030-5c1d-4298-8c86-d16bc5a6b547] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔄 Using HTTP Method: GET
2025-02-28 14:06:26 [] DEBUG r.n.r.PooledConnectionProvider - [56b68f97] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 14:06:26 [] DEBUG r.netty.transport.TransportConfig - [56b68f97] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-28 14:06:26 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 14:06:26 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 14:06:26 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 14:06:26 [] DEBUG i.netty.resolver.dns.DnsQueryContext - [id: 0x061ba3e1, L:/[0:0:0:0:0:0:0:0]:59161] WRITE: UDP, [10241: /8.8.8.8:53], DefaultDnsQuestion($%257Bspring.cloud.gateway.mvc.routes.uri. IN A)
2025-02-28 14:06:26 [] DEBUG i.netty.resolver.dns.DnsNameResolver - [id: 0x061ba3e1, L:/[0:0:0:0:0:0:0:0]:59161] RECEIVED: UDP [10241: /8.8.8.8:53], DatagramDnsResponse(from: /8.8.8.8:53, to: /[0:0:0:0:0:0:0:0]:59161, id: 10241, QUERY(0), NXDomain(3), RD RA)
	DefaultDnsQuestion($%257Bspring.cloud.gateway.mvc.routes.uri. IN A)
	DefaultDnsRawRecord(. 86391 IN SOA 64B)
	DefaultDnsRawRecord(OPT flags:0 udp:512 0B)
2025-02-28 14:06:26 [] DEBUG i.netty.resolver.dns.DnsQueryContext - [id: 0x061ba3e1, L:/[0:0:0:0:0:0:0:0]:59161] WRITE: UDP, [2983: /4.2.2.2:53], DefaultDnsQuestion($%257Bspring.cloud.gateway.mvc.routes.uri. IN A)
2025-02-28 14:06:26 [] DEBUG i.netty.resolver.dns.DnsNameResolver - [id: 0x061ba3e1, L:/[0:0:0:0:0:0:0:0]:59161] RECEIVED: UDP [2983: /4.2.2.2:53], DatagramDnsResponse(from: /4.2.2.2:53, to: /[0:0:0:0:0:0:0:0]:59161, id: 2983, QUERY(0), NXDomain(3), RD RA)
	DefaultDnsQuestion($%257Bspring.cloud.gateway.mvc.routes.uri. IN A)
	DefaultDnsRawRecord(. 2763 IN SOA 64B)
	DefaultDnsRawRecord(OPT flags:0 udp:4096 0B)
2025-02-28 14:06:26 [7b4a8030-5c1d-4298-8c86-d16bc5a6b547] ERROR c.c.c.g.c.c.ValidationInterceptor - ⚠️ Error calling validation service
org.springframework.web.reactive.function.client.WebClientRequestException: Failed to resolve '$%257Bspring.cloud.gateway.mvc.routes.uri' [A(1)] after 2 queries 
	at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:137)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ Request to GET $%257Bspring.cloud.gateway.mvc.routes.uri [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:137)
		at reactor.core.publisher.MonoErrorSupplied.subscribe(MonoErrorSupplied.java:55)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.MonoNext$NextSubscriber.onError(MonoNext.java:93)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onError(MonoFlatMapMany.java:205)
		at reactor.core.publisher.SerializedSubscriber.onError(SerializedSubscriber.java:124)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.whenError(FluxRetryWhen.java:229)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenOtherSubscriber.onError(FluxRetryWhen.java:279)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onError(FluxContextWrite.java:121)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.maybeOnError(FluxConcatMapNoPrefetch.java:327)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onNext(FluxConcatMapNoPrefetch.java:212)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.SinkManyEmitterProcessor.drain(SinkManyEmitterProcessor.java:476)
		at reactor.core.publisher.SinkManyEmitterProcessor$EmitterInner.drainParent(SinkManyEmitterProcessor.java:620)
		at reactor.core.publisher.FluxPublish$PubSubInner.request(FluxPublish.java:874)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
		at reactor.core.publisher.Operators$DeferredSubscription.request(Operators.java:1743)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.onError(FluxRetryWhen.java:196)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:205)
		at reactor.netty.http.client.HttpClientConnect$MonoHttpConnect$ClientTransportSubscriber.onError(HttpClientConnect.java:318)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:205)
		at reactor.netty.resources.DefaultPooledConnectionProvider$DisposableAcquire.onError(DefaultPooledConnectionProvider.java:174)
		at reactor.netty.internal.shaded.reactor.pool.AbstractPool$Borrower.fail(AbstractPool.java:479)
		at reactor.netty.internal.shaded.reactor.pool.SimpleDequePool.lambda$drainLoop$9(SimpleDequePool.java:442)
		at reactor.core.publisher.FluxDoOnEach$DoOnEachSubscriber.onError(FluxDoOnEach.java:186)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:205)
		at reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnectionAllocator$PooledConnectionInitializer.onError(DefaultPooledConnectionProvider.java:593)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.secondError(MonoFlatMap.java:241)
		at reactor.core.publisher.MonoFlatMap$FlatMapInner.onError(MonoFlatMap.java:315)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:106)
		at reactor.core.publisher.Operators.error(Operators.java:198)
		at reactor.core.publisher.MonoError.subscribe(MonoError.java:53)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
		at reactor.netty.transport.TransportConnector$MonoChannelPromise.tryFailure(TransportConnector.java:576)
		at reactor.netty.transport.TransportConnector.lambda$doResolveAndConnect$11(TransportConnector.java:375)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:557)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
		at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:629)
		at io.netty.util.concurrent.DefaultPromise.setFailure(DefaultPromise.java:110)
		at io.netty.resolver.InetSocketAddressResolver$2.operationComplete(InetSocketAddressResolver.java:86)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:583)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:559)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
		at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:629)
		at io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:118)
		at io.netty.resolver.dns.DnsResolveContext.finishResolve(DnsResolveContext.java:1158)
		at io.netty.resolver.dns.DnsResolveContext.tryToFinishResolve(DnsResolveContext.java:1097)
		at io.netty.resolver.dns.DnsResolveContext.query(DnsResolveContext.java:455)
		at io.netty.resolver.dns.DnsResolveContext.onResponse(DnsResolveContext.java:686)
		at io.netty.resolver.dns.DnsResolveContext.access$500(DnsResolveContext.java:70)
		at io.netty.resolver.dns.DnsResolveContext$2.operationComplete(DnsResolveContext.java:513)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:583)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:559)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
		at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:625)
		at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:105)
		at io.netty.resolver.dns.DnsQueryContext.trySuccess(DnsQueryContext.java:308)
		at io.netty.resolver.dns.DnsQueryContext.finishSuccess(DnsQueryContext.java:299)
		at io.netty.resolver.dns.DnsNameResolver$DnsResponseHandler.channelRead(DnsNameResolver.java:1491)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioMessageChannel$NioMessageUnsafe.read(AbstractNioMessageChannel.java:97)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104)
		at reactor.core.publisher.Mono.block(Mono.java:1779)
		at com.citpl.common.gateway.commongateway.config.ValidationInterceptor.preHandle(ValidationInterceptor.java:70)
		at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:146)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1083)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
		at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at com.citpl.common.gateway.commongateway.filter.MDCFilter.doFilter(MDCFilter.java:37)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.cloud.gateway.server.mvc.filter.WeightCalculatorFilter.doFilter(WeightCalculatorFilter.java:229)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.cloud.gateway.server.mvc.filter.FormFilter.doFilter(FormFilter.java:93)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: java.net.UnknownHostException: Failed to resolve '$%257Bspring.cloud.gateway.mvc.routes.uri' [A(1)] after 2 queries 
	at io.netty.resolver.dns.DnsResolveContext.finishResolve(DnsResolveContext.java:1150)
	at io.netty.resolver.dns.DnsResolveContext.tryToFinishResolve(DnsResolveContext.java:1097)
	at io.netty.resolver.dns.DnsResolveContext.query(DnsResolveContext.java:455)
	at io.netty.resolver.dns.DnsResolveContext.onResponse(DnsResolveContext.java:686)
	at io.netty.resolver.dns.DnsResolveContext.access$500(DnsResolveContext.java:70)
	at io.netty.resolver.dns.DnsResolveContext$2.operationComplete(DnsResolveContext.java:513)
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:583)
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:559)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
	at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:625)
	at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:105)
	at io.netty.resolver.dns.DnsQueryContext.trySuccess(DnsQueryContext.java:308)
	at io.netty.resolver.dns.DnsQueryContext.finishSuccess(DnsQueryContext.java:299)
	at io.netty.resolver.dns.DnsNameResolver$DnsResponseHandler.channelRead(DnsNameResolver.java:1491)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioMessageChannel$NioMessageUnsafe.read(AbstractNioMessageChannel.java:97)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.netty.resolver.dns.DnsErrorCauseException: Query failed with NXDOMAIN
	at io.netty.resolver.dns.DnsResolveContext.onResponse(..)(Unknown Source)
2025-02-28 14:06:26 [] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /error
2025-02-28 14:06:26 [] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔄 Using HTTP Method: GET
2025-02-28 14:06:26 [] DEBUG r.n.r.PooledConnectionProvider - [c12787a6] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 14:06:26 [] DEBUG r.netty.transport.TransportConfig - [c12787a6] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-28 14:06:26 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 14:06:26 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 14:06:26 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 14:06:26 [] DEBUG i.netty.resolver.dns.DnsQueryContext - [id: 0xd4884001, L:/[0:0:0:0:0:0:0:0]:59162] WRITE: UDP, [3333: /8.8.8.8:53], DefaultDnsQuestion($%257Bspring.cloud.gateway.mvc.routes.uri. IN A)
2025-02-28 14:06:26 [] DEBUG i.netty.resolver.dns.DnsNameResolver - [id: 0xd4884001, L:/[0:0:0:0:0:0:0:0]:59162] RECEIVED: UDP [3333: /8.8.8.8:53], DatagramDnsResponse(from: /8.8.8.8:53, to: /[0:0:0:0:0:0:0:0]:59162, id: 3333, QUERY(0), NXDomain(3), RD RA)
	DefaultDnsQuestion($%257Bspring.cloud.gateway.mvc.routes.uri. IN A)
	DefaultDnsRawRecord(. 86375 IN SOA 64B)
	DefaultDnsRawRecord(OPT flags:0 udp:512 0B)
2025-02-28 14:06:26 [] DEBUG i.netty.resolver.dns.DnsQueryContext - [id: 0xd4884001, L:/[0:0:0:0:0:0:0:0]:59162] WRITE: UDP, [8214: /4.2.2.2:53], DefaultDnsQuestion($%257Bspring.cloud.gateway.mvc.routes.uri. IN A)
2025-02-28 14:06:26 [] DEBUG i.netty.resolver.dns.DnsNameResolver - [id: 0xd4884001, L:/[0:0:0:0:0:0:0:0]:59162] RECEIVED: UDP [8214: /4.2.2.2:53], DatagramDnsResponse(from: /4.2.2.2:53, to: /[0:0:0:0:0:0:0:0]:59162, id: 8214, QUERY(0), NXDomain(3), RD RA)
	DefaultDnsQuestion($%257Bspring.cloud.gateway.mvc.routes.uri. IN A)
	DefaultDnsRawRecord(. 2740 IN SOA 64B)
	DefaultDnsRawRecord(OPT flags:0 udp:4096 0B)
2025-02-28 14:06:26 [] ERROR c.c.c.g.c.c.ValidationInterceptor - ⚠️ Error calling validation service
org.springframework.web.reactive.function.client.WebClientRequestException: Failed to resolve '$%257Bspring.cloud.gateway.mvc.routes.uri' [A(1)] after 2 queries 
	at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:137)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ Request to GET $%257Bspring.cloud.gateway.mvc.routes.uri [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:137)
		at reactor.core.publisher.MonoErrorSupplied.subscribe(MonoErrorSupplied.java:55)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.MonoNext$NextSubscriber.onError(MonoNext.java:93)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onError(MonoFlatMapMany.java:205)
		at reactor.core.publisher.SerializedSubscriber.onError(SerializedSubscriber.java:124)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.whenError(FluxRetryWhen.java:229)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenOtherSubscriber.onError(FluxRetryWhen.java:279)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onError(FluxContextWrite.java:121)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.maybeOnError(FluxConcatMapNoPrefetch.java:327)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onNext(FluxConcatMapNoPrefetch.java:212)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.SinkManyEmitterProcessor.drain(SinkManyEmitterProcessor.java:476)
		at reactor.core.publisher.SinkManyEmitterProcessor$EmitterInner.drainParent(SinkManyEmitterProcessor.java:620)
		at reactor.core.publisher.FluxPublish$PubSubInner.request(FluxPublish.java:874)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
		at reactor.core.publisher.Operators$DeferredSubscription.request(Operators.java:1743)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.onError(FluxRetryWhen.java:196)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:205)
		at reactor.netty.http.client.HttpClientConnect$MonoHttpConnect$ClientTransportSubscriber.onError(HttpClientConnect.java:318)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:205)
		at reactor.netty.resources.DefaultPooledConnectionProvider$DisposableAcquire.onError(DefaultPooledConnectionProvider.java:174)
		at reactor.netty.internal.shaded.reactor.pool.AbstractPool$Borrower.fail(AbstractPool.java:479)
		at reactor.netty.internal.shaded.reactor.pool.SimpleDequePool.lambda$drainLoop$9(SimpleDequePool.java:442)
		at reactor.core.publisher.FluxDoOnEach$DoOnEachSubscriber.onError(FluxDoOnEach.java:186)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:205)
		at reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnectionAllocator$PooledConnectionInitializer.onError(DefaultPooledConnectionProvider.java:593)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.secondError(MonoFlatMap.java:241)
		at reactor.core.publisher.MonoFlatMap$FlatMapInner.onError(MonoFlatMap.java:315)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:106)
		at reactor.core.publisher.Operators.error(Operators.java:198)
		at reactor.core.publisher.MonoError.subscribe(MonoError.java:53)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
		at reactor.netty.transport.TransportConnector$MonoChannelPromise.tryFailure(TransportConnector.java:576)
		at reactor.netty.transport.TransportConnector.lambda$doResolveAndConnect$11(TransportConnector.java:375)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:557)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
		at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:629)
		at io.netty.util.concurrent.DefaultPromise.setFailure(DefaultPromise.java:110)
		at io.netty.resolver.InetSocketAddressResolver$2.operationComplete(InetSocketAddressResolver.java:86)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:583)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:559)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
		at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:629)
		at io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:118)
		at io.netty.resolver.dns.DnsResolveContext.finishResolve(DnsResolveContext.java:1158)
		at io.netty.resolver.dns.DnsResolveContext.tryToFinishResolve(DnsResolveContext.java:1097)
		at io.netty.resolver.dns.DnsResolveContext.query(DnsResolveContext.java:455)
		at io.netty.resolver.dns.DnsResolveContext.onResponse(DnsResolveContext.java:686)
		at io.netty.resolver.dns.DnsResolveContext.access$500(DnsResolveContext.java:70)
		at io.netty.resolver.dns.DnsResolveContext$2.operationComplete(DnsResolveContext.java:513)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:583)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:559)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
		at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:625)
		at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:105)
		at io.netty.resolver.dns.DnsQueryContext.trySuccess(DnsQueryContext.java:308)
		at io.netty.resolver.dns.DnsQueryContext.finishSuccess(DnsQueryContext.java:299)
		at io.netty.resolver.dns.DnsNameResolver$DnsResponseHandler.channelRead(DnsNameResolver.java:1491)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioMessageChannel$NioMessageUnsafe.read(AbstractNioMessageChannel.java:97)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104)
		at reactor.core.publisher.Mono.block(Mono.java:1779)
		at com.citpl.common.gateway.commongateway.config.ValidationInterceptor.preHandle(ValidationInterceptor.java:70)
		at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:146)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1083)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
		at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:633)
		at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:411)
		at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:331)
		at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:268)
		at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:380)
		at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:208)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:151)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: java.net.UnknownHostException: Failed to resolve '$%257Bspring.cloud.gateway.mvc.routes.uri' [A(1)] after 2 queries 
	at io.netty.resolver.dns.DnsResolveContext.finishResolve(DnsResolveContext.java:1150)
	at io.netty.resolver.dns.DnsResolveContext.tryToFinishResolve(DnsResolveContext.java:1097)
	at io.netty.resolver.dns.DnsResolveContext.query(DnsResolveContext.java:455)
	at io.netty.resolver.dns.DnsResolveContext.onResponse(DnsResolveContext.java:686)
	at io.netty.resolver.dns.DnsResolveContext.access$500(DnsResolveContext.java:70)
	at io.netty.resolver.dns.DnsResolveContext$2.operationComplete(DnsResolveContext.java:513)
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:583)
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:559)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
	at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:625)
	at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:105)
	at io.netty.resolver.dns.DnsQueryContext.trySuccess(DnsQueryContext.java:308)
	at io.netty.resolver.dns.DnsQueryContext.finishSuccess(DnsQueryContext.java:299)
	at io.netty.resolver.dns.DnsNameResolver$DnsResponseHandler.channelRead(DnsNameResolver.java:1491)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioMessageChannel$NioMessageUnsafe.read(AbstractNioMessageChannel.java:97)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.netty.resolver.dns.DnsErrorCauseException: Query failed with NXDOMAIN
	at io.netty.resolver.dns.DnsResolveContext.onResponse(..)(Unknown Source)
2025-02-28 14:11:52 [] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-02-28 14:11:52 [] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-02-28 14:11:52 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 4 thread-local buffer(s) from thread: reactor-http-nio-3
2025-02-28 14:11:52 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 2 thread-local buffer(s) from thread: reactor-http-nio-1
2025-02-28 14:11:56 [] DEBUG org.jboss.logging - Logging Provider: org.jboss.logging.Slf4jLoggerProvider found via system property
2025-02-28 14:11:56 [] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final
2025-02-28 14:11:56 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-02-28 14:11:56 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-02-28 14:11:56 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-02-28 14:11:56 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-02-28 14:11:56 [] DEBUG o.h.v.i.e.r.TraversableResolvers - Cannot find jakarta.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2025-02-28 14:11:56 [] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-02-28 14:11:56 [] INFO  c.c.c.g.c.CommongatewayApplication - Starting CommongatewayApplication using Java 17.0.12 with PID 11536 (D:\WORKSPACE\API-GATEWAY\commongateway\target\classes started by CITPL in D:\WORKSPACE\API-GATEWAY)
2025-02-28 14:11:56 [] DEBUG c.c.c.g.c.CommongatewayApplication - Running with Spring Boot v3.4.2, Spring v6.2.2
2025-02-28 14:11:56 [] INFO  c.c.c.g.c.CommongatewayApplication - No active profile set, falling back to 1 default profile: "default"
2025-02-28 14:11:56 [] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-02-28 14:11:56 [] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-02-28 14:11:56 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-02-28 14:11:56 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-02-28 14:11:56 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-02-28 14:11:56 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-02-28 14:11:56 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-02-28 14:11:56 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-02-28 14:11:57 [] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=d2aee5ef-86a6-3b95-abd8-708d95e66676
2025-02-28 14:11:58 [] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-02-28 14:11:58 [] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-02-28 14:11:58 [] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-02-28 14:11:58 [] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.34]
2025-02-28 14:11:58 [] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-02-28 14:11:58 [] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1795 ms
2025-02-28 14:11:58 [] DEBUG i.n.u.i.l.InternalLoggerFactory - Using SLF4J as the default logging framework
2025-02-28 14:11:58 [] DEBUG i.n.util.internal.PlatformDependent0 - -Dio.netty.noUnsafe: false
2025-02-28 14:11:58 [] DEBUG i.n.util.internal.PlatformDependent0 - Java version: 17
2025-02-28 14:11:58 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe.theUnsafe: available
2025-02-28 14:11:58 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe base methods: all available
2025-02-28 14:11:58 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe.storeFence: available
2025-02-28 14:11:58 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.Buffer.address: available
2025-02-28 14:11:58 [] DEBUG i.n.util.internal.PlatformDependent0 - direct buffer constructor: unavailable: Reflective setAccessible(true) disabled
2025-02-28 14:11:58 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.Bits.unaligned: available, true
2025-02-28 14:11:58 [] DEBUG i.n.util.internal.PlatformDependent0 - jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable: class io.netty.util.internal.PlatformDependent0$7 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @3e77a1ed
2025-02-28 14:11:58 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.DirectByteBuffer.<init>(long, {int,long}): unavailable
2025-02-28 14:11:58 [] DEBUG i.n.util.internal.PlatformDependent - sun.misc.Unsafe: available
2025-02-28 14:11:58 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.tmpdir: C:\Users\CITPL\AppData\Local\Temp (java.io.tmpdir)
2025-02-28 14:11:58 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.bitMode: 64 (sun.arch.data.model)
2025-02-28 14:11:58 [] DEBUG i.n.util.internal.PlatformDependent - Platform: Windows
2025-02-28 14:11:58 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.maxDirectMemory: -1 bytes
2025-02-28 14:11:58 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.uninitializedArrayAllocationThreshold: -1
2025-02-28 14:11:58 [] DEBUG io.netty.util.internal.CleanerJava9 - java.nio.ByteBuffer.cleaner(): available
2025-02-28 14:11:58 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.noPreferDirect: false
2025-02-28 14:11:58 [] DEBUG reactor.util.Loggers - Using Slf4j logging framework
2025-02-28 14:11:59 [] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-02-28 14:11:59 [] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2025-02-28 14:11:59 [] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2025-02-28 14:11:59 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-02-28 14:11:59 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via user class loader
2025-02-28 14:11:59 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-02-28 14:11:59 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-02-28 14:11:59 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-02-28 14:11:59 [] DEBUG o.h.v.i.e.r.TraversableResolvers - Cannot find jakarta.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2025-02-28 14:11:59 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-02-28 14:11:59 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-02-28 14:11:59 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-02-28 14:11:59 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-02-28 14:11:59 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-02-28 14:11:59 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-02-28 14:11:59 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	c.c.c.g.c.c.HomeController:
	{GET [/home]}: get()
2025-02-28 14:11:59 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2025-02-28 14:11:59 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 'beanNameHandlerMapping' {}
2025-02-28 14:11:59 [] DEBUG _.s.w.s.HandlerMapping.Mappings - Mapped /validate/** -> ProxyExchangeHandlerFunction
/users/** -> ProxyExchangeHandlerFunction
2025-02-28 14:11:59 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2025-02-28 14:11:59 [] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-02-28 14:11:59 [] DEBUG i.n.u.i.InternalThreadLocalMap - -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2025-02-28 14:11:59 [] DEBUG i.n.u.i.InternalThreadLocalMap - -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2025-02-28 14:11:59 [] DEBUG io.netty.util.ResourceLeakDetector - -Dio.netty.leakDetection.level: simple
2025-02-28 14:11:59 [] DEBUG io.netty.util.ResourceLeakDetector - -Dio.netty.leakDetection.targetRecords: 4
2025-02-28 14:11:59 [] DEBUG i.n.handler.codec.compression.Brotli - brotli4j not in the classpath; Brotli support will be unavailable.
2025-02-28 14:11:59 [] DEBUG reactor.netty.tcp.TcpResources - [http] resources will use the default LoopResources: DefaultLoopResources {prefix=reactor-http, daemon=true, selectCount=12, workerCount=12}
2025-02-28 14:11:59 [] DEBUG reactor.netty.tcp.TcpResources - [http] resources will use the default ConnectionProvider: reactor.netty.resources.DefaultPooledConnectionProvider@67de5920
2025-02-28 14:11:59 [] DEBUG r.netty.resources.DefaultLoopIOUring - Default io_uring support : false
2025-02-28 14:11:59 [] DEBUG r.netty.resources.DefaultLoopEpoll - Default Epoll support : false
2025-02-28 14:11:59 [] DEBUG r.netty.resources.DefaultLoopKQueue - Default KQueue support : false
2025-02-28 14:11:59 [] DEBUG i.n.c.MultithreadEventLoopGroup - -Dio.netty.eventLoopThreads: 24
2025-02-28 14:11:59 [] DEBUG i.n.u.concurrent.GlobalEventExecutor - -Dio.netty.globalEventExecutor.quietPeriodSeconds: 1
2025-02-28 14:11:59 [] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.noKeySetOptimization: false
2025-02-28 14:11:59 [] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.selectorAutoRebuildThreshold: 512
2025-02-28 14:11:59 [] DEBUG i.n.util.internal.PlatformDependent - org.jctools-core.MpscChunkedArrayQueue: available
2025-02-28 14:11:59 [] DEBUG io.netty.util.NetUtil - -Djava.net.preferIPv4Stack: false
2025-02-28 14:11:59 [] DEBUG io.netty.util.NetUtil - -Djava.net.preferIPv6Addresses: false
2025-02-28 14:11:59 [] DEBUG i.netty.util.NetUtilInitializations - Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2025-02-28 14:11:59 [] DEBUG io.netty.util.NetUtil - Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2025-02-28 14:11:59 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default ResolvedAddressTypes: IPV4_ONLY
2025-02-28 14:11:59 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Localhost address: localhost/127.0.0.1
2025-02-28 14:11:59 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Windows hostname: DESKTOP-P307093
2025-02-28 14:11:59 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default search domains: []
2025-02-28 14:11:59 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default UnixResolverOptions{ndots=1, timeout=5, attempts=16}
2025-02-28 14:11:59 [] DEBUG i.n.r.DefaultHostsFileEntriesResolver - -Dio.netty.hostsFileRefreshInterval: 0
2025-02-28 14:11:59 [] DEBUG i.n.r.d.DefaultDnsServerAddressStreamProvider - Default DNS servers: [/8.8.8.8:53, /4.2.2.2:53] (sun.net.dns.ResolverConfiguration)
2025-02-28 14:11:59 [] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-02-28 14:11:59 [] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-02-28 14:12:00 [] INFO  c.c.c.g.c.CommongatewayApplication - Started CommongatewayApplication in 4.248 seconds (process running for 5.275)
2025-02-28 14:12:01 [] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-02-28 14:12:01 [] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-02-28 14:12:01 [] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-02-28 14:12:01 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 14:12:01 [1e37caf7-c50d-4030-a35f-7ee3b7cbb320] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 14:12:01 [1e37caf7-c50d-4030-a35f-7ee3b7cbb320] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /users
2025-02-28 14:12:01 [1e37caf7-c50d-4030-a35f-7ee3b7cbb320] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔄 Using HTTP Method: GET
2025-02-28 14:12:01 [1e37caf7-c50d-4030-a35f-7ee3b7cbb320] DEBUG r.n.r.PooledConnectionProvider - Creating a new [http] client pool [PoolFactory{evictionInterval=PT0S, leasingStrategy=fifo, maxConnections=500, maxIdleTime=-1, maxLifeTime=-1, metricsEnabled=false, pendingAcquireMaxCount=1000, pendingAcquireTimeout=45000}] for [localhost/<unresolved>:8081]
2025-02-28 14:12:01 [1e37caf7-c50d-4030-a35f-7ee3b7cbb320] DEBUG io.netty.channel.DefaultChannelId - -Dio.netty.processId: 11536 (auto-detected)
2025-02-28 14:12:01 [1e37caf7-c50d-4030-a35f-7ee3b7cbb320] DEBUG io.netty.channel.DefaultChannelId - -Dio.netty.machineId: 00:15:5d:ff:fe:02:b5:1f (auto-detected)
2025-02-28 14:12:01 [1e37caf7-c50d-4030-a35f-7ee3b7cbb320] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.numHeapArenas: 24
2025-02-28 14:12:01 [1e37caf7-c50d-4030-a35f-7ee3b7cbb320] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.numDirectArenas: 24
2025-02-28 14:12:01 [1e37caf7-c50d-4030-a35f-7ee3b7cbb320] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.pageSize: 8192
2025-02-28 14:12:01 [1e37caf7-c50d-4030-a35f-7ee3b7cbb320] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxOrder: 9
2025-02-28 14:12:01 [1e37caf7-c50d-4030-a35f-7ee3b7cbb320] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.chunkSize: 4194304
2025-02-28 14:12:01 [1e37caf7-c50d-4030-a35f-7ee3b7cbb320] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.smallCacheSize: 256
2025-02-28 14:12:01 [1e37caf7-c50d-4030-a35f-7ee3b7cbb320] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.normalCacheSize: 64
2025-02-28 14:12:01 [1e37caf7-c50d-4030-a35f-7ee3b7cbb320] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2025-02-28 14:12:01 [1e37caf7-c50d-4030-a35f-7ee3b7cbb320] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.cacheTrimInterval: 8192
2025-02-28 14:12:01 [1e37caf7-c50d-4030-a35f-7ee3b7cbb320] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.cacheTrimIntervalMillis: 0
2025-02-28 14:12:01 [1e37caf7-c50d-4030-a35f-7ee3b7cbb320] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.useCacheForAllThreads: false
2025-02-28 14:12:01 [1e37caf7-c50d-4030-a35f-7ee3b7cbb320] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
2025-02-28 14:12:01 [1e37caf7-c50d-4030-a35f-7ee3b7cbb320] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.disableCacheFinalizersForFastThreadLocalThreads: false
2025-02-28 14:12:01 [1e37caf7-c50d-4030-a35f-7ee3b7cbb320] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.allocator.type: pooled
2025-02-28 14:12:01 [1e37caf7-c50d-4030-a35f-7ee3b7cbb320] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.threadLocalDirectBufferSize: 0
2025-02-28 14:12:01 [1e37caf7-c50d-4030-a35f-7ee3b7cbb320] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.maxThreadLocalCharBufferSize: 16384
2025-02-28 14:12:01 [] DEBUG r.n.r.PooledConnectionProvider - [9d480f26] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 14:12:01 [] DEBUG io.netty.buffer.AbstractByteBuf - -Dio.netty.buffer.checkAccessible: true
2025-02-28 14:12:01 [] DEBUG io.netty.buffer.AbstractByteBuf - -Dio.netty.buffer.checkBounds: true
2025-02-28 14:12:01 [] DEBUG i.n.util.ResourceLeakDetectorFactory - Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@6388e6e1
2025-02-28 14:12:01 [] DEBUG r.netty.transport.TransportConfig - [9d480f26] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-28 14:12:01 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 14:12:01 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 14:12:01 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 14:12:01 [] DEBUG i.n.b.ChannelInitializerExtensions - -Dio.netty.bootstrap.extensions: null
2025-02-28 14:12:01 [] DEBUG r.netty.transport.TransportConnector - [9d480f26] Connecting to [localhost/127.0.0.1:8081].
2025-02-28 14:12:01 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [9d480f26, L:/127.0.0.1:59116 - R:localhost/127.0.0.1:8081] Registering pool release on close event for channel
2025-02-28 14:12:01 [] DEBUG r.n.r.PooledConnectionProvider - [9d480f26, L:/127.0.0.1:59116 - R:localhost/127.0.0.1:8081] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 14:12:01 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [9d480f26, L:/127.0.0.1:59116 - R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x9d480f26, L:/127.0.0.1:59116 - R:localhost/127.0.0.1:8081]}, [connected])
2025-02-28 14:12:01 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [9d480f26-1, L:/127.0.0.1:59116 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0x9d480f26, L:/127.0.0.1:59116 - R:localhost/127.0.0.1:8081]}}, [configured])
2025-02-28 14:12:01 [] DEBUG r.n.http.client.HttpClientConnect - [9d480f26-1, L:/127.0.0.1:59116 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate, method=GET}
2025-02-28 14:12:01 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [9d480f26-1, L:/127.0.0.1:59116 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x9d480f26, L:/127.0.0.1:59116 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 14:12:01 [] DEBUG r.n.http.client.HttpClientOperations - [9d480f26-1, L:/127.0.0.1:59116 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 14:12:01 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.maxCapacityPerThread: 4096
2025-02-28 14:12:01 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.ratio: 8
2025-02-28 14:12:01 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.chunkSize: 32
2025-02-28 14:12:01 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.blocking: false
2025-02-28 14:12:01 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.batchFastThreadLocalOnly: true
2025-02-28 14:12:01 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [9d480f26-1, L:/127.0.0.1:59116 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x9d480f26, L:/127.0.0.1:59116 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 14:12:01 [] DEBUG i.n.handler.codec.compression.Zstd - zstd-jni not in the classpath; Zstd support will be unavailable.
2025-02-28 14:12:01 [] DEBUG r.n.http.client.HttpClientOperations - [9d480f26-1, L:/127.0.0.1:59116 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 500 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
Connection: <filtered>
2025-02-28 14:12:01 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [9d480f26-1, L:/127.0.0.1:59116 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x9d480f26, L:/127.0.0.1:59116 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 14:12:02 [] DEBUG reactor.netty.channel.FluxReceive - [9d480f26-1, L:/127.0.0.1:59116 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-28 14:12:02 [] DEBUG r.n.http.client.HttpClientOperations - [9d480f26-1, L:/127.0.0.1:59116 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 14:12:02 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [9d480f26, L:/127.0.0.1:59116 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x9d480f26, L:/127.0.0.1:59116 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 14:12:02 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [9d480f26, L:/127.0.0.1:59116 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x9d480f26, L:/127.0.0.1:59116 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 14:12:02 [] DEBUG r.n.r.PooledConnectionProvider - [9d480f26, L:/127.0.0.1:59116 ! R:localhost/127.0.0.1:8081] Channel closed, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 14:12:02 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [9d480f26, L:/127.0.0.1:59116 ! R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x9d480f26, L:/127.0.0.1:59116 ! R:localhost/127.0.0.1:8081]}, [disconnecting])
2025-02-28 14:12:02 [1e37caf7-c50d-4030-a35f-7ee3b7cbb320] ERROR c.c.c.g.c.c.ValidationInterceptor - ⚠️ Error calling validation service
org.springframework.web.reactive.function.client.WebClientResponseException$InternalServerError: 500 Internal Server Error from GET http://localhost:8081/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 500 INTERNAL_SERVER_ERROR from GET http://localhost:8081/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104)
		at reactor.core.publisher.Mono.block(Mono.java:1779)
		at com.citpl.common.gateway.commongateway.config.ValidationInterceptor.preHandle(ValidationInterceptor.java:70)
		at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:146)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1083)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
		at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at com.citpl.common.gateway.commongateway.filter.MDCFilter.doFilter(MDCFilter.java:37)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.cloud.gateway.server.mvc.filter.WeightCalculatorFilter.doFilter(WeightCalculatorFilter.java:229)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.cloud.gateway.server.mvc.filter.FormFilter.doFilter(FormFilter.java:93)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-28 14:12:02 [] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /error
2025-02-28 14:12:02 [] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔄 Using HTTP Method: GET
2025-02-28 14:12:02 [] DEBUG r.n.r.PooledConnectionProvider - [c8937860] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 14:12:02 [] DEBUG r.netty.transport.TransportConfig - [c8937860] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-28 14:12:02 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 14:12:02 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 14:12:02 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 14:12:02 [] DEBUG r.netty.transport.TransportConnector - [c8937860] Connecting to [localhost/127.0.0.1:8081].
2025-02-28 14:12:02 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [c8937860, L:/127.0.0.1:59117 - R:localhost/127.0.0.1:8081] Registering pool release on close event for channel
2025-02-28 14:12:02 [] DEBUG r.n.r.PooledConnectionProvider - [c8937860, L:/127.0.0.1:59117 - R:localhost/127.0.0.1:8081] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 14:12:02 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [c8937860, L:/127.0.0.1:59117 - R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0xc8937860, L:/127.0.0.1:59117 - R:localhost/127.0.0.1:8081]}, [connected])
2025-02-28 14:12:02 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [c8937860-1, L:/127.0.0.1:59117 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0xc8937860, L:/127.0.0.1:59117 - R:localhost/127.0.0.1:8081]}}, [configured])
2025-02-28 14:12:02 [] DEBUG r.n.http.client.HttpClientConnect - [c8937860-1, L:/127.0.0.1:59117 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate, method=GET}
2025-02-28 14:12:02 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [c8937860-1, L:/127.0.0.1:59117 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xc8937860, L:/127.0.0.1:59117 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 14:12:02 [] DEBUG r.n.http.client.HttpClientOperations - [c8937860-1, L:/127.0.0.1:59117 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 14:12:02 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [c8937860-1, L:/127.0.0.1:59117 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xc8937860, L:/127.0.0.1:59117 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 14:12:02 [] DEBUG r.n.http.client.HttpClientOperations - [c8937860-1, L:/127.0.0.1:59117 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 500 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
Connection: <filtered>
2025-02-28 14:12:02 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [c8937860-1, L:/127.0.0.1:59117 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xc8937860, L:/127.0.0.1:59117 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 14:12:02 [] DEBUG reactor.netty.channel.FluxReceive - [c8937860-1, L:/127.0.0.1:59117 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-28 14:12:02 [] DEBUG r.n.http.client.HttpClientOperations - [c8937860-1, L:/127.0.0.1:59117 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 14:12:02 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [c8937860, L:/127.0.0.1:59117 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xc8937860, L:/127.0.0.1:59117 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 14:12:02 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [c8937860, L:/127.0.0.1:59117 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xc8937860, L:/127.0.0.1:59117 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 14:12:02 [] DEBUG r.n.r.PooledConnectionProvider - [c8937860, L:/127.0.0.1:59117 ! R:localhost/127.0.0.1:8081] Channel closed, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 14:12:02 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [c8937860, L:/127.0.0.1:59117 ! R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0xc8937860, L:/127.0.0.1:59117 ! R:localhost/127.0.0.1:8081]}, [disconnecting])
2025-02-28 14:12:02 [] ERROR c.c.c.g.c.c.ValidationInterceptor - ⚠️ Error calling validation service
org.springframework.web.reactive.function.client.WebClientResponseException$InternalServerError: 500 Internal Server Error from GET http://localhost:8081/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 500 INTERNAL_SERVER_ERROR from GET http://localhost:8081/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104)
		at reactor.core.publisher.Mono.block(Mono.java:1779)
		at com.citpl.common.gateway.commongateway.config.ValidationInterceptor.preHandle(ValidationInterceptor.java:70)
		at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:146)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1083)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
		at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:633)
		at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:411)
		at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:331)
		at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:268)
		at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:380)
		at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:208)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:151)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-28 14:12:34 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 14:12:34 [215162a2-db18-477d-9f08-926121919e80] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 14:12:34 [215162a2-db18-477d-9f08-926121919e80] DEBUG i.m.c.u.i.l.InternalLoggerFactory - Using SLF4J as the default logging framework
2025-02-28 14:12:34 [215162a2-db18-477d-9f08-926121919e80] DEBUG r.n.r.PooledConnectionProvider - Creating a new [http] client pool [PoolFactory{evictionInterval=PT0S, leasingStrategy=fifo, maxConnections=500, maxIdleTime=-1, maxLifeTime=-1, metricsEnabled=false, pendingAcquireMaxCount=1000, pendingAcquireTimeout=45000}] for [localhost/<unresolved>:8081]
2025-02-28 14:12:34 [] DEBUG r.n.r.PooledConnectionProvider - [a95c8638] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 14:12:34 [] DEBUG r.netty.transport.TransportConfig - [a95c8638] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-28 14:12:34 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 14:12:34 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 14:12:34 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 14:12:34 [] DEBUG r.netty.transport.TransportConnector - [a95c8638] Connecting to [localhost/127.0.0.1:8081].
2025-02-28 14:12:34 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [a95c8638, L:/127.0.0.1:59143 - R:localhost/127.0.0.1:8081] Registering pool release on close event for channel
2025-02-28 14:12:34 [] DEBUG r.n.r.PooledConnectionProvider - [a95c8638, L:/127.0.0.1:59143 - R:localhost/127.0.0.1:8081] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 14:12:34 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [a95c8638, L:/127.0.0.1:59143 - R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0xa95c8638, L:/127.0.0.1:59143 - R:localhost/127.0.0.1:8081]}, [connected])
2025-02-28 14:12:34 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [a95c8638-1, L:/127.0.0.1:59143 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0xa95c8638, L:/127.0.0.1:59143 - R:localhost/127.0.0.1:8081]}}, [configured])
2025-02-28 14:12:34 [] DEBUG r.n.http.client.HttpClientConnect - [a95c8638-1, L:/127.0.0.1:59143 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY, method=GET}
2025-02-28 14:12:34 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [a95c8638-1, L:/127.0.0.1:59143 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xa95c8638, L:/127.0.0.1:59143 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 14:12:34 [] DEBUG r.n.http.client.HttpClientOperations - [a95c8638-1, L:/127.0.0.1:59143 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 14:12:34 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [a95c8638-1, L:/127.0.0.1:59143 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xa95c8638, L:/127.0.0.1:59143 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 14:12:34 [] DEBUG r.n.http.client.HttpClientOperations - [a95c8638-1, L:/127.0.0.1:59143 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-28 14:12:34 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [a95c8638-1, L:/127.0.0.1:59143 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xa95c8638, L:/127.0.0.1:59143 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 14:12:34 [] DEBUG reactor.netty.channel.FluxReceive - [a95c8638-1, L:/127.0.0.1:59143 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=1, error=null]: subscribing inbound receiver
2025-02-28 14:12:34 [] DEBUG r.n.http.client.HttpClientOperations - [a95c8638-1, L:/127.0.0.1:59143 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 14:12:34 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [a95c8638, L:/127.0.0.1:59143 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xa95c8638, L:/127.0.0.1:59143 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 14:12:34 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [a95c8638, L:/127.0.0.1:59143 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xa95c8638, L:/127.0.0.1:59143 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 14:12:34 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [a95c8638, L:/127.0.0.1:59143 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-28 14:12:34 [] DEBUG r.n.r.PooledConnectionProvider - [a95c8638, L:/127.0.0.1:59143 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-28 14:12:39 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 14:12:39 [e0b312fd-31a7-4298-a39a-3a8812100774] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 14:12:39 [e0b312fd-31a7-4298-a39a-3a8812100774] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /users
2025-02-28 14:12:39 [e0b312fd-31a7-4298-a39a-3a8812100774] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔄 Using HTTP Method: GET
2025-02-28 14:12:39 [] DEBUG r.n.r.PooledConnectionProvider - [543d4abe] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 14:12:39 [] DEBUG r.netty.transport.TransportConfig - [543d4abe] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-28 14:12:39 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 14:12:39 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 14:12:39 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 14:12:39 [] DEBUG r.netty.transport.TransportConnector - [543d4abe] Connecting to [localhost/127.0.0.1:8081].
2025-02-28 14:12:39 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [543d4abe, L:/127.0.0.1:59152 - R:localhost/127.0.0.1:8081] Registering pool release on close event for channel
2025-02-28 14:12:39 [] DEBUG r.n.r.PooledConnectionProvider - [543d4abe, L:/127.0.0.1:59152 - R:localhost/127.0.0.1:8081] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 14:12:39 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [543d4abe, L:/127.0.0.1:59152 - R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x543d4abe, L:/127.0.0.1:59152 - R:localhost/127.0.0.1:8081]}, [connected])
2025-02-28 14:12:39 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [543d4abe-1, L:/127.0.0.1:59152 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0x543d4abe, L:/127.0.0.1:59152 - R:localhost/127.0.0.1:8081]}}, [configured])
2025-02-28 14:12:39 [] DEBUG r.n.http.client.HttpClientConnect - [543d4abe-1, L:/127.0.0.1:59152 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate, method=GET}
2025-02-28 14:12:39 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [543d4abe-1, L:/127.0.0.1:59152 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x543d4abe, L:/127.0.0.1:59152 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 14:12:39 [] DEBUG r.n.http.client.HttpClientOperations - [543d4abe-1, L:/127.0.0.1:59152 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 14:12:39 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [543d4abe-1, L:/127.0.0.1:59152 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x543d4abe, L:/127.0.0.1:59152 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 14:12:39 [] DEBUG r.n.http.client.HttpClientOperations - [543d4abe-1, L:/127.0.0.1:59152 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 500 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
Connection: <filtered>
2025-02-28 14:12:39 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [543d4abe-1, L:/127.0.0.1:59152 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x543d4abe, L:/127.0.0.1:59152 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 14:12:39 [] DEBUG reactor.netty.channel.FluxReceive - [543d4abe-1, L:/127.0.0.1:59152 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-28 14:12:39 [] DEBUG r.n.http.client.HttpClientOperations - [543d4abe-1, L:/127.0.0.1:59152 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 14:12:39 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [543d4abe, L:/127.0.0.1:59152 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x543d4abe, L:/127.0.0.1:59152 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 14:12:39 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [543d4abe, L:/127.0.0.1:59152 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x543d4abe, L:/127.0.0.1:59152 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 14:12:39 [] DEBUG r.n.r.PooledConnectionProvider - [543d4abe, L:/127.0.0.1:59152 ! R:localhost/127.0.0.1:8081] Channel closed, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 14:12:39 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [543d4abe, L:/127.0.0.1:59152 ! R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x543d4abe, L:/127.0.0.1:59152 ! R:localhost/127.0.0.1:8081]}, [disconnecting])
2025-02-28 14:12:39 [e0b312fd-31a7-4298-a39a-3a8812100774] ERROR c.c.c.g.c.c.ValidationInterceptor - ⚠️ Error calling validation service
org.springframework.web.reactive.function.client.WebClientResponseException$InternalServerError: 500 Internal Server Error from GET http://localhost:8081/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 500 INTERNAL_SERVER_ERROR from GET http://localhost:8081/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104)
		at reactor.core.publisher.Mono.block(Mono.java:1779)
		at com.citpl.common.gateway.commongateway.config.ValidationInterceptor.preHandle(ValidationInterceptor.java:70)
		at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:146)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1083)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
		at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at com.citpl.common.gateway.commongateway.filter.MDCFilter.doFilter(MDCFilter.java:37)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.cloud.gateway.server.mvc.filter.WeightCalculatorFilter.doFilter(WeightCalculatorFilter.java:229)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.cloud.gateway.server.mvc.filter.FormFilter.doFilter(FormFilter.java:93)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-28 14:12:39 [] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /error
2025-02-28 14:12:39 [] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔄 Using HTTP Method: GET
2025-02-28 14:12:39 [] DEBUG r.n.r.PooledConnectionProvider - [8643d2f0] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 14:12:39 [] DEBUG r.netty.transport.TransportConfig - [8643d2f0] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-28 14:12:39 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 14:12:39 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 14:12:39 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 14:12:39 [] DEBUG r.netty.transport.TransportConnector - [8643d2f0] Connecting to [localhost/127.0.0.1:8081].
2025-02-28 14:12:39 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [8643d2f0, L:/127.0.0.1:59153 - R:localhost/127.0.0.1:8081] Registering pool release on close event for channel
2025-02-28 14:12:39 [] DEBUG r.n.r.PooledConnectionProvider - [8643d2f0, L:/127.0.0.1:59153 - R:localhost/127.0.0.1:8081] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 14:12:39 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [8643d2f0, L:/127.0.0.1:59153 - R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x8643d2f0, L:/127.0.0.1:59153 - R:localhost/127.0.0.1:8081]}, [connected])
2025-02-28 14:12:39 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [8643d2f0-1, L:/127.0.0.1:59153 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0x8643d2f0, L:/127.0.0.1:59153 - R:localhost/127.0.0.1:8081]}}, [configured])
2025-02-28 14:12:39 [] DEBUG r.n.http.client.HttpClientConnect - [8643d2f0-1, L:/127.0.0.1:59153 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate, method=GET}
2025-02-28 14:12:39 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [8643d2f0-1, L:/127.0.0.1:59153 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x8643d2f0, L:/127.0.0.1:59153 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 14:12:39 [] DEBUG r.n.http.client.HttpClientOperations - [8643d2f0-1, L:/127.0.0.1:59153 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 14:12:39 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [8643d2f0-1, L:/127.0.0.1:59153 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x8643d2f0, L:/127.0.0.1:59153 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 14:12:39 [] DEBUG r.n.http.client.HttpClientOperations - [8643d2f0-1, L:/127.0.0.1:59153 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 500 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
Connection: <filtered>
2025-02-28 14:12:39 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [8643d2f0-1, L:/127.0.0.1:59153 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x8643d2f0, L:/127.0.0.1:59153 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 14:12:39 [] DEBUG reactor.netty.channel.FluxReceive - [8643d2f0-1, L:/127.0.0.1:59153 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-28 14:12:39 [] DEBUG r.n.http.client.HttpClientOperations - [8643d2f0-1, L:/127.0.0.1:59153 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 14:12:39 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [8643d2f0, L:/127.0.0.1:59153 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x8643d2f0, L:/127.0.0.1:59153 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 14:12:39 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [8643d2f0, L:/127.0.0.1:59153 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x8643d2f0, L:/127.0.0.1:59153 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 14:12:39 [] ERROR c.c.c.g.c.c.ValidationInterceptor - ⚠️ Error calling validation service
org.springframework.web.reactive.function.client.WebClientResponseException$InternalServerError: 500 Internal Server Error from GET http://localhost:8081/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 500 INTERNAL_SERVER_ERROR from GET http://localhost:8081/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104)
		at reactor.core.publisher.Mono.block(Mono.java:1779)
		at com.citpl.common.gateway.commongateway.config.ValidationInterceptor.preHandle(ValidationInterceptor.java:70)
		at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:146)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1083)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
		at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:633)
		at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:411)
		at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:331)
		at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:268)
		at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:380)
		at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:208)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:151)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-28 14:12:39 [] DEBUG r.n.r.PooledConnectionProvider - [8643d2f0, L:/127.0.0.1:59153 ! R:localhost/127.0.0.1:8081] Channel closed, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 14:12:39 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [8643d2f0, L:/127.0.0.1:59153 ! R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x8643d2f0, L:/127.0.0.1:59153 ! R:localhost/127.0.0.1:8081]}, [disconnecting])
2025-02-28 14:13:09 [] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-02-28 14:13:09 [] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-02-28 14:13:09 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [a95c8638, L:/127.0.0.1:59143 ! R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0xa95c8638, L:/127.0.0.1:59143 ! R:localhost/127.0.0.1:8081]}, [disconnecting])
2025-02-28 14:13:09 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 3 thread-local buffer(s) from thread: reactor-http-nio-3
2025-02-28 14:13:09 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 3 thread-local buffer(s) from thread: reactor-http-nio-7
2025-02-28 14:13:09 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 4 thread-local buffer(s) from thread: reactor-http-nio-6
2025-02-28 14:13:09 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 5 thread-local buffer(s) from thread: reactor-http-nio-5
2025-02-28 14:13:09 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 3 thread-local buffer(s) from thread: reactor-http-nio-2
2025-02-28 14:13:12 [] DEBUG org.jboss.logging - Logging Provider: org.jboss.logging.Slf4jLoggerProvider found via system property
2025-02-28 14:13:12 [] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final
2025-02-28 14:13:12 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-02-28 14:13:12 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-02-28 14:13:12 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-02-28 14:13:12 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-02-28 14:13:12 [] DEBUG o.h.v.i.e.r.TraversableResolvers - Cannot find jakarta.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2025-02-28 14:13:12 [] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-02-28 14:13:12 [] INFO  c.c.c.g.c.CommongatewayApplication - Starting CommongatewayApplication using Java 17.0.12 with PID 13960 (D:\WORKSPACE\API-GATEWAY\commongateway\target\classes started by CITPL in D:\WORKSPACE\API-GATEWAY)
2025-02-28 14:13:12 [] DEBUG c.c.c.g.c.CommongatewayApplication - Running with Spring Boot v3.4.2, Spring v6.2.2
2025-02-28 14:13:12 [] INFO  c.c.c.g.c.CommongatewayApplication - No active profile set, falling back to 1 default profile: "default"
2025-02-28 14:13:12 [] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-02-28 14:13:12 [] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-02-28 14:13:12 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-02-28 14:13:12 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-02-28 14:13:12 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-02-28 14:13:12 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-02-28 14:13:12 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-02-28 14:13:12 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-02-28 14:13:13 [] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=d2aee5ef-86a6-3b95-abd8-708d95e66676
2025-02-28 14:13:14 [] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-02-28 14:13:14 [] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-02-28 14:13:14 [] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-02-28 14:13:14 [] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.34]
2025-02-28 14:13:14 [] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-02-28 14:13:14 [] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1949 ms
2025-02-28 14:13:14 [] DEBUG i.n.u.i.l.InternalLoggerFactory - Using SLF4J as the default logging framework
2025-02-28 14:13:14 [] DEBUG i.n.util.internal.PlatformDependent0 - -Dio.netty.noUnsafe: false
2025-02-28 14:13:14 [] DEBUG i.n.util.internal.PlatformDependent0 - Java version: 17
2025-02-28 14:13:14 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe.theUnsafe: available
2025-02-28 14:13:14 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe base methods: all available
2025-02-28 14:13:14 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe.storeFence: available
2025-02-28 14:13:14 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.Buffer.address: available
2025-02-28 14:13:14 [] DEBUG i.n.util.internal.PlatformDependent0 - direct buffer constructor: unavailable: Reflective setAccessible(true) disabled
2025-02-28 14:13:14 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.Bits.unaligned: available, true
2025-02-28 14:13:14 [] DEBUG i.n.util.internal.PlatformDependent0 - jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable: class io.netty.util.internal.PlatformDependent0$7 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @3e77a1ed
2025-02-28 14:13:14 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.DirectByteBuffer.<init>(long, {int,long}): unavailable
2025-02-28 14:13:14 [] DEBUG i.n.util.internal.PlatformDependent - sun.misc.Unsafe: available
2025-02-28 14:13:14 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.tmpdir: C:\Users\CITPL\AppData\Local\Temp (java.io.tmpdir)
2025-02-28 14:13:14 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.bitMode: 64 (sun.arch.data.model)
2025-02-28 14:13:14 [] DEBUG i.n.util.internal.PlatformDependent - Platform: Windows
2025-02-28 14:13:14 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.maxDirectMemory: -1 bytes
2025-02-28 14:13:14 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.uninitializedArrayAllocationThreshold: -1
2025-02-28 14:13:14 [] DEBUG io.netty.util.internal.CleanerJava9 - java.nio.ByteBuffer.cleaner(): available
2025-02-28 14:13:14 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.noPreferDirect: false
2025-02-28 14:13:14 [] DEBUG reactor.util.Loggers - Using Slf4j logging framework
2025-02-28 14:13:14 [] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-02-28 14:13:14 [] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2025-02-28 14:13:14 [] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2025-02-28 14:13:14 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-02-28 14:13:14 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via user class loader
2025-02-28 14:13:14 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-02-28 14:13:14 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-02-28 14:13:14 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-02-28 14:13:14 [] DEBUG o.h.v.i.e.r.TraversableResolvers - Cannot find jakarta.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2025-02-28 14:13:14 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-02-28 14:13:14 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-02-28 14:13:14 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-02-28 14:13:14 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-02-28 14:13:14 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-02-28 14:13:14 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-02-28 14:13:14 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	c.c.c.g.c.c.HomeController:
	{GET [/home]}: get()
2025-02-28 14:13:14 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2025-02-28 14:13:14 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 'beanNameHandlerMapping' {}
2025-02-28 14:13:14 [] DEBUG _.s.w.s.HandlerMapping.Mappings - Mapped /validate/** -> ProxyExchangeHandlerFunction
/users/** -> ProxyExchangeHandlerFunction
2025-02-28 14:13:14 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2025-02-28 14:13:15 [] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-02-28 14:13:15 [] DEBUG i.n.u.i.InternalThreadLocalMap - -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2025-02-28 14:13:15 [] DEBUG i.n.u.i.InternalThreadLocalMap - -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2025-02-28 14:13:15 [] DEBUG io.netty.util.ResourceLeakDetector - -Dio.netty.leakDetection.level: simple
2025-02-28 14:13:15 [] DEBUG io.netty.util.ResourceLeakDetector - -Dio.netty.leakDetection.targetRecords: 4
2025-02-28 14:13:15 [] DEBUG i.n.handler.codec.compression.Brotli - brotli4j not in the classpath; Brotli support will be unavailable.
2025-02-28 14:13:15 [] DEBUG reactor.netty.tcp.TcpResources - [http] resources will use the default LoopResources: DefaultLoopResources {prefix=reactor-http, daemon=true, selectCount=12, workerCount=12}
2025-02-28 14:13:15 [] DEBUG reactor.netty.tcp.TcpResources - [http] resources will use the default ConnectionProvider: reactor.netty.resources.DefaultPooledConnectionProvider@7d15dffa
2025-02-28 14:13:15 [] DEBUG r.netty.resources.DefaultLoopIOUring - Default io_uring support : false
2025-02-28 14:13:15 [] DEBUG r.netty.resources.DefaultLoopEpoll - Default Epoll support : false
2025-02-28 14:13:15 [] DEBUG r.netty.resources.DefaultLoopKQueue - Default KQueue support : false
2025-02-28 14:13:15 [] DEBUG i.n.c.MultithreadEventLoopGroup - -Dio.netty.eventLoopThreads: 24
2025-02-28 14:13:15 [] DEBUG i.n.u.concurrent.GlobalEventExecutor - -Dio.netty.globalEventExecutor.quietPeriodSeconds: 1
2025-02-28 14:13:15 [] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.noKeySetOptimization: false
2025-02-28 14:13:15 [] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.selectorAutoRebuildThreshold: 512
2025-02-28 14:13:15 [] DEBUG i.n.util.internal.PlatformDependent - org.jctools-core.MpscChunkedArrayQueue: available
2025-02-28 14:13:15 [] DEBUG io.netty.util.NetUtil - -Djava.net.preferIPv4Stack: false
2025-02-28 14:13:15 [] DEBUG io.netty.util.NetUtil - -Djava.net.preferIPv6Addresses: false
2025-02-28 14:13:15 [] DEBUG i.netty.util.NetUtilInitializations - Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2025-02-28 14:13:15 [] DEBUG io.netty.util.NetUtil - Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2025-02-28 14:13:15 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default ResolvedAddressTypes: IPV4_ONLY
2025-02-28 14:13:15 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Localhost address: localhost/127.0.0.1
2025-02-28 14:13:15 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Windows hostname: DESKTOP-P307093
2025-02-28 14:13:15 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default search domains: []
2025-02-28 14:13:15 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default UnixResolverOptions{ndots=1, timeout=5, attempts=16}
2025-02-28 14:13:15 [] DEBUG i.n.r.DefaultHostsFileEntriesResolver - -Dio.netty.hostsFileRefreshInterval: 0
2025-02-28 14:13:15 [] DEBUG i.n.r.d.DefaultDnsServerAddressStreamProvider - Default DNS servers: [/8.8.8.8:53, /4.2.2.2:53] (sun.net.dns.ResolverConfiguration)
2025-02-28 14:13:15 [] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-02-28 14:13:15 [] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-02-28 14:13:15 [] INFO  c.c.c.g.c.CommongatewayApplication - Started CommongatewayApplication in 4.206 seconds (process running for 5.217)
2025-02-28 14:13:18 [] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-02-28 14:13:18 [] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-02-28 14:13:18 [] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-02-28 14:13:18 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 14:13:18 [c369338f-3358-4619-9890-d4507969fe17] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 14:13:18 [c369338f-3358-4619-9890-d4507969fe17] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /users
2025-02-28 14:13:18 [c369338f-3358-4619-9890-d4507969fe17] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔄 Using HTTP Method: GET
2025-02-28 14:13:18 [c369338f-3358-4619-9890-d4507969fe17] DEBUG r.n.r.PooledConnectionProvider - Creating a new [http] client pool [PoolFactory{evictionInterval=PT0S, leasingStrategy=fifo, maxConnections=500, maxIdleTime=-1, maxLifeTime=-1, metricsEnabled=false, pendingAcquireMaxCount=1000, pendingAcquireTimeout=45000}] for [localhost/<unresolved>:8081]
2025-02-28 14:13:18 [c369338f-3358-4619-9890-d4507969fe17] DEBUG io.netty.channel.DefaultChannelId - -Dio.netty.processId: 13960 (auto-detected)
2025-02-28 14:13:19 [c369338f-3358-4619-9890-d4507969fe17] DEBUG io.netty.channel.DefaultChannelId - -Dio.netty.machineId: 00:15:5d:ff:fe:02:b5:1f (auto-detected)
2025-02-28 14:13:19 [c369338f-3358-4619-9890-d4507969fe17] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.numHeapArenas: 24
2025-02-28 14:13:19 [c369338f-3358-4619-9890-d4507969fe17] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.numDirectArenas: 24
2025-02-28 14:13:19 [c369338f-3358-4619-9890-d4507969fe17] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.pageSize: 8192
2025-02-28 14:13:19 [c369338f-3358-4619-9890-d4507969fe17] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxOrder: 9
2025-02-28 14:13:19 [c369338f-3358-4619-9890-d4507969fe17] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.chunkSize: 4194304
2025-02-28 14:13:19 [c369338f-3358-4619-9890-d4507969fe17] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.smallCacheSize: 256
2025-02-28 14:13:19 [c369338f-3358-4619-9890-d4507969fe17] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.normalCacheSize: 64
2025-02-28 14:13:19 [c369338f-3358-4619-9890-d4507969fe17] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2025-02-28 14:13:19 [c369338f-3358-4619-9890-d4507969fe17] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.cacheTrimInterval: 8192
2025-02-28 14:13:19 [c369338f-3358-4619-9890-d4507969fe17] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.cacheTrimIntervalMillis: 0
2025-02-28 14:13:19 [c369338f-3358-4619-9890-d4507969fe17] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.useCacheForAllThreads: false
2025-02-28 14:13:19 [c369338f-3358-4619-9890-d4507969fe17] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
2025-02-28 14:13:19 [c369338f-3358-4619-9890-d4507969fe17] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.disableCacheFinalizersForFastThreadLocalThreads: false
2025-02-28 14:13:19 [c369338f-3358-4619-9890-d4507969fe17] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.allocator.type: pooled
2025-02-28 14:13:19 [c369338f-3358-4619-9890-d4507969fe17] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.threadLocalDirectBufferSize: 0
2025-02-28 14:13:19 [c369338f-3358-4619-9890-d4507969fe17] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.maxThreadLocalCharBufferSize: 16384
2025-02-28 14:13:19 [] DEBUG r.n.r.PooledConnectionProvider - [572ce750] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 14:13:19 [] DEBUG io.netty.buffer.AbstractByteBuf - -Dio.netty.buffer.checkAccessible: true
2025-02-28 14:13:19 [] DEBUG io.netty.buffer.AbstractByteBuf - -Dio.netty.buffer.checkBounds: true
2025-02-28 14:13:19 [] DEBUG i.n.util.ResourceLeakDetectorFactory - Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@1eba7d81
2025-02-28 14:13:19 [] DEBUG r.netty.transport.TransportConfig - [572ce750] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-28 14:13:19 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 14:13:19 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 14:13:19 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 14:13:19 [] DEBUG i.n.b.ChannelInitializerExtensions - -Dio.netty.bootstrap.extensions: null
2025-02-28 14:13:19 [] DEBUG r.netty.transport.TransportConnector - [572ce750] Connecting to [localhost/127.0.0.1:8081].
2025-02-28 14:13:19 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [572ce750, L:/127.0.0.1:59173 - R:localhost/127.0.0.1:8081] Registering pool release on close event for channel
2025-02-28 14:13:19 [] DEBUG r.n.r.PooledConnectionProvider - [572ce750, L:/127.0.0.1:59173 - R:localhost/127.0.0.1:8081] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 14:13:19 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [572ce750, L:/127.0.0.1:59173 - R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x572ce750, L:/127.0.0.1:59173 - R:localhost/127.0.0.1:8081]}, [connected])
2025-02-28 14:13:19 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [572ce750-1, L:/127.0.0.1:59173 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0x572ce750, L:/127.0.0.1:59173 - R:localhost/127.0.0.1:8081]}}, [configured])
2025-02-28 14:13:19 [] DEBUG r.n.http.client.HttpClientConnect - [572ce750-1, L:/127.0.0.1:59173 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/, method=GET}
2025-02-28 14:13:19 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [572ce750-1, L:/127.0.0.1:59173 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0x572ce750, L:/127.0.0.1:59173 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 14:13:19 [] DEBUG r.n.http.client.HttpClientOperations - [572ce750-1, L:/127.0.0.1:59173 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 14:13:19 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.maxCapacityPerThread: 4096
2025-02-28 14:13:19 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.ratio: 8
2025-02-28 14:13:19 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.chunkSize: 32
2025-02-28 14:13:19 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.blocking: false
2025-02-28 14:13:19 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.batchFastThreadLocalOnly: true
2025-02-28 14:13:19 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [572ce750-1, L:/127.0.0.1:59173 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0x572ce750, L:/127.0.0.1:59173 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 14:13:19 [] DEBUG i.n.handler.codec.compression.Zstd - zstd-jni not in the classpath; Zstd support will be unavailable.
2025-02-28 14:13:19 [] DEBUG r.n.http.client.HttpClientOperations - [572ce750-1, L:/127.0.0.1:59173 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 500 
Vary: <filtered>
Vary: <filtered>
Vary: <filtered>
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
Connection: <filtered>
2025-02-28 14:13:19 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [572ce750-1, L:/127.0.0.1:59173 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0x572ce750, L:/127.0.0.1:59173 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 14:13:19 [] DEBUG reactor.netty.channel.FluxReceive - [572ce750-1, L:/127.0.0.1:59173 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-28 14:13:19 [] DEBUG r.n.http.client.HttpClientOperations - [572ce750-1, L:/127.0.0.1:59173 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 14:13:19 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [572ce750, L:/127.0.0.1:59173 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0x572ce750, L:/127.0.0.1:59173 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 14:13:19 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [572ce750, L:/127.0.0.1:59173 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0x572ce750, L:/127.0.0.1:59173 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 14:13:19 [] DEBUG r.n.r.PooledConnectionProvider - [572ce750, L:/127.0.0.1:59173 ! R:localhost/127.0.0.1:8081] Channel closed, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 14:13:19 [c369338f-3358-4619-9890-d4507969fe17] ERROR c.c.c.g.c.c.ValidationInterceptor - ⚠️ Error calling validation service
org.springframework.web.reactive.function.client.WebClientResponseException$InternalServerError: 500 Internal Server Error from GET http://localhost:8081
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 500 INTERNAL_SERVER_ERROR from GET http://localhost:8081 [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104)
		at reactor.core.publisher.Mono.block(Mono.java:1779)
		at com.citpl.common.gateway.commongateway.config.ValidationInterceptor.preHandle(ValidationInterceptor.java:70)
		at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:146)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1083)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
		at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at com.citpl.common.gateway.commongateway.filter.MDCFilter.doFilter(MDCFilter.java:37)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.cloud.gateway.server.mvc.filter.WeightCalculatorFilter.doFilter(WeightCalculatorFilter.java:229)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.cloud.gateway.server.mvc.filter.FormFilter.doFilter(FormFilter.java:93)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-28 14:13:19 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [572ce750, L:/127.0.0.1:59173 ! R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x572ce750, L:/127.0.0.1:59173 ! R:localhost/127.0.0.1:8081]}, [disconnecting])
2025-02-28 14:13:19 [] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /error
2025-02-28 14:13:19 [] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔄 Using HTTP Method: GET
2025-02-28 14:13:19 [] DEBUG r.n.r.PooledConnectionProvider - [d82b7e8d] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 14:13:19 [] DEBUG r.netty.transport.TransportConfig - [d82b7e8d] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-28 14:13:19 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 14:13:19 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 14:13:19 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 14:13:19 [] DEBUG r.netty.transport.TransportConnector - [d82b7e8d] Connecting to [localhost/127.0.0.1:8081].
2025-02-28 14:13:19 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [d82b7e8d, L:/127.0.0.1:59174 - R:localhost/127.0.0.1:8081] Registering pool release on close event for channel
2025-02-28 14:13:19 [] DEBUG r.n.r.PooledConnectionProvider - [d82b7e8d, L:/127.0.0.1:59174 - R:localhost/127.0.0.1:8081] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 14:13:19 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [d82b7e8d, L:/127.0.0.1:59174 - R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0xd82b7e8d, L:/127.0.0.1:59174 - R:localhost/127.0.0.1:8081]}, [connected])
2025-02-28 14:13:19 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [d82b7e8d-1, L:/127.0.0.1:59174 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0xd82b7e8d, L:/127.0.0.1:59174 - R:localhost/127.0.0.1:8081]}}, [configured])
2025-02-28 14:13:19 [] DEBUG r.n.http.client.HttpClientConnect - [d82b7e8d-1, L:/127.0.0.1:59174 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/, method=GET}
2025-02-28 14:13:19 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [d82b7e8d-1, L:/127.0.0.1:59174 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0xd82b7e8d, L:/127.0.0.1:59174 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 14:13:19 [] DEBUG r.n.http.client.HttpClientOperations - [d82b7e8d-1, L:/127.0.0.1:59174 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 14:13:19 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [d82b7e8d-1, L:/127.0.0.1:59174 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0xd82b7e8d, L:/127.0.0.1:59174 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 14:13:19 [] DEBUG r.n.http.client.HttpClientOperations - [d82b7e8d-1, L:/127.0.0.1:59174 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 500 
Vary: <filtered>
Vary: <filtered>
Vary: <filtered>
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
Connection: <filtered>
2025-02-28 14:13:19 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [d82b7e8d-1, L:/127.0.0.1:59174 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0xd82b7e8d, L:/127.0.0.1:59174 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 14:13:19 [] DEBUG reactor.netty.channel.FluxReceive - [d82b7e8d-1, L:/127.0.0.1:59174 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-28 14:13:19 [] DEBUG r.n.http.client.HttpClientOperations - [d82b7e8d-1, L:/127.0.0.1:59174 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 14:13:19 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [d82b7e8d, L:/127.0.0.1:59174 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0xd82b7e8d, L:/127.0.0.1:59174 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 14:13:19 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [d82b7e8d, L:/127.0.0.1:59174 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0xd82b7e8d, L:/127.0.0.1:59174 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 14:13:19 [] DEBUG r.n.r.PooledConnectionProvider - [d82b7e8d, L:/127.0.0.1:59174 ! R:localhost/127.0.0.1:8081] Channel closed, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 14:13:19 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [d82b7e8d, L:/127.0.0.1:59174 ! R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0xd82b7e8d, L:/127.0.0.1:59174 ! R:localhost/127.0.0.1:8081]}, [disconnecting])
2025-02-28 14:13:19 [] ERROR c.c.c.g.c.c.ValidationInterceptor - ⚠️ Error calling validation service
org.springframework.web.reactive.function.client.WebClientResponseException$InternalServerError: 500 Internal Server Error from GET http://localhost:8081
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 500 INTERNAL_SERVER_ERROR from GET http://localhost:8081 [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104)
		at reactor.core.publisher.Mono.block(Mono.java:1779)
		at com.citpl.common.gateway.commongateway.config.ValidationInterceptor.preHandle(ValidationInterceptor.java:70)
		at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:146)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1083)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
		at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:633)
		at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:411)
		at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:331)
		at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:268)
		at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:380)
		at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:208)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:151)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-28 14:13:49 [] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-02-28 14:13:49 [] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-02-28 14:13:49 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 4 thread-local buffer(s) from thread: reactor-http-nio-3
2025-02-28 14:13:49 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 3 thread-local buffer(s) from thread: reactor-http-nio-2
2025-02-28 14:13:52 [] DEBUG org.jboss.logging - Logging Provider: org.jboss.logging.Slf4jLoggerProvider found via system property
2025-02-28 14:13:52 [] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final
2025-02-28 14:13:52 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-02-28 14:13:52 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-02-28 14:13:52 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-02-28 14:13:52 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-02-28 14:13:52 [] DEBUG o.h.v.i.e.r.TraversableResolvers - Cannot find jakarta.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2025-02-28 14:13:52 [] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-02-28 14:13:52 [] INFO  c.c.c.g.c.CommongatewayApplication - Starting CommongatewayApplication using Java 17.0.12 with PID 9304 (D:\WORKSPACE\API-GATEWAY\commongateway\target\classes started by CITPL in D:\WORKSPACE\API-GATEWAY)
2025-02-28 14:13:52 [] DEBUG c.c.c.g.c.CommongatewayApplication - Running with Spring Boot v3.4.2, Spring v6.2.2
2025-02-28 14:13:52 [] INFO  c.c.c.g.c.CommongatewayApplication - No active profile set, falling back to 1 default profile: "default"
2025-02-28 14:13:52 [] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-02-28 14:13:52 [] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-02-28 14:13:52 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-02-28 14:13:52 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-02-28 14:13:52 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-02-28 14:13:52 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-02-28 14:13:52 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-02-28 14:13:52 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-02-28 14:13:53 [] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=d2aee5ef-86a6-3b95-abd8-708d95e66676
2025-02-28 14:13:54 [] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-02-28 14:13:54 [] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-02-28 14:13:54 [] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-02-28 14:13:54 [] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.34]
2025-02-28 14:13:54 [] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-02-28 14:13:54 [] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1739 ms
2025-02-28 14:13:54 [] DEBUG i.n.u.i.l.InternalLoggerFactory - Using SLF4J as the default logging framework
2025-02-28 14:13:54 [] DEBUG i.n.util.internal.PlatformDependent0 - -Dio.netty.noUnsafe: false
2025-02-28 14:13:54 [] DEBUG i.n.util.internal.PlatformDependent0 - Java version: 17
2025-02-28 14:13:54 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe.theUnsafe: available
2025-02-28 14:13:54 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe base methods: all available
2025-02-28 14:13:54 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe.storeFence: available
2025-02-28 14:13:54 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.Buffer.address: available
2025-02-28 14:13:54 [] DEBUG i.n.util.internal.PlatformDependent0 - direct buffer constructor: unavailable: Reflective setAccessible(true) disabled
2025-02-28 14:13:54 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.Bits.unaligned: available, true
2025-02-28 14:13:54 [] DEBUG i.n.util.internal.PlatformDependent0 - jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable: class io.netty.util.internal.PlatformDependent0$7 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @3e77a1ed
2025-02-28 14:13:54 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.DirectByteBuffer.<init>(long, {int,long}): unavailable
2025-02-28 14:13:54 [] DEBUG i.n.util.internal.PlatformDependent - sun.misc.Unsafe: available
2025-02-28 14:13:54 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.tmpdir: C:\Users\CITPL\AppData\Local\Temp (java.io.tmpdir)
2025-02-28 14:13:54 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.bitMode: 64 (sun.arch.data.model)
2025-02-28 14:13:54 [] DEBUG i.n.util.internal.PlatformDependent - Platform: Windows
2025-02-28 14:13:54 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.maxDirectMemory: -1 bytes
2025-02-28 14:13:54 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.uninitializedArrayAllocationThreshold: -1
2025-02-28 14:13:54 [] DEBUG io.netty.util.internal.CleanerJava9 - java.nio.ByteBuffer.cleaner(): available
2025-02-28 14:13:54 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.noPreferDirect: false
2025-02-28 14:13:54 [] DEBUG reactor.util.Loggers - Using Slf4j logging framework
2025-02-28 14:13:55 [] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-02-28 14:13:55 [] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2025-02-28 14:13:55 [] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2025-02-28 14:13:55 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-02-28 14:13:55 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via user class loader
2025-02-28 14:13:55 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-02-28 14:13:55 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-02-28 14:13:55 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-02-28 14:13:55 [] DEBUG o.h.v.i.e.r.TraversableResolvers - Cannot find jakarta.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2025-02-28 14:13:55 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-02-28 14:13:55 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-02-28 14:13:55 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-02-28 14:13:55 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-02-28 14:13:55 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-02-28 14:13:55 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-02-28 14:13:55 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	c.c.c.g.c.c.HomeController:
	{GET [/home]}: get()
2025-02-28 14:13:55 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2025-02-28 14:13:55 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 'beanNameHandlerMapping' {}
2025-02-28 14:13:55 [] DEBUG _.s.w.s.HandlerMapping.Mappings - Mapped /validate/** -> ProxyExchangeHandlerFunction
/users/** -> ProxyExchangeHandlerFunction
2025-02-28 14:13:55 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2025-02-28 14:13:55 [] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-02-28 14:13:55 [] DEBUG i.n.u.i.InternalThreadLocalMap - -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2025-02-28 14:13:55 [] DEBUG i.n.u.i.InternalThreadLocalMap - -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2025-02-28 14:13:55 [] DEBUG io.netty.util.ResourceLeakDetector - -Dio.netty.leakDetection.level: simple
2025-02-28 14:13:55 [] DEBUG io.netty.util.ResourceLeakDetector - -Dio.netty.leakDetection.targetRecords: 4
2025-02-28 14:13:55 [] DEBUG i.n.handler.codec.compression.Brotli - brotli4j not in the classpath; Brotli support will be unavailable.
2025-02-28 14:13:55 [] DEBUG reactor.netty.tcp.TcpResources - [http] resources will use the default LoopResources: DefaultLoopResources {prefix=reactor-http, daemon=true, selectCount=12, workerCount=12}
2025-02-28 14:13:55 [] DEBUG reactor.netty.tcp.TcpResources - [http] resources will use the default ConnectionProvider: reactor.netty.resources.DefaultPooledConnectionProvider@119deebd
2025-02-28 14:13:55 [] DEBUG r.netty.resources.DefaultLoopIOUring - Default io_uring support : false
2025-02-28 14:13:55 [] DEBUG r.netty.resources.DefaultLoopEpoll - Default Epoll support : false
2025-02-28 14:13:55 [] DEBUG r.netty.resources.DefaultLoopKQueue - Default KQueue support : false
2025-02-28 14:13:55 [] DEBUG i.n.c.MultithreadEventLoopGroup - -Dio.netty.eventLoopThreads: 24
2025-02-28 14:13:55 [] DEBUG i.n.u.concurrent.GlobalEventExecutor - -Dio.netty.globalEventExecutor.quietPeriodSeconds: 1
2025-02-28 14:13:55 [] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.noKeySetOptimization: false
2025-02-28 14:13:55 [] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.selectorAutoRebuildThreshold: 512
2025-02-28 14:13:55 [] DEBUG i.n.util.internal.PlatformDependent - org.jctools-core.MpscChunkedArrayQueue: available
2025-02-28 14:13:55 [] DEBUG io.netty.util.NetUtil - -Djava.net.preferIPv4Stack: false
2025-02-28 14:13:55 [] DEBUG io.netty.util.NetUtil - -Djava.net.preferIPv6Addresses: false
2025-02-28 14:13:55 [] DEBUG i.netty.util.NetUtilInitializations - Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2025-02-28 14:13:55 [] DEBUG io.netty.util.NetUtil - Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2025-02-28 14:13:55 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default ResolvedAddressTypes: IPV4_ONLY
2025-02-28 14:13:55 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Localhost address: localhost/127.0.0.1
2025-02-28 14:13:55 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Windows hostname: DESKTOP-P307093
2025-02-28 14:13:55 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default search domains: []
2025-02-28 14:13:55 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default UnixResolverOptions{ndots=1, timeout=5, attempts=16}
2025-02-28 14:13:55 [] DEBUG i.n.r.DefaultHostsFileEntriesResolver - -Dio.netty.hostsFileRefreshInterval: 0
2025-02-28 14:13:55 [] DEBUG i.n.r.d.DefaultDnsServerAddressStreamProvider - Default DNS servers: [/8.8.8.8:53, /4.2.2.2:53] (sun.net.dns.ResolverConfiguration)
2025-02-28 14:13:55 [] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-02-28 14:13:55 [] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-02-28 14:13:56 [] INFO  c.c.c.g.c.CommongatewayApplication - Started CommongatewayApplication in 4.108 seconds (process running for 5.105)
2025-02-28 14:14:05 [] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-02-28 14:14:05 [] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-02-28 14:14:05 [] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 3 ms
2025-02-28 14:14:05 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 14:14:05 [f9da9f53-f662-4e26-b468-cf1f72eac473] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 14:14:05 [f9da9f53-f662-4e26-b468-cf1f72eac473] DEBUG i.m.c.u.i.l.InternalLoggerFactory - Using SLF4J as the default logging framework
2025-02-28 14:14:06 [f9da9f53-f662-4e26-b468-cf1f72eac473] DEBUG r.n.r.PooledConnectionProvider - Creating a new [http] client pool [PoolFactory{evictionInterval=PT0S, leasingStrategy=fifo, maxConnections=500, maxIdleTime=-1, maxLifeTime=-1, metricsEnabled=false, pendingAcquireMaxCount=1000, pendingAcquireTimeout=45000}] for [localhost/<unresolved>:8081]
2025-02-28 14:14:06 [f9da9f53-f662-4e26-b468-cf1f72eac473] DEBUG io.netty.channel.DefaultChannelId - -Dio.netty.processId: 9304 (auto-detected)
2025-02-28 14:14:06 [f9da9f53-f662-4e26-b468-cf1f72eac473] DEBUG io.netty.channel.DefaultChannelId - -Dio.netty.machineId: 00:15:5d:ff:fe:02:b5:1f (auto-detected)
2025-02-28 14:14:06 [f9da9f53-f662-4e26-b468-cf1f72eac473] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.numHeapArenas: 24
2025-02-28 14:14:06 [f9da9f53-f662-4e26-b468-cf1f72eac473] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.numDirectArenas: 24
2025-02-28 14:14:06 [f9da9f53-f662-4e26-b468-cf1f72eac473] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.pageSize: 8192
2025-02-28 14:14:06 [f9da9f53-f662-4e26-b468-cf1f72eac473] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxOrder: 9
2025-02-28 14:14:06 [f9da9f53-f662-4e26-b468-cf1f72eac473] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.chunkSize: 4194304
2025-02-28 14:14:06 [f9da9f53-f662-4e26-b468-cf1f72eac473] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.smallCacheSize: 256
2025-02-28 14:14:06 [f9da9f53-f662-4e26-b468-cf1f72eac473] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.normalCacheSize: 64
2025-02-28 14:14:06 [f9da9f53-f662-4e26-b468-cf1f72eac473] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2025-02-28 14:14:06 [f9da9f53-f662-4e26-b468-cf1f72eac473] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.cacheTrimInterval: 8192
2025-02-28 14:14:06 [f9da9f53-f662-4e26-b468-cf1f72eac473] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.cacheTrimIntervalMillis: 0
2025-02-28 14:14:06 [f9da9f53-f662-4e26-b468-cf1f72eac473] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.useCacheForAllThreads: false
2025-02-28 14:14:06 [f9da9f53-f662-4e26-b468-cf1f72eac473] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
2025-02-28 14:14:06 [f9da9f53-f662-4e26-b468-cf1f72eac473] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.disableCacheFinalizersForFastThreadLocalThreads: false
2025-02-28 14:14:06 [f9da9f53-f662-4e26-b468-cf1f72eac473] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.allocator.type: pooled
2025-02-28 14:14:06 [f9da9f53-f662-4e26-b468-cf1f72eac473] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.threadLocalDirectBufferSize: 0
2025-02-28 14:14:06 [f9da9f53-f662-4e26-b468-cf1f72eac473] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.maxThreadLocalCharBufferSize: 16384
2025-02-28 14:14:06 [] DEBUG r.n.r.PooledConnectionProvider - [32aa646e] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 14:14:06 [] DEBUG io.netty.buffer.AbstractByteBuf - -Dio.netty.buffer.checkAccessible: true
2025-02-28 14:14:06 [] DEBUG io.netty.buffer.AbstractByteBuf - -Dio.netty.buffer.checkBounds: true
2025-02-28 14:14:06 [] DEBUG i.n.util.ResourceLeakDetectorFactory - Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@1eba7d81
2025-02-28 14:14:06 [] DEBUG r.netty.transport.TransportConfig - [32aa646e] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-28 14:14:06 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 14:14:06 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 14:14:06 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 14:14:06 [] DEBUG i.n.b.ChannelInitializerExtensions - -Dio.netty.bootstrap.extensions: null
2025-02-28 14:14:06 [] DEBUG r.netty.transport.TransportConnector - [32aa646e] Connecting to [localhost/127.0.0.1:8081].
2025-02-28 14:14:06 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [32aa646e, L:/127.0.0.1:59200 - R:localhost/127.0.0.1:8081] Registering pool release on close event for channel
2025-02-28 14:14:06 [] DEBUG r.n.r.PooledConnectionProvider - [32aa646e, L:/127.0.0.1:59200 - R:localhost/127.0.0.1:8081] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 14:14:06 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [32aa646e, L:/127.0.0.1:59200 - R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x32aa646e, L:/127.0.0.1:59200 - R:localhost/127.0.0.1:8081]}, [connected])
2025-02-28 14:14:06 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [32aa646e-1, L:/127.0.0.1:59200 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0x32aa646e, L:/127.0.0.1:59200 - R:localhost/127.0.0.1:8081]}}, [configured])
2025-02-28 14:14:06 [] DEBUG r.n.http.client.HttpClientConnect - [32aa646e-1, L:/127.0.0.1:59200 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY, method=GET}
2025-02-28 14:14:06 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [32aa646e-1, L:/127.0.0.1:59200 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x32aa646e, L:/127.0.0.1:59200 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 14:14:06 [] DEBUG r.n.http.client.HttpClientOperations - [32aa646e-1, L:/127.0.0.1:59200 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 14:14:06 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.maxCapacityPerThread: 4096
2025-02-28 14:14:06 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.ratio: 8
2025-02-28 14:14:06 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.chunkSize: 32
2025-02-28 14:14:06 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.blocking: false
2025-02-28 14:14:06 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.batchFastThreadLocalOnly: true
2025-02-28 14:14:06 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [32aa646e-1, L:/127.0.0.1:59200 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x32aa646e, L:/127.0.0.1:59200 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 14:14:06 [] DEBUG i.n.handler.codec.compression.Zstd - zstd-jni not in the classpath; Zstd support will be unavailable.
2025-02-28 14:14:06 [] DEBUG r.n.http.client.HttpClientOperations - [32aa646e-1, L:/127.0.0.1:59200 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-28 14:14:06 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [32aa646e-1, L:/127.0.0.1:59200 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x32aa646e, L:/127.0.0.1:59200 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 14:14:06 [] DEBUG r.n.http.client.HttpClientOperations - [32aa646e-1, L:/127.0.0.1:59200 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 14:14:06 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [32aa646e, L:/127.0.0.1:59200 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x32aa646e, L:/127.0.0.1:59200 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 14:14:06 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [32aa646e, L:/127.0.0.1:59200 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x32aa646e, L:/127.0.0.1:59200 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 14:14:06 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [32aa646e, L:/127.0.0.1:59200 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-28 14:14:06 [] DEBUG r.n.r.PooledConnectionProvider - [32aa646e, L:/127.0.0.1:59200 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-28 14:14:06 [] DEBUG reactor.netty.channel.FluxReceive - [31847457, L:/127.0.0.1:59200 ! R:localhost/127.0.0.1:8081] [terminated=true, cancelled=false, pending=1, error=null]: subscribing inbound receiver
2025-02-28 14:14:16 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 14:14:16 [7a58961f-2918-4cc5-9f29-ad5a3d61d3e4] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 14:14:16 [7a58961f-2918-4cc5-9f29-ad5a3d61d3e4] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /users
2025-02-28 14:14:16 [7a58961f-2918-4cc5-9f29-ad5a3d61d3e4] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔄 Using HTTP Method: GET
2025-02-28 14:14:16 [7a58961f-2918-4cc5-9f29-ad5a3d61d3e4] DEBUG r.n.r.PooledConnectionProvider - Creating a new [http] client pool [PoolFactory{evictionInterval=PT0S, leasingStrategy=fifo, maxConnections=500, maxIdleTime=-1, maxLifeTime=-1, metricsEnabled=false, pendingAcquireMaxCount=1000, pendingAcquireTimeout=45000}] for [localhost/<unresolved>:8081]
2025-02-28 14:14:16 [] DEBUG r.n.r.PooledConnectionProvider - [7c51d2dc] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 14:14:16 [] DEBUG r.netty.transport.TransportConfig - [7c51d2dc] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-28 14:14:16 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 14:14:16 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 14:14:16 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 14:14:16 [] DEBUG r.netty.transport.TransportConnector - [7c51d2dc] Connecting to [localhost/127.0.0.1:8081].
2025-02-28 14:14:16 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [7c51d2dc, L:/127.0.0.1:59210 - R:localhost/127.0.0.1:8081] Registering pool release on close event for channel
2025-02-28 14:14:16 [] DEBUG r.n.r.PooledConnectionProvider - [7c51d2dc, L:/127.0.0.1:59210 - R:localhost/127.0.0.1:8081] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 14:14:16 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [7c51d2dc, L:/127.0.0.1:59210 - R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x7c51d2dc, L:/127.0.0.1:59210 - R:localhost/127.0.0.1:8081]}, [connected])
2025-02-28 14:14:16 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [7c51d2dc-1, L:/127.0.0.1:59210 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0x7c51d2dc, L:/127.0.0.1:59210 - R:localhost/127.0.0.1:8081]}}, [configured])
2025-02-28 14:14:16 [] DEBUG r.n.http.client.HttpClientConnect - [7c51d2dc-1, L:/127.0.0.1:59210 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/, method=GET}
2025-02-28 14:14:16 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [7c51d2dc-1, L:/127.0.0.1:59210 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0x7c51d2dc, L:/127.0.0.1:59210 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 14:14:16 [] DEBUG r.n.http.client.HttpClientOperations - [7c51d2dc-1, L:/127.0.0.1:59210 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 14:14:16 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [7c51d2dc-1, L:/127.0.0.1:59210 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0x7c51d2dc, L:/127.0.0.1:59210 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 14:14:16 [] DEBUG r.n.http.client.HttpClientOperations - [7c51d2dc-1, L:/127.0.0.1:59210 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 500 
Vary: <filtered>
Vary: <filtered>
Vary: <filtered>
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
Connection: <filtered>
2025-02-28 14:14:16 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [7c51d2dc-1, L:/127.0.0.1:59210 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0x7c51d2dc, L:/127.0.0.1:59210 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 14:14:16 [] DEBUG reactor.netty.channel.FluxReceive - [7c51d2dc-1, L:/127.0.0.1:59210 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-28 14:14:16 [] DEBUG r.n.http.client.HttpClientOperations - [7c51d2dc-1, L:/127.0.0.1:59210 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 14:14:16 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [7c51d2dc, L:/127.0.0.1:59210 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0x7c51d2dc, L:/127.0.0.1:59210 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 14:14:16 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [7c51d2dc, L:/127.0.0.1:59210 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0x7c51d2dc, L:/127.0.0.1:59210 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 14:14:16 [] DEBUG r.n.r.PooledConnectionProvider - [7c51d2dc, L:/127.0.0.1:59210 ! R:localhost/127.0.0.1:8081] Channel closed, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 14:14:16 [7a58961f-2918-4cc5-9f29-ad5a3d61d3e4] ERROR c.c.c.g.c.c.ValidationInterceptor - ⚠️ Error calling validation service
org.springframework.web.reactive.function.client.WebClientResponseException$InternalServerError: 500 Internal Server Error from GET http://localhost:8081
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 500 INTERNAL_SERVER_ERROR from GET http://localhost:8081 [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104)
		at reactor.core.publisher.Mono.block(Mono.java:1779)
		at com.citpl.common.gateway.commongateway.config.ValidationInterceptor.preHandle(ValidationInterceptor.java:70)
		at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:146)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1083)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
		at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at com.citpl.common.gateway.commongateway.filter.MDCFilter.doFilter(MDCFilter.java:37)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.cloud.gateway.server.mvc.filter.WeightCalculatorFilter.doFilter(WeightCalculatorFilter.java:229)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.cloud.gateway.server.mvc.filter.FormFilter.doFilter(FormFilter.java:93)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-28 14:14:16 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [7c51d2dc, L:/127.0.0.1:59210 ! R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x7c51d2dc, L:/127.0.0.1:59210 ! R:localhost/127.0.0.1:8081]}, [disconnecting])
2025-02-28 14:14:16 [] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /error
2025-02-28 14:14:16 [] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔄 Using HTTP Method: GET
2025-02-28 14:14:16 [] DEBUG r.n.r.PooledConnectionProvider - [806cbb6e] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 14:14:16 [] DEBUG r.netty.transport.TransportConfig - [806cbb6e] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-28 14:14:16 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 14:14:16 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 14:14:16 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 14:14:16 [] DEBUG r.netty.transport.TransportConnector - [806cbb6e] Connecting to [localhost/127.0.0.1:8081].
2025-02-28 14:14:16 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [806cbb6e, L:/127.0.0.1:59211 - R:localhost/127.0.0.1:8081] Registering pool release on close event for channel
2025-02-28 14:14:16 [] DEBUG r.n.r.PooledConnectionProvider - [806cbb6e, L:/127.0.0.1:59211 - R:localhost/127.0.0.1:8081] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 14:14:16 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [806cbb6e, L:/127.0.0.1:59211 - R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x806cbb6e, L:/127.0.0.1:59211 - R:localhost/127.0.0.1:8081]}, [connected])
2025-02-28 14:14:16 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [806cbb6e-1, L:/127.0.0.1:59211 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0x806cbb6e, L:/127.0.0.1:59211 - R:localhost/127.0.0.1:8081]}}, [configured])
2025-02-28 14:14:16 [] DEBUG r.n.http.client.HttpClientConnect - [806cbb6e-1, L:/127.0.0.1:59211 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/, method=GET}
2025-02-28 14:14:16 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [806cbb6e-1, L:/127.0.0.1:59211 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0x806cbb6e, L:/127.0.0.1:59211 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 14:14:16 [] DEBUG r.n.http.client.HttpClientOperations - [806cbb6e-1, L:/127.0.0.1:59211 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 14:14:16 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [806cbb6e-1, L:/127.0.0.1:59211 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0x806cbb6e, L:/127.0.0.1:59211 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 14:14:16 [] DEBUG r.n.http.client.HttpClientOperations - [806cbb6e-1, L:/127.0.0.1:59211 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 500 
Vary: <filtered>
Vary: <filtered>
Vary: <filtered>
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
Connection: <filtered>
2025-02-28 14:14:16 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [806cbb6e-1, L:/127.0.0.1:59211 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0x806cbb6e, L:/127.0.0.1:59211 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 14:14:16 [] DEBUG reactor.netty.channel.FluxReceive - [806cbb6e-1, L:/127.0.0.1:59211 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-28 14:14:16 [] DEBUG r.n.http.client.HttpClientOperations - [806cbb6e-1, L:/127.0.0.1:59211 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 14:14:16 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [806cbb6e, L:/127.0.0.1:59211 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0x806cbb6e, L:/127.0.0.1:59211 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 14:14:16 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [806cbb6e, L:/127.0.0.1:59211 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0x806cbb6e, L:/127.0.0.1:59211 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 14:14:16 [] DEBUG r.n.r.PooledConnectionProvider - [806cbb6e, L:/127.0.0.1:59211 ! R:localhost/127.0.0.1:8081] Channel closed, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 14:14:16 [] ERROR c.c.c.g.c.c.ValidationInterceptor - ⚠️ Error calling validation service
org.springframework.web.reactive.function.client.WebClientResponseException$InternalServerError: 500 Internal Server Error from GET http://localhost:8081
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 500 INTERNAL_SERVER_ERROR from GET http://localhost:8081 [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104)
		at reactor.core.publisher.Mono.block(Mono.java:1779)
		at com.citpl.common.gateway.commongateway.config.ValidationInterceptor.preHandle(ValidationInterceptor.java:70)
		at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:146)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1083)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
		at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:633)
		at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:411)
		at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:331)
		at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:268)
		at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:380)
		at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:208)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:151)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-28 14:14:16 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [806cbb6e, L:/127.0.0.1:59211 ! R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x806cbb6e, L:/127.0.0.1:59211 ! R:localhost/127.0.0.1:8081]}, [disconnecting])
2025-02-28 14:15:06 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [32aa646e, L:/127.0.0.1:59200 ! R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x32aa646e, L:/127.0.0.1:59200 ! R:localhost/127.0.0.1:8081]}, [disconnecting])
2025-02-28 14:21:40 [] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-02-28 14:21:40 [] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-02-28 14:21:40 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 4 thread-local buffer(s) from thread: reactor-http-nio-4
2025-02-28 14:21:40 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 4 thread-local buffer(s) from thread: reactor-http-nio-5
2025-02-28 14:21:40 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 4 thread-local buffer(s) from thread: reactor-http-nio-3
2025-02-28 14:21:44 [] DEBUG org.jboss.logging - Logging Provider: org.jboss.logging.Slf4jLoggerProvider found via system property
2025-02-28 14:21:44 [] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final
2025-02-28 14:21:44 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-02-28 14:21:44 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-02-28 14:21:44 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-02-28 14:21:44 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-02-28 14:21:44 [] DEBUG o.h.v.i.e.r.TraversableResolvers - Cannot find jakarta.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2025-02-28 14:21:44 [] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-02-28 14:21:44 [] INFO  c.c.c.g.c.CommongatewayApplication - Starting CommongatewayApplication using Java 17.0.12 with PID 4804 (D:\WORKSPACE\API-GATEWAY\commongateway\target\classes started by CITPL in D:\WORKSPACE\API-GATEWAY)
2025-02-28 14:21:44 [] DEBUG c.c.c.g.c.CommongatewayApplication - Running with Spring Boot v3.4.2, Spring v6.2.2
2025-02-28 14:21:44 [] INFO  c.c.c.g.c.CommongatewayApplication - No active profile set, falling back to 1 default profile: "default"
2025-02-28 14:21:44 [] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-02-28 14:21:44 [] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-02-28 14:21:44 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-02-28 14:21:44 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-02-28 14:21:44 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-02-28 14:21:44 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-02-28 14:21:44 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-02-28 14:21:44 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-02-28 14:21:45 [] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=d2aee5ef-86a6-3b95-abd8-708d95e66676
2025-02-28 14:21:46 [] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-02-28 14:21:46 [] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-02-28 14:21:46 [] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-02-28 14:21:46 [] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.34]
2025-02-28 14:21:46 [] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-02-28 14:21:46 [] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1946 ms
2025-02-28 14:21:46 [] DEBUG i.n.u.i.l.InternalLoggerFactory - Using SLF4J as the default logging framework
2025-02-28 14:21:46 [] DEBUG i.n.util.internal.PlatformDependent0 - -Dio.netty.noUnsafe: false
2025-02-28 14:21:46 [] DEBUG i.n.util.internal.PlatformDependent0 - Java version: 17
2025-02-28 14:21:46 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe.theUnsafe: available
2025-02-28 14:21:46 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe base methods: all available
2025-02-28 14:21:46 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe.storeFence: available
2025-02-28 14:21:46 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.Buffer.address: available
2025-02-28 14:21:46 [] DEBUG i.n.util.internal.PlatformDependent0 - direct buffer constructor: unavailable: Reflective setAccessible(true) disabled
2025-02-28 14:21:46 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.Bits.unaligned: available, true
2025-02-28 14:21:46 [] DEBUG i.n.util.internal.PlatformDependent0 - jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable: class io.netty.util.internal.PlatformDependent0$7 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @3e77a1ed
2025-02-28 14:21:46 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.DirectByteBuffer.<init>(long, {int,long}): unavailable
2025-02-28 14:21:46 [] DEBUG i.n.util.internal.PlatformDependent - sun.misc.Unsafe: available
2025-02-28 14:21:46 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.tmpdir: C:\Users\CITPL\AppData\Local\Temp (java.io.tmpdir)
2025-02-28 14:21:46 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.bitMode: 64 (sun.arch.data.model)
2025-02-28 14:21:46 [] DEBUG i.n.util.internal.PlatformDependent - Platform: Windows
2025-02-28 14:21:46 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.maxDirectMemory: -1 bytes
2025-02-28 14:21:46 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.uninitializedArrayAllocationThreshold: -1
2025-02-28 14:21:46 [] DEBUG io.netty.util.internal.CleanerJava9 - java.nio.ByteBuffer.cleaner(): available
2025-02-28 14:21:46 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.noPreferDirect: false
2025-02-28 14:21:47 [] DEBUG reactor.util.Loggers - Using Slf4j logging framework
2025-02-28 14:21:47 [] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-02-28 14:21:47 [] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2025-02-28 14:21:47 [] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2025-02-28 14:21:47 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-02-28 14:21:47 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via user class loader
2025-02-28 14:21:47 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-02-28 14:21:47 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-02-28 14:21:47 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-02-28 14:21:47 [] DEBUG o.h.v.i.e.r.TraversableResolvers - Cannot find jakarta.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2025-02-28 14:21:47 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-02-28 14:21:47 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-02-28 14:21:47 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-02-28 14:21:47 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-02-28 14:21:47 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-02-28 14:21:47 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-02-28 14:21:47 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	c.c.c.g.c.c.HomeController:
	{GET [/home]}: get()
2025-02-28 14:21:47 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2025-02-28 14:21:47 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 'beanNameHandlerMapping' {}
2025-02-28 14:21:47 [] DEBUG _.s.w.s.HandlerMapping.Mappings - Mapped /validate/** -> ProxyExchangeHandlerFunction
/users/** -> ProxyExchangeHandlerFunction
2025-02-28 14:21:47 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2025-02-28 14:21:47 [] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-02-28 14:21:47 [] DEBUG i.n.u.i.InternalThreadLocalMap - -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2025-02-28 14:21:47 [] DEBUG i.n.u.i.InternalThreadLocalMap - -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2025-02-28 14:21:47 [] DEBUG io.netty.util.ResourceLeakDetector - -Dio.netty.leakDetection.level: simple
2025-02-28 14:21:47 [] DEBUG io.netty.util.ResourceLeakDetector - -Dio.netty.leakDetection.targetRecords: 4
2025-02-28 14:21:48 [] DEBUG i.n.handler.codec.compression.Brotli - brotli4j not in the classpath; Brotli support will be unavailable.
2025-02-28 14:21:48 [] DEBUG reactor.netty.tcp.TcpResources - [http] resources will use the default LoopResources: DefaultLoopResources {prefix=reactor-http, daemon=true, selectCount=12, workerCount=12}
2025-02-28 14:21:48 [] DEBUG reactor.netty.tcp.TcpResources - [http] resources will use the default ConnectionProvider: reactor.netty.resources.DefaultPooledConnectionProvider@3eaf352b
2025-02-28 14:21:48 [] DEBUG r.netty.resources.DefaultLoopIOUring - Default io_uring support : false
2025-02-28 14:21:48 [] DEBUG r.netty.resources.DefaultLoopEpoll - Default Epoll support : false
2025-02-28 14:21:48 [] DEBUG r.netty.resources.DefaultLoopKQueue - Default KQueue support : false
2025-02-28 14:21:48 [] DEBUG i.n.c.MultithreadEventLoopGroup - -Dio.netty.eventLoopThreads: 24
2025-02-28 14:21:48 [] DEBUG i.n.u.concurrent.GlobalEventExecutor - -Dio.netty.globalEventExecutor.quietPeriodSeconds: 1
2025-02-28 14:21:48 [] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.noKeySetOptimization: false
2025-02-28 14:21:48 [] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.selectorAutoRebuildThreshold: 512
2025-02-28 14:21:48 [] DEBUG i.n.util.internal.PlatformDependent - org.jctools-core.MpscChunkedArrayQueue: available
2025-02-28 14:21:48 [] DEBUG io.netty.util.NetUtil - -Djava.net.preferIPv4Stack: false
2025-02-28 14:21:48 [] DEBUG io.netty.util.NetUtil - -Djava.net.preferIPv6Addresses: false
2025-02-28 14:21:48 [] DEBUG i.netty.util.NetUtilInitializations - Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2025-02-28 14:21:48 [] DEBUG io.netty.util.NetUtil - Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2025-02-28 14:21:48 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default ResolvedAddressTypes: IPV4_ONLY
2025-02-28 14:21:48 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Localhost address: localhost/127.0.0.1
2025-02-28 14:21:48 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Windows hostname: DESKTOP-P307093
2025-02-28 14:21:48 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default search domains: []
2025-02-28 14:21:48 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default UnixResolverOptions{ndots=1, timeout=5, attempts=16}
2025-02-28 14:21:48 [] DEBUG i.n.r.DefaultHostsFileEntriesResolver - -Dio.netty.hostsFileRefreshInterval: 0
2025-02-28 14:21:48 [] DEBUG i.n.r.d.DefaultDnsServerAddressStreamProvider - Default DNS servers: [/8.8.8.8:53, /4.2.2.2:53] (sun.net.dns.ResolverConfiguration)
2025-02-28 14:21:48 [] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-02-28 14:21:48 [] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-02-28 14:21:48 [] INFO  c.c.c.g.c.CommongatewayApplication - Started CommongatewayApplication in 4.4 seconds (process running for 5.466)
2025-02-28 14:21:50 [] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-02-28 14:21:50 [] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-02-28 14:21:50 [] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-02-28 14:21:50 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 14:21:50 [e4d293e2-f2bb-4659-8f3d-da026a251ccd] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 14:21:50 [e4d293e2-f2bb-4659-8f3d-da026a251ccd] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /users
2025-02-28 14:21:50 [e4d293e2-f2bb-4659-8f3d-da026a251ccd] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔄 Using HTTP Method: GET
2025-02-28 14:21:50 [e4d293e2-f2bb-4659-8f3d-da026a251ccd] DEBUG r.n.r.PooledConnectionProvider - Creating a new [http] client pool [PoolFactory{evictionInterval=PT0S, leasingStrategy=fifo, maxConnections=500, maxIdleTime=-1, maxLifeTime=-1, metricsEnabled=false, pendingAcquireMaxCount=1000, pendingAcquireTimeout=45000}] for [localhost/<unresolved>:8081]
2025-02-28 14:21:50 [e4d293e2-f2bb-4659-8f3d-da026a251ccd] DEBUG io.netty.channel.DefaultChannelId - -Dio.netty.processId: 4804 (auto-detected)
2025-02-28 14:21:50 [e4d293e2-f2bb-4659-8f3d-da026a251ccd] DEBUG io.netty.channel.DefaultChannelId - -Dio.netty.machineId: 00:15:5d:ff:fe:02:b5:1f (auto-detected)
2025-02-28 14:21:50 [e4d293e2-f2bb-4659-8f3d-da026a251ccd] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.numHeapArenas: 24
2025-02-28 14:21:50 [e4d293e2-f2bb-4659-8f3d-da026a251ccd] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.numDirectArenas: 24
2025-02-28 14:21:50 [e4d293e2-f2bb-4659-8f3d-da026a251ccd] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.pageSize: 8192
2025-02-28 14:21:50 [e4d293e2-f2bb-4659-8f3d-da026a251ccd] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxOrder: 9
2025-02-28 14:21:50 [e4d293e2-f2bb-4659-8f3d-da026a251ccd] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.chunkSize: 4194304
2025-02-28 14:21:50 [e4d293e2-f2bb-4659-8f3d-da026a251ccd] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.smallCacheSize: 256
2025-02-28 14:21:50 [e4d293e2-f2bb-4659-8f3d-da026a251ccd] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.normalCacheSize: 64
2025-02-28 14:21:50 [e4d293e2-f2bb-4659-8f3d-da026a251ccd] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2025-02-28 14:21:50 [e4d293e2-f2bb-4659-8f3d-da026a251ccd] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.cacheTrimInterval: 8192
2025-02-28 14:21:50 [e4d293e2-f2bb-4659-8f3d-da026a251ccd] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.cacheTrimIntervalMillis: 0
2025-02-28 14:21:50 [e4d293e2-f2bb-4659-8f3d-da026a251ccd] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.useCacheForAllThreads: false
2025-02-28 14:21:50 [e4d293e2-f2bb-4659-8f3d-da026a251ccd] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
2025-02-28 14:21:50 [e4d293e2-f2bb-4659-8f3d-da026a251ccd] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.disableCacheFinalizersForFastThreadLocalThreads: false
2025-02-28 14:21:50 [e4d293e2-f2bb-4659-8f3d-da026a251ccd] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.allocator.type: pooled
2025-02-28 14:21:50 [e4d293e2-f2bb-4659-8f3d-da026a251ccd] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.threadLocalDirectBufferSize: 0
2025-02-28 14:21:50 [e4d293e2-f2bb-4659-8f3d-da026a251ccd] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.maxThreadLocalCharBufferSize: 16384
2025-02-28 14:21:50 [] DEBUG r.n.r.PooledConnectionProvider - [d6b96887] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 14:21:50 [] DEBUG io.netty.buffer.AbstractByteBuf - -Dio.netty.buffer.checkAccessible: true
2025-02-28 14:21:50 [] DEBUG io.netty.buffer.AbstractByteBuf - -Dio.netty.buffer.checkBounds: true
2025-02-28 14:21:50 [] DEBUG i.n.util.ResourceLeakDetectorFactory - Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@3f1a9895
2025-02-28 14:21:50 [] DEBUG r.netty.transport.TransportConfig - [d6b96887] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-28 14:21:50 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 14:21:50 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 14:21:50 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 14:21:50 [] DEBUG i.n.b.ChannelInitializerExtensions - -Dio.netty.bootstrap.extensions: null
2025-02-28 14:21:50 [] DEBUG r.netty.transport.TransportConnector - [d6b96887] Connecting to [localhost/127.0.0.1:8081].
2025-02-28 14:21:50 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [d6b96887, L:/127.0.0.1:59344 - R:localhost/127.0.0.1:8081] Registering pool release on close event for channel
2025-02-28 14:21:50 [] DEBUG r.n.r.PooledConnectionProvider - [d6b96887, L:/127.0.0.1:59344 - R:localhost/127.0.0.1:8081] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 14:21:50 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [d6b96887, L:/127.0.0.1:59344 - R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0xd6b96887, L:/127.0.0.1:59344 - R:localhost/127.0.0.1:8081]}, [connected])
2025-02-28 14:21:50 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [d6b96887-1, L:/127.0.0.1:59344 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0xd6b96887, L:/127.0.0.1:59344 - R:localhost/127.0.0.1:8081]}}, [configured])
2025-02-28 14:21:50 [] DEBUG r.n.http.client.HttpClientConnect - [d6b96887-1, L:/127.0.0.1:59344 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/, method=GET}
2025-02-28 14:21:50 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [d6b96887-1, L:/127.0.0.1:59344 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0xd6b96887, L:/127.0.0.1:59344 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 14:21:50 [] DEBUG r.n.http.client.HttpClientOperations - [d6b96887-1, L:/127.0.0.1:59344 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 14:21:50 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.maxCapacityPerThread: 4096
2025-02-28 14:21:50 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.ratio: 8
2025-02-28 14:21:50 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.chunkSize: 32
2025-02-28 14:21:50 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.blocking: false
2025-02-28 14:21:50 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.batchFastThreadLocalOnly: true
2025-02-28 14:21:50 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [d6b96887-1, L:/127.0.0.1:59344 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0xd6b96887, L:/127.0.0.1:59344 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 14:21:50 [] DEBUG i.n.handler.codec.compression.Zstd - zstd-jni not in the classpath; Zstd support will be unavailable.
2025-02-28 14:21:50 [] DEBUG r.n.http.client.HttpClientOperations - [d6b96887-1, L:/127.0.0.1:59344 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 500 
Vary: <filtered>
Vary: <filtered>
Vary: <filtered>
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
Connection: <filtered>
2025-02-28 14:21:50 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [d6b96887-1, L:/127.0.0.1:59344 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0xd6b96887, L:/127.0.0.1:59344 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 14:21:50 [] DEBUG reactor.netty.channel.FluxReceive - [d6b96887-1, L:/127.0.0.1:59344 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-28 14:21:50 [] DEBUG r.n.http.client.HttpClientOperations - [d6b96887-1, L:/127.0.0.1:59344 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 14:21:50 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [d6b96887, L:/127.0.0.1:59344 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0xd6b96887, L:/127.0.0.1:59344 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 14:21:50 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [d6b96887, L:/127.0.0.1:59344 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0xd6b96887, L:/127.0.0.1:59344 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 14:21:50 [] DEBUG r.n.r.PooledConnectionProvider - [d6b96887, L:/127.0.0.1:59344 ! R:localhost/127.0.0.1:8081] Channel closed, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 14:21:50 [e4d293e2-f2bb-4659-8f3d-da026a251ccd] ERROR c.c.c.g.c.c.ValidationInterceptor - ⚠️ Error calling validation service
org.springframework.web.reactive.function.client.WebClientResponseException$InternalServerError: 500 Internal Server Error from GET http://localhost:8081
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 500 INTERNAL_SERVER_ERROR from GET http://localhost:8081 [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104)
		at reactor.core.publisher.Mono.block(Mono.java:1779)
		at com.citpl.common.gateway.commongateway.config.ValidationInterceptor.preHandle(ValidationInterceptor.java:70)
		at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:146)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1083)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
		at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at com.citpl.common.gateway.commongateway.filter.MDCFilter.doFilter(MDCFilter.java:37)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.cloud.gateway.server.mvc.filter.WeightCalculatorFilter.doFilter(WeightCalculatorFilter.java:229)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.cloud.gateway.server.mvc.filter.FormFilter.doFilter(FormFilter.java:93)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-28 14:21:50 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [d6b96887, L:/127.0.0.1:59344 ! R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0xd6b96887, L:/127.0.0.1:59344 ! R:localhost/127.0.0.1:8081]}, [disconnecting])
2025-02-28 14:21:50 [] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /error
2025-02-28 14:21:50 [] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔄 Using HTTP Method: GET
2025-02-28 14:21:50 [] DEBUG r.n.r.PooledConnectionProvider - [5a0d8bcd] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 14:21:50 [] DEBUG r.netty.transport.TransportConfig - [5a0d8bcd] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-28 14:21:50 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 14:21:50 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 14:21:50 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 14:21:50 [] DEBUG r.netty.transport.TransportConnector - [5a0d8bcd] Connecting to [localhost/127.0.0.1:8081].
2025-02-28 14:21:50 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [5a0d8bcd, L:/127.0.0.1:59345 - R:localhost/127.0.0.1:8081] Registering pool release on close event for channel
2025-02-28 14:21:50 [] DEBUG r.n.r.PooledConnectionProvider - [5a0d8bcd, L:/127.0.0.1:59345 - R:localhost/127.0.0.1:8081] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 14:21:50 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [5a0d8bcd, L:/127.0.0.1:59345 - R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x5a0d8bcd, L:/127.0.0.1:59345 - R:localhost/127.0.0.1:8081]}, [connected])
2025-02-28 14:21:50 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [5a0d8bcd-1, L:/127.0.0.1:59345 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0x5a0d8bcd, L:/127.0.0.1:59345 - R:localhost/127.0.0.1:8081]}}, [configured])
2025-02-28 14:21:50 [] DEBUG r.n.http.client.HttpClientConnect - [5a0d8bcd-1, L:/127.0.0.1:59345 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/, method=GET}
2025-02-28 14:21:50 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [5a0d8bcd-1, L:/127.0.0.1:59345 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0x5a0d8bcd, L:/127.0.0.1:59345 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 14:21:50 [] DEBUG r.n.http.client.HttpClientOperations - [5a0d8bcd-1, L:/127.0.0.1:59345 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 14:21:50 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [5a0d8bcd-1, L:/127.0.0.1:59345 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0x5a0d8bcd, L:/127.0.0.1:59345 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 14:21:50 [] DEBUG r.n.http.client.HttpClientOperations - [5a0d8bcd-1, L:/127.0.0.1:59345 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 500 
Vary: <filtered>
Vary: <filtered>
Vary: <filtered>
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
Connection: <filtered>
2025-02-28 14:21:50 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [5a0d8bcd-1, L:/127.0.0.1:59345 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0x5a0d8bcd, L:/127.0.0.1:59345 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 14:21:50 [] DEBUG reactor.netty.channel.FluxReceive - [5a0d8bcd-1, L:/127.0.0.1:59345 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-28 14:21:50 [] DEBUG r.n.http.client.HttpClientOperations - [5a0d8bcd-1, L:/127.0.0.1:59345 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 14:21:50 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [5a0d8bcd, L:/127.0.0.1:59345 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0x5a0d8bcd, L:/127.0.0.1:59345 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 14:21:50 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [5a0d8bcd, L:/127.0.0.1:59345 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0x5a0d8bcd, L:/127.0.0.1:59345 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 14:21:50 [] DEBUG r.n.r.PooledConnectionProvider - [5a0d8bcd, L:/127.0.0.1:59345 ! R:localhost/127.0.0.1:8081] Channel closed, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 14:21:50 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [5a0d8bcd, L:/127.0.0.1:59345 ! R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x5a0d8bcd, L:/127.0.0.1:59345 ! R:localhost/127.0.0.1:8081]}, [disconnecting])
2025-02-28 14:21:50 [] ERROR c.c.c.g.c.c.ValidationInterceptor - ⚠️ Error calling validation service
org.springframework.web.reactive.function.client.WebClientResponseException$InternalServerError: 500 Internal Server Error from GET http://localhost:8081
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 500 INTERNAL_SERVER_ERROR from GET http://localhost:8081 [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104)
		at reactor.core.publisher.Mono.block(Mono.java:1779)
		at com.citpl.common.gateway.commongateway.config.ValidationInterceptor.preHandle(ValidationInterceptor.java:70)
		at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:146)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1083)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
		at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:633)
		at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:411)
		at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:331)
		at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:268)
		at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:380)
		at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:208)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:151)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-28 14:24:35 [] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-02-28 14:24:35 [] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-02-28 14:24:35 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 4 thread-local buffer(s) from thread: reactor-http-nio-3
2025-02-28 14:24:35 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 3 thread-local buffer(s) from thread: reactor-http-nio-2
2025-02-28 14:24:40 [] DEBUG org.jboss.logging - Logging Provider: org.jboss.logging.Slf4jLoggerProvider found via system property
2025-02-28 14:24:40 [] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final
2025-02-28 14:24:40 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-02-28 14:24:40 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-02-28 14:24:40 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-02-28 14:24:40 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-02-28 14:24:40 [] DEBUG o.h.v.i.e.r.TraversableResolvers - Cannot find jakarta.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2025-02-28 14:24:40 [] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-02-28 14:24:40 [] INFO  c.c.c.g.c.CommongatewayApplication - Starting CommongatewayApplication using Java 17.0.12 with PID 18668 (D:\WORKSPACE\API-GATEWAY\commongateway\target\classes started by CITPL in D:\WORKSPACE\API-GATEWAY)
2025-02-28 14:24:40 [] DEBUG c.c.c.g.c.CommongatewayApplication - Running with Spring Boot v3.4.2, Spring v6.2.2
2025-02-28 14:24:40 [] INFO  c.c.c.g.c.CommongatewayApplication - No active profile set, falling back to 1 default profile: "default"
2025-02-28 14:24:40 [] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-02-28 14:24:40 [] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-02-28 14:24:40 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-02-28 14:24:40 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-02-28 14:24:40 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-02-28 14:24:40 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-02-28 14:24:40 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-02-28 14:24:40 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-02-28 14:24:41 [] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=d2aee5ef-86a6-3b95-abd8-708d95e66676
2025-02-28 14:24:42 [] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-02-28 14:24:42 [] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-02-28 14:24:42 [] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-02-28 14:24:42 [] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.34]
2025-02-28 14:24:42 [] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-02-28 14:24:42 [] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1854 ms
2025-02-28 14:24:42 [] DEBUG i.n.u.i.l.InternalLoggerFactory - Using SLF4J as the default logging framework
2025-02-28 14:24:42 [] DEBUG i.n.util.internal.PlatformDependent0 - -Dio.netty.noUnsafe: false
2025-02-28 14:24:42 [] DEBUG i.n.util.internal.PlatformDependent0 - Java version: 17
2025-02-28 14:24:42 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe.theUnsafe: available
2025-02-28 14:24:42 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe base methods: all available
2025-02-28 14:24:42 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe.storeFence: available
2025-02-28 14:24:42 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.Buffer.address: available
2025-02-28 14:24:42 [] DEBUG i.n.util.internal.PlatformDependent0 - direct buffer constructor: unavailable: Reflective setAccessible(true) disabled
2025-02-28 14:24:42 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.Bits.unaligned: available, true
2025-02-28 14:24:42 [] DEBUG i.n.util.internal.PlatformDependent0 - jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable: class io.netty.util.internal.PlatformDependent0$7 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @3e77a1ed
2025-02-28 14:24:42 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.DirectByteBuffer.<init>(long, {int,long}): unavailable
2025-02-28 14:24:42 [] DEBUG i.n.util.internal.PlatformDependent - sun.misc.Unsafe: available
2025-02-28 14:24:42 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.tmpdir: C:\Users\CITPL\AppData\Local\Temp (java.io.tmpdir)
2025-02-28 14:24:42 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.bitMode: 64 (sun.arch.data.model)
2025-02-28 14:24:42 [] DEBUG i.n.util.internal.PlatformDependent - Platform: Windows
2025-02-28 14:24:42 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.maxDirectMemory: -1 bytes
2025-02-28 14:24:42 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.uninitializedArrayAllocationThreshold: -1
2025-02-28 14:24:42 [] DEBUG io.netty.util.internal.CleanerJava9 - java.nio.ByteBuffer.cleaner(): available
2025-02-28 14:24:42 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.noPreferDirect: false
2025-02-28 14:24:42 [] DEBUG reactor.util.Loggers - Using Slf4j logging framework
2025-02-28 14:24:42 [] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-02-28 14:24:42 [] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2025-02-28 14:24:42 [] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2025-02-28 14:24:42 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-02-28 14:24:42 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via user class loader
2025-02-28 14:24:42 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-02-28 14:24:42 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-02-28 14:24:42 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-02-28 14:24:42 [] DEBUG o.h.v.i.e.r.TraversableResolvers - Cannot find jakarta.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2025-02-28 14:24:42 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-02-28 14:24:42 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-02-28 14:24:42 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-02-28 14:24:42 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-02-28 14:24:42 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-02-28 14:24:42 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-02-28 14:24:43 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	c.c.c.g.c.c.HomeController:
	{GET [/home]}: get()
2025-02-28 14:24:43 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2025-02-28 14:24:43 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 'beanNameHandlerMapping' {}
2025-02-28 14:24:43 [] DEBUG _.s.w.s.HandlerMapping.Mappings - Mapped /validate/** -> ProxyExchangeHandlerFunction
/users/** -> ProxyExchangeHandlerFunction
2025-02-28 14:24:43 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2025-02-28 14:24:43 [] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-02-28 14:24:43 [] DEBUG i.n.u.i.InternalThreadLocalMap - -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2025-02-28 14:24:43 [] DEBUG i.n.u.i.InternalThreadLocalMap - -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2025-02-28 14:24:43 [] DEBUG io.netty.util.ResourceLeakDetector - -Dio.netty.leakDetection.level: simple
2025-02-28 14:24:43 [] DEBUG io.netty.util.ResourceLeakDetector - -Dio.netty.leakDetection.targetRecords: 4
2025-02-28 14:24:43 [] DEBUG i.n.handler.codec.compression.Brotli - brotli4j not in the classpath; Brotli support will be unavailable.
2025-02-28 14:24:43 [] DEBUG reactor.netty.tcp.TcpResources - [http] resources will use the default LoopResources: DefaultLoopResources {prefix=reactor-http, daemon=true, selectCount=12, workerCount=12}
2025-02-28 14:24:43 [] DEBUG reactor.netty.tcp.TcpResources - [http] resources will use the default ConnectionProvider: reactor.netty.resources.DefaultPooledConnectionProvider@609ff237
2025-02-28 14:24:43 [] DEBUG r.netty.resources.DefaultLoopIOUring - Default io_uring support : false
2025-02-28 14:24:43 [] DEBUG r.netty.resources.DefaultLoopEpoll - Default Epoll support : false
2025-02-28 14:24:43 [] DEBUG r.netty.resources.DefaultLoopKQueue - Default KQueue support : false
2025-02-28 14:24:43 [] DEBUG i.n.c.MultithreadEventLoopGroup - -Dio.netty.eventLoopThreads: 24
2025-02-28 14:24:43 [] DEBUG i.n.u.concurrent.GlobalEventExecutor - -Dio.netty.globalEventExecutor.quietPeriodSeconds: 1
2025-02-28 14:24:43 [] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.noKeySetOptimization: false
2025-02-28 14:24:43 [] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.selectorAutoRebuildThreshold: 512
2025-02-28 14:24:43 [] DEBUG i.n.util.internal.PlatformDependent - org.jctools-core.MpscChunkedArrayQueue: available
2025-02-28 14:24:43 [] DEBUG io.netty.util.NetUtil - -Djava.net.preferIPv4Stack: false
2025-02-28 14:24:43 [] DEBUG io.netty.util.NetUtil - -Djava.net.preferIPv6Addresses: false
2025-02-28 14:24:43 [] DEBUG i.netty.util.NetUtilInitializations - Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2025-02-28 14:24:43 [] DEBUG io.netty.util.NetUtil - Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2025-02-28 14:24:43 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default ResolvedAddressTypes: IPV4_ONLY
2025-02-28 14:24:43 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Localhost address: localhost/127.0.0.1
2025-02-28 14:24:43 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Windows hostname: DESKTOP-P307093
2025-02-28 14:24:43 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default search domains: []
2025-02-28 14:24:43 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default UnixResolverOptions{ndots=1, timeout=5, attempts=16}
2025-02-28 14:24:43 [] DEBUG i.n.r.DefaultHostsFileEntriesResolver - -Dio.netty.hostsFileRefreshInterval: 0
2025-02-28 14:24:43 [] DEBUG i.n.r.d.DefaultDnsServerAddressStreamProvider - Default DNS servers: [/8.8.8.8:53, /4.2.2.2:53] (sun.net.dns.ResolverConfiguration)
2025-02-28 14:24:43 [] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-02-28 14:24:43 [] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-02-28 14:24:44 [] INFO  c.c.c.g.c.CommongatewayApplication - Started CommongatewayApplication in 4.27 seconds (process running for 5.314)
2025-02-28 14:24:51 [] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-02-28 14:24:51 [] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-02-28 14:24:51 [] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 0 ms
2025-02-28 14:24:51 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 14:24:51 [1e331efa-9e9c-4ff7-9ad0-3836a8d4f777] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 14:24:51 [1e331efa-9e9c-4ff7-9ad0-3836a8d4f777] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /users
2025-02-28 14:24:51 [1e331efa-9e9c-4ff7-9ad0-3836a8d4f777] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔄 Using HTTP Method: GET
2025-02-28 14:24:51 [1e331efa-9e9c-4ff7-9ad0-3836a8d4f777] DEBUG r.n.r.PooledConnectionProvider - Creating a new [http] client pool [PoolFactory{evictionInterval=PT0S, leasingStrategy=fifo, maxConnections=500, maxIdleTime=-1, maxLifeTime=-1, metricsEnabled=false, pendingAcquireMaxCount=1000, pendingAcquireTimeout=45000}] for [localhost/<unresolved>:8081]
2025-02-28 14:24:51 [1e331efa-9e9c-4ff7-9ad0-3836a8d4f777] DEBUG io.netty.channel.DefaultChannelId - -Dio.netty.processId: 18668 (auto-detected)
2025-02-28 14:24:51 [1e331efa-9e9c-4ff7-9ad0-3836a8d4f777] DEBUG io.netty.channel.DefaultChannelId - -Dio.netty.machineId: 00:15:5d:ff:fe:02:b5:1f (auto-detected)
2025-02-28 14:24:51 [1e331efa-9e9c-4ff7-9ad0-3836a8d4f777] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.numHeapArenas: 24
2025-02-28 14:24:51 [1e331efa-9e9c-4ff7-9ad0-3836a8d4f777] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.numDirectArenas: 24
2025-02-28 14:24:51 [1e331efa-9e9c-4ff7-9ad0-3836a8d4f777] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.pageSize: 8192
2025-02-28 14:24:51 [1e331efa-9e9c-4ff7-9ad0-3836a8d4f777] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxOrder: 9
2025-02-28 14:24:51 [1e331efa-9e9c-4ff7-9ad0-3836a8d4f777] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.chunkSize: 4194304
2025-02-28 14:24:51 [1e331efa-9e9c-4ff7-9ad0-3836a8d4f777] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.smallCacheSize: 256
2025-02-28 14:24:51 [1e331efa-9e9c-4ff7-9ad0-3836a8d4f777] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.normalCacheSize: 64
2025-02-28 14:24:51 [1e331efa-9e9c-4ff7-9ad0-3836a8d4f777] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2025-02-28 14:24:51 [1e331efa-9e9c-4ff7-9ad0-3836a8d4f777] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.cacheTrimInterval: 8192
2025-02-28 14:24:51 [1e331efa-9e9c-4ff7-9ad0-3836a8d4f777] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.cacheTrimIntervalMillis: 0
2025-02-28 14:24:51 [1e331efa-9e9c-4ff7-9ad0-3836a8d4f777] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.useCacheForAllThreads: false
2025-02-28 14:24:51 [1e331efa-9e9c-4ff7-9ad0-3836a8d4f777] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
2025-02-28 14:24:51 [1e331efa-9e9c-4ff7-9ad0-3836a8d4f777] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.disableCacheFinalizersForFastThreadLocalThreads: false
2025-02-28 14:24:51 [1e331efa-9e9c-4ff7-9ad0-3836a8d4f777] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.allocator.type: pooled
2025-02-28 14:24:51 [1e331efa-9e9c-4ff7-9ad0-3836a8d4f777] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.threadLocalDirectBufferSize: 0
2025-02-28 14:24:51 [1e331efa-9e9c-4ff7-9ad0-3836a8d4f777] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.maxThreadLocalCharBufferSize: 16384
2025-02-28 14:24:51 [] DEBUG r.n.r.PooledConnectionProvider - [c1856502] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 14:24:51 [] DEBUG io.netty.buffer.AbstractByteBuf - -Dio.netty.buffer.checkAccessible: true
2025-02-28 14:24:51 [] DEBUG io.netty.buffer.AbstractByteBuf - -Dio.netty.buffer.checkBounds: true
2025-02-28 14:24:51 [] DEBUG i.n.util.ResourceLeakDetectorFactory - Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@679042cd
2025-02-28 14:24:51 [] DEBUG r.netty.transport.TransportConfig - [c1856502] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-28 14:24:51 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 14:24:51 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 14:24:51 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 14:24:51 [] DEBUG i.n.b.ChannelInitializerExtensions - -Dio.netty.bootstrap.extensions: null
2025-02-28 14:24:51 [] DEBUG r.netty.transport.TransportConnector - [c1856502] Connecting to [localhost/127.0.0.1:8081].
2025-02-28 14:24:51 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [c1856502, L:/127.0.0.1:59418 - R:localhost/127.0.0.1:8081] Registering pool release on close event for channel
2025-02-28 14:24:51 [] DEBUG r.n.r.PooledConnectionProvider - [c1856502, L:/127.0.0.1:59418 - R:localhost/127.0.0.1:8081] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 14:24:51 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [c1856502, L:/127.0.0.1:59418 - R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0xc1856502, L:/127.0.0.1:59418 - R:localhost/127.0.0.1:8081]}, [connected])
2025-02-28 14:24:51 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [c1856502-1, L:/127.0.0.1:59418 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0xc1856502, L:/127.0.0.1:59418 - R:localhost/127.0.0.1:8081]}}, [configured])
2025-02-28 14:24:51 [] DEBUG r.n.http.client.HttpClientConnect - [c1856502-1, L:/127.0.0.1:59418 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate, method=GET}
2025-02-28 14:24:51 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [c1856502-1, L:/127.0.0.1:59418 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xc1856502, L:/127.0.0.1:59418 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 14:24:51 [] DEBUG r.n.http.client.HttpClientOperations - [c1856502-1, L:/127.0.0.1:59418 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 14:24:51 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.maxCapacityPerThread: 4096
2025-02-28 14:24:51 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.ratio: 8
2025-02-28 14:24:51 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.chunkSize: 32
2025-02-28 14:24:51 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.blocking: false
2025-02-28 14:24:51 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.batchFastThreadLocalOnly: true
2025-02-28 14:24:51 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [c1856502-1, L:/127.0.0.1:59418 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xc1856502, L:/127.0.0.1:59418 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 14:24:51 [] DEBUG i.n.handler.codec.compression.Zstd - zstd-jni not in the classpath; Zstd support will be unavailable.
2025-02-28 14:24:51 [] DEBUG r.n.http.client.HttpClientOperations - [c1856502-1, L:/127.0.0.1:59418 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 500 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
Connection: <filtered>
2025-02-28 14:24:51 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [c1856502-1, L:/127.0.0.1:59418 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xc1856502, L:/127.0.0.1:59418 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 14:24:51 [] DEBUG reactor.netty.channel.FluxReceive - [c1856502-1, L:/127.0.0.1:59418 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-28 14:24:51 [] DEBUG r.n.http.client.HttpClientOperations - [c1856502-1, L:/127.0.0.1:59418 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 14:24:51 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [c1856502, L:/127.0.0.1:59418 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xc1856502, L:/127.0.0.1:59418 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 14:24:51 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [c1856502, L:/127.0.0.1:59418 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xc1856502, L:/127.0.0.1:59418 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 14:24:51 [] DEBUG r.n.r.PooledConnectionProvider - [c1856502, L:/127.0.0.1:59418 ! R:localhost/127.0.0.1:8081] Channel closed, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 14:24:51 [1e331efa-9e9c-4ff7-9ad0-3836a8d4f777] ERROR c.c.c.g.c.c.ValidationInterceptor - ⚠️ Error calling validation service
org.springframework.web.reactive.function.client.WebClientResponseException$InternalServerError: 500 Internal Server Error from GET http://localhost:8081/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 500 INTERNAL_SERVER_ERROR from GET http://localhost:8081/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104)
		at reactor.core.publisher.Mono.block(Mono.java:1779)
		at com.citpl.common.gateway.commongateway.config.ValidationInterceptor.preHandle(ValidationInterceptor.java:70)
		at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:146)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1083)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
		at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at com.citpl.common.gateway.commongateway.filter.MDCFilter.doFilter(MDCFilter.java:37)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.cloud.gateway.server.mvc.filter.WeightCalculatorFilter.doFilter(WeightCalculatorFilter.java:229)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.cloud.gateway.server.mvc.filter.FormFilter.doFilter(FormFilter.java:93)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-28 14:24:51 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [c1856502, L:/127.0.0.1:59418 ! R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0xc1856502, L:/127.0.0.1:59418 ! R:localhost/127.0.0.1:8081]}, [disconnecting])
2025-02-28 14:24:51 [] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /error
2025-02-28 14:24:51 [] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔄 Using HTTP Method: GET
2025-02-28 14:24:51 [] DEBUG r.n.r.PooledConnectionProvider - [4f8a58df] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 14:24:51 [] DEBUG r.netty.transport.TransportConfig - [4f8a58df] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-28 14:24:51 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 14:24:51 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 14:24:51 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 14:24:51 [] DEBUG r.netty.transport.TransportConnector - [4f8a58df] Connecting to [localhost/127.0.0.1:8081].
2025-02-28 14:24:51 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [4f8a58df, L:/127.0.0.1:59419 - R:localhost/127.0.0.1:8081] Registering pool release on close event for channel
2025-02-28 14:24:51 [] DEBUG r.n.r.PooledConnectionProvider - [4f8a58df, L:/127.0.0.1:59419 - R:localhost/127.0.0.1:8081] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 14:24:51 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [4f8a58df, L:/127.0.0.1:59419 - R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x4f8a58df, L:/127.0.0.1:59419 - R:localhost/127.0.0.1:8081]}, [connected])
2025-02-28 14:24:51 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [4f8a58df-1, L:/127.0.0.1:59419 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0x4f8a58df, L:/127.0.0.1:59419 - R:localhost/127.0.0.1:8081]}}, [configured])
2025-02-28 14:24:51 [] DEBUG r.n.http.client.HttpClientConnect - [4f8a58df-1, L:/127.0.0.1:59419 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate, method=GET}
2025-02-28 14:24:51 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [4f8a58df-1, L:/127.0.0.1:59419 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x4f8a58df, L:/127.0.0.1:59419 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 14:24:51 [] DEBUG r.n.http.client.HttpClientOperations - [4f8a58df-1, L:/127.0.0.1:59419 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 14:24:51 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [4f8a58df-1, L:/127.0.0.1:59419 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x4f8a58df, L:/127.0.0.1:59419 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 14:24:51 [] DEBUG r.n.http.client.HttpClientOperations - [4f8a58df-1, L:/127.0.0.1:59419 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 500 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
Connection: <filtered>
2025-02-28 14:24:51 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [4f8a58df-1, L:/127.0.0.1:59419 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x4f8a58df, L:/127.0.0.1:59419 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 14:24:51 [] DEBUG reactor.netty.channel.FluxReceive - [4f8a58df-1, L:/127.0.0.1:59419 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-28 14:24:51 [] DEBUG r.n.http.client.HttpClientOperations - [4f8a58df-1, L:/127.0.0.1:59419 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 14:24:51 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [4f8a58df, L:/127.0.0.1:59419 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x4f8a58df, L:/127.0.0.1:59419 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 14:24:51 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [4f8a58df, L:/127.0.0.1:59419 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x4f8a58df, L:/127.0.0.1:59419 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 14:24:51 [] DEBUG r.n.r.PooledConnectionProvider - [4f8a58df, L:/127.0.0.1:59419 ! R:localhost/127.0.0.1:8081] Channel closed, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 14:24:51 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [4f8a58df, L:/127.0.0.1:59419 ! R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x4f8a58df, L:/127.0.0.1:59419 ! R:localhost/127.0.0.1:8081]}, [disconnecting])
2025-02-28 14:24:51 [] ERROR c.c.c.g.c.c.ValidationInterceptor - ⚠️ Error calling validation service
org.springframework.web.reactive.function.client.WebClientResponseException$InternalServerError: 500 Internal Server Error from GET http://localhost:8081/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 500 INTERNAL_SERVER_ERROR from GET http://localhost:8081/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104)
		at reactor.core.publisher.Mono.block(Mono.java:1779)
		at com.citpl.common.gateway.commongateway.config.ValidationInterceptor.preHandle(ValidationInterceptor.java:70)
		at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:146)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1083)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
		at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:633)
		at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:411)
		at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:331)
		at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:268)
		at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:380)
		at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:208)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:151)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-28 14:24:53 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 14:24:53 [e73e2936-b1d1-4a14-95d1-8349661ebaf6] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 14:24:53 [e73e2936-b1d1-4a14-95d1-8349661ebaf6] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /users
2025-02-28 14:24:53 [e73e2936-b1d1-4a14-95d1-8349661ebaf6] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔄 Using HTTP Method: GET
2025-02-28 14:24:53 [] DEBUG r.n.r.PooledConnectionProvider - [7a307c12] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 14:24:53 [] DEBUG r.netty.transport.TransportConfig - [7a307c12] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-28 14:24:53 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 14:24:53 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 14:24:53 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 14:24:53 [] DEBUG r.netty.transport.TransportConnector - [7a307c12] Connecting to [localhost/127.0.0.1:8081].
2025-02-28 14:24:53 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [7a307c12, L:/127.0.0.1:59423 - R:localhost/127.0.0.1:8081] Registering pool release on close event for channel
2025-02-28 14:24:53 [] DEBUG r.n.r.PooledConnectionProvider - [7a307c12, L:/127.0.0.1:59423 - R:localhost/127.0.0.1:8081] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 14:24:53 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [7a307c12, L:/127.0.0.1:59423 - R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x7a307c12, L:/127.0.0.1:59423 - R:localhost/127.0.0.1:8081]}, [connected])
2025-02-28 14:24:53 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [7a307c12-1, L:/127.0.0.1:59423 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0x7a307c12, L:/127.0.0.1:59423 - R:localhost/127.0.0.1:8081]}}, [configured])
2025-02-28 14:24:53 [] DEBUG r.n.http.client.HttpClientConnect - [7a307c12-1, L:/127.0.0.1:59423 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate, method=GET}
2025-02-28 14:24:53 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [7a307c12-1, L:/127.0.0.1:59423 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x7a307c12, L:/127.0.0.1:59423 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 14:24:53 [] DEBUG r.n.http.client.HttpClientOperations - [7a307c12-1, L:/127.0.0.1:59423 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 14:24:53 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [7a307c12-1, L:/127.0.0.1:59423 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x7a307c12, L:/127.0.0.1:59423 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 14:24:53 [] DEBUG r.n.http.client.HttpClientOperations - [7a307c12-1, L:/127.0.0.1:59423 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 500 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
Connection: <filtered>
2025-02-28 14:24:53 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [7a307c12-1, L:/127.0.0.1:59423 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x7a307c12, L:/127.0.0.1:59423 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 14:24:53 [] DEBUG reactor.netty.channel.FluxReceive - [7a307c12-1, L:/127.0.0.1:59423 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-28 14:24:53 [] DEBUG r.n.http.client.HttpClientOperations - [7a307c12-1, L:/127.0.0.1:59423 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 14:24:53 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [7a307c12, L:/127.0.0.1:59423 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x7a307c12, L:/127.0.0.1:59423 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 14:24:53 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [7a307c12, L:/127.0.0.1:59423 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x7a307c12, L:/127.0.0.1:59423 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 14:24:53 [] DEBUG r.n.r.PooledConnectionProvider - [7a307c12, L:/127.0.0.1:59423 ! R:localhost/127.0.0.1:8081] Channel closed, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 14:24:53 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [7a307c12, L:/127.0.0.1:59423 ! R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x7a307c12, L:/127.0.0.1:59423 ! R:localhost/127.0.0.1:8081]}, [disconnecting])
2025-02-28 14:24:53 [e73e2936-b1d1-4a14-95d1-8349661ebaf6] ERROR c.c.c.g.c.c.ValidationInterceptor - ⚠️ Error calling validation service
org.springframework.web.reactive.function.client.WebClientResponseException$InternalServerError: 500 Internal Server Error from GET http://localhost:8081/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 500 INTERNAL_SERVER_ERROR from GET http://localhost:8081/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104)
		at reactor.core.publisher.Mono.block(Mono.java:1779)
		at com.citpl.common.gateway.commongateway.config.ValidationInterceptor.preHandle(ValidationInterceptor.java:70)
		at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:146)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1083)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
		at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at com.citpl.common.gateway.commongateway.filter.MDCFilter.doFilter(MDCFilter.java:37)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.cloud.gateway.server.mvc.filter.WeightCalculatorFilter.doFilter(WeightCalculatorFilter.java:229)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.cloud.gateway.server.mvc.filter.FormFilter.doFilter(FormFilter.java:93)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-28 14:24:53 [] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /error
2025-02-28 14:24:53 [] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔄 Using HTTP Method: GET
2025-02-28 14:24:53 [] DEBUG r.n.r.PooledConnectionProvider - [32b83828] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 14:24:53 [] DEBUG r.netty.transport.TransportConfig - [32b83828] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-28 14:24:53 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 14:24:53 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 14:24:53 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 14:24:53 [] DEBUG r.netty.transport.TransportConnector - [32b83828] Connecting to [localhost/127.0.0.1:8081].
2025-02-28 14:24:53 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [32b83828, L:/127.0.0.1:59424 - R:localhost/127.0.0.1:8081] Registering pool release on close event for channel
2025-02-28 14:24:53 [] DEBUG r.n.r.PooledConnectionProvider - [32b83828, L:/127.0.0.1:59424 - R:localhost/127.0.0.1:8081] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 14:24:53 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [32b83828, L:/127.0.0.1:59424 - R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x32b83828, L:/127.0.0.1:59424 - R:localhost/127.0.0.1:8081]}, [connected])
2025-02-28 14:24:53 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [32b83828-1, L:/127.0.0.1:59424 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0x32b83828, L:/127.0.0.1:59424 - R:localhost/127.0.0.1:8081]}}, [configured])
2025-02-28 14:24:53 [] DEBUG r.n.http.client.HttpClientConnect - [32b83828-1, L:/127.0.0.1:59424 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate, method=GET}
2025-02-28 14:24:53 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [32b83828-1, L:/127.0.0.1:59424 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x32b83828, L:/127.0.0.1:59424 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 14:24:53 [] DEBUG r.n.http.client.HttpClientOperations - [32b83828-1, L:/127.0.0.1:59424 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 14:24:53 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [32b83828-1, L:/127.0.0.1:59424 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x32b83828, L:/127.0.0.1:59424 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 14:24:53 [] DEBUG r.n.http.client.HttpClientOperations - [32b83828-1, L:/127.0.0.1:59424 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 500 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
Connection: <filtered>
2025-02-28 14:24:53 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [32b83828-1, L:/127.0.0.1:59424 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x32b83828, L:/127.0.0.1:59424 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 14:24:53 [] DEBUG reactor.netty.channel.FluxReceive - [32b83828-1, L:/127.0.0.1:59424 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-28 14:24:53 [] DEBUG r.n.http.client.HttpClientOperations - [32b83828-1, L:/127.0.0.1:59424 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 14:24:53 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [32b83828, L:/127.0.0.1:59424 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x32b83828, L:/127.0.0.1:59424 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 14:24:53 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [32b83828, L:/127.0.0.1:59424 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x32b83828, L:/127.0.0.1:59424 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 14:24:53 [] DEBUG r.n.r.PooledConnectionProvider - [32b83828, L:/127.0.0.1:59424 ! R:localhost/127.0.0.1:8081] Channel closed, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 14:24:53 [] ERROR c.c.c.g.c.c.ValidationInterceptor - ⚠️ Error calling validation service
org.springframework.web.reactive.function.client.WebClientResponseException$InternalServerError: 500 Internal Server Error from GET http://localhost:8081/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 500 INTERNAL_SERVER_ERROR from GET http://localhost:8081/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104)
		at reactor.core.publisher.Mono.block(Mono.java:1779)
		at com.citpl.common.gateway.commongateway.config.ValidationInterceptor.preHandle(ValidationInterceptor.java:70)
		at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:146)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1083)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
		at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:633)
		at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:411)
		at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:331)
		at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:268)
		at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:380)
		at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:208)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:151)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-28 14:24:53 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [32b83828, L:/127.0.0.1:59424 ! R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x32b83828, L:/127.0.0.1:59424 ! R:localhost/127.0.0.1:8081]}, [disconnecting])
2025-02-28 14:24:58 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 14:24:58 [5d015188-ef60-4333-95ef-31e50fd87514] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 14:24:58 [5d015188-ef60-4333-95ef-31e50fd87514] DEBUG i.m.c.u.i.l.InternalLoggerFactory - Using SLF4J as the default logging framework
2025-02-28 14:24:58 [5d015188-ef60-4333-95ef-31e50fd87514] DEBUG r.n.r.PooledConnectionProvider - Creating a new [http] client pool [PoolFactory{evictionInterval=PT0S, leasingStrategy=fifo, maxConnections=500, maxIdleTime=-1, maxLifeTime=-1, metricsEnabled=false, pendingAcquireMaxCount=1000, pendingAcquireTimeout=45000}] for [localhost/<unresolved>:8081]
2025-02-28 14:24:58 [] DEBUG r.n.r.PooledConnectionProvider - [b7479775] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 14:24:58 [] DEBUG r.netty.transport.TransportConfig - [b7479775] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-28 14:24:58 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 14:24:58 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 14:24:58 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 14:24:58 [] DEBUG r.netty.transport.TransportConnector - [b7479775] Connecting to [localhost/127.0.0.1:8081].
2025-02-28 14:24:58 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b7479775, L:/127.0.0.1:59428 - R:localhost/127.0.0.1:8081] Registering pool release on close event for channel
2025-02-28 14:24:58 [] DEBUG r.n.r.PooledConnectionProvider - [b7479775, L:/127.0.0.1:59428 - R:localhost/127.0.0.1:8081] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 14:24:58 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b7479775, L:/127.0.0.1:59428 - R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0xb7479775, L:/127.0.0.1:59428 - R:localhost/127.0.0.1:8081]}, [connected])
2025-02-28 14:24:58 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b7479775-1, L:/127.0.0.1:59428 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0xb7479775, L:/127.0.0.1:59428 - R:localhost/127.0.0.1:8081]}}, [configured])
2025-02-28 14:24:58 [] DEBUG r.n.http.client.HttpClientConnect - [b7479775-1, L:/127.0.0.1:59428 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY, method=GET}
2025-02-28 14:24:58 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b7479775-1, L:/127.0.0.1:59428 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xb7479775, L:/127.0.0.1:59428 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 14:24:58 [] DEBUG r.n.http.client.HttpClientOperations - [b7479775-1, L:/127.0.0.1:59428 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 14:24:58 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b7479775-1, L:/127.0.0.1:59428 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xb7479775, L:/127.0.0.1:59428 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 14:24:58 [] DEBUG r.n.http.client.HttpClientOperations - [b7479775-1, L:/127.0.0.1:59428 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-28 14:24:58 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b7479775-1, L:/127.0.0.1:59428 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xb7479775, L:/127.0.0.1:59428 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 14:24:58 [] DEBUG reactor.netty.channel.FluxReceive - [b7479775-1, L:/127.0.0.1:59428 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=1, error=null]: subscribing inbound receiver
2025-02-28 14:24:58 [] DEBUG r.n.http.client.HttpClientOperations - [b7479775-1, L:/127.0.0.1:59428 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 14:24:58 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b7479775, L:/127.0.0.1:59428 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xb7479775, L:/127.0.0.1:59428 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 14:24:58 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b7479775, L:/127.0.0.1:59428 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xb7479775, L:/127.0.0.1:59428 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 14:24:58 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b7479775, L:/127.0.0.1:59428 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-28 14:24:58 [] DEBUG r.n.r.PooledConnectionProvider - [b7479775, L:/127.0.0.1:59428 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-28 14:25:03 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 14:25:03 [930405e7-c125-4f4a-8b15-a87d756457e0] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 14:25:03 [930405e7-c125-4f4a-8b15-a87d756457e0] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /users
2025-02-28 14:25:03 [930405e7-c125-4f4a-8b15-a87d756457e0] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔄 Using HTTP Method: GET
2025-02-28 14:25:03 [] DEBUG r.n.r.PooledConnectionProvider - [2f41b251] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 14:25:03 [] DEBUG r.netty.transport.TransportConfig - [2f41b251] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-28 14:25:03 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 14:25:03 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 14:25:03 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 14:25:03 [] DEBUG r.netty.transport.TransportConnector - [2f41b251] Connecting to [localhost/127.0.0.1:8081].
2025-02-28 14:25:03 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [2f41b251, L:/127.0.0.1:59439 - R:localhost/127.0.0.1:8081] Registering pool release on close event for channel
2025-02-28 14:25:03 [] DEBUG r.n.r.PooledConnectionProvider - [2f41b251, L:/127.0.0.1:59439 - R:localhost/127.0.0.1:8081] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 14:25:03 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [2f41b251, L:/127.0.0.1:59439 - R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x2f41b251, L:/127.0.0.1:59439 - R:localhost/127.0.0.1:8081]}, [connected])
2025-02-28 14:25:03 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [2f41b251-1, L:/127.0.0.1:59439 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0x2f41b251, L:/127.0.0.1:59439 - R:localhost/127.0.0.1:8081]}}, [configured])
2025-02-28 14:25:03 [] DEBUG r.n.http.client.HttpClientConnect - [2f41b251-1, L:/127.0.0.1:59439 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate, method=GET}
2025-02-28 14:25:03 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [2f41b251-1, L:/127.0.0.1:59439 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x2f41b251, L:/127.0.0.1:59439 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 14:25:03 [] DEBUG r.n.http.client.HttpClientOperations - [2f41b251-1, L:/127.0.0.1:59439 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 14:25:03 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [2f41b251-1, L:/127.0.0.1:59439 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x2f41b251, L:/127.0.0.1:59439 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 14:25:03 [] DEBUG r.n.http.client.HttpClientOperations - [2f41b251-1, L:/127.0.0.1:59439 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 500 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
Connection: <filtered>
2025-02-28 14:25:03 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [2f41b251-1, L:/127.0.0.1:59439 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x2f41b251, L:/127.0.0.1:59439 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 14:25:03 [] DEBUG reactor.netty.channel.FluxReceive - [2f41b251-1, L:/127.0.0.1:59439 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-28 14:25:03 [] DEBUG r.n.http.client.HttpClientOperations - [2f41b251-1, L:/127.0.0.1:59439 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 14:25:03 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [2f41b251, L:/127.0.0.1:59439 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x2f41b251, L:/127.0.0.1:59439 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 14:25:03 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [2f41b251, L:/127.0.0.1:59439 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x2f41b251, L:/127.0.0.1:59439 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 14:25:03 [930405e7-c125-4f4a-8b15-a87d756457e0] ERROR c.c.c.g.c.c.ValidationInterceptor - ⚠️ Error calling validation service
org.springframework.web.reactive.function.client.WebClientResponseException$InternalServerError: 500 Internal Server Error from GET http://localhost:8081/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 500 INTERNAL_SERVER_ERROR from GET http://localhost:8081/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104)
		at reactor.core.publisher.Mono.block(Mono.java:1779)
		at com.citpl.common.gateway.commongateway.config.ValidationInterceptor.preHandle(ValidationInterceptor.java:70)
		at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:146)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1083)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
		at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at com.citpl.common.gateway.commongateway.filter.MDCFilter.doFilter(MDCFilter.java:37)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.cloud.gateway.server.mvc.filter.WeightCalculatorFilter.doFilter(WeightCalculatorFilter.java:229)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.cloud.gateway.server.mvc.filter.FormFilter.doFilter(FormFilter.java:93)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-28 14:25:03 [] DEBUG r.n.r.PooledConnectionProvider - [2f41b251, L:/127.0.0.1:59439 ! R:localhost/127.0.0.1:8081] Channel closed, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 14:25:03 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [2f41b251, L:/127.0.0.1:59439 ! R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x2f41b251, L:/127.0.0.1:59439 ! R:localhost/127.0.0.1:8081]}, [disconnecting])
2025-02-28 14:25:03 [] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /error
2025-02-28 14:25:03 [] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔄 Using HTTP Method: GET
2025-02-28 14:25:03 [] DEBUG r.n.r.PooledConnectionProvider - [773177ae] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 14:25:03 [] DEBUG r.netty.transport.TransportConfig - [773177ae] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-28 14:25:03 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 14:25:03 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 14:25:03 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 14:25:03 [] DEBUG r.netty.transport.TransportConnector - [773177ae] Connecting to [localhost/127.0.0.1:8081].
2025-02-28 14:25:03 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [773177ae, L:/127.0.0.1:59440 - R:localhost/127.0.0.1:8081] Registering pool release on close event for channel
2025-02-28 14:25:03 [] DEBUG r.n.r.PooledConnectionProvider - [773177ae, L:/127.0.0.1:59440 - R:localhost/127.0.0.1:8081] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 14:25:03 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [773177ae, L:/127.0.0.1:59440 - R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x773177ae, L:/127.0.0.1:59440 - R:localhost/127.0.0.1:8081]}, [connected])
2025-02-28 14:25:03 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [773177ae-1, L:/127.0.0.1:59440 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0x773177ae, L:/127.0.0.1:59440 - R:localhost/127.0.0.1:8081]}}, [configured])
2025-02-28 14:25:03 [] DEBUG r.n.http.client.HttpClientConnect - [773177ae-1, L:/127.0.0.1:59440 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate, method=GET}
2025-02-28 14:25:03 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [773177ae-1, L:/127.0.0.1:59440 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x773177ae, L:/127.0.0.1:59440 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 14:25:03 [] DEBUG r.n.http.client.HttpClientOperations - [773177ae-1, L:/127.0.0.1:59440 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 14:25:03 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [773177ae-1, L:/127.0.0.1:59440 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x773177ae, L:/127.0.0.1:59440 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 14:25:03 [] DEBUG r.n.http.client.HttpClientOperations - [773177ae-1, L:/127.0.0.1:59440 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 500 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
Connection: <filtered>
2025-02-28 14:25:03 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [773177ae-1, L:/127.0.0.1:59440 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x773177ae, L:/127.0.0.1:59440 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 14:25:03 [] DEBUG reactor.netty.channel.FluxReceive - [773177ae-1, L:/127.0.0.1:59440 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-28 14:25:03 [] DEBUG r.n.http.client.HttpClientOperations - [773177ae-1, L:/127.0.0.1:59440 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 14:25:03 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [773177ae, L:/127.0.0.1:59440 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x773177ae, L:/127.0.0.1:59440 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 14:25:03 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [773177ae, L:/127.0.0.1:59440 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x773177ae, L:/127.0.0.1:59440 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 14:25:03 [] ERROR c.c.c.g.c.c.ValidationInterceptor - ⚠️ Error calling validation service
org.springframework.web.reactive.function.client.WebClientResponseException$InternalServerError: 500 Internal Server Error from GET http://localhost:8081/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 500 INTERNAL_SERVER_ERROR from GET http://localhost:8081/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104)
		at reactor.core.publisher.Mono.block(Mono.java:1779)
		at com.citpl.common.gateway.commongateway.config.ValidationInterceptor.preHandle(ValidationInterceptor.java:70)
		at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:146)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1083)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
		at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:633)
		at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:411)
		at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:331)
		at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:268)
		at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:380)
		at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:208)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:151)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-28 14:25:03 [] DEBUG r.n.r.PooledConnectionProvider - [773177ae, L:/127.0.0.1:59440 ! R:localhost/127.0.0.1:8081] Channel closed, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 14:25:03 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [773177ae, L:/127.0.0.1:59440 ! R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x773177ae, L:/127.0.0.1:59440 ! R:localhost/127.0.0.1:8081]}, [disconnecting])
2025-02-28 14:25:05 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 14:25:05 [8411a6b7-8819-458e-b98b-3e74f0bdb722] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 14:25:05 [8411a6b7-8819-458e-b98b-3e74f0bdb722] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /users
2025-02-28 14:25:05 [8411a6b7-8819-458e-b98b-3e74f0bdb722] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔄 Using HTTP Method: GET
2025-02-28 14:25:05 [] DEBUG r.n.r.PooledConnectionProvider - [3b1794ab] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 14:25:05 [] DEBUG r.netty.transport.TransportConfig - [3b1794ab] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-28 14:25:05 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 14:25:05 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 14:25:05 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 14:25:05 [] DEBUG r.netty.transport.TransportConnector - [3b1794ab] Connecting to [localhost/127.0.0.1:8081].
2025-02-28 14:25:05 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [3b1794ab, L:/127.0.0.1:59444 - R:localhost/127.0.0.1:8081] Registering pool release on close event for channel
2025-02-28 14:25:05 [] DEBUG r.n.r.PooledConnectionProvider - [3b1794ab, L:/127.0.0.1:59444 - R:localhost/127.0.0.1:8081] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 14:25:05 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [3b1794ab, L:/127.0.0.1:59444 - R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x3b1794ab, L:/127.0.0.1:59444 - R:localhost/127.0.0.1:8081]}, [connected])
2025-02-28 14:25:05 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [3b1794ab-1, L:/127.0.0.1:59444 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0x3b1794ab, L:/127.0.0.1:59444 - R:localhost/127.0.0.1:8081]}}, [configured])
2025-02-28 14:25:05 [] DEBUG r.n.http.client.HttpClientConnect - [3b1794ab-1, L:/127.0.0.1:59444 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate, method=GET}
2025-02-28 14:25:05 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [3b1794ab-1, L:/127.0.0.1:59444 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x3b1794ab, L:/127.0.0.1:59444 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 14:25:05 [] DEBUG r.n.http.client.HttpClientOperations - [3b1794ab-1, L:/127.0.0.1:59444 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 14:25:05 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [3b1794ab-1, L:/127.0.0.1:59444 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x3b1794ab, L:/127.0.0.1:59444 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 14:25:05 [] DEBUG r.n.http.client.HttpClientOperations - [3b1794ab-1, L:/127.0.0.1:59444 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 500 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
Connection: <filtered>
2025-02-28 14:25:05 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [3b1794ab-1, L:/127.0.0.1:59444 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x3b1794ab, L:/127.0.0.1:59444 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 14:25:05 [] DEBUG reactor.netty.channel.FluxReceive - [3b1794ab-1, L:/127.0.0.1:59444 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-28 14:25:05 [] DEBUG r.n.http.client.HttpClientOperations - [3b1794ab-1, L:/127.0.0.1:59444 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 14:25:05 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [3b1794ab, L:/127.0.0.1:59444 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x3b1794ab, L:/127.0.0.1:59444 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 14:25:05 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [3b1794ab, L:/127.0.0.1:59444 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x3b1794ab, L:/127.0.0.1:59444 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 14:25:05 [8411a6b7-8819-458e-b98b-3e74f0bdb722] ERROR c.c.c.g.c.c.ValidationInterceptor - ⚠️ Error calling validation service
org.springframework.web.reactive.function.client.WebClientResponseException$InternalServerError: 500 Internal Server Error from GET http://localhost:8081/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 500 INTERNAL_SERVER_ERROR from GET http://localhost:8081/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104)
		at reactor.core.publisher.Mono.block(Mono.java:1779)
		at com.citpl.common.gateway.commongateway.config.ValidationInterceptor.preHandle(ValidationInterceptor.java:70)
		at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:146)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1083)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
		at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at com.citpl.common.gateway.commongateway.filter.MDCFilter.doFilter(MDCFilter.java:37)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.cloud.gateway.server.mvc.filter.WeightCalculatorFilter.doFilter(WeightCalculatorFilter.java:229)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.cloud.gateway.server.mvc.filter.FormFilter.doFilter(FormFilter.java:93)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-28 14:25:05 [] DEBUG r.n.r.PooledConnectionProvider - [3b1794ab, L:/127.0.0.1:59444 ! R:localhost/127.0.0.1:8081] Channel closed, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 14:25:05 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [3b1794ab, L:/127.0.0.1:59444 ! R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x3b1794ab, L:/127.0.0.1:59444 ! R:localhost/127.0.0.1:8081]}, [disconnecting])
2025-02-28 14:25:05 [] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /error
2025-02-28 14:25:05 [] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔄 Using HTTP Method: GET
2025-02-28 14:25:05 [] DEBUG r.n.r.PooledConnectionProvider - [5570e54a] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 14:25:05 [] DEBUG r.netty.transport.TransportConfig - [5570e54a] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-28 14:25:05 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 14:25:05 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 14:25:05 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 14:25:05 [] DEBUG r.netty.transport.TransportConnector - [5570e54a] Connecting to [localhost/127.0.0.1:8081].
2025-02-28 14:25:05 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [5570e54a, L:/127.0.0.1:59445 - R:localhost/127.0.0.1:8081] Registering pool release on close event for channel
2025-02-28 14:25:05 [] DEBUG r.n.r.PooledConnectionProvider - [5570e54a, L:/127.0.0.1:59445 - R:localhost/127.0.0.1:8081] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 14:25:05 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [5570e54a, L:/127.0.0.1:59445 - R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x5570e54a, L:/127.0.0.1:59445 - R:localhost/127.0.0.1:8081]}, [connected])
2025-02-28 14:25:05 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [5570e54a-1, L:/127.0.0.1:59445 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0x5570e54a, L:/127.0.0.1:59445 - R:localhost/127.0.0.1:8081]}}, [configured])
2025-02-28 14:25:05 [] DEBUG r.n.http.client.HttpClientConnect - [5570e54a-1, L:/127.0.0.1:59445 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate, method=GET}
2025-02-28 14:25:05 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [5570e54a-1, L:/127.0.0.1:59445 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x5570e54a, L:/127.0.0.1:59445 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 14:25:05 [] DEBUG r.n.http.client.HttpClientOperations - [5570e54a-1, L:/127.0.0.1:59445 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 14:25:05 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [5570e54a-1, L:/127.0.0.1:59445 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x5570e54a, L:/127.0.0.1:59445 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 14:25:05 [] DEBUG r.n.http.client.HttpClientOperations - [5570e54a-1, L:/127.0.0.1:59445 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 500 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
Connection: <filtered>
2025-02-28 14:25:05 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [5570e54a-1, L:/127.0.0.1:59445 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x5570e54a, L:/127.0.0.1:59445 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 14:25:05 [] DEBUG reactor.netty.channel.FluxReceive - [5570e54a-1, L:/127.0.0.1:59445 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-28 14:25:05 [] DEBUG r.n.http.client.HttpClientOperations - [5570e54a-1, L:/127.0.0.1:59445 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 14:25:05 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [5570e54a, L:/127.0.0.1:59445 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x5570e54a, L:/127.0.0.1:59445 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 14:25:05 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [5570e54a, L:/127.0.0.1:59445 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x5570e54a, L:/127.0.0.1:59445 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 14:25:05 [] ERROR c.c.c.g.c.c.ValidationInterceptor - ⚠️ Error calling validation service
org.springframework.web.reactive.function.client.WebClientResponseException$InternalServerError: 500 Internal Server Error from GET http://localhost:8081/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 500 INTERNAL_SERVER_ERROR from GET http://localhost:8081/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104)
		at reactor.core.publisher.Mono.block(Mono.java:1779)
		at com.citpl.common.gateway.commongateway.config.ValidationInterceptor.preHandle(ValidationInterceptor.java:70)
		at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:146)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1083)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
		at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:633)
		at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:411)
		at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:331)
		at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:268)
		at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:380)
		at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:208)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:151)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-28 14:25:05 [] DEBUG r.n.r.PooledConnectionProvider - [5570e54a, L:/127.0.0.1:59445 ! R:localhost/127.0.0.1:8081] Channel closed, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 14:25:05 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [5570e54a, L:/127.0.0.1:59445 ! R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x5570e54a, L:/127.0.0.1:59445 ! R:localhost/127.0.0.1:8081]}, [disconnecting])
2025-02-28 14:25:59 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b7479775, L:/127.0.0.1:59428 ! R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0xb7479775, L:/127.0.0.1:59428 ! R:localhost/127.0.0.1:8081]}, [disconnecting])
2025-02-28 14:26:10 [] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-02-28 14:26:11 [] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-02-28 14:26:11 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 4 thread-local buffer(s) from thread: reactor-http-nio-5
2025-02-28 14:26:11 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 4 thread-local buffer(s) from thread: reactor-http-nio-3
2025-02-28 14:26:11 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 4 thread-local buffer(s) from thread: reactor-http-nio-11
2025-02-28 14:26:11 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 3 thread-local buffer(s) from thread: reactor-http-nio-2
2025-02-28 14:26:11 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 4 thread-local buffer(s) from thread: reactor-http-nio-4
2025-02-28 14:26:11 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 4 thread-local buffer(s) from thread: reactor-http-nio-8
2025-02-28 14:26:11 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 4 thread-local buffer(s) from thread: reactor-http-nio-10
2025-02-28 14:26:11 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 5 thread-local buffer(s) from thread: reactor-http-nio-7
2025-02-28 14:26:11 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 4 thread-local buffer(s) from thread: reactor-http-nio-9
2025-02-28 14:26:15 [] DEBUG org.jboss.logging - Logging Provider: org.jboss.logging.Slf4jLoggerProvider found via system property
2025-02-28 14:26:15 [] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final
2025-02-28 14:26:15 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-02-28 14:26:15 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-02-28 14:26:15 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-02-28 14:26:15 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-02-28 14:26:15 [] DEBUG o.h.v.i.e.r.TraversableResolvers - Cannot find jakarta.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2025-02-28 14:26:15 [] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-02-28 14:26:15 [] INFO  c.c.c.g.c.CommongatewayApplication - Starting CommongatewayApplication using Java 17.0.12 with PID 18488 (D:\WORKSPACE\API-GATEWAY\commongateway\target\classes started by CITPL in D:\WORKSPACE\API-GATEWAY)
2025-02-28 14:26:15 [] DEBUG c.c.c.g.c.CommongatewayApplication - Running with Spring Boot v3.4.2, Spring v6.2.2
2025-02-28 14:26:15 [] INFO  c.c.c.g.c.CommongatewayApplication - No active profile set, falling back to 1 default profile: "default"
2025-02-28 14:26:15 [] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-02-28 14:26:15 [] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-02-28 14:26:15 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-02-28 14:26:15 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-02-28 14:26:15 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-02-28 14:26:15 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-02-28 14:26:15 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-02-28 14:26:15 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-02-28 14:26:17 [] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=d2aee5ef-86a6-3b95-abd8-708d95e66676
2025-02-28 14:26:17 [] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-02-28 14:26:17 [] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-02-28 14:26:17 [] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-02-28 14:26:17 [] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.34]
2025-02-28 14:26:17 [] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-02-28 14:26:17 [] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1945 ms
2025-02-28 14:26:18 [] DEBUG i.n.u.i.l.InternalLoggerFactory - Using SLF4J as the default logging framework
2025-02-28 14:26:18 [] DEBUG i.n.util.internal.PlatformDependent0 - -Dio.netty.noUnsafe: false
2025-02-28 14:26:18 [] DEBUG i.n.util.internal.PlatformDependent0 - Java version: 17
2025-02-28 14:26:18 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe.theUnsafe: available
2025-02-28 14:26:18 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe base methods: all available
2025-02-28 14:26:18 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe.storeFence: available
2025-02-28 14:26:18 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.Buffer.address: available
2025-02-28 14:26:18 [] DEBUG i.n.util.internal.PlatformDependent0 - direct buffer constructor: unavailable: Reflective setAccessible(true) disabled
2025-02-28 14:26:18 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.Bits.unaligned: available, true
2025-02-28 14:26:18 [] DEBUG i.n.util.internal.PlatformDependent0 - jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable: class io.netty.util.internal.PlatformDependent0$7 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @3e77a1ed
2025-02-28 14:26:18 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.DirectByteBuffer.<init>(long, {int,long}): unavailable
2025-02-28 14:26:18 [] DEBUG i.n.util.internal.PlatformDependent - sun.misc.Unsafe: available
2025-02-28 14:26:18 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.tmpdir: C:\Users\CITPL\AppData\Local\Temp (java.io.tmpdir)
2025-02-28 14:26:18 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.bitMode: 64 (sun.arch.data.model)
2025-02-28 14:26:18 [] DEBUG i.n.util.internal.PlatformDependent - Platform: Windows
2025-02-28 14:26:18 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.maxDirectMemory: -1 bytes
2025-02-28 14:26:18 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.uninitializedArrayAllocationThreshold: -1
2025-02-28 14:26:18 [] DEBUG io.netty.util.internal.CleanerJava9 - java.nio.ByteBuffer.cleaner(): available
2025-02-28 14:26:18 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.noPreferDirect: false
2025-02-28 14:26:18 [] DEBUG reactor.util.Loggers - Using Slf4j logging framework
2025-02-28 14:26:18 [] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-02-28 14:26:18 [] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2025-02-28 14:26:18 [] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2025-02-28 14:26:18 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-02-28 14:26:18 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via user class loader
2025-02-28 14:26:18 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-02-28 14:26:18 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-02-28 14:26:18 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-02-28 14:26:18 [] DEBUG o.h.v.i.e.r.TraversableResolvers - Cannot find jakarta.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2025-02-28 14:26:18 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-02-28 14:26:18 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-02-28 14:26:18 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-02-28 14:26:18 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-02-28 14:26:18 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-02-28 14:26:18 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-02-28 14:26:18 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	c.c.c.g.c.c.HomeController:
	{GET [/home]}: get()
2025-02-28 14:26:18 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2025-02-28 14:26:18 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 'beanNameHandlerMapping' {}
2025-02-28 14:26:18 [] DEBUG _.s.w.s.HandlerMapping.Mappings - Mapped /validate/** -> ProxyExchangeHandlerFunction
/users/** -> ProxyExchangeHandlerFunction
2025-02-28 14:26:18 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2025-02-28 14:26:18 [] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-02-28 14:26:19 [] DEBUG i.n.u.i.InternalThreadLocalMap - -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2025-02-28 14:26:19 [] DEBUG i.n.u.i.InternalThreadLocalMap - -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2025-02-28 14:26:19 [] DEBUG io.netty.util.ResourceLeakDetector - -Dio.netty.leakDetection.level: simple
2025-02-28 14:26:19 [] DEBUG io.netty.util.ResourceLeakDetector - -Dio.netty.leakDetection.targetRecords: 4
2025-02-28 14:26:19 [] DEBUG i.n.handler.codec.compression.Brotli - brotli4j not in the classpath; Brotli support will be unavailable.
2025-02-28 14:26:19 [] DEBUG reactor.netty.tcp.TcpResources - [http] resources will use the default LoopResources: DefaultLoopResources {prefix=reactor-http, daemon=true, selectCount=12, workerCount=12}
2025-02-28 14:26:19 [] DEBUG reactor.netty.tcp.TcpResources - [http] resources will use the default ConnectionProvider: reactor.netty.resources.DefaultPooledConnectionProvider@47dc35a0
2025-02-28 14:26:19 [] DEBUG r.netty.resources.DefaultLoopIOUring - Default io_uring support : false
2025-02-28 14:26:19 [] DEBUG r.netty.resources.DefaultLoopEpoll - Default Epoll support : false
2025-02-28 14:26:19 [] DEBUG r.netty.resources.DefaultLoopKQueue - Default KQueue support : false
2025-02-28 14:26:19 [] DEBUG i.n.c.MultithreadEventLoopGroup - -Dio.netty.eventLoopThreads: 24
2025-02-28 14:26:19 [] DEBUG i.n.u.concurrent.GlobalEventExecutor - -Dio.netty.globalEventExecutor.quietPeriodSeconds: 1
2025-02-28 14:26:19 [] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.noKeySetOptimization: false
2025-02-28 14:26:19 [] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.selectorAutoRebuildThreshold: 512
2025-02-28 14:26:19 [] DEBUG i.n.util.internal.PlatformDependent - org.jctools-core.MpscChunkedArrayQueue: available
2025-02-28 14:26:19 [] DEBUG io.netty.util.NetUtil - -Djava.net.preferIPv4Stack: false
2025-02-28 14:26:19 [] DEBUG io.netty.util.NetUtil - -Djava.net.preferIPv6Addresses: false
2025-02-28 14:26:19 [] DEBUG i.netty.util.NetUtilInitializations - Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2025-02-28 14:26:19 [] DEBUG io.netty.util.NetUtil - Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2025-02-28 14:26:19 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default ResolvedAddressTypes: IPV4_ONLY
2025-02-28 14:26:19 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Localhost address: localhost/127.0.0.1
2025-02-28 14:26:19 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Windows hostname: DESKTOP-P307093
2025-02-28 14:26:19 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default search domains: []
2025-02-28 14:26:19 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default UnixResolverOptions{ndots=1, timeout=5, attempts=16}
2025-02-28 14:26:19 [] DEBUG i.n.r.DefaultHostsFileEntriesResolver - -Dio.netty.hostsFileRefreshInterval: 0
2025-02-28 14:26:19 [] DEBUG i.n.r.d.DefaultDnsServerAddressStreamProvider - Default DNS servers: [/8.8.8.8:53, /4.2.2.2:53] (sun.net.dns.ResolverConfiguration)
2025-02-28 14:26:19 [] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-02-28 14:26:19 [] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-02-28 14:26:19 [] INFO  c.c.c.g.c.CommongatewayApplication - Started CommongatewayApplication in 4.444 seconds (process running for 5.519)
2025-02-28 14:26:32 [] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-02-28 14:26:32 [] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-02-28 14:26:36 [] DEBUG org.jboss.logging - Logging Provider: org.jboss.logging.Slf4jLoggerProvider found via system property
2025-02-28 14:26:36 [] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final
2025-02-28 14:26:36 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-02-28 14:26:36 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-02-28 14:26:36 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-02-28 14:26:36 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-02-28 14:26:36 [] DEBUG o.h.v.i.e.r.TraversableResolvers - Cannot find jakarta.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2025-02-28 14:26:36 [] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-02-28 14:26:36 [] INFO  c.c.c.g.c.CommongatewayApplication - Starting CommongatewayApplication using Java 17.0.12 with PID 13296 (D:\WORKSPACE\API-GATEWAY\commongateway\target\classes started by CITPL in D:\WORKSPACE\API-GATEWAY)
2025-02-28 14:26:36 [] DEBUG c.c.c.g.c.CommongatewayApplication - Running with Spring Boot v3.4.2, Spring v6.2.2
2025-02-28 14:26:36 [] INFO  c.c.c.g.c.CommongatewayApplication - No active profile set, falling back to 1 default profile: "default"
2025-02-28 14:26:36 [] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-02-28 14:26:36 [] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-02-28 14:26:36 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-02-28 14:26:36 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-02-28 14:26:36 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-02-28 14:26:36 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-02-28 14:26:36 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-02-28 14:26:36 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-02-28 14:26:37 [] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=d2aee5ef-86a6-3b95-abd8-708d95e66676
2025-02-28 14:26:38 [] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-02-28 14:26:38 [] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-02-28 14:26:38 [] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-02-28 14:26:38 [] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.34]
2025-02-28 14:26:38 [] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-02-28 14:26:38 [] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1838 ms
2025-02-28 14:26:38 [] DEBUG i.n.u.i.l.InternalLoggerFactory - Using SLF4J as the default logging framework
2025-02-28 14:26:38 [] DEBUG i.n.util.internal.PlatformDependent0 - -Dio.netty.noUnsafe: false
2025-02-28 14:26:38 [] DEBUG i.n.util.internal.PlatformDependent0 - Java version: 17
2025-02-28 14:26:38 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe.theUnsafe: available
2025-02-28 14:26:38 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe base methods: all available
2025-02-28 14:26:38 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe.storeFence: available
2025-02-28 14:26:38 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.Buffer.address: available
2025-02-28 14:26:38 [] DEBUG i.n.util.internal.PlatformDependent0 - direct buffer constructor: unavailable: Reflective setAccessible(true) disabled
2025-02-28 14:26:38 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.Bits.unaligned: available, true
2025-02-28 14:26:38 [] DEBUG i.n.util.internal.PlatformDependent0 - jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable: class io.netty.util.internal.PlatformDependent0$7 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @3e77a1ed
2025-02-28 14:26:38 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.DirectByteBuffer.<init>(long, {int,long}): unavailable
2025-02-28 14:26:38 [] DEBUG i.n.util.internal.PlatformDependent - sun.misc.Unsafe: available
2025-02-28 14:26:38 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.tmpdir: C:\Users\CITPL\AppData\Local\Temp (java.io.tmpdir)
2025-02-28 14:26:38 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.bitMode: 64 (sun.arch.data.model)
2025-02-28 14:26:38 [] DEBUG i.n.util.internal.PlatformDependent - Platform: Windows
2025-02-28 14:26:38 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.maxDirectMemory: -1 bytes
2025-02-28 14:26:38 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.uninitializedArrayAllocationThreshold: -1
2025-02-28 14:26:38 [] DEBUG io.netty.util.internal.CleanerJava9 - java.nio.ByteBuffer.cleaner(): available
2025-02-28 14:26:38 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.noPreferDirect: false
2025-02-28 14:26:39 [] DEBUG reactor.util.Loggers - Using Slf4j logging framework
2025-02-28 14:26:39 [] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-02-28 14:26:39 [] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2025-02-28 14:26:39 [] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2025-02-28 14:26:39 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-02-28 14:26:39 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via user class loader
2025-02-28 14:26:39 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-02-28 14:26:39 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-02-28 14:26:39 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-02-28 14:26:39 [] DEBUG o.h.v.i.e.r.TraversableResolvers - Cannot find jakarta.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2025-02-28 14:26:39 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-02-28 14:26:39 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-02-28 14:26:39 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-02-28 14:26:39 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-02-28 14:26:39 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-02-28 14:26:39 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-02-28 14:26:39 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	c.c.c.g.c.c.HomeController:
	{GET [/home]}: get()
2025-02-28 14:26:39 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2025-02-28 14:26:39 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 'beanNameHandlerMapping' {}
2025-02-28 14:26:39 [] DEBUG _.s.w.s.HandlerMapping.Mappings - Mapped /validate/** -> ProxyExchangeHandlerFunction
/users/** -> ProxyExchangeHandlerFunction
2025-02-28 14:26:39 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2025-02-28 14:26:39 [] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-02-28 14:26:39 [] DEBUG i.n.u.i.InternalThreadLocalMap - -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2025-02-28 14:26:39 [] DEBUG i.n.u.i.InternalThreadLocalMap - -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2025-02-28 14:26:39 [] DEBUG io.netty.util.ResourceLeakDetector - -Dio.netty.leakDetection.level: simple
2025-02-28 14:26:39 [] DEBUG io.netty.util.ResourceLeakDetector - -Dio.netty.leakDetection.targetRecords: 4
2025-02-28 14:26:39 [] DEBUG i.n.handler.codec.compression.Brotli - brotli4j not in the classpath; Brotli support will be unavailable.
2025-02-28 14:26:40 [] DEBUG reactor.netty.tcp.TcpResources - [http] resources will use the default LoopResources: DefaultLoopResources {prefix=reactor-http, daemon=true, selectCount=12, workerCount=12}
2025-02-28 14:26:40 [] DEBUG reactor.netty.tcp.TcpResources - [http] resources will use the default ConnectionProvider: reactor.netty.resources.DefaultPooledConnectionProvider@609ff237
2025-02-28 14:26:40 [] DEBUG r.netty.resources.DefaultLoopIOUring - Default io_uring support : false
2025-02-28 14:26:40 [] DEBUG r.netty.resources.DefaultLoopEpoll - Default Epoll support : false
2025-02-28 14:26:40 [] DEBUG r.netty.resources.DefaultLoopKQueue - Default KQueue support : false
2025-02-28 14:26:40 [] DEBUG i.n.c.MultithreadEventLoopGroup - -Dio.netty.eventLoopThreads: 24
2025-02-28 14:26:40 [] DEBUG i.n.u.concurrent.GlobalEventExecutor - -Dio.netty.globalEventExecutor.quietPeriodSeconds: 1
2025-02-28 14:26:40 [] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.noKeySetOptimization: false
2025-02-28 14:26:40 [] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.selectorAutoRebuildThreshold: 512
2025-02-28 14:26:40 [] DEBUG i.n.util.internal.PlatformDependent - org.jctools-core.MpscChunkedArrayQueue: available
2025-02-28 14:26:40 [] DEBUG io.netty.util.NetUtil - -Djava.net.preferIPv4Stack: false
2025-02-28 14:26:40 [] DEBUG io.netty.util.NetUtil - -Djava.net.preferIPv6Addresses: false
2025-02-28 14:26:40 [] DEBUG i.netty.util.NetUtilInitializations - Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2025-02-28 14:26:40 [] DEBUG io.netty.util.NetUtil - Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2025-02-28 14:26:40 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default ResolvedAddressTypes: IPV4_ONLY
2025-02-28 14:26:40 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Localhost address: localhost/127.0.0.1
2025-02-28 14:26:40 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Windows hostname: DESKTOP-P307093
2025-02-28 14:26:40 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default search domains: []
2025-02-28 14:26:40 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default UnixResolverOptions{ndots=1, timeout=5, attempts=16}
2025-02-28 14:26:40 [] DEBUG i.n.r.DefaultHostsFileEntriesResolver - -Dio.netty.hostsFileRefreshInterval: 0
2025-02-28 14:26:40 [] DEBUG i.n.r.d.DefaultDnsServerAddressStreamProvider - Default DNS servers: [/8.8.8.8:53, /4.2.2.2:53] (sun.net.dns.ResolverConfiguration)
2025-02-28 14:26:40 [] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-02-28 14:26:40 [] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-02-28 14:26:40 [] INFO  c.c.c.g.c.CommongatewayApplication - Started CommongatewayApplication in 4.27 seconds (process running for 5.276)
2025-02-28 14:26:43 [] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-02-28 14:26:43 [] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-02-28 14:26:43 [] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-02-28 14:26:43 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 14:26:43 [3af5ebac-4ae8-4396-9a2d-27abc0dacc2d] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 14:26:43 [3af5ebac-4ae8-4396-9a2d-27abc0dacc2d] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /users
2025-02-28 14:26:44 [3af5ebac-4ae8-4396-9a2d-27abc0dacc2d] DEBUG r.n.r.PooledConnectionProvider - Creating a new [http] client pool [PoolFactory{evictionInterval=PT0S, leasingStrategy=fifo, maxConnections=500, maxIdleTime=-1, maxLifeTime=-1, metricsEnabled=false, pendingAcquireMaxCount=1000, pendingAcquireTimeout=45000}] for [localhost/<unresolved>:8081]
2025-02-28 14:26:44 [3af5ebac-4ae8-4396-9a2d-27abc0dacc2d] DEBUG io.netty.channel.DefaultChannelId - -Dio.netty.processId: 13296 (auto-detected)
2025-02-28 14:26:44 [3af5ebac-4ae8-4396-9a2d-27abc0dacc2d] DEBUG io.netty.channel.DefaultChannelId - -Dio.netty.machineId: 00:15:5d:ff:fe:02:b5:1f (auto-detected)
2025-02-28 14:26:44 [3af5ebac-4ae8-4396-9a2d-27abc0dacc2d] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.numHeapArenas: 24
2025-02-28 14:26:44 [3af5ebac-4ae8-4396-9a2d-27abc0dacc2d] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.numDirectArenas: 24
2025-02-28 14:26:44 [3af5ebac-4ae8-4396-9a2d-27abc0dacc2d] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.pageSize: 8192
2025-02-28 14:26:44 [3af5ebac-4ae8-4396-9a2d-27abc0dacc2d] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxOrder: 9
2025-02-28 14:26:44 [3af5ebac-4ae8-4396-9a2d-27abc0dacc2d] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.chunkSize: 4194304
2025-02-28 14:26:44 [3af5ebac-4ae8-4396-9a2d-27abc0dacc2d] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.smallCacheSize: 256
2025-02-28 14:26:44 [3af5ebac-4ae8-4396-9a2d-27abc0dacc2d] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.normalCacheSize: 64
2025-02-28 14:26:44 [3af5ebac-4ae8-4396-9a2d-27abc0dacc2d] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2025-02-28 14:26:44 [3af5ebac-4ae8-4396-9a2d-27abc0dacc2d] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.cacheTrimInterval: 8192
2025-02-28 14:26:44 [3af5ebac-4ae8-4396-9a2d-27abc0dacc2d] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.cacheTrimIntervalMillis: 0
2025-02-28 14:26:44 [3af5ebac-4ae8-4396-9a2d-27abc0dacc2d] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.useCacheForAllThreads: false
2025-02-28 14:26:44 [3af5ebac-4ae8-4396-9a2d-27abc0dacc2d] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
2025-02-28 14:26:44 [3af5ebac-4ae8-4396-9a2d-27abc0dacc2d] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.disableCacheFinalizersForFastThreadLocalThreads: false
2025-02-28 14:26:44 [3af5ebac-4ae8-4396-9a2d-27abc0dacc2d] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.allocator.type: pooled
2025-02-28 14:26:44 [3af5ebac-4ae8-4396-9a2d-27abc0dacc2d] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.threadLocalDirectBufferSize: 0
2025-02-28 14:26:44 [3af5ebac-4ae8-4396-9a2d-27abc0dacc2d] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.maxThreadLocalCharBufferSize: 16384
2025-02-28 14:26:44 [] DEBUG r.n.r.PooledConnectionProvider - [d4a3add3] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 14:26:44 [] DEBUG io.netty.buffer.AbstractByteBuf - -Dio.netty.buffer.checkAccessible: true
2025-02-28 14:26:44 [] DEBUG io.netty.buffer.AbstractByteBuf - -Dio.netty.buffer.checkBounds: true
2025-02-28 14:26:44 [] DEBUG i.n.util.ResourceLeakDetectorFactory - Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@35a24a7b
2025-02-28 14:26:44 [] DEBUG r.netty.transport.TransportConfig - [d4a3add3] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-28 14:26:44 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 14:26:44 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 14:26:44 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 14:26:44 [] DEBUG i.n.b.ChannelInitializerExtensions - -Dio.netty.bootstrap.extensions: null
2025-02-28 14:26:44 [] DEBUG r.netty.transport.TransportConnector - [d4a3add3] Connecting to [localhost/127.0.0.1:8081].
2025-02-28 14:26:44 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [d4a3add3, L:/127.0.0.1:59487 - R:localhost/127.0.0.1:8081] Registering pool release on close event for channel
2025-02-28 14:26:44 [] DEBUG r.n.r.PooledConnectionProvider - [d4a3add3, L:/127.0.0.1:59487 - R:localhost/127.0.0.1:8081] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 14:26:44 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [d4a3add3, L:/127.0.0.1:59487 - R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0xd4a3add3, L:/127.0.0.1:59487 - R:localhost/127.0.0.1:8081]}, [connected])
2025-02-28 14:26:44 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [d4a3add3-1, L:/127.0.0.1:59487 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0xd4a3add3, L:/127.0.0.1:59487 - R:localhost/127.0.0.1:8081]}}, [configured])
2025-02-28 14:26:44 [] DEBUG r.n.http.client.HttpClientConnect - [d4a3add3-1, L:/127.0.0.1:59487 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY, method=GET}
2025-02-28 14:26:44 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [d4a3add3-1, L:/127.0.0.1:59487 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xd4a3add3, L:/127.0.0.1:59487 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 14:26:44 [] DEBUG r.n.http.client.HttpClientOperations - [d4a3add3-1, L:/127.0.0.1:59487 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 14:26:44 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.maxCapacityPerThread: 4096
2025-02-28 14:26:44 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.ratio: 8
2025-02-28 14:26:44 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.chunkSize: 32
2025-02-28 14:26:44 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.blocking: false
2025-02-28 14:26:44 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.batchFastThreadLocalOnly: true
2025-02-28 14:26:44 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [d4a3add3-1, L:/127.0.0.1:59487 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xd4a3add3, L:/127.0.0.1:59487 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 14:26:44 [] DEBUG i.n.handler.codec.compression.Zstd - zstd-jni not in the classpath; Zstd support will be unavailable.
2025-02-28 14:26:44 [] DEBUG r.n.http.client.HttpClientOperations - [d4a3add3-1, L:/127.0.0.1:59487 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-28 14:26:44 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [d4a3add3-1, L:/127.0.0.1:59487 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xd4a3add3, L:/127.0.0.1:59487 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 14:26:44 [] DEBUG reactor.netty.channel.FluxReceive - [d4a3add3-1, L:/127.0.0.1:59487 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-28 14:26:44 [] DEBUG r.n.http.client.HttpClientOperations - [d4a3add3-1, L:/127.0.0.1:59487 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 14:26:44 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [d4a3add3, L:/127.0.0.1:59487 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xd4a3add3, L:/127.0.0.1:59487 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 14:26:44 [3af5ebac-4ae8-4396-9a2d-27abc0dacc2d] INFO  c.c.c.g.c.c.ValidationInterceptor - ✅ Token Validated! Forwarding request...
2025-02-28 14:26:44 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [d4a3add3, L:/127.0.0.1:59487 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xd4a3add3, L:/127.0.0.1:59487 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 14:26:44 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [d4a3add3, L:/127.0.0.1:59487 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-28 14:26:44 [] DEBUG r.n.r.PooledConnectionProvider - [d4a3add3, L:/127.0.0.1:59487 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-28 14:26:44 [3af5ebac-4ae8-4396-9a2d-27abc0dacc2d] DEBUG i.m.c.u.i.l.InternalLoggerFactory - Using SLF4J as the default logging framework
2025-02-28 14:26:44 [3af5ebac-4ae8-4396-9a2d-27abc0dacc2d] DEBUG r.n.r.PooledConnectionProvider - Creating a new [http] client pool [PoolFactory{evictionInterval=PT0S, leasingStrategy=fifo, maxConnections=500, maxIdleTime=-1, maxLifeTime=-1, metricsEnabled=false, pendingAcquireMaxCount=1000, pendingAcquireTimeout=45000}] for [localhost/<unresolved>:8082]
2025-02-28 14:26:44 [] DEBUG r.n.r.PooledConnectionProvider - [40bcbc68] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 14:26:44 [] DEBUG r.netty.transport.TransportConfig - [40bcbc68] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-28 14:26:44 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 14:26:44 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 14:26:44 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 14:26:44 [] DEBUG r.netty.transport.TransportConnector - [40bcbc68] Connecting to [localhost/127.0.0.1:8082].
2025-02-28 14:26:44 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [40bcbc68, L:/127.0.0.1:59488 - R:localhost/127.0.0.1:8082] Registering pool release on close event for channel
2025-02-28 14:26:44 [] DEBUG r.n.r.PooledConnectionProvider - [40bcbc68, L:/127.0.0.1:59488 - R:localhost/127.0.0.1:8082] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 14:26:44 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [40bcbc68, L:/127.0.0.1:59488 - R:localhost/127.0.0.1:8082] onStateChange(PooledConnection{channel=[id: 0x40bcbc68, L:/127.0.0.1:59488 - R:localhost/127.0.0.1:8082]}, [connected])
2025-02-28 14:26:44 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [40bcbc68-1, L:/127.0.0.1:59488 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0x40bcbc68, L:/127.0.0.1:59488 - R:localhost/127.0.0.1:8082]}}, [configured])
2025-02-28 14:26:44 [] DEBUG r.n.http.client.HttpClientConnect - [40bcbc68-1, L:/127.0.0.1:59488 - R:localhost/127.0.0.1:8082] Handler is being applied: {uri=http://localhost:8082/users, method=GET}
2025-02-28 14:26:44 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [40bcbc68-1, L:/127.0.0.1:59488 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0x40bcbc68, L:/127.0.0.1:59488 - R:localhost/127.0.0.1:8082]}}, [request_prepared])
2025-02-28 14:26:44 [] DEBUG r.n.http.client.HttpClientOperations - [40bcbc68-1, L:/127.0.0.1:59488 - R:localhost/127.0.0.1:8082] No sendHeaders() called before complete, sending zero-length header
2025-02-28 14:26:44 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [40bcbc68-1, L:/127.0.0.1:59488 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0x40bcbc68, L:/127.0.0.1:59488 - R:localhost/127.0.0.1:8082]}}, [request_sent])
2025-02-28 14:26:44 [] DEBUG r.n.http.client.HttpClientOperations - [40bcbc68-1, L:/127.0.0.1:59488 - R:localhost/127.0.0.1:8082] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Content-Length: <filtered>
Date: <filtered>
2025-02-28 14:26:44 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [40bcbc68-1, L:/127.0.0.1:59488 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0x40bcbc68, L:/127.0.0.1:59488 - R:localhost/127.0.0.1:8082]}}, [response_received])
2025-02-28 14:26:44 [] DEBUG r.n.http.client.HttpClientOperations - [40bcbc68-1, L:/127.0.0.1:59488 - R:localhost/127.0.0.1:8082] Received last HTTP packet
2025-02-28 14:26:44 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [40bcbc68, L:/127.0.0.1:59488 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0x40bcbc68, L:/127.0.0.1:59488 - R:localhost/127.0.0.1:8082]}}, [response_completed])
2025-02-28 14:26:44 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [40bcbc68, L:/127.0.0.1:59488 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0x40bcbc68, L:/127.0.0.1:59488 - R:localhost/127.0.0.1:8082]}}, [disconnecting])
2025-02-28 14:26:44 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [40bcbc68, L:/127.0.0.1:59488 - R:localhost/127.0.0.1:8082] Releasing channel
2025-02-28 14:26:44 [] DEBUG r.n.r.PooledConnectionProvider - [40bcbc68, L:/127.0.0.1:59488 - R:localhost/127.0.0.1:8082] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-28 14:26:45 [] DEBUG reactor.netty.channel.FluxReceive - [e75f5f6b, L:/127.0.0.1:59488 ! R:localhost/127.0.0.1:8082] [terminated=true, cancelled=false, pending=1, error=null]: subscribing inbound receiver
2025-02-28 14:26:50 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 14:26:50 [23dedfd0-14a6-443c-8c2f-749b8ccc39f5] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 14:26:50 [23dedfd0-14a6-443c-8c2f-749b8ccc39f5] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /users
2025-02-28 14:26:50 [23dedfd0-14a6-443c-8c2f-749b8ccc39f5] WARN  c.c.c.g.c.c.ValidationInterceptor - ❌ Missing Validation Token or OrgId!
2025-02-28 14:26:50 [] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /error
2025-02-28 14:26:50 [] WARN  c.c.c.g.c.c.ValidationInterceptor - ❌ Missing Validation Token or OrgId!
2025-02-28 14:26:55 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 14:26:55 [f7094382-63f7-497c-814e-933f9b293515] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 14:26:55 [f7094382-63f7-497c-814e-933f9b293515] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /users
2025-02-28 14:26:55 [] DEBUG r.n.r.PooledConnectionProvider - [d4a3add3, L:/127.0.0.1:59487 - R:localhost/127.0.0.1:8081] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 14:26:55 [] DEBUG r.n.http.client.HttpClientConnect - [d4a3add3-2, L:/127.0.0.1:59487 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY, method=GET}
2025-02-28 14:26:55 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [d4a3add3-2, L:/127.0.0.1:59487 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xd4a3add3, L:/127.0.0.1:59487 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 14:26:55 [] DEBUG r.n.http.client.HttpClientOperations - [d4a3add3-2, L:/127.0.0.1:59487 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 14:26:55 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [d4a3add3-2, L:/127.0.0.1:59487 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xd4a3add3, L:/127.0.0.1:59487 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 14:26:55 [] DEBUG r.n.http.client.HttpClientOperations - [d4a3add3-2, L:/127.0.0.1:59487 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-28 14:26:55 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [d4a3add3-2, L:/127.0.0.1:59487 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xd4a3add3, L:/127.0.0.1:59487 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 14:26:55 [] DEBUG reactor.netty.channel.FluxReceive - [d4a3add3-2, L:/127.0.0.1:59487 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-28 14:26:55 [] DEBUG r.n.http.client.HttpClientOperations - [d4a3add3-2, L:/127.0.0.1:59487 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 14:26:55 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [d4a3add3, L:/127.0.0.1:59487 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xd4a3add3, L:/127.0.0.1:59487 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 14:26:55 [f7094382-63f7-497c-814e-933f9b293515] INFO  c.c.c.g.c.c.ValidationInterceptor - ✅ Token Validated! Forwarding request...
2025-02-28 14:26:55 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [d4a3add3, L:/127.0.0.1:59487 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xd4a3add3, L:/127.0.0.1:59487 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 14:26:55 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [d4a3add3, L:/127.0.0.1:59487 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-28 14:26:55 [] DEBUG r.n.r.PooledConnectionProvider - [d4a3add3, L:/127.0.0.1:59487 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-28 14:26:55 [] DEBUG r.n.r.PooledConnectionProvider - [40bcbc68, L:/127.0.0.1:59488 - R:localhost/127.0.0.1:8082] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 14:26:55 [] DEBUG r.n.http.client.HttpClientConnect - [40bcbc68-2, L:/127.0.0.1:59488 - R:localhost/127.0.0.1:8082] Handler is being applied: {uri=http://localhost:8082/users, method=GET}
2025-02-28 14:26:55 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [40bcbc68-2, L:/127.0.0.1:59488 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0x40bcbc68, L:/127.0.0.1:59488 - R:localhost/127.0.0.1:8082]}}, [request_prepared])
2025-02-28 14:26:55 [] DEBUG r.n.http.client.HttpClientOperations - [40bcbc68-2, L:/127.0.0.1:59488 - R:localhost/127.0.0.1:8082] No sendHeaders() called before complete, sending zero-length header
2025-02-28 14:26:55 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [40bcbc68-2, L:/127.0.0.1:59488 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0x40bcbc68, L:/127.0.0.1:59488 - R:localhost/127.0.0.1:8082]}}, [request_sent])
2025-02-28 14:26:55 [] DEBUG r.n.http.client.HttpClientOperations - [40bcbc68-2, L:/127.0.0.1:59488 - R:localhost/127.0.0.1:8082] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Content-Length: <filtered>
Date: <filtered>
2025-02-28 14:26:55 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [40bcbc68-2, L:/127.0.0.1:59488 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0x40bcbc68, L:/127.0.0.1:59488 - R:localhost/127.0.0.1:8082]}}, [response_received])
2025-02-28 14:26:55 [] DEBUG r.n.http.client.HttpClientOperations - [40bcbc68-2, L:/127.0.0.1:59488 - R:localhost/127.0.0.1:8082] Received last HTTP packet
2025-02-28 14:26:55 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [40bcbc68, L:/127.0.0.1:59488 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0x40bcbc68, L:/127.0.0.1:59488 - R:localhost/127.0.0.1:8082]}}, [response_completed])
2025-02-28 14:26:55 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [40bcbc68, L:/127.0.0.1:59488 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0x40bcbc68, L:/127.0.0.1:59488 - R:localhost/127.0.0.1:8082]}}, [disconnecting])
2025-02-28 14:26:55 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [40bcbc68, L:/127.0.0.1:59488 - R:localhost/127.0.0.1:8082] Releasing channel
2025-02-28 14:26:55 [] DEBUG r.n.r.PooledConnectionProvider - [40bcbc68, L:/127.0.0.1:59488 - R:localhost/127.0.0.1:8082] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-28 14:26:55 [] DEBUG reactor.netty.channel.FluxReceive - [4af704d8, L:/127.0.0.1:59488 ! R:localhost/127.0.0.1:8082] [terminated=true, cancelled=false, pending=1, error=null]: subscribing inbound receiver
2025-02-28 14:26:59 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 14:26:59 [acbaab78-59ac-4381-b1e9-1c1ecb26c0ca] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 14:26:59 [acbaab78-59ac-4381-b1e9-1c1ecb26c0ca] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /users
2025-02-28 14:26:59 [acbaab78-59ac-4381-b1e9-1c1ecb26c0ca] WARN  c.c.c.g.c.c.ValidationInterceptor - ❌ Missing Validation Token or OrgId!
2025-02-28 14:26:59 [] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /error
2025-02-28 14:26:59 [] WARN  c.c.c.g.c.c.ValidationInterceptor - ❌ Missing Validation Token or OrgId!
2025-02-28 14:27:25 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 14:27:25 [b38cc8b3-4409-4449-b6ed-634106b7eb65] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 14:27:25 [b38cc8b3-4409-4449-b6ed-634106b7eb65] DEBUG r.n.r.PooledConnectionProvider - Creating a new [http] client pool [PoolFactory{evictionInterval=PT0S, leasingStrategy=fifo, maxConnections=500, maxIdleTime=-1, maxLifeTime=-1, metricsEnabled=false, pendingAcquireMaxCount=1000, pendingAcquireTimeout=45000}] for [localhost/<unresolved>:8081]
2025-02-28 14:27:25 [] DEBUG r.n.r.PooledConnectionProvider - [bbf8121d] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 14:27:25 [] DEBUG r.netty.transport.TransportConfig - [bbf8121d] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-28 14:27:25 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 14:27:25 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 14:27:25 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 14:27:25 [] DEBUG r.netty.transport.TransportConnector - [bbf8121d] Connecting to [localhost/127.0.0.1:8081].
2025-02-28 14:27:25 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [bbf8121d, L:/127.0.0.1:59508 - R:localhost/127.0.0.1:8081] Registering pool release on close event for channel
2025-02-28 14:27:25 [] DEBUG r.n.r.PooledConnectionProvider - [bbf8121d, L:/127.0.0.1:59508 - R:localhost/127.0.0.1:8081] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 14:27:25 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [bbf8121d, L:/127.0.0.1:59508 - R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0xbbf8121d, L:/127.0.0.1:59508 - R:localhost/127.0.0.1:8081]}, [connected])
2025-02-28 14:27:25 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [bbf8121d-1, L:/127.0.0.1:59508 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0xbbf8121d, L:/127.0.0.1:59508 - R:localhost/127.0.0.1:8081]}}, [configured])
2025-02-28 14:27:25 [] DEBUG r.n.http.client.HttpClientConnect - [bbf8121d-1, L:/127.0.0.1:59508 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY, method=GET}
2025-02-28 14:27:25 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [bbf8121d-1, L:/127.0.0.1:59508 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xbbf8121d, L:/127.0.0.1:59508 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 14:27:25 [] DEBUG r.n.http.client.HttpClientOperations - [bbf8121d-1, L:/127.0.0.1:59508 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 14:27:25 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [bbf8121d-1, L:/127.0.0.1:59508 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xbbf8121d, L:/127.0.0.1:59508 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 14:27:25 [] DEBUG r.n.http.client.HttpClientOperations - [bbf8121d-1, L:/127.0.0.1:59508 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-28 14:27:25 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [bbf8121d-1, L:/127.0.0.1:59508 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xbbf8121d, L:/127.0.0.1:59508 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 14:27:25 [] DEBUG reactor.netty.channel.FluxReceive - [bbf8121d-1, L:/127.0.0.1:59508 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=1, error=null]: subscribing inbound receiver
2025-02-28 14:27:25 [] DEBUG r.n.http.client.HttpClientOperations - [bbf8121d-1, L:/127.0.0.1:59508 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 14:27:25 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [bbf8121d, L:/127.0.0.1:59508 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xbbf8121d, L:/127.0.0.1:59508 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 14:27:25 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [bbf8121d, L:/127.0.0.1:59508 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xbbf8121d, L:/127.0.0.1:59508 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 14:27:25 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [bbf8121d, L:/127.0.0.1:59508 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-28 14:27:25 [] DEBUG r.n.r.PooledConnectionProvider - [bbf8121d, L:/127.0.0.1:59508 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-28 14:27:31 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 14:27:31 [43f33b33-9798-4c91-ab6e-a2bc06e8bb52] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 14:27:31 [] DEBUG r.n.r.PooledConnectionProvider - [bbf8121d, L:/127.0.0.1:59508 - R:localhost/127.0.0.1:8081] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 14:27:31 [] DEBUG r.n.http.client.HttpClientConnect - [bbf8121d-2, L:/127.0.0.1:59508 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate, method=GET}
2025-02-28 14:27:31 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [bbf8121d-2, L:/127.0.0.1:59508 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xbbf8121d, L:/127.0.0.1:59508 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 14:27:31 [] DEBUG r.n.http.client.HttpClientOperations - [bbf8121d-2, L:/127.0.0.1:59508 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 14:27:31 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [bbf8121d-2, L:/127.0.0.1:59508 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xbbf8121d, L:/127.0.0.1:59508 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 14:27:31 [] DEBUG r.n.http.client.HttpClientOperations - [bbf8121d-2, L:/127.0.0.1:59508 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 500 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
Connection: <filtered>
2025-02-28 14:27:31 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [bbf8121d-2, L:/127.0.0.1:59508 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xbbf8121d, L:/127.0.0.1:59508 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 14:27:31 [] DEBUG reactor.netty.channel.FluxReceive - [bbf8121d-2, L:/127.0.0.1:59508 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=1, error=null]: subscribing inbound receiver
2025-02-28 14:27:31 [] DEBUG r.n.http.client.HttpClientOperations - [bbf8121d-2, L:/127.0.0.1:59508 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 14:27:31 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [bbf8121d, L:/127.0.0.1:59508 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xbbf8121d, L:/127.0.0.1:59508 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 14:27:31 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [bbf8121d, L:/127.0.0.1:59508 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xbbf8121d, L:/127.0.0.1:59508 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 14:27:31 [] DEBUG r.n.r.PooledConnectionProvider - [bbf8121d, L:/127.0.0.1:59508 ! R:localhost/127.0.0.1:8081] Channel closed, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 14:27:31 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [bbf8121d, L:/127.0.0.1:59508 ! R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0xbbf8121d, L:/127.0.0.1:59508 ! R:localhost/127.0.0.1:8081]}, [disconnecting])
2025-02-28 14:27:39 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 14:27:39 [9e2c0ddf-2f52-45b8-882c-350c0ca53beb] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 14:27:39 [] DEBUG r.n.r.PooledConnectionProvider - [bf7c02a1] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 14:27:39 [] DEBUG r.netty.transport.TransportConfig - [bf7c02a1] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-28 14:27:39 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 14:27:39 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 14:27:39 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 14:27:39 [] DEBUG r.netty.transport.TransportConnector - [bf7c02a1] Connecting to [localhost/127.0.0.1:8081].
2025-02-28 14:27:39 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [bf7c02a1, L:/127.0.0.1:59524 - R:localhost/127.0.0.1:8081] Registering pool release on close event for channel
2025-02-28 14:27:39 [] DEBUG r.n.r.PooledConnectionProvider - [bf7c02a1, L:/127.0.0.1:59524 - R:localhost/127.0.0.1:8081] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 14:27:39 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [bf7c02a1, L:/127.0.0.1:59524 - R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0xbf7c02a1, L:/127.0.0.1:59524 - R:localhost/127.0.0.1:8081]}, [connected])
2025-02-28 14:27:39 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [bf7c02a1-1, L:/127.0.0.1:59524 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0xbf7c02a1, L:/127.0.0.1:59524 - R:localhost/127.0.0.1:8081]}}, [configured])
2025-02-28 14:27:39 [] DEBUG r.n.http.client.HttpClientConnect - [bf7c02a1-1, L:/127.0.0.1:59524 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY, method=GET}
2025-02-28 14:27:39 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [bf7c02a1-1, L:/127.0.0.1:59524 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xbf7c02a1, L:/127.0.0.1:59524 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 14:27:39 [] DEBUG r.n.http.client.HttpClientOperations - [bf7c02a1-1, L:/127.0.0.1:59524 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 14:27:39 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [bf7c02a1-1, L:/127.0.0.1:59524 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xbf7c02a1, L:/127.0.0.1:59524 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 14:27:39 [] DEBUG r.n.http.client.HttpClientOperations - [bf7c02a1-1, L:/127.0.0.1:59524 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-28 14:27:39 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [bf7c02a1-1, L:/127.0.0.1:59524 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xbf7c02a1, L:/127.0.0.1:59524 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 14:27:39 [] DEBUG reactor.netty.channel.FluxReceive - [bf7c02a1-1, L:/127.0.0.1:59524 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=1, error=null]: subscribing inbound receiver
2025-02-28 14:27:39 [] DEBUG r.n.http.client.HttpClientOperations - [bf7c02a1-1, L:/127.0.0.1:59524 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 14:27:39 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [bf7c02a1, L:/127.0.0.1:59524 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xbf7c02a1, L:/127.0.0.1:59524 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 14:27:39 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [bf7c02a1, L:/127.0.0.1:59524 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xbf7c02a1, L:/127.0.0.1:59524 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 14:27:39 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [bf7c02a1, L:/127.0.0.1:59524 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-28 14:27:39 [] DEBUG r.n.r.PooledConnectionProvider - [bf7c02a1, L:/127.0.0.1:59524 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-28 14:27:55 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [d4a3add3, L:/127.0.0.1:59487 ! R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0xd4a3add3, L:/127.0.0.1:59487 ! R:localhost/127.0.0.1:8081]}, [disconnecting])
2025-02-28 14:27:55 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [40bcbc68, L:/127.0.0.1:59488 ! R:localhost/127.0.0.1:8082] onStateChange(PooledConnection{channel=[id: 0x40bcbc68, L:/127.0.0.1:59488 ! R:localhost/127.0.0.1:8082]}, [disconnecting])
2025-02-28 14:28:39 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [bf7c02a1, L:/127.0.0.1:59524 ! R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0xbf7c02a1, L:/127.0.0.1:59524 ! R:localhost/127.0.0.1:8081]}, [disconnecting])
2025-02-28 14:33:33 [] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-02-28 14:33:33 [] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-02-28 14:33:33 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 5 thread-local buffer(s) from thread: reactor-http-nio-2
2025-02-28 14:33:33 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 7 thread-local buffer(s) from thread: reactor-http-nio-5
2025-02-28 14:33:33 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 4 thread-local buffer(s) from thread: reactor-http-nio-6
2025-02-28 14:33:33 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 5 thread-local buffer(s) from thread: reactor-http-nio-4
2025-02-28 14:33:38 [] DEBUG org.jboss.logging - Logging Provider: org.jboss.logging.Slf4jLoggerProvider found via system property
2025-02-28 14:33:38 [] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final
2025-02-28 14:33:38 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-02-28 14:33:38 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-02-28 14:33:38 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-02-28 14:33:38 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-02-28 14:33:38 [] DEBUG o.h.v.i.e.r.TraversableResolvers - Cannot find jakarta.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2025-02-28 14:33:38 [] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-02-28 14:33:38 [] INFO  c.c.c.g.c.CommongatewayApplication - Starting CommongatewayApplication using Java 17.0.12 with PID 21852 (D:\WORKSPACE\API-GATEWAY\commongateway\target\classes started by CITPL in D:\WORKSPACE\API-GATEWAY)
2025-02-28 14:33:38 [] DEBUG c.c.c.g.c.CommongatewayApplication - Running with Spring Boot v3.4.2, Spring v6.2.2
2025-02-28 14:33:38 [] INFO  c.c.c.g.c.CommongatewayApplication - No active profile set, falling back to 1 default profile: "default"
2025-02-28 14:33:38 [] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-02-28 14:33:38 [] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-02-28 14:33:38 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-02-28 14:33:38 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-02-28 14:33:38 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-02-28 14:33:38 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-02-28 14:33:38 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-02-28 14:33:38 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-02-28 14:33:39 [] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=d2aee5ef-86a6-3b95-abd8-708d95e66676
2025-02-28 14:33:40 [] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-02-28 14:33:40 [] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-02-28 14:33:40 [] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-02-28 14:33:40 [] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.34]
2025-02-28 14:33:40 [] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-02-28 14:33:40 [] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1781 ms
2025-02-28 14:33:40 [] DEBUG i.n.u.i.l.InternalLoggerFactory - Using SLF4J as the default logging framework
2025-02-28 14:33:40 [] DEBUG i.n.util.internal.PlatformDependent0 - -Dio.netty.noUnsafe: false
2025-02-28 14:33:40 [] DEBUG i.n.util.internal.PlatformDependent0 - Java version: 17
2025-02-28 14:33:40 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe.theUnsafe: available
2025-02-28 14:33:40 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe base methods: all available
2025-02-28 14:33:40 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe.storeFence: available
2025-02-28 14:33:40 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.Buffer.address: available
2025-02-28 14:33:40 [] DEBUG i.n.util.internal.PlatformDependent0 - direct buffer constructor: unavailable: Reflective setAccessible(true) disabled
2025-02-28 14:33:40 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.Bits.unaligned: available, true
2025-02-28 14:33:40 [] DEBUG i.n.util.internal.PlatformDependent0 - jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable: class io.netty.util.internal.PlatformDependent0$7 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @3e77a1ed
2025-02-28 14:33:40 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.DirectByteBuffer.<init>(long, {int,long}): unavailable
2025-02-28 14:33:40 [] DEBUG i.n.util.internal.PlatformDependent - sun.misc.Unsafe: available
2025-02-28 14:33:40 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.tmpdir: C:\Users\CITPL\AppData\Local\Temp (java.io.tmpdir)
2025-02-28 14:33:40 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.bitMode: 64 (sun.arch.data.model)
2025-02-28 14:33:40 [] DEBUG i.n.util.internal.PlatformDependent - Platform: Windows
2025-02-28 14:33:40 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.maxDirectMemory: -1 bytes
2025-02-28 14:33:40 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.uninitializedArrayAllocationThreshold: -1
2025-02-28 14:33:40 [] DEBUG io.netty.util.internal.CleanerJava9 - java.nio.ByteBuffer.cleaner(): available
2025-02-28 14:33:40 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.noPreferDirect: false
2025-02-28 14:33:40 [] DEBUG reactor.util.Loggers - Using Slf4j logging framework
2025-02-28 14:33:40 [] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-02-28 14:33:40 [] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2025-02-28 14:33:40 [] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2025-02-28 14:33:40 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-02-28 14:33:40 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via user class loader
2025-02-28 14:33:40 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-02-28 14:33:40 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-02-28 14:33:40 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-02-28 14:33:40 [] DEBUG o.h.v.i.e.r.TraversableResolvers - Cannot find jakarta.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2025-02-28 14:33:40 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-02-28 14:33:40 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-02-28 14:33:40 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-02-28 14:33:40 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-02-28 14:33:40 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-02-28 14:33:40 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-02-28 14:33:40 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	c.c.c.g.c.c.HomeController:
	{GET [/home]}: get()
2025-02-28 14:33:40 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2025-02-28 14:33:40 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 'beanNameHandlerMapping' {}
2025-02-28 14:33:40 [] DEBUG _.s.w.s.HandlerMapping.Mappings - Mapped /validate/** -> ProxyExchangeHandlerFunction
/users/** -> ProxyExchangeHandlerFunction
2025-02-28 14:33:40 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2025-02-28 14:33:41 [] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-02-28 14:33:41 [] DEBUG i.n.u.i.InternalThreadLocalMap - -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2025-02-28 14:33:41 [] DEBUG i.n.u.i.InternalThreadLocalMap - -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2025-02-28 14:33:41 [] DEBUG io.netty.util.ResourceLeakDetector - -Dio.netty.leakDetection.level: simple
2025-02-28 14:33:41 [] DEBUG io.netty.util.ResourceLeakDetector - -Dio.netty.leakDetection.targetRecords: 4
2025-02-28 14:33:41 [] DEBUG i.n.handler.codec.compression.Brotli - brotli4j not in the classpath; Brotli support will be unavailable.
2025-02-28 14:33:41 [] DEBUG reactor.netty.tcp.TcpResources - [http] resources will use the default LoopResources: DefaultLoopResources {prefix=reactor-http, daemon=true, selectCount=12, workerCount=12}
2025-02-28 14:33:41 [] DEBUG reactor.netty.tcp.TcpResources - [http] resources will use the default ConnectionProvider: reactor.netty.resources.DefaultPooledConnectionProvider@4e40a54e
2025-02-28 14:33:41 [] DEBUG r.netty.resources.DefaultLoopIOUring - Default io_uring support : false
2025-02-28 14:33:41 [] DEBUG r.netty.resources.DefaultLoopEpoll - Default Epoll support : false
2025-02-28 14:33:41 [] DEBUG r.netty.resources.DefaultLoopKQueue - Default KQueue support : false
2025-02-28 14:33:41 [] DEBUG i.n.c.MultithreadEventLoopGroup - -Dio.netty.eventLoopThreads: 24
2025-02-28 14:33:41 [] DEBUG i.n.u.concurrent.GlobalEventExecutor - -Dio.netty.globalEventExecutor.quietPeriodSeconds: 1
2025-02-28 14:33:41 [] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.noKeySetOptimization: false
2025-02-28 14:33:41 [] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.selectorAutoRebuildThreshold: 512
2025-02-28 14:33:41 [] DEBUG i.n.util.internal.PlatformDependent - org.jctools-core.MpscChunkedArrayQueue: available
2025-02-28 14:33:41 [] DEBUG io.netty.util.NetUtil - -Djava.net.preferIPv4Stack: false
2025-02-28 14:33:41 [] DEBUG io.netty.util.NetUtil - -Djava.net.preferIPv6Addresses: false
2025-02-28 14:33:41 [] DEBUG i.netty.util.NetUtilInitializations - Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2025-02-28 14:33:41 [] DEBUG io.netty.util.NetUtil - Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2025-02-28 14:33:41 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default ResolvedAddressTypes: IPV4_ONLY
2025-02-28 14:33:41 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Localhost address: localhost/127.0.0.1
2025-02-28 14:33:41 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Windows hostname: DESKTOP-P307093
2025-02-28 14:33:41 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default search domains: []
2025-02-28 14:33:41 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default UnixResolverOptions{ndots=1, timeout=5, attempts=16}
2025-02-28 14:33:41 [] DEBUG i.n.r.DefaultHostsFileEntriesResolver - -Dio.netty.hostsFileRefreshInterval: 0
2025-02-28 14:33:41 [] DEBUG i.n.r.d.DefaultDnsServerAddressStreamProvider - Default DNS servers: [/8.8.8.8:53, /4.2.2.2:53] (sun.net.dns.ResolverConfiguration)
2025-02-28 14:33:41 [] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-02-28 14:33:41 [] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-02-28 14:33:41 [] INFO  c.c.c.g.c.CommongatewayApplication - Started CommongatewayApplication in 4.055 seconds (process running for 5.056)
2025-02-28 14:33:43 [] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-02-28 14:33:43 [] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-02-28 14:33:43 [] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-02-28 14:33:43 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 14:33:43 [759c6828-ec55-489d-bbf9-0c287a6d338e] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 14:33:43 [759c6828-ec55-489d-bbf9-0c287a6d338e] DEBUG i.m.c.u.i.l.InternalLoggerFactory - Using SLF4J as the default logging framework
2025-02-28 14:33:43 [759c6828-ec55-489d-bbf9-0c287a6d338e] DEBUG r.n.r.PooledConnectionProvider - Creating a new [http] client pool [PoolFactory{evictionInterval=PT0S, leasingStrategy=fifo, maxConnections=500, maxIdleTime=-1, maxLifeTime=-1, metricsEnabled=false, pendingAcquireMaxCount=1000, pendingAcquireTimeout=45000}] for [localhost/<unresolved>:8081]
2025-02-28 14:33:43 [759c6828-ec55-489d-bbf9-0c287a6d338e] DEBUG io.netty.channel.DefaultChannelId - -Dio.netty.processId: 21852 (auto-detected)
2025-02-28 14:33:43 [759c6828-ec55-489d-bbf9-0c287a6d338e] DEBUG io.netty.channel.DefaultChannelId - -Dio.netty.machineId: 00:15:5d:ff:fe:02:b5:1f (auto-detected)
2025-02-28 14:33:43 [759c6828-ec55-489d-bbf9-0c287a6d338e] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.numHeapArenas: 24
2025-02-28 14:33:43 [759c6828-ec55-489d-bbf9-0c287a6d338e] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.numDirectArenas: 24
2025-02-28 14:33:43 [759c6828-ec55-489d-bbf9-0c287a6d338e] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.pageSize: 8192
2025-02-28 14:33:43 [759c6828-ec55-489d-bbf9-0c287a6d338e] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxOrder: 9
2025-02-28 14:33:43 [759c6828-ec55-489d-bbf9-0c287a6d338e] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.chunkSize: 4194304
2025-02-28 14:33:43 [759c6828-ec55-489d-bbf9-0c287a6d338e] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.smallCacheSize: 256
2025-02-28 14:33:43 [759c6828-ec55-489d-bbf9-0c287a6d338e] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.normalCacheSize: 64
2025-02-28 14:33:43 [759c6828-ec55-489d-bbf9-0c287a6d338e] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2025-02-28 14:33:43 [759c6828-ec55-489d-bbf9-0c287a6d338e] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.cacheTrimInterval: 8192
2025-02-28 14:33:43 [759c6828-ec55-489d-bbf9-0c287a6d338e] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.cacheTrimIntervalMillis: 0
2025-02-28 14:33:43 [759c6828-ec55-489d-bbf9-0c287a6d338e] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.useCacheForAllThreads: false
2025-02-28 14:33:43 [759c6828-ec55-489d-bbf9-0c287a6d338e] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
2025-02-28 14:33:43 [759c6828-ec55-489d-bbf9-0c287a6d338e] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.disableCacheFinalizersForFastThreadLocalThreads: false
2025-02-28 14:33:43 [759c6828-ec55-489d-bbf9-0c287a6d338e] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.allocator.type: pooled
2025-02-28 14:33:43 [759c6828-ec55-489d-bbf9-0c287a6d338e] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.threadLocalDirectBufferSize: 0
2025-02-28 14:33:43 [759c6828-ec55-489d-bbf9-0c287a6d338e] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.maxThreadLocalCharBufferSize: 16384
2025-02-28 14:33:43 [] DEBUG r.n.r.PooledConnectionProvider - [431d8579] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 14:33:43 [] DEBUG io.netty.buffer.AbstractByteBuf - -Dio.netty.buffer.checkAccessible: true
2025-02-28 14:33:43 [] DEBUG io.netty.buffer.AbstractByteBuf - -Dio.netty.buffer.checkBounds: true
2025-02-28 14:33:43 [] DEBUG i.n.util.ResourceLeakDetectorFactory - Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@336c28dc
2025-02-28 14:33:44 [] DEBUG r.netty.transport.TransportConfig - [431d8579] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-28 14:33:44 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 14:33:44 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 14:33:44 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 14:33:44 [] DEBUG i.n.b.ChannelInitializerExtensions - -Dio.netty.bootstrap.extensions: null
2025-02-28 14:33:44 [] DEBUG r.netty.transport.TransportConnector - [431d8579] Connecting to [localhost/127.0.0.1:8081].
2025-02-28 14:33:44 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [431d8579, L:/127.0.0.1:59635 - R:localhost/127.0.0.1:8081] Registering pool release on close event for channel
2025-02-28 14:33:44 [] DEBUG r.n.r.PooledConnectionProvider - [431d8579, L:/127.0.0.1:59635 - R:localhost/127.0.0.1:8081] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 14:33:44 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [431d8579, L:/127.0.0.1:59635 - R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x431d8579, L:/127.0.0.1:59635 - R:localhost/127.0.0.1:8081]}, [connected])
2025-02-28 14:33:44 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [431d8579-1, L:/127.0.0.1:59635 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0x431d8579, L:/127.0.0.1:59635 - R:localhost/127.0.0.1:8081]}}, [configured])
2025-02-28 14:33:44 [] DEBUG r.n.http.client.HttpClientConnect - [431d8579-1, L:/127.0.0.1:59635 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY, method=GET}
2025-02-28 14:33:44 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [431d8579-1, L:/127.0.0.1:59635 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x431d8579, L:/127.0.0.1:59635 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 14:33:44 [] DEBUG r.n.http.client.HttpClientOperations - [431d8579-1, L:/127.0.0.1:59635 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 14:33:44 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.maxCapacityPerThread: 4096
2025-02-28 14:33:44 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.ratio: 8
2025-02-28 14:33:44 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.chunkSize: 32
2025-02-28 14:33:44 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.blocking: false
2025-02-28 14:33:44 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.batchFastThreadLocalOnly: true
2025-02-28 14:33:44 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [431d8579-1, L:/127.0.0.1:59635 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x431d8579, L:/127.0.0.1:59635 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 14:33:44 [] DEBUG i.n.handler.codec.compression.Zstd - zstd-jni not in the classpath; Zstd support will be unavailable.
2025-02-28 14:33:44 [] DEBUG r.n.http.client.HttpClientOperations - [431d8579-1, L:/127.0.0.1:59635 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-28 14:33:44 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [431d8579-1, L:/127.0.0.1:59635 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x431d8579, L:/127.0.0.1:59635 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 14:33:44 [] DEBUG r.n.http.client.HttpClientOperations - [431d8579-1, L:/127.0.0.1:59635 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 14:33:44 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [431d8579, L:/127.0.0.1:59635 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x431d8579, L:/127.0.0.1:59635 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 14:33:44 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [431d8579, L:/127.0.0.1:59635 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x431d8579, L:/127.0.0.1:59635 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 14:33:44 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [431d8579, L:/127.0.0.1:59635 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-28 14:33:44 [] DEBUG r.n.r.PooledConnectionProvider - [431d8579, L:/127.0.0.1:59635 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-28 14:33:44 [] DEBUG reactor.netty.channel.FluxReceive - [a95e316f, L:/127.0.0.1:59635 ! R:localhost/127.0.0.1:8081] [terminated=true, cancelled=false, pending=1, error=null]: subscribing inbound receiver
2025-02-28 14:33:49 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 14:33:49 [4e8291a2-8a6a-473c-8970-251ce226391f] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 14:33:49 [4e8291a2-8a6a-473c-8970-251ce226391f] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /users
2025-02-28 14:33:49 [4e8291a2-8a6a-473c-8970-251ce226391f] DEBUG r.n.r.PooledConnectionProvider - Creating a new [http] client pool [PoolFactory{evictionInterval=PT0S, leasingStrategy=fifo, maxConnections=500, maxIdleTime=-1, maxLifeTime=-1, metricsEnabled=false, pendingAcquireMaxCount=1000, pendingAcquireTimeout=45000}] for [localhost/<unresolved>:8081]
2025-02-28 14:33:49 [] DEBUG r.n.r.PooledConnectionProvider - [8fcb384e] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 14:33:49 [] DEBUG r.netty.transport.TransportConfig - [8fcb384e] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-28 14:33:49 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 14:33:49 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 14:33:49 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 14:33:49 [] DEBUG r.netty.transport.TransportConnector - [8fcb384e] Connecting to [localhost/127.0.0.1:8081].
2025-02-28 14:33:49 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [8fcb384e, L:/127.0.0.1:59645 - R:localhost/127.0.0.1:8081] Registering pool release on close event for channel
2025-02-28 14:33:49 [] DEBUG r.n.r.PooledConnectionProvider - [8fcb384e, L:/127.0.0.1:59645 - R:localhost/127.0.0.1:8081] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 14:33:49 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [8fcb384e, L:/127.0.0.1:59645 - R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x8fcb384e, L:/127.0.0.1:59645 - R:localhost/127.0.0.1:8081]}, [connected])
2025-02-28 14:33:49 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [8fcb384e-1, L:/127.0.0.1:59645 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0x8fcb384e, L:/127.0.0.1:59645 - R:localhost/127.0.0.1:8081]}}, [configured])
2025-02-28 14:33:49 [] DEBUG r.n.http.client.HttpClientConnect - [8fcb384e-1, L:/127.0.0.1:59645 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY, method=GET}
2025-02-28 14:33:49 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [8fcb384e-1, L:/127.0.0.1:59645 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x8fcb384e, L:/127.0.0.1:59645 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 14:33:49 [] DEBUG r.n.http.client.HttpClientOperations - [8fcb384e-1, L:/127.0.0.1:59645 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 14:33:49 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [8fcb384e-1, L:/127.0.0.1:59645 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x8fcb384e, L:/127.0.0.1:59645 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 14:33:49 [] DEBUG r.n.http.client.HttpClientOperations - [8fcb384e-1, L:/127.0.0.1:59645 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-28 14:33:49 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [8fcb384e-1, L:/127.0.0.1:59645 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x8fcb384e, L:/127.0.0.1:59645 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 14:33:49 [] DEBUG reactor.netty.channel.FluxReceive - [8fcb384e-1, L:/127.0.0.1:59645 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-28 14:33:49 [] DEBUG r.n.http.client.HttpClientOperations - [8fcb384e-1, L:/127.0.0.1:59645 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 14:33:49 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [8fcb384e, L:/127.0.0.1:59645 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x8fcb384e, L:/127.0.0.1:59645 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 14:33:49 [4e8291a2-8a6a-473c-8970-251ce226391f] INFO  c.c.c.g.c.c.ValidationInterceptor - ✅ Token Validated! Forwarding request...
2025-02-28 14:33:49 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [8fcb384e, L:/127.0.0.1:59645 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x8fcb384e, L:/127.0.0.1:59645 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 14:33:49 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [8fcb384e, L:/127.0.0.1:59645 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-28 14:33:49 [] DEBUG r.n.r.PooledConnectionProvider - [8fcb384e, L:/127.0.0.1:59645 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-28 14:33:49 [4e8291a2-8a6a-473c-8970-251ce226391f] DEBUG r.n.r.PooledConnectionProvider - Creating a new [http] client pool [PoolFactory{evictionInterval=PT0S, leasingStrategy=fifo, maxConnections=500, maxIdleTime=-1, maxLifeTime=-1, metricsEnabled=false, pendingAcquireMaxCount=1000, pendingAcquireTimeout=45000}] for [localhost/<unresolved>:8082]
2025-02-28 14:33:49 [] DEBUG r.n.r.PooledConnectionProvider - [a06c3f90] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 14:33:49 [] DEBUG r.netty.transport.TransportConfig - [a06c3f90] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-28 14:33:49 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 14:33:49 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 14:33:49 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 14:33:49 [] DEBUG r.netty.transport.TransportConnector - [a06c3f90] Connecting to [localhost/127.0.0.1:8082].
2025-02-28 14:33:49 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [a06c3f90, L:/127.0.0.1:59646 - R:localhost/127.0.0.1:8082] Registering pool release on close event for channel
2025-02-28 14:33:49 [] DEBUG r.n.r.PooledConnectionProvider - [a06c3f90, L:/127.0.0.1:59646 - R:localhost/127.0.0.1:8082] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 14:33:49 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [a06c3f90, L:/127.0.0.1:59646 - R:localhost/127.0.0.1:8082] onStateChange(PooledConnection{channel=[id: 0xa06c3f90, L:/127.0.0.1:59646 - R:localhost/127.0.0.1:8082]}, [connected])
2025-02-28 14:33:49 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [a06c3f90-1, L:/127.0.0.1:59646 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0xa06c3f90, L:/127.0.0.1:59646 - R:localhost/127.0.0.1:8082]}}, [configured])
2025-02-28 14:33:49 [] DEBUG r.n.http.client.HttpClientConnect - [a06c3f90-1, L:/127.0.0.1:59646 - R:localhost/127.0.0.1:8082] Handler is being applied: {uri=http://localhost:8082/users, method=GET}
2025-02-28 14:33:49 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [a06c3f90-1, L:/127.0.0.1:59646 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0xa06c3f90, L:/127.0.0.1:59646 - R:localhost/127.0.0.1:8082]}}, [request_prepared])
2025-02-28 14:33:49 [] DEBUG r.n.http.client.HttpClientOperations - [a06c3f90-1, L:/127.0.0.1:59646 - R:localhost/127.0.0.1:8082] No sendHeaders() called before complete, sending zero-length header
2025-02-28 14:33:49 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [a06c3f90-1, L:/127.0.0.1:59646 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0xa06c3f90, L:/127.0.0.1:59646 - R:localhost/127.0.0.1:8082]}}, [request_sent])
2025-02-28 14:33:49 [] DEBUG r.n.http.client.HttpClientOperations - [a06c3f90-1, L:/127.0.0.1:59646 - R:localhost/127.0.0.1:8082] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Content-Length: <filtered>
Date: <filtered>
2025-02-28 14:33:49 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [a06c3f90-1, L:/127.0.0.1:59646 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0xa06c3f90, L:/127.0.0.1:59646 - R:localhost/127.0.0.1:8082]}}, [response_received])
2025-02-28 14:33:49 [] DEBUG r.n.http.client.HttpClientOperations - [a06c3f90-1, L:/127.0.0.1:59646 - R:localhost/127.0.0.1:8082] Received last HTTP packet
2025-02-28 14:33:49 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [a06c3f90, L:/127.0.0.1:59646 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0xa06c3f90, L:/127.0.0.1:59646 - R:localhost/127.0.0.1:8082]}}, [response_completed])
2025-02-28 14:33:49 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [a06c3f90, L:/127.0.0.1:59646 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0xa06c3f90, L:/127.0.0.1:59646 - R:localhost/127.0.0.1:8082]}}, [disconnecting])
2025-02-28 14:33:49 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [a06c3f90, L:/127.0.0.1:59646 - R:localhost/127.0.0.1:8082] Releasing channel
2025-02-28 14:33:49 [] DEBUG r.n.r.PooledConnectionProvider - [a06c3f90, L:/127.0.0.1:59646 - R:localhost/127.0.0.1:8082] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-28 14:33:49 [] DEBUG reactor.netty.channel.FluxReceive - [57e3c756, L:/127.0.0.1:59646 ! R:localhost/127.0.0.1:8082] [terminated=true, cancelled=false, pending=1, error=null]: subscribing inbound receiver
2025-02-28 14:33:54 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 14:33:54 [ab2a3d86-2f76-44be-831b-d9e00f25780a] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 14:33:54 [ab2a3d86-2f76-44be-831b-d9e00f25780a] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /users
2025-02-28 14:33:54 [ab2a3d86-2f76-44be-831b-d9e00f25780a] WARN  c.c.c.g.c.c.ValidationInterceptor - ❌ Missing Validation Token or OrgId!
2025-02-28 14:33:54 [] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /error
2025-02-28 14:33:54 [] WARN  c.c.c.g.c.c.ValidationInterceptor - ❌ Missing Validation Token or OrgId!
2025-02-28 14:34:00 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 14:34:00 [f9b4a539-7bea-4c43-8b49-cc42156f7245] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 14:34:00 [f9b4a539-7bea-4c43-8b49-cc42156f7245] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /users
2025-02-28 14:34:00 [f9b4a539-7bea-4c43-8b49-cc42156f7245] WARN  c.c.c.g.c.c.ValidationInterceptor - ❌ Missing Validation Token or OrgId!
2025-02-28 14:34:00 [] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /error
2025-02-28 14:34:00 [] WARN  c.c.c.g.c.c.ValidationInterceptor - ❌ Missing Validation Token or OrgId!
2025-02-28 14:34:05 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 14:34:05 [be930d98-4cf7-44c7-8f96-bfe74472c878] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 14:34:05 [be930d98-4cf7-44c7-8f96-bfe74472c878] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /users
2025-02-28 14:34:05 [] DEBUG r.n.r.PooledConnectionProvider - [8fcb384e, L:/127.0.0.1:59645 - R:localhost/127.0.0.1:8081] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 14:34:05 [] DEBUG r.n.http.client.HttpClientConnect - [8fcb384e-2, L:/127.0.0.1:59645 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY, method=GET}
2025-02-28 14:34:05 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [8fcb384e-2, L:/127.0.0.1:59645 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x8fcb384e, L:/127.0.0.1:59645 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 14:34:05 [] DEBUG r.n.http.client.HttpClientOperations - [8fcb384e-2, L:/127.0.0.1:59645 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 14:34:05 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [8fcb384e-2, L:/127.0.0.1:59645 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x8fcb384e, L:/127.0.0.1:59645 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 14:34:05 [] DEBUG r.n.http.client.HttpClientOperations - [8fcb384e-2, L:/127.0.0.1:59645 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-28 14:34:05 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [8fcb384e-2, L:/127.0.0.1:59645 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x8fcb384e, L:/127.0.0.1:59645 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 14:34:05 [] DEBUG reactor.netty.channel.FluxReceive - [8fcb384e-2, L:/127.0.0.1:59645 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-28 14:34:05 [] DEBUG r.n.http.client.HttpClientOperations - [8fcb384e-2, L:/127.0.0.1:59645 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 14:34:05 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [8fcb384e, L:/127.0.0.1:59645 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x8fcb384e, L:/127.0.0.1:59645 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 14:34:05 [be930d98-4cf7-44c7-8f96-bfe74472c878] INFO  c.c.c.g.c.c.ValidationInterceptor - ✅ Token Validated! Forwarding request...
2025-02-28 14:34:05 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [8fcb384e, L:/127.0.0.1:59645 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x8fcb384e, L:/127.0.0.1:59645 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 14:34:05 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [8fcb384e, L:/127.0.0.1:59645 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-28 14:34:05 [] DEBUG r.n.r.PooledConnectionProvider - [8fcb384e, L:/127.0.0.1:59645 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-28 14:34:05 [] DEBUG r.n.r.PooledConnectionProvider - [a06c3f90, L:/127.0.0.1:59646 - R:localhost/127.0.0.1:8082] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 14:34:05 [] DEBUG r.n.http.client.HttpClientConnect - [a06c3f90-2, L:/127.0.0.1:59646 - R:localhost/127.0.0.1:8082] Handler is being applied: {uri=http://localhost:8082/users, method=GET}
2025-02-28 14:34:05 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [a06c3f90-2, L:/127.0.0.1:59646 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0xa06c3f90, L:/127.0.0.1:59646 - R:localhost/127.0.0.1:8082]}}, [request_prepared])
2025-02-28 14:34:05 [] DEBUG r.n.http.client.HttpClientOperations - [a06c3f90-2, L:/127.0.0.1:59646 - R:localhost/127.0.0.1:8082] No sendHeaders() called before complete, sending zero-length header
2025-02-28 14:34:05 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [a06c3f90-2, L:/127.0.0.1:59646 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0xa06c3f90, L:/127.0.0.1:59646 - R:localhost/127.0.0.1:8082]}}, [request_sent])
2025-02-28 14:34:05 [] DEBUG r.n.http.client.HttpClientOperations - [a06c3f90-2, L:/127.0.0.1:59646 - R:localhost/127.0.0.1:8082] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Content-Length: <filtered>
Date: <filtered>
2025-02-28 14:34:05 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [a06c3f90-2, L:/127.0.0.1:59646 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0xa06c3f90, L:/127.0.0.1:59646 - R:localhost/127.0.0.1:8082]}}, [response_received])
2025-02-28 14:34:05 [] DEBUG r.n.http.client.HttpClientOperations - [a06c3f90-2, L:/127.0.0.1:59646 - R:localhost/127.0.0.1:8082] Received last HTTP packet
2025-02-28 14:34:05 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [a06c3f90, L:/127.0.0.1:59646 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0xa06c3f90, L:/127.0.0.1:59646 - R:localhost/127.0.0.1:8082]}}, [response_completed])
2025-02-28 14:34:05 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [a06c3f90, L:/127.0.0.1:59646 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0xa06c3f90, L:/127.0.0.1:59646 - R:localhost/127.0.0.1:8082]}}, [disconnecting])
2025-02-28 14:34:05 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [a06c3f90, L:/127.0.0.1:59646 - R:localhost/127.0.0.1:8082] Releasing channel
2025-02-28 14:34:05 [] DEBUG r.n.r.PooledConnectionProvider - [a06c3f90, L:/127.0.0.1:59646 - R:localhost/127.0.0.1:8082] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-28 14:34:05 [] DEBUG reactor.netty.channel.FluxReceive - [6d6bc03e, L:/127.0.0.1:59646 ! R:localhost/127.0.0.1:8082] [terminated=true, cancelled=false, pending=1, error=null]: subscribing inbound receiver
2025-02-28 14:34:09 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 14:34:09 [2402f2d8-cbe7-40b0-8284-c1253599e364] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 14:34:09 [2402f2d8-cbe7-40b0-8284-c1253599e364] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /users
2025-02-28 14:34:09 [] DEBUG r.n.r.PooledConnectionProvider - [8fcb384e, L:/127.0.0.1:59645 - R:localhost/127.0.0.1:8081] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 14:34:09 [] DEBUG r.n.http.client.HttpClientConnect - [8fcb384e-3, L:/127.0.0.1:59645 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY, method=GET}
2025-02-28 14:34:09 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [8fcb384e-3, L:/127.0.0.1:59645 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x8fcb384e, L:/127.0.0.1:59645 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 14:34:09 [] DEBUG r.n.http.client.HttpClientOperations - [8fcb384e-3, L:/127.0.0.1:59645 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 14:34:09 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [8fcb384e-3, L:/127.0.0.1:59645 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x8fcb384e, L:/127.0.0.1:59645 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 14:34:09 [] DEBUG r.n.http.client.HttpClientOperations - [8fcb384e-3, L:/127.0.0.1:59645 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-28 14:34:09 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [8fcb384e-3, L:/127.0.0.1:59645 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x8fcb384e, L:/127.0.0.1:59645 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 14:34:09 [] DEBUG reactor.netty.channel.FluxReceive - [8fcb384e-3, L:/127.0.0.1:59645 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-28 14:34:09 [] DEBUG r.n.http.client.HttpClientOperations - [8fcb384e-3, L:/127.0.0.1:59645 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 14:34:09 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [8fcb384e, L:/127.0.0.1:59645 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x8fcb384e, L:/127.0.0.1:59645 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 14:34:09 [2402f2d8-cbe7-40b0-8284-c1253599e364] INFO  c.c.c.g.c.c.ValidationInterceptor - ✅ Token Validated! Forwarding request...
2025-02-28 14:34:09 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [8fcb384e, L:/127.0.0.1:59645 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x8fcb384e, L:/127.0.0.1:59645 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 14:34:09 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [8fcb384e, L:/127.0.0.1:59645 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-28 14:34:09 [] DEBUG r.n.r.PooledConnectionProvider - [8fcb384e, L:/127.0.0.1:59645 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-28 14:34:09 [] DEBUG r.n.r.PooledConnectionProvider - [a06c3f90, L:/127.0.0.1:59646 - R:localhost/127.0.0.1:8082] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 14:34:09 [] DEBUG r.n.http.client.HttpClientConnect - [a06c3f90-3, L:/127.0.0.1:59646 - R:localhost/127.0.0.1:8082] Handler is being applied: {uri=http://localhost:8082/users, method=GET}
2025-02-28 14:34:09 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [a06c3f90-3, L:/127.0.0.1:59646 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0xa06c3f90, L:/127.0.0.1:59646 - R:localhost/127.0.0.1:8082]}}, [request_prepared])
2025-02-28 14:34:09 [] DEBUG r.n.http.client.HttpClientOperations - [a06c3f90-3, L:/127.0.0.1:59646 - R:localhost/127.0.0.1:8082] No sendHeaders() called before complete, sending zero-length header
2025-02-28 14:34:09 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [a06c3f90-3, L:/127.0.0.1:59646 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0xa06c3f90, L:/127.0.0.1:59646 - R:localhost/127.0.0.1:8082]}}, [request_sent])
2025-02-28 14:34:09 [] DEBUG r.n.http.client.HttpClientOperations - [a06c3f90-3, L:/127.0.0.1:59646 - R:localhost/127.0.0.1:8082] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Content-Length: <filtered>
Date: <filtered>
2025-02-28 14:34:09 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [a06c3f90-3, L:/127.0.0.1:59646 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0xa06c3f90, L:/127.0.0.1:59646 - R:localhost/127.0.0.1:8082]}}, [response_received])
2025-02-28 14:34:09 [] DEBUG r.n.http.client.HttpClientOperations - [a06c3f90-3, L:/127.0.0.1:59646 - R:localhost/127.0.0.1:8082] Received last HTTP packet
2025-02-28 14:34:09 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [a06c3f90, L:/127.0.0.1:59646 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0xa06c3f90, L:/127.0.0.1:59646 - R:localhost/127.0.0.1:8082]}}, [response_completed])
2025-02-28 14:34:09 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [a06c3f90, L:/127.0.0.1:59646 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0xa06c3f90, L:/127.0.0.1:59646 - R:localhost/127.0.0.1:8082]}}, [disconnecting])
2025-02-28 14:34:09 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [a06c3f90, L:/127.0.0.1:59646 - R:localhost/127.0.0.1:8082] Releasing channel
2025-02-28 14:34:09 [] DEBUG r.n.r.PooledConnectionProvider - [a06c3f90, L:/127.0.0.1:59646 - R:localhost/127.0.0.1:8082] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-28 14:34:09 [] DEBUG reactor.netty.channel.FluxReceive - [52651815, L:/127.0.0.1:59646 ! R:localhost/127.0.0.1:8082] [terminated=true, cancelled=false, pending=1, error=null]: subscribing inbound receiver
2025-02-28 14:34:44 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [431d8579, L:/127.0.0.1:59635 ! R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x431d8579, L:/127.0.0.1:59635 ! R:localhost/127.0.0.1:8081]}, [disconnecting])
2025-02-28 14:35:09 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [8fcb384e, L:/127.0.0.1:59645 ! R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x8fcb384e, L:/127.0.0.1:59645 ! R:localhost/127.0.0.1:8081]}, [disconnecting])
2025-02-28 14:35:09 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [a06c3f90, L:/127.0.0.1:59646 ! R:localhost/127.0.0.1:8082] onStateChange(PooledConnection{channel=[id: 0xa06c3f90, L:/127.0.0.1:59646 ! R:localhost/127.0.0.1:8082]}, [disconnecting])
2025-02-28 14:46:40 [] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-02-28 14:46:41 [] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-02-28 14:46:41 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 4 thread-local buffer(s) from thread: reactor-http-nio-3
2025-02-28 14:46:41 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 8 thread-local buffer(s) from thread: reactor-http-nio-4
2025-02-28 14:46:41 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 5 thread-local buffer(s) from thread: reactor-http-nio-5
2025-02-28 14:46:45 [] DEBUG org.jboss.logging - Logging Provider: org.jboss.logging.Slf4jLoggerProvider found via system property
2025-02-28 14:46:45 [] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final
2025-02-28 14:46:45 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-02-28 14:46:45 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-02-28 14:46:45 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-02-28 14:46:45 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-02-28 14:46:45 [] DEBUG o.h.v.i.e.r.TraversableResolvers - Cannot find jakarta.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2025-02-28 14:46:45 [] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-02-28 14:46:45 [] INFO  c.c.c.g.c.CommongatewayApplication - Starting CommongatewayApplication using Java 17.0.12 with PID 5304 (D:\WORKSPACE\API-GATEWAY\commongateway\target\classes started by CITPL in D:\WORKSPACE\API-GATEWAY)
2025-02-28 14:46:45 [] DEBUG c.c.c.g.c.CommongatewayApplication - Running with Spring Boot v3.4.2, Spring v6.2.2
2025-02-28 14:46:45 [] INFO  c.c.c.g.c.CommongatewayApplication - No active profile set, falling back to 1 default profile: "default"
2025-02-28 14:46:45 [] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-02-28 14:46:45 [] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-02-28 14:46:45 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-02-28 14:46:45 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-02-28 14:46:45 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-02-28 14:46:45 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-02-28 14:46:45 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-02-28 14:46:45 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-02-28 14:46:46 [] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=d2aee5ef-86a6-3b95-abd8-708d95e66676
2025-02-28 14:46:47 [] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-02-28 14:46:47 [] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-02-28 14:46:47 [] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-02-28 14:46:47 [] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.34]
2025-02-28 14:46:47 [] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-02-28 14:46:47 [] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1851 ms
2025-02-28 14:46:47 [] DEBUG i.n.u.i.l.InternalLoggerFactory - Using SLF4J as the default logging framework
2025-02-28 14:46:47 [] DEBUG i.n.util.internal.PlatformDependent0 - -Dio.netty.noUnsafe: false
2025-02-28 14:46:47 [] DEBUG i.n.util.internal.PlatformDependent0 - Java version: 17
2025-02-28 14:46:47 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe.theUnsafe: available
2025-02-28 14:46:47 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe base methods: all available
2025-02-28 14:46:47 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe.storeFence: available
2025-02-28 14:46:47 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.Buffer.address: available
2025-02-28 14:46:47 [] DEBUG i.n.util.internal.PlatformDependent0 - direct buffer constructor: unavailable: Reflective setAccessible(true) disabled
2025-02-28 14:46:47 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.Bits.unaligned: available, true
2025-02-28 14:46:47 [] DEBUG i.n.util.internal.PlatformDependent0 - jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable: class io.netty.util.internal.PlatformDependent0$7 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @3e77a1ed
2025-02-28 14:46:47 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.DirectByteBuffer.<init>(long, {int,long}): unavailable
2025-02-28 14:46:47 [] DEBUG i.n.util.internal.PlatformDependent - sun.misc.Unsafe: available
2025-02-28 14:46:47 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.tmpdir: C:\Users\CITPL\AppData\Local\Temp (java.io.tmpdir)
2025-02-28 14:46:47 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.bitMode: 64 (sun.arch.data.model)
2025-02-28 14:46:47 [] DEBUG i.n.util.internal.PlatformDependent - Platform: Windows
2025-02-28 14:46:47 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.maxDirectMemory: -1 bytes
2025-02-28 14:46:47 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.uninitializedArrayAllocationThreshold: -1
2025-02-28 14:46:47 [] DEBUG io.netty.util.internal.CleanerJava9 - java.nio.ByteBuffer.cleaner(): available
2025-02-28 14:46:47 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.noPreferDirect: false
2025-02-28 14:46:47 [] DEBUG reactor.util.Loggers - Using Slf4j logging framework
2025-02-28 14:46:48 [] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-02-28 14:46:48 [] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2025-02-28 14:46:48 [] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2025-02-28 14:46:48 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-02-28 14:46:48 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via user class loader
2025-02-28 14:46:48 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-02-28 14:46:48 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-02-28 14:46:48 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-02-28 14:46:48 [] DEBUG o.h.v.i.e.r.TraversableResolvers - Cannot find jakarta.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2025-02-28 14:46:48 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-02-28 14:46:48 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-02-28 14:46:48 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-02-28 14:46:48 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-02-28 14:46:48 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-02-28 14:46:48 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-02-28 14:46:48 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	c.c.c.g.c.c.HomeController:
	{GET [/home]}: get()
2025-02-28 14:46:48 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2025-02-28 14:46:48 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 'beanNameHandlerMapping' {}
2025-02-28 14:46:48 [] DEBUG _.s.w.s.HandlerMapping.Mappings - Mapped /validate/** -> ProxyExchangeHandlerFunction
/users/** -> ProxyExchangeHandlerFunction
2025-02-28 14:46:48 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2025-02-28 14:46:48 [] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-02-28 14:46:48 [] DEBUG i.n.u.i.InternalThreadLocalMap - -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2025-02-28 14:46:48 [] DEBUG i.n.u.i.InternalThreadLocalMap - -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2025-02-28 14:46:48 [] DEBUG io.netty.util.ResourceLeakDetector - -Dio.netty.leakDetection.level: simple
2025-02-28 14:46:48 [] DEBUG io.netty.util.ResourceLeakDetector - -Dio.netty.leakDetection.targetRecords: 4
2025-02-28 14:46:48 [] DEBUG i.n.handler.codec.compression.Brotli - brotli4j not in the classpath; Brotli support will be unavailable.
2025-02-28 14:46:48 [] DEBUG reactor.netty.tcp.TcpResources - [http] resources will use the default LoopResources: DefaultLoopResources {prefix=reactor-http, daemon=true, selectCount=12, workerCount=12}
2025-02-28 14:46:48 [] DEBUG reactor.netty.tcp.TcpResources - [http] resources will use the default ConnectionProvider: reactor.netty.resources.DefaultPooledConnectionProvider@609ff237
2025-02-28 14:46:48 [] DEBUG r.netty.resources.DefaultLoopIOUring - Default io_uring support : false
2025-02-28 14:46:48 [] DEBUG r.netty.resources.DefaultLoopEpoll - Default Epoll support : false
2025-02-28 14:46:48 [] DEBUG r.netty.resources.DefaultLoopKQueue - Default KQueue support : false
2025-02-28 14:46:48 [] DEBUG i.n.c.MultithreadEventLoopGroup - -Dio.netty.eventLoopThreads: 24
2025-02-28 14:46:48 [] DEBUG i.n.u.concurrent.GlobalEventExecutor - -Dio.netty.globalEventExecutor.quietPeriodSeconds: 1
2025-02-28 14:46:48 [] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.noKeySetOptimization: false
2025-02-28 14:46:48 [] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.selectorAutoRebuildThreshold: 512
2025-02-28 14:46:48 [] DEBUG i.n.util.internal.PlatformDependent - org.jctools-core.MpscChunkedArrayQueue: available
2025-02-28 14:46:49 [] DEBUG io.netty.util.NetUtil - -Djava.net.preferIPv4Stack: false
2025-02-28 14:46:49 [] DEBUG io.netty.util.NetUtil - -Djava.net.preferIPv6Addresses: false
2025-02-28 14:46:49 [] DEBUG i.netty.util.NetUtilInitializations - Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2025-02-28 14:46:49 [] DEBUG io.netty.util.NetUtil - Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2025-02-28 14:46:49 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default ResolvedAddressTypes: IPV4_ONLY
2025-02-28 14:46:49 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Localhost address: localhost/127.0.0.1
2025-02-28 14:46:49 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Windows hostname: DESKTOP-P307093
2025-02-28 14:46:49 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default search domains: []
2025-02-28 14:46:49 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default UnixResolverOptions{ndots=1, timeout=5, attempts=16}
2025-02-28 14:46:49 [] DEBUG i.n.r.DefaultHostsFileEntriesResolver - -Dio.netty.hostsFileRefreshInterval: 0
2025-02-28 14:46:49 [] DEBUG i.n.r.d.DefaultDnsServerAddressStreamProvider - Default DNS servers: [/8.8.8.8:53, /4.2.2.2:53] (sun.net.dns.ResolverConfiguration)
2025-02-28 14:46:49 [] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-02-28 14:46:49 [] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-02-28 14:46:49 [] INFO  c.c.c.g.c.CommongatewayApplication - Started CommongatewayApplication in 4.289 seconds (process running for 5.299)
2025-02-28 14:49:25 [] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-02-28 14:49:25 [] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-02-28 14:49:25 [] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-02-28 14:49:25 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 14:49:25 [911f3eec-72d0-4391-b6fd-0ed11c42595f] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 14:49:25 [911f3eec-72d0-4391-b6fd-0ed11c42595f] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /users
2025-02-28 14:49:25 [911f3eec-72d0-4391-b6fd-0ed11c42595f] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔄 Sending Validation Request to: http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY&orgId=001
2025-02-28 14:49:25 [911f3eec-72d0-4391-b6fd-0ed11c42595f] DEBUG r.n.r.PooledConnectionProvider - Creating a new [http] client pool [PoolFactory{evictionInterval=PT0S, leasingStrategy=fifo, maxConnections=500, maxIdleTime=-1, maxLifeTime=-1, metricsEnabled=false, pendingAcquireMaxCount=1000, pendingAcquireTimeout=45000}] for [localhost/<unresolved>:8081]
2025-02-28 14:49:25 [911f3eec-72d0-4391-b6fd-0ed11c42595f] DEBUG io.netty.channel.DefaultChannelId - -Dio.netty.processId: 5304 (auto-detected)
2025-02-28 14:49:25 [911f3eec-72d0-4391-b6fd-0ed11c42595f] DEBUG io.netty.channel.DefaultChannelId - -Dio.netty.machineId: 00:15:5d:ff:fe:02:b5:1f (auto-detected)
2025-02-28 14:49:25 [911f3eec-72d0-4391-b6fd-0ed11c42595f] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.numHeapArenas: 24
2025-02-28 14:49:25 [911f3eec-72d0-4391-b6fd-0ed11c42595f] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.numDirectArenas: 24
2025-02-28 14:49:25 [911f3eec-72d0-4391-b6fd-0ed11c42595f] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.pageSize: 8192
2025-02-28 14:49:25 [911f3eec-72d0-4391-b6fd-0ed11c42595f] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxOrder: 9
2025-02-28 14:49:25 [911f3eec-72d0-4391-b6fd-0ed11c42595f] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.chunkSize: 4194304
2025-02-28 14:49:25 [911f3eec-72d0-4391-b6fd-0ed11c42595f] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.smallCacheSize: 256
2025-02-28 14:49:25 [911f3eec-72d0-4391-b6fd-0ed11c42595f] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.normalCacheSize: 64
2025-02-28 14:49:25 [911f3eec-72d0-4391-b6fd-0ed11c42595f] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2025-02-28 14:49:25 [911f3eec-72d0-4391-b6fd-0ed11c42595f] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.cacheTrimInterval: 8192
2025-02-28 14:49:25 [911f3eec-72d0-4391-b6fd-0ed11c42595f] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.cacheTrimIntervalMillis: 0
2025-02-28 14:49:25 [911f3eec-72d0-4391-b6fd-0ed11c42595f] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.useCacheForAllThreads: false
2025-02-28 14:49:25 [911f3eec-72d0-4391-b6fd-0ed11c42595f] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
2025-02-28 14:49:25 [911f3eec-72d0-4391-b6fd-0ed11c42595f] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.disableCacheFinalizersForFastThreadLocalThreads: false
2025-02-28 14:49:25 [911f3eec-72d0-4391-b6fd-0ed11c42595f] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.allocator.type: pooled
2025-02-28 14:49:25 [911f3eec-72d0-4391-b6fd-0ed11c42595f] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.threadLocalDirectBufferSize: 0
2025-02-28 14:49:25 [911f3eec-72d0-4391-b6fd-0ed11c42595f] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.maxThreadLocalCharBufferSize: 16384
2025-02-28 14:49:25 [] DEBUG r.n.r.PooledConnectionProvider - [46c84a29] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 14:49:25 [] DEBUG io.netty.buffer.AbstractByteBuf - -Dio.netty.buffer.checkAccessible: true
2025-02-28 14:49:25 [] DEBUG io.netty.buffer.AbstractByteBuf - -Dio.netty.buffer.checkBounds: true
2025-02-28 14:49:25 [] DEBUG i.n.util.ResourceLeakDetectorFactory - Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@3f1a9895
2025-02-28 14:49:25 [] DEBUG r.netty.transport.TransportConfig - [46c84a29] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-28 14:49:25 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 14:49:25 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 14:49:25 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 14:49:25 [] DEBUG i.n.b.ChannelInitializerExtensions - -Dio.netty.bootstrap.extensions: null
2025-02-28 14:49:25 [] DEBUG r.netty.transport.TransportConnector - [46c84a29] Connecting to [localhost/127.0.0.1:8081].
2025-02-28 14:49:25 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [46c84a29, L:/127.0.0.1:59916 - R:localhost/127.0.0.1:8081] Registering pool release on close event for channel
2025-02-28 14:49:25 [] DEBUG r.n.r.PooledConnectionProvider - [46c84a29, L:/127.0.0.1:59916 - R:localhost/127.0.0.1:8081] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 14:49:25 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [46c84a29, L:/127.0.0.1:59916 - R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x46c84a29, L:/127.0.0.1:59916 - R:localhost/127.0.0.1:8081]}, [connected])
2025-02-28 14:49:25 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [46c84a29-1, L:/127.0.0.1:59916 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0x46c84a29, L:/127.0.0.1:59916 - R:localhost/127.0.0.1:8081]}}, [configured])
2025-02-28 14:49:25 [] DEBUG r.n.http.client.HttpClientConnect - [46c84a29-1, L:/127.0.0.1:59916 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY&orgId=001, method=GET}
2025-02-28 14:49:25 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [46c84a29-1, L:/127.0.0.1:59916 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x46c84a29, L:/127.0.0.1:59916 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 14:49:25 [] DEBUG r.n.http.client.HttpClientOperations - [46c84a29-1, L:/127.0.0.1:59916 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 14:49:25 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.maxCapacityPerThread: 4096
2025-02-28 14:49:25 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.ratio: 8
2025-02-28 14:49:25 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.chunkSize: 32
2025-02-28 14:49:25 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.blocking: false
2025-02-28 14:49:25 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.batchFastThreadLocalOnly: true
2025-02-28 14:49:25 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [46c84a29-1, L:/127.0.0.1:59916 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x46c84a29, L:/127.0.0.1:59916 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 14:49:25 [] DEBUG i.n.handler.codec.compression.Zstd - zstd-jni not in the classpath; Zstd support will be unavailable.
2025-02-28 14:49:25 [] DEBUG r.n.http.client.HttpClientOperations - [46c84a29-1, L:/127.0.0.1:59916 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-28 14:49:25 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [46c84a29-1, L:/127.0.0.1:59916 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x46c84a29, L:/127.0.0.1:59916 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 14:49:25 [] DEBUG reactor.netty.channel.FluxReceive - [46c84a29-1, L:/127.0.0.1:59916 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-28 14:49:25 [] DEBUG r.n.http.client.HttpClientOperations - [46c84a29-1, L:/127.0.0.1:59916 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 14:49:25 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [46c84a29, L:/127.0.0.1:59916 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x46c84a29, L:/127.0.0.1:59916 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 14:49:25 [911f3eec-72d0-4391-b6fd-0ed11c42595f] INFO  c.c.c.g.c.c.ValidationInterceptor - ✅ Token Validated! Forwarding request...
2025-02-28 14:49:25 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [46c84a29, L:/127.0.0.1:59916 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x46c84a29, L:/127.0.0.1:59916 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 14:49:25 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [46c84a29, L:/127.0.0.1:59916 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-28 14:49:25 [] DEBUG r.n.r.PooledConnectionProvider - [46c84a29, L:/127.0.0.1:59916 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-28 14:49:25 [911f3eec-72d0-4391-b6fd-0ed11c42595f] DEBUG i.m.c.u.i.l.InternalLoggerFactory - Using SLF4J as the default logging framework
2025-02-28 14:49:25 [911f3eec-72d0-4391-b6fd-0ed11c42595f] DEBUG r.n.r.PooledConnectionProvider - Creating a new [http] client pool [PoolFactory{evictionInterval=PT0S, leasingStrategy=fifo, maxConnections=500, maxIdleTime=-1, maxLifeTime=-1, metricsEnabled=false, pendingAcquireMaxCount=1000, pendingAcquireTimeout=45000}] for [localhost/<unresolved>:8082]
2025-02-28 14:49:25 [] DEBUG r.n.r.PooledConnectionProvider - [cdb1d19d] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 14:49:25 [] DEBUG r.netty.transport.TransportConfig - [cdb1d19d] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-28 14:49:25 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 14:49:25 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 14:49:25 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 14:49:25 [] DEBUG r.netty.transport.TransportConnector - [cdb1d19d] Connecting to [localhost/127.0.0.1:8082].
2025-02-28 14:49:25 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [cdb1d19d, L:/127.0.0.1:59917 - R:localhost/127.0.0.1:8082] Registering pool release on close event for channel
2025-02-28 14:49:25 [] DEBUG r.n.r.PooledConnectionProvider - [cdb1d19d, L:/127.0.0.1:59917 - R:localhost/127.0.0.1:8082] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 14:49:25 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [cdb1d19d, L:/127.0.0.1:59917 - R:localhost/127.0.0.1:8082] onStateChange(PooledConnection{channel=[id: 0xcdb1d19d, L:/127.0.0.1:59917 - R:localhost/127.0.0.1:8082]}, [connected])
2025-02-28 14:49:25 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [cdb1d19d-1, L:/127.0.0.1:59917 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0xcdb1d19d, L:/127.0.0.1:59917 - R:localhost/127.0.0.1:8082]}}, [configured])
2025-02-28 14:49:25 [] DEBUG r.n.http.client.HttpClientConnect - [cdb1d19d-1, L:/127.0.0.1:59917 - R:localhost/127.0.0.1:8082] Handler is being applied: {uri=http://localhost:8082/users, method=GET}
2025-02-28 14:49:25 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [cdb1d19d-1, L:/127.0.0.1:59917 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0xcdb1d19d, L:/127.0.0.1:59917 - R:localhost/127.0.0.1:8082]}}, [request_prepared])
2025-02-28 14:49:25 [] DEBUG r.n.http.client.HttpClientOperations - [cdb1d19d-1, L:/127.0.0.1:59917 - R:localhost/127.0.0.1:8082] No sendHeaders() called before complete, sending zero-length header
2025-02-28 14:49:25 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [cdb1d19d-1, L:/127.0.0.1:59917 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0xcdb1d19d, L:/127.0.0.1:59917 - R:localhost/127.0.0.1:8082]}}, [request_sent])
2025-02-28 14:49:25 [] DEBUG r.n.http.client.HttpClientOperations - [cdb1d19d-1, L:/127.0.0.1:59917 - R:localhost/127.0.0.1:8082] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Content-Length: <filtered>
Date: <filtered>
2025-02-28 14:49:25 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [cdb1d19d-1, L:/127.0.0.1:59917 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0xcdb1d19d, L:/127.0.0.1:59917 - R:localhost/127.0.0.1:8082]}}, [response_received])
2025-02-28 14:49:25 [] DEBUG r.n.http.client.HttpClientOperations - [cdb1d19d-1, L:/127.0.0.1:59917 - R:localhost/127.0.0.1:8082] Received last HTTP packet
2025-02-28 14:49:25 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [cdb1d19d, L:/127.0.0.1:59917 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0xcdb1d19d, L:/127.0.0.1:59917 - R:localhost/127.0.0.1:8082]}}, [response_completed])
2025-02-28 14:49:25 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [cdb1d19d, L:/127.0.0.1:59917 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0xcdb1d19d, L:/127.0.0.1:59917 - R:localhost/127.0.0.1:8082]}}, [disconnecting])
2025-02-28 14:49:25 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [cdb1d19d, L:/127.0.0.1:59917 - R:localhost/127.0.0.1:8082] Releasing channel
2025-02-28 14:49:25 [] DEBUG r.n.r.PooledConnectionProvider - [cdb1d19d, L:/127.0.0.1:59917 - R:localhost/127.0.0.1:8082] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-28 14:49:25 [] DEBUG reactor.netty.channel.FluxReceive - [06d49db0, L:/127.0.0.1:59917 ! R:localhost/127.0.0.1:8082] [terminated=true, cancelled=false, pending=1, error=null]: subscribing inbound receiver
2025-02-28 14:49:33 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 14:49:33 [b37d85d2-9806-43c4-bb58-91f65d4d1558] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 14:49:33 [b37d85d2-9806-43c4-bb58-91f65d4d1558] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /users
2025-02-28 14:49:33 [b37d85d2-9806-43c4-bb58-91f65d4d1558] WARN  c.c.c.g.c.c.ValidationInterceptor - ❌ Missing X-Validation-Token or X-Org-Id!
2025-02-28 14:49:33 [] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /error
2025-02-28 14:49:33 [] WARN  c.c.c.g.c.c.ValidationInterceptor - ❌ Missing X-Validation-Token or X-Org-Id!
2025-02-28 14:49:38 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 14:49:38 [990c7779-6483-4317-8900-075432e185ca] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 14:49:38 [990c7779-6483-4317-8900-075432e185ca] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /users
2025-02-28 14:49:38 [990c7779-6483-4317-8900-075432e185ca] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔄 Sending Validation Request to: http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY&orgId=001
2025-02-28 14:49:38 [] DEBUG r.n.r.PooledConnectionProvider - [46c84a29, L:/127.0.0.1:59916 - R:localhost/127.0.0.1:8081] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 14:49:38 [] DEBUG r.n.http.client.HttpClientConnect - [46c84a29-2, L:/127.0.0.1:59916 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY&orgId=001, method=GET}
2025-02-28 14:49:38 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [46c84a29-2, L:/127.0.0.1:59916 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x46c84a29, L:/127.0.0.1:59916 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 14:49:38 [] DEBUG r.n.http.client.HttpClientOperations - [46c84a29-2, L:/127.0.0.1:59916 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 14:49:38 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [46c84a29-2, L:/127.0.0.1:59916 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x46c84a29, L:/127.0.0.1:59916 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 14:49:38 [] DEBUG r.n.http.client.HttpClientOperations - [46c84a29-2, L:/127.0.0.1:59916 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-28 14:49:38 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [46c84a29-2, L:/127.0.0.1:59916 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x46c84a29, L:/127.0.0.1:59916 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 14:49:38 [] DEBUG reactor.netty.channel.FluxReceive - [46c84a29-2, L:/127.0.0.1:59916 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-28 14:49:38 [] DEBUG r.n.http.client.HttpClientOperations - [46c84a29-2, L:/127.0.0.1:59916 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 14:49:38 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [46c84a29, L:/127.0.0.1:59916 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x46c84a29, L:/127.0.0.1:59916 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 14:49:38 [990c7779-6483-4317-8900-075432e185ca] INFO  c.c.c.g.c.c.ValidationInterceptor - ✅ Token Validated! Forwarding request...
2025-02-28 14:49:38 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [46c84a29, L:/127.0.0.1:59916 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x46c84a29, L:/127.0.0.1:59916 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 14:49:38 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [46c84a29, L:/127.0.0.1:59916 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-28 14:49:38 [] DEBUG r.n.r.PooledConnectionProvider - [46c84a29, L:/127.0.0.1:59916 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-28 14:49:38 [] DEBUG r.n.r.PooledConnectionProvider - [cdb1d19d, L:/127.0.0.1:59917 - R:localhost/127.0.0.1:8082] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 14:49:38 [] DEBUG r.n.http.client.HttpClientConnect - [cdb1d19d-2, L:/127.0.0.1:59917 - R:localhost/127.0.0.1:8082] Handler is being applied: {uri=http://localhost:8082/users, method=GET}
2025-02-28 14:49:38 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [cdb1d19d-2, L:/127.0.0.1:59917 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0xcdb1d19d, L:/127.0.0.1:59917 - R:localhost/127.0.0.1:8082]}}, [request_prepared])
2025-02-28 14:49:38 [] DEBUG r.n.http.client.HttpClientOperations - [cdb1d19d-2, L:/127.0.0.1:59917 - R:localhost/127.0.0.1:8082] No sendHeaders() called before complete, sending zero-length header
2025-02-28 14:49:38 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [cdb1d19d-2, L:/127.0.0.1:59917 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0xcdb1d19d, L:/127.0.0.1:59917 - R:localhost/127.0.0.1:8082]}}, [request_sent])
2025-02-28 14:49:38 [] DEBUG r.n.http.client.HttpClientOperations - [cdb1d19d-2, L:/127.0.0.1:59917 - R:localhost/127.0.0.1:8082] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Content-Length: <filtered>
Date: <filtered>
2025-02-28 14:49:38 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [cdb1d19d-2, L:/127.0.0.1:59917 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0xcdb1d19d, L:/127.0.0.1:59917 - R:localhost/127.0.0.1:8082]}}, [response_received])
2025-02-28 14:49:38 [] DEBUG r.n.http.client.HttpClientOperations - [cdb1d19d-2, L:/127.0.0.1:59917 - R:localhost/127.0.0.1:8082] Received last HTTP packet
2025-02-28 14:49:38 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [cdb1d19d, L:/127.0.0.1:59917 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0xcdb1d19d, L:/127.0.0.1:59917 - R:localhost/127.0.0.1:8082]}}, [response_completed])
2025-02-28 14:49:38 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [cdb1d19d, L:/127.0.0.1:59917 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0xcdb1d19d, L:/127.0.0.1:59917 - R:localhost/127.0.0.1:8082]}}, [disconnecting])
2025-02-28 14:49:38 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [cdb1d19d, L:/127.0.0.1:59917 - R:localhost/127.0.0.1:8082] Releasing channel
2025-02-28 14:49:38 [] DEBUG r.n.r.PooledConnectionProvider - [cdb1d19d, L:/127.0.0.1:59917 - R:localhost/127.0.0.1:8082] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-28 14:49:38 [] DEBUG reactor.netty.channel.FluxReceive - [7d6dc27f, L:/127.0.0.1:59917 ! R:localhost/127.0.0.1:8082] [terminated=true, cancelled=false, pending=1, error=null]: subscribing inbound receiver
2025-02-28 14:49:49 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 14:49:49 [8bf5d8f2-f563-413c-b57d-3840e9a4b3ce] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 14:49:49 [8bf5d8f2-f563-413c-b57d-3840e9a4b3ce] DEBUG r.n.r.PooledConnectionProvider - Creating a new [http] client pool [PoolFactory{evictionInterval=PT0S, leasingStrategy=fifo, maxConnections=500, maxIdleTime=-1, maxLifeTime=-1, metricsEnabled=false, pendingAcquireMaxCount=1000, pendingAcquireTimeout=45000}] for [localhost/<unresolved>:8081]
2025-02-28 14:49:49 [] DEBUG r.n.r.PooledConnectionProvider - [fb9256d9] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 14:49:49 [] DEBUG r.netty.transport.TransportConfig - [fb9256d9] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-28 14:49:49 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 14:49:49 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 14:49:49 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 14:49:49 [] DEBUG r.netty.transport.TransportConnector - [fb9256d9] Connecting to [localhost/127.0.0.1:8081].
2025-02-28 14:49:49 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [fb9256d9, L:/127.0.0.1:59935 - R:localhost/127.0.0.1:8081] Registering pool release on close event for channel
2025-02-28 14:49:49 [] DEBUG r.n.r.PooledConnectionProvider - [fb9256d9, L:/127.0.0.1:59935 - R:localhost/127.0.0.1:8081] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 14:49:49 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [fb9256d9, L:/127.0.0.1:59935 - R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0xfb9256d9, L:/127.0.0.1:59935 - R:localhost/127.0.0.1:8081]}, [connected])
2025-02-28 14:49:49 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [fb9256d9-1, L:/127.0.0.1:59935 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0xfb9256d9, L:/127.0.0.1:59935 - R:localhost/127.0.0.1:8081]}}, [configured])
2025-02-28 14:49:49 [] DEBUG r.n.http.client.HttpClientConnect - [fb9256d9-1, L:/127.0.0.1:59935 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate, method=GET}
2025-02-28 14:49:49 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [fb9256d9-1, L:/127.0.0.1:59935 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xfb9256d9, L:/127.0.0.1:59935 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 14:49:49 [] DEBUG r.n.http.client.HttpClientOperations - [fb9256d9-1, L:/127.0.0.1:59935 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 14:49:49 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [fb9256d9-1, L:/127.0.0.1:59935 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xfb9256d9, L:/127.0.0.1:59935 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 14:49:49 [] DEBUG r.n.http.client.HttpClientOperations - [fb9256d9-1, L:/127.0.0.1:59935 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-28 14:49:49 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [fb9256d9-1, L:/127.0.0.1:59935 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xfb9256d9, L:/127.0.0.1:59935 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 14:49:49 [] DEBUG r.n.http.client.HttpClientOperations - [fb9256d9-1, L:/127.0.0.1:59935 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 14:49:49 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [fb9256d9, L:/127.0.0.1:59935 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xfb9256d9, L:/127.0.0.1:59935 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 14:49:49 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [fb9256d9, L:/127.0.0.1:59935 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xfb9256d9, L:/127.0.0.1:59935 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 14:49:49 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [fb9256d9, L:/127.0.0.1:59935 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-28 14:49:49 [] DEBUG r.n.r.PooledConnectionProvider - [fb9256d9, L:/127.0.0.1:59935 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-28 14:49:49 [] DEBUG reactor.netty.channel.FluxReceive - [92577a84, L:/127.0.0.1:59935 ! R:localhost/127.0.0.1:8081] [terminated=true, cancelled=false, pending=1, error=null]: subscribing inbound receiver
2025-02-28 14:50:00 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 14:50:00 [3e543293-8ba5-4847-813b-47a37c399955] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 14:50:00 [] DEBUG r.n.r.PooledConnectionProvider - [fb9256d9, L:/127.0.0.1:59935 - R:localhost/127.0.0.1:8081] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 14:50:00 [] DEBUG r.n.http.client.HttpClientConnect - [fb9256d9-2, L:/127.0.0.1:59935 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate, method=GET}
2025-02-28 14:50:00 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [fb9256d9-2, L:/127.0.0.1:59935 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xfb9256d9, L:/127.0.0.1:59935 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 14:50:00 [] DEBUG r.n.http.client.HttpClientOperations - [fb9256d9-2, L:/127.0.0.1:59935 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 14:50:00 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [fb9256d9-2, L:/127.0.0.1:59935 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xfb9256d9, L:/127.0.0.1:59935 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 14:50:00 [] DEBUG r.n.http.client.HttpClientOperations - [fb9256d9-2, L:/127.0.0.1:59935 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-28 14:50:00 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [fb9256d9-2, L:/127.0.0.1:59935 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xfb9256d9, L:/127.0.0.1:59935 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 14:50:00 [] DEBUG r.n.http.client.HttpClientOperations - [fb9256d9-2, L:/127.0.0.1:59935 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 14:50:00 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [fb9256d9, L:/127.0.0.1:59935 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xfb9256d9, L:/127.0.0.1:59935 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 14:50:00 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [fb9256d9, L:/127.0.0.1:59935 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xfb9256d9, L:/127.0.0.1:59935 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 14:50:00 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [fb9256d9, L:/127.0.0.1:59935 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-28 14:50:00 [] DEBUG r.n.r.PooledConnectionProvider - [fb9256d9, L:/127.0.0.1:59935 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-28 14:50:00 [] DEBUG reactor.netty.channel.FluxReceive - [e9f480af, L:/127.0.0.1:59935 ! R:localhost/127.0.0.1:8081] [terminated=true, cancelled=false, pending=1, error=null]: subscribing inbound receiver
2025-02-28 14:50:06 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 14:50:06 [713c4b47-b183-4870-966b-3df36aa18b61] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 14:50:06 [] DEBUG r.n.r.PooledConnectionProvider - [fb9256d9, L:/127.0.0.1:59935 - R:localhost/127.0.0.1:8081] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 14:50:06 [] DEBUG r.n.http.client.HttpClientConnect - [fb9256d9-3, L:/127.0.0.1:59935 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate, method=GET}
2025-02-28 14:50:06 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [fb9256d9-3, L:/127.0.0.1:59935 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xfb9256d9, L:/127.0.0.1:59935 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 14:50:06 [] DEBUG r.n.http.client.HttpClientOperations - [fb9256d9-3, L:/127.0.0.1:59935 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 14:50:06 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [fb9256d9-3, L:/127.0.0.1:59935 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xfb9256d9, L:/127.0.0.1:59935 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 14:50:06 [] DEBUG r.n.http.client.HttpClientOperations - [fb9256d9-3, L:/127.0.0.1:59935 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-28 14:50:06 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [fb9256d9-3, L:/127.0.0.1:59935 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xfb9256d9, L:/127.0.0.1:59935 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 14:50:06 [] DEBUG r.n.http.client.HttpClientOperations - [fb9256d9-3, L:/127.0.0.1:59935 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 14:50:06 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [fb9256d9, L:/127.0.0.1:59935 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xfb9256d9, L:/127.0.0.1:59935 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 14:50:06 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [fb9256d9, L:/127.0.0.1:59935 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xfb9256d9, L:/127.0.0.1:59935 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 14:50:06 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [fb9256d9, L:/127.0.0.1:59935 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-28 14:50:06 [] DEBUG r.n.r.PooledConnectionProvider - [fb9256d9, L:/127.0.0.1:59935 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-28 14:50:06 [] DEBUG reactor.netty.channel.FluxReceive - [6d94388e, L:/127.0.0.1:59935 ! R:localhost/127.0.0.1:8081] [terminated=true, cancelled=false, pending=1, error=null]: subscribing inbound receiver
2025-02-28 14:50:38 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [46c84a29, L:/127.0.0.1:59916 ! R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x46c84a29, L:/127.0.0.1:59916 ! R:localhost/127.0.0.1:8081]}, [disconnecting])
2025-02-28 14:50:39 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [cdb1d19d, L:/127.0.0.1:59917 ! R:localhost/127.0.0.1:8082] onStateChange(PooledConnection{channel=[id: 0xcdb1d19d, L:/127.0.0.1:59917 ! R:localhost/127.0.0.1:8082]}, [disconnecting])
2025-02-28 14:51:07 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [fb9256d9, L:/127.0.0.1:59935 ! R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0xfb9256d9, L:/127.0.0.1:59935 ! R:localhost/127.0.0.1:8081]}, [disconnecting])
2025-02-28 15:17:27 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 15:17:27 [83a684d2-27ba-43d9-8213-1e48d9ad4a37] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 15:17:27 [83a684d2-27ba-43d9-8213-1e48d9ad4a37] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /users
2025-02-28 15:17:27 [83a684d2-27ba-43d9-8213-1e48d9ad4a37] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔄 Sending Validation Request to: http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY&orgId=001
2025-02-28 15:17:27 [] DEBUG r.n.r.PooledConnectionProvider - [2b6518b5] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 15:17:27 [] DEBUG r.netty.transport.TransportConfig - [2b6518b5] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-28 15:17:27 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 15:17:27 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 15:17:27 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 15:17:27 [] DEBUG r.netty.transport.TransportConnector - [2b6518b5] Connecting to [localhost/127.0.0.1:8081].
2025-02-28 15:17:27 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [2b6518b5, L:/127.0.0.1:60385 - R:localhost/127.0.0.1:8081] Registering pool release on close event for channel
2025-02-28 15:17:27 [] DEBUG r.n.r.PooledConnectionProvider - [2b6518b5, L:/127.0.0.1:60385 - R:localhost/127.0.0.1:8081] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 15:17:27 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [2b6518b5, L:/127.0.0.1:60385 - R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x2b6518b5, L:/127.0.0.1:60385 - R:localhost/127.0.0.1:8081]}, [connected])
2025-02-28 15:17:27 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [2b6518b5-1, L:/127.0.0.1:60385 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0x2b6518b5, L:/127.0.0.1:60385 - R:localhost/127.0.0.1:8081]}}, [configured])
2025-02-28 15:17:27 [] DEBUG r.n.http.client.HttpClientConnect - [2b6518b5-1, L:/127.0.0.1:60385 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY&orgId=001, method=GET}
2025-02-28 15:17:27 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [2b6518b5-1, L:/127.0.0.1:60385 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x2b6518b5, L:/127.0.0.1:60385 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 15:17:27 [] DEBUG r.n.http.client.HttpClientOperations - [2b6518b5-1, L:/127.0.0.1:60385 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 15:17:27 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [2b6518b5-1, L:/127.0.0.1:60385 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x2b6518b5, L:/127.0.0.1:60385 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 15:17:27 [] DEBUG r.n.http.client.HttpClientOperations - [2b6518b5-1, L:/127.0.0.1:60385 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-28 15:17:27 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [2b6518b5-1, L:/127.0.0.1:60385 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x2b6518b5, L:/127.0.0.1:60385 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 15:17:27 [] DEBUG reactor.netty.channel.FluxReceive - [2b6518b5-1, L:/127.0.0.1:60385 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-28 15:17:27 [] DEBUG r.n.http.client.HttpClientOperations - [2b6518b5-1, L:/127.0.0.1:60385 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 15:17:27 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [2b6518b5, L:/127.0.0.1:60385 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x2b6518b5, L:/127.0.0.1:60385 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 15:17:27 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [2b6518b5, L:/127.0.0.1:60385 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x2b6518b5, L:/127.0.0.1:60385 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 15:17:27 [83a684d2-27ba-43d9-8213-1e48d9ad4a37] WARN  c.c.c.g.c.c.ValidationInterceptor - ❌ Invalid X-Validation-Token or X-Org-Id!
2025-02-28 15:17:27 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [2b6518b5, L:/127.0.0.1:60385 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-28 15:17:27 [] DEBUG r.n.r.PooledConnectionProvider - [2b6518b5, L:/127.0.0.1:60385 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-28 15:17:27 [] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /error
2025-02-28 15:17:27 [] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔄 Sending Validation Request to: http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY&orgId=001
2025-02-28 15:17:27 [] DEBUG r.n.r.PooledConnectionProvider - [2b6518b5, L:/127.0.0.1:60385 - R:localhost/127.0.0.1:8081] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 15:17:27 [] DEBUG r.n.http.client.HttpClientConnect - [2b6518b5-2, L:/127.0.0.1:60385 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY&orgId=001, method=GET}
2025-02-28 15:17:27 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [2b6518b5-2, L:/127.0.0.1:60385 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x2b6518b5, L:/127.0.0.1:60385 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 15:17:27 [] DEBUG r.n.http.client.HttpClientOperations - [2b6518b5-2, L:/127.0.0.1:60385 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 15:17:27 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [2b6518b5-2, L:/127.0.0.1:60385 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x2b6518b5, L:/127.0.0.1:60385 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 15:17:27 [] DEBUG r.n.http.client.HttpClientOperations - [2b6518b5-2, L:/127.0.0.1:60385 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-28 15:17:27 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [2b6518b5-2, L:/127.0.0.1:60385 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x2b6518b5, L:/127.0.0.1:60385 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 15:17:27 [] DEBUG reactor.netty.channel.FluxReceive - [2b6518b5-2, L:/127.0.0.1:60385 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-28 15:17:27 [] DEBUG r.n.http.client.HttpClientOperations - [2b6518b5-2, L:/127.0.0.1:60385 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 15:17:27 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [2b6518b5, L:/127.0.0.1:60385 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x2b6518b5, L:/127.0.0.1:60385 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 15:17:27 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [2b6518b5, L:/127.0.0.1:60385 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x2b6518b5, L:/127.0.0.1:60385 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 15:17:27 [] WARN  c.c.c.g.c.c.ValidationInterceptor - ❌ Invalid X-Validation-Token or X-Org-Id!
2025-02-28 15:17:27 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [2b6518b5, L:/127.0.0.1:60385 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-28 15:17:27 [] DEBUG r.n.r.PooledConnectionProvider - [2b6518b5, L:/127.0.0.1:60385 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-28 15:17:42 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [2b6518b5, L:/127.0.0.1:60385 ! R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x2b6518b5, L:/127.0.0.1:60385 ! R:localhost/127.0.0.1:8081]}, [disconnecting])
2025-02-28 15:17:55 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 15:17:55 [e1f7a5b7-6d40-4901-bf54-f4e54d9ecb70] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 15:17:55 [e1f7a5b7-6d40-4901-bf54-f4e54d9ecb70] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /users
2025-02-28 15:17:55 [e1f7a5b7-6d40-4901-bf54-f4e54d9ecb70] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔄 Sending Validation Request to: http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY&orgId=001
2025-02-28 15:17:55 [] DEBUG r.n.r.PooledConnectionProvider - [336a4292] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 15:17:55 [] DEBUG r.netty.transport.TransportConfig - [336a4292] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-28 15:17:55 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 15:17:55 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 15:17:55 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 15:17:55 [] DEBUG r.netty.transport.TransportConnector - [336a4292] Connecting to [localhost/127.0.0.1:8081].
2025-02-28 15:17:55 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [336a4292, L:/127.0.0.1:60406 - R:localhost/127.0.0.1:8081] Registering pool release on close event for channel
2025-02-28 15:17:55 [] DEBUG r.n.r.PooledConnectionProvider - [336a4292, L:/127.0.0.1:60406 - R:localhost/127.0.0.1:8081] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 15:17:55 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [336a4292, L:/127.0.0.1:60406 - R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x336a4292, L:/127.0.0.1:60406 - R:localhost/127.0.0.1:8081]}, [connected])
2025-02-28 15:17:55 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [336a4292-1, L:/127.0.0.1:60406 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0x336a4292, L:/127.0.0.1:60406 - R:localhost/127.0.0.1:8081]}}, [configured])
2025-02-28 15:17:55 [] DEBUG r.n.http.client.HttpClientConnect - [336a4292-1, L:/127.0.0.1:60406 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY&orgId=001, method=GET}
2025-02-28 15:17:55 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [336a4292-1, L:/127.0.0.1:60406 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x336a4292, L:/127.0.0.1:60406 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 15:17:55 [] DEBUG r.n.http.client.HttpClientOperations - [336a4292-1, L:/127.0.0.1:60406 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 15:17:55 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [336a4292-1, L:/127.0.0.1:60406 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x336a4292, L:/127.0.0.1:60406 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 15:17:55 [] DEBUG r.n.http.client.HttpClientOperations - [336a4292-1, L:/127.0.0.1:60406 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-28 15:17:55 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [336a4292-1, L:/127.0.0.1:60406 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x336a4292, L:/127.0.0.1:60406 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 15:17:55 [] DEBUG reactor.netty.channel.FluxReceive - [336a4292-1, L:/127.0.0.1:60406 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-28 15:17:55 [] DEBUG r.n.http.client.HttpClientOperations - [336a4292-1, L:/127.0.0.1:60406 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 15:17:55 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [336a4292, L:/127.0.0.1:60406 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x336a4292, L:/127.0.0.1:60406 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 15:17:55 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [336a4292, L:/127.0.0.1:60406 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x336a4292, L:/127.0.0.1:60406 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 15:17:55 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [336a4292, L:/127.0.0.1:60406 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-28 15:17:55 [e1f7a5b7-6d40-4901-bf54-f4e54d9ecb70] INFO  c.c.c.g.c.c.ValidationInterceptor - ✅ Token Validated! Forwarding request...
2025-02-28 15:17:55 [] DEBUG r.n.r.PooledConnectionProvider - [336a4292, L:/127.0.0.1:60406 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-28 15:17:55 [] DEBUG r.n.r.PooledConnectionProvider - [e85194c8] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 15:17:55 [] DEBUG r.netty.transport.TransportConfig - [e85194c8] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-28 15:17:55 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 15:17:55 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 15:17:55 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 15:17:55 [] DEBUG r.netty.transport.TransportConnector - [e85194c8] Connecting to [localhost/127.0.0.1:8082].
2025-02-28 15:17:55 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [e85194c8, L:/127.0.0.1:60408 - R:localhost/127.0.0.1:8082] Registering pool release on close event for channel
2025-02-28 15:17:55 [] DEBUG r.n.r.PooledConnectionProvider - [e85194c8, L:/127.0.0.1:60408 - R:localhost/127.0.0.1:8082] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 15:17:55 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [e85194c8, L:/127.0.0.1:60408 - R:localhost/127.0.0.1:8082] onStateChange(PooledConnection{channel=[id: 0xe85194c8, L:/127.0.0.1:60408 - R:localhost/127.0.0.1:8082]}, [connected])
2025-02-28 15:17:55 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [e85194c8-1, L:/127.0.0.1:60408 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0xe85194c8, L:/127.0.0.1:60408 - R:localhost/127.0.0.1:8082]}}, [configured])
2025-02-28 15:17:55 [] DEBUG r.n.http.client.HttpClientConnect - [e85194c8-1, L:/127.0.0.1:60408 - R:localhost/127.0.0.1:8082] Handler is being applied: {uri=http://localhost:8082/users, method=GET}
2025-02-28 15:17:55 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [e85194c8-1, L:/127.0.0.1:60408 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0xe85194c8, L:/127.0.0.1:60408 - R:localhost/127.0.0.1:8082]}}, [request_prepared])
2025-02-28 15:17:55 [] DEBUG r.n.http.client.HttpClientOperations - [e85194c8-1, L:/127.0.0.1:60408 - R:localhost/127.0.0.1:8082] No sendHeaders() called before complete, sending zero-length header
2025-02-28 15:17:55 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [e85194c8-1, L:/127.0.0.1:60408 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0xe85194c8, L:/127.0.0.1:60408 - R:localhost/127.0.0.1:8082]}}, [request_sent])
2025-02-28 15:17:55 [] DEBUG r.n.http.client.HttpClientOperations - [e85194c8-1, L:/127.0.0.1:60408 - R:localhost/127.0.0.1:8082] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Content-Length: <filtered>
Date: <filtered>
2025-02-28 15:17:55 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [e85194c8-1, L:/127.0.0.1:60408 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0xe85194c8, L:/127.0.0.1:60408 - R:localhost/127.0.0.1:8082]}}, [response_received])
2025-02-28 15:17:55 [] DEBUG r.n.http.client.HttpClientOperations - [e85194c8-1, L:/127.0.0.1:60408 - R:localhost/127.0.0.1:8082] Received last HTTP packet
2025-02-28 15:17:55 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [e85194c8, L:/127.0.0.1:60408 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0xe85194c8, L:/127.0.0.1:60408 - R:localhost/127.0.0.1:8082]}}, [response_completed])
2025-02-28 15:17:55 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [e85194c8, L:/127.0.0.1:60408 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0xe85194c8, L:/127.0.0.1:60408 - R:localhost/127.0.0.1:8082]}}, [disconnecting])
2025-02-28 15:17:55 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [e85194c8, L:/127.0.0.1:60408 - R:localhost/127.0.0.1:8082] Releasing channel
2025-02-28 15:17:55 [] DEBUG r.n.r.PooledConnectionProvider - [e85194c8, L:/127.0.0.1:60408 - R:localhost/127.0.0.1:8082] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-28 15:17:55 [] DEBUG reactor.netty.channel.FluxReceive - [564602a4, L:/127.0.0.1:60408 ! R:localhost/127.0.0.1:8082] [terminated=true, cancelled=false, pending=1, error=null]: subscribing inbound receiver
2025-02-28 15:18:03 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 15:18:03 [18fb8abb-bcff-463d-83f0-e15d2c34ac65] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 15:18:03 [18fb8abb-bcff-463d-83f0-e15d2c34ac65] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /users
2025-02-28 15:18:03 [18fb8abb-bcff-463d-83f0-e15d2c34ac65] WARN  c.c.c.g.c.c.ValidationInterceptor - ❌ Missing X-Validation-Token or X-Org-Id!
2025-02-28 15:18:03 [] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /error
2025-02-28 15:18:03 [] WARN  c.c.c.g.c.c.ValidationInterceptor - ❌ Missing X-Validation-Token or X-Org-Id!
2025-02-28 15:18:08 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 15:18:08 [675159d7-9264-4bd9-9d11-d26f61cc6dab] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 15:18:08 [675159d7-9264-4bd9-9d11-d26f61cc6dab] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /users
2025-02-28 15:18:08 [675159d7-9264-4bd9-9d11-d26f61cc6dab] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔄 Sending Validation Request to: http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY&orgId=001
2025-02-28 15:18:08 [] DEBUG r.n.r.PooledConnectionProvider - [336a4292, L:/127.0.0.1:60406 - R:localhost/127.0.0.1:8081] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 15:18:08 [] DEBUG r.n.http.client.HttpClientConnect - [336a4292-2, L:/127.0.0.1:60406 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY&orgId=001, method=GET}
2025-02-28 15:18:08 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [336a4292-2, L:/127.0.0.1:60406 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x336a4292, L:/127.0.0.1:60406 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 15:18:08 [] DEBUG r.n.http.client.HttpClientOperations - [336a4292-2, L:/127.0.0.1:60406 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 15:18:08 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [336a4292-2, L:/127.0.0.1:60406 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x336a4292, L:/127.0.0.1:60406 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 15:18:08 [] DEBUG r.n.http.client.HttpClientOperations - [336a4292-2, L:/127.0.0.1:60406 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-28 15:18:08 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [336a4292-2, L:/127.0.0.1:60406 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x336a4292, L:/127.0.0.1:60406 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 15:18:08 [] DEBUG reactor.netty.channel.FluxReceive - [336a4292-2, L:/127.0.0.1:60406 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-28 15:18:08 [] DEBUG r.n.http.client.HttpClientOperations - [336a4292-2, L:/127.0.0.1:60406 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 15:18:08 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [336a4292, L:/127.0.0.1:60406 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x336a4292, L:/127.0.0.1:60406 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 15:18:08 [675159d7-9264-4bd9-9d11-d26f61cc6dab] INFO  c.c.c.g.c.c.ValidationInterceptor - ✅ Token Validated! Forwarding request...
2025-02-28 15:18:08 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [336a4292, L:/127.0.0.1:60406 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x336a4292, L:/127.0.0.1:60406 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 15:18:08 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [336a4292, L:/127.0.0.1:60406 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-28 15:18:08 [] DEBUG r.n.r.PooledConnectionProvider - [336a4292, L:/127.0.0.1:60406 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-28 15:18:08 [] DEBUG r.n.r.PooledConnectionProvider - [e85194c8, L:/127.0.0.1:60408 - R:localhost/127.0.0.1:8082] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 15:18:08 [] DEBUG r.n.http.client.HttpClientConnect - [e85194c8-2, L:/127.0.0.1:60408 - R:localhost/127.0.0.1:8082] Handler is being applied: {uri=http://localhost:8082/users, method=GET}
2025-02-28 15:18:08 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [e85194c8-2, L:/127.0.0.1:60408 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0xe85194c8, L:/127.0.0.1:60408 - R:localhost/127.0.0.1:8082]}}, [request_prepared])
2025-02-28 15:18:08 [] DEBUG r.n.http.client.HttpClientOperations - [e85194c8-2, L:/127.0.0.1:60408 - R:localhost/127.0.0.1:8082] No sendHeaders() called before complete, sending zero-length header
2025-02-28 15:18:08 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [e85194c8-2, L:/127.0.0.1:60408 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0xe85194c8, L:/127.0.0.1:60408 - R:localhost/127.0.0.1:8082]}}, [request_sent])
2025-02-28 15:18:08 [] DEBUG r.n.http.client.HttpClientOperations - [e85194c8-2, L:/127.0.0.1:60408 - R:localhost/127.0.0.1:8082] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Content-Length: <filtered>
Date: <filtered>
2025-02-28 15:18:08 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [e85194c8-2, L:/127.0.0.1:60408 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0xe85194c8, L:/127.0.0.1:60408 - R:localhost/127.0.0.1:8082]}}, [response_received])
2025-02-28 15:18:08 [] DEBUG r.n.http.client.HttpClientOperations - [e85194c8-2, L:/127.0.0.1:60408 - R:localhost/127.0.0.1:8082] Received last HTTP packet
2025-02-28 15:18:08 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [e85194c8, L:/127.0.0.1:60408 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0xe85194c8, L:/127.0.0.1:60408 - R:localhost/127.0.0.1:8082]}}, [response_completed])
2025-02-28 15:18:08 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [e85194c8, L:/127.0.0.1:60408 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0xe85194c8, L:/127.0.0.1:60408 - R:localhost/127.0.0.1:8082]}}, [disconnecting])
2025-02-28 15:18:08 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [e85194c8, L:/127.0.0.1:60408 - R:localhost/127.0.0.1:8082] Releasing channel
2025-02-28 15:18:08 [] DEBUG r.n.r.PooledConnectionProvider - [e85194c8, L:/127.0.0.1:60408 - R:localhost/127.0.0.1:8082] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-28 15:18:08 [] DEBUG reactor.netty.channel.FluxReceive - [2240a408, L:/127.0.0.1:60408 ! R:localhost/127.0.0.1:8082] [terminated=true, cancelled=false, pending=1, error=null]: subscribing inbound receiver
2025-02-28 15:19:09 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [e85194c8, L:/127.0.0.1:60408 ! R:localhost/127.0.0.1:8082] onStateChange(PooledConnection{channel=[id: 0xe85194c8, L:/127.0.0.1:60408 ! R:localhost/127.0.0.1:8082]}, [disconnecting])
2025-02-28 15:19:09 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [336a4292, L:/127.0.0.1:60406 ! R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x336a4292, L:/127.0.0.1:60406 ! R:localhost/127.0.0.1:8081]}, [disconnecting])
2025-02-28 15:19:56 [] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-02-28 15:19:56 [] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-02-28 15:19:56 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 5 thread-local buffer(s) from thread: reactor-http-nio-8
2025-02-28 15:19:56 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 5 thread-local buffer(s) from thread: reactor-http-nio-4
2025-02-28 15:19:56 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 6 thread-local buffer(s) from thread: reactor-http-nio-5
2025-02-28 15:19:56 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 7 thread-local buffer(s) from thread: reactor-http-nio-7
2025-02-28 15:19:56 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 4 thread-local buffer(s) from thread: reactor-http-nio-2
2025-02-28 15:19:56 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 7 thread-local buffer(s) from thread: reactor-http-nio-6
2025-02-28 15:19:59 [] DEBUG org.jboss.logging - Logging Provider: org.jboss.logging.Slf4jLoggerProvider found via system property
2025-02-28 15:19:59 [] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final
2025-02-28 15:19:59 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-02-28 15:19:59 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-02-28 15:19:59 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-02-28 15:19:59 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-02-28 15:19:59 [] DEBUG o.h.v.i.e.r.TraversableResolvers - Cannot find jakarta.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2025-02-28 15:19:59 [] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-02-28 15:19:59 [] INFO  c.c.c.g.c.CommongatewayApplication - Starting CommongatewayApplication using Java 17.0.12 with PID 13604 (D:\WORKSPACE\API-GATEWAY\commongateway\target\classes started by CITPL in D:\WORKSPACE\API-GATEWAY)
2025-02-28 15:19:59 [] DEBUG c.c.c.g.c.CommongatewayApplication - Running with Spring Boot v3.4.2, Spring v6.2.2
2025-02-28 15:19:59 [] INFO  c.c.c.g.c.CommongatewayApplication - No active profile set, falling back to 1 default profile: "default"
2025-02-28 15:19:59 [] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-02-28 15:19:59 [] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-02-28 15:19:59 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-02-28 15:19:59 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-02-28 15:19:59 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-02-28 15:19:59 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-02-28 15:19:59 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-02-28 15:19:59 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-02-28 15:20:00 [] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=d2aee5ef-86a6-3b95-abd8-708d95e66676
2025-02-28 15:20:00 [] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-02-28 15:20:00 [] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-02-28 15:20:01 [] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-02-28 15:20:01 [] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.34]
2025-02-28 15:20:01 [] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-02-28 15:20:01 [] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1820 ms
2025-02-28 15:20:01 [] DEBUG i.n.u.i.l.InternalLoggerFactory - Using SLF4J as the default logging framework
2025-02-28 15:20:01 [] DEBUG i.n.util.internal.PlatformDependent0 - -Dio.netty.noUnsafe: false
2025-02-28 15:20:01 [] DEBUG i.n.util.internal.PlatformDependent0 - Java version: 17
2025-02-28 15:20:01 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe.theUnsafe: available
2025-02-28 15:20:01 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe base methods: all available
2025-02-28 15:20:01 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe.storeFence: available
2025-02-28 15:20:01 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.Buffer.address: available
2025-02-28 15:20:01 [] DEBUG i.n.util.internal.PlatformDependent0 - direct buffer constructor: unavailable: Reflective setAccessible(true) disabled
2025-02-28 15:20:01 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.Bits.unaligned: available, true
2025-02-28 15:20:01 [] DEBUG i.n.util.internal.PlatformDependent0 - jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable: class io.netty.util.internal.PlatformDependent0$7 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @3e77a1ed
2025-02-28 15:20:01 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.DirectByteBuffer.<init>(long, {int,long}): unavailable
2025-02-28 15:20:01 [] DEBUG i.n.util.internal.PlatformDependent - sun.misc.Unsafe: available
2025-02-28 15:20:01 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.tmpdir: C:\Users\CITPL\AppData\Local\Temp (java.io.tmpdir)
2025-02-28 15:20:01 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.bitMode: 64 (sun.arch.data.model)
2025-02-28 15:20:01 [] DEBUG i.n.util.internal.PlatformDependent - Platform: Windows
2025-02-28 15:20:01 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.maxDirectMemory: -1 bytes
2025-02-28 15:20:01 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.uninitializedArrayAllocationThreshold: -1
2025-02-28 15:20:01 [] DEBUG io.netty.util.internal.CleanerJava9 - java.nio.ByteBuffer.cleaner(): available
2025-02-28 15:20:01 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.noPreferDirect: false
2025-02-28 15:20:01 [] DEBUG reactor.util.Loggers - Using Slf4j logging framework
2025-02-28 15:20:01 [] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-02-28 15:20:01 [] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2025-02-28 15:20:01 [] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2025-02-28 15:20:01 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-02-28 15:20:01 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via user class loader
2025-02-28 15:20:01 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-02-28 15:20:01 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-02-28 15:20:01 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-02-28 15:20:01 [] DEBUG o.h.v.i.e.r.TraversableResolvers - Cannot find jakarta.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2025-02-28 15:20:01 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-02-28 15:20:01 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-02-28 15:20:01 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-02-28 15:20:01 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-02-28 15:20:01 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-02-28 15:20:01 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-02-28 15:20:01 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	c.c.c.g.c.c.HomeController:
	{GET [/home]}: get()
2025-02-28 15:20:01 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
	{ [/error]}: error(HttpServletRequest)
2025-02-28 15:20:01 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 'beanNameHandlerMapping' {}
2025-02-28 15:20:01 [] DEBUG _.s.w.s.HandlerMapping.Mappings - Mapped /users/** -> ProxyExchangeHandlerFunction
2025-02-28 15:20:01 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2025-02-28 15:20:02 [] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-02-28 15:20:02 [] DEBUG i.n.u.i.InternalThreadLocalMap - -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2025-02-28 15:20:02 [] DEBUG i.n.u.i.InternalThreadLocalMap - -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2025-02-28 15:20:02 [] DEBUG io.netty.util.ResourceLeakDetector - -Dio.netty.leakDetection.level: simple
2025-02-28 15:20:02 [] DEBUG io.netty.util.ResourceLeakDetector - -Dio.netty.leakDetection.targetRecords: 4
2025-02-28 15:20:02 [] DEBUG i.n.handler.codec.compression.Brotli - brotli4j not in the classpath; Brotli support will be unavailable.
2025-02-28 15:20:02 [] DEBUG reactor.netty.tcp.TcpResources - [http] resources will use the default LoopResources: DefaultLoopResources {prefix=reactor-http, daemon=true, selectCount=12, workerCount=12}
2025-02-28 15:20:02 [] DEBUG reactor.netty.tcp.TcpResources - [http] resources will use the default ConnectionProvider: reactor.netty.resources.DefaultPooledConnectionProvider@7d15dffa
2025-02-28 15:20:02 [] DEBUG r.netty.resources.DefaultLoopIOUring - Default io_uring support : false
2025-02-28 15:20:02 [] DEBUG r.netty.resources.DefaultLoopEpoll - Default Epoll support : false
2025-02-28 15:20:02 [] DEBUG r.netty.resources.DefaultLoopKQueue - Default KQueue support : false
2025-02-28 15:20:02 [] DEBUG i.n.c.MultithreadEventLoopGroup - -Dio.netty.eventLoopThreads: 24
2025-02-28 15:20:02 [] DEBUG i.n.u.concurrent.GlobalEventExecutor - -Dio.netty.globalEventExecutor.quietPeriodSeconds: 1
2025-02-28 15:20:02 [] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.noKeySetOptimization: false
2025-02-28 15:20:02 [] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.selectorAutoRebuildThreshold: 512
2025-02-28 15:20:02 [] DEBUG i.n.util.internal.PlatformDependent - org.jctools-core.MpscChunkedArrayQueue: available
2025-02-28 15:20:02 [] DEBUG io.netty.util.NetUtil - -Djava.net.preferIPv4Stack: false
2025-02-28 15:20:02 [] DEBUG io.netty.util.NetUtil - -Djava.net.preferIPv6Addresses: false
2025-02-28 15:20:02 [] DEBUG i.netty.util.NetUtilInitializations - Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2025-02-28 15:20:02 [] DEBUG io.netty.util.NetUtil - Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2025-02-28 15:20:02 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default ResolvedAddressTypes: IPV4_ONLY
2025-02-28 15:20:02 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Localhost address: localhost/127.0.0.1
2025-02-28 15:20:02 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Windows hostname: DESKTOP-P307093
2025-02-28 15:20:02 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default search domains: []
2025-02-28 15:20:02 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default UnixResolverOptions{ndots=1, timeout=5, attempts=16}
2025-02-28 15:20:02 [] DEBUG i.n.r.DefaultHostsFileEntriesResolver - -Dio.netty.hostsFileRefreshInterval: 0
2025-02-28 15:20:02 [] DEBUG i.n.r.d.DefaultDnsServerAddressStreamProvider - Default DNS servers: [/8.8.8.8:53, /4.2.2.2:53] (sun.net.dns.ResolverConfiguration)
2025-02-28 15:20:02 [] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-02-28 15:20:02 [] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-02-28 15:20:02 [] INFO  c.c.c.g.c.CommongatewayApplication - Started CommongatewayApplication in 4.351 seconds (process running for 5.37)
2025-02-28 15:20:04 [] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-02-28 15:20:04 [] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-02-28 15:20:04 [] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-02-28 15:20:04 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 15:20:04 [b6f6b51e-d6e5-469c-92fa-68761d93c200] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 15:20:04 [b6f6b51e-d6e5-469c-92fa-68761d93c200] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /users
2025-02-28 15:20:04 [b6f6b51e-d6e5-469c-92fa-68761d93c200] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔄 Sending Validation Request to: http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY&orgId=001
2025-02-28 15:20:04 [b6f6b51e-d6e5-469c-92fa-68761d93c200] DEBUG r.n.r.PooledConnectionProvider - Creating a new [http] client pool [PoolFactory{evictionInterval=PT0S, leasingStrategy=fifo, maxConnections=500, maxIdleTime=-1, maxLifeTime=-1, metricsEnabled=false, pendingAcquireMaxCount=1000, pendingAcquireTimeout=45000}] for [localhost/<unresolved>:8081]
2025-02-28 15:20:04 [b6f6b51e-d6e5-469c-92fa-68761d93c200] DEBUG io.netty.channel.DefaultChannelId - -Dio.netty.processId: 13604 (auto-detected)
2025-02-28 15:20:04 [b6f6b51e-d6e5-469c-92fa-68761d93c200] DEBUG io.netty.channel.DefaultChannelId - -Dio.netty.machineId: 00:15:5d:ff:fe:02:b5:1f (auto-detected)
2025-02-28 15:20:04 [b6f6b51e-d6e5-469c-92fa-68761d93c200] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.numHeapArenas: 24
2025-02-28 15:20:04 [b6f6b51e-d6e5-469c-92fa-68761d93c200] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.numDirectArenas: 24
2025-02-28 15:20:04 [b6f6b51e-d6e5-469c-92fa-68761d93c200] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.pageSize: 8192
2025-02-28 15:20:04 [b6f6b51e-d6e5-469c-92fa-68761d93c200] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxOrder: 9
2025-02-28 15:20:04 [b6f6b51e-d6e5-469c-92fa-68761d93c200] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.chunkSize: 4194304
2025-02-28 15:20:04 [b6f6b51e-d6e5-469c-92fa-68761d93c200] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.smallCacheSize: 256
2025-02-28 15:20:04 [b6f6b51e-d6e5-469c-92fa-68761d93c200] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.normalCacheSize: 64
2025-02-28 15:20:04 [b6f6b51e-d6e5-469c-92fa-68761d93c200] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2025-02-28 15:20:04 [b6f6b51e-d6e5-469c-92fa-68761d93c200] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.cacheTrimInterval: 8192
2025-02-28 15:20:04 [b6f6b51e-d6e5-469c-92fa-68761d93c200] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.cacheTrimIntervalMillis: 0
2025-02-28 15:20:04 [b6f6b51e-d6e5-469c-92fa-68761d93c200] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.useCacheForAllThreads: false
2025-02-28 15:20:04 [b6f6b51e-d6e5-469c-92fa-68761d93c200] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
2025-02-28 15:20:04 [b6f6b51e-d6e5-469c-92fa-68761d93c200] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.disableCacheFinalizersForFastThreadLocalThreads: false
2025-02-28 15:20:04 [b6f6b51e-d6e5-469c-92fa-68761d93c200] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.allocator.type: pooled
2025-02-28 15:20:04 [b6f6b51e-d6e5-469c-92fa-68761d93c200] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.threadLocalDirectBufferSize: 0
2025-02-28 15:20:04 [b6f6b51e-d6e5-469c-92fa-68761d93c200] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.maxThreadLocalCharBufferSize: 16384
2025-02-28 15:20:04 [] DEBUG r.n.r.PooledConnectionProvider - [10dc5529] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 15:20:04 [] DEBUG io.netty.buffer.AbstractByteBuf - -Dio.netty.buffer.checkAccessible: true
2025-02-28 15:20:04 [] DEBUG io.netty.buffer.AbstractByteBuf - -Dio.netty.buffer.checkBounds: true
2025-02-28 15:20:04 [] DEBUG i.n.util.ResourceLeakDetectorFactory - Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@edec0a3
2025-02-28 15:20:04 [] DEBUG r.netty.transport.TransportConfig - [10dc5529] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-28 15:20:04 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 15:20:04 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 15:20:04 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 15:20:04 [] DEBUG i.n.b.ChannelInitializerExtensions - -Dio.netty.bootstrap.extensions: null
2025-02-28 15:20:04 [] DEBUG r.netty.transport.TransportConnector - [10dc5529] Connecting to [localhost/127.0.0.1:8081].
2025-02-28 15:20:04 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [10dc5529, L:/127.0.0.1:60455 - R:localhost/127.0.0.1:8081] Registering pool release on close event for channel
2025-02-28 15:20:04 [] DEBUG r.n.r.PooledConnectionProvider - [10dc5529, L:/127.0.0.1:60455 - R:localhost/127.0.0.1:8081] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 15:20:04 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [10dc5529, L:/127.0.0.1:60455 - R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x10dc5529, L:/127.0.0.1:60455 - R:localhost/127.0.0.1:8081]}, [connected])
2025-02-28 15:20:04 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [10dc5529-1, L:/127.0.0.1:60455 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0x10dc5529, L:/127.0.0.1:60455 - R:localhost/127.0.0.1:8081]}}, [configured])
2025-02-28 15:20:04 [] DEBUG r.n.http.client.HttpClientConnect - [10dc5529-1, L:/127.0.0.1:60455 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY&orgId=001, method=GET}
2025-02-28 15:20:04 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [10dc5529-1, L:/127.0.0.1:60455 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x10dc5529, L:/127.0.0.1:60455 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 15:20:04 [] DEBUG r.n.http.client.HttpClientOperations - [10dc5529-1, L:/127.0.0.1:60455 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 15:20:04 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.maxCapacityPerThread: 4096
2025-02-28 15:20:04 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.ratio: 8
2025-02-28 15:20:04 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.chunkSize: 32
2025-02-28 15:20:04 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.blocking: false
2025-02-28 15:20:04 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.batchFastThreadLocalOnly: true
2025-02-28 15:20:04 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [10dc5529-1, L:/127.0.0.1:60455 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x10dc5529, L:/127.0.0.1:60455 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 15:20:04 [] DEBUG i.n.handler.codec.compression.Zstd - zstd-jni not in the classpath; Zstd support will be unavailable.
2025-02-28 15:20:04 [] DEBUG r.n.http.client.HttpClientOperations - [10dc5529-1, L:/127.0.0.1:60455 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-28 15:20:04 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [10dc5529-1, L:/127.0.0.1:60455 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x10dc5529, L:/127.0.0.1:60455 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 15:20:04 [] DEBUG reactor.netty.channel.FluxReceive - [10dc5529-1, L:/127.0.0.1:60455 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-28 15:20:04 [] DEBUG r.n.http.client.HttpClientOperations - [10dc5529-1, L:/127.0.0.1:60455 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 15:20:04 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [10dc5529, L:/127.0.0.1:60455 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x10dc5529, L:/127.0.0.1:60455 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 15:20:04 [b6f6b51e-d6e5-469c-92fa-68761d93c200] INFO  c.c.c.g.c.c.ValidationInterceptor - ✅ Token Validated! Forwarding request...
2025-02-28 15:20:04 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [10dc5529, L:/127.0.0.1:60455 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x10dc5529, L:/127.0.0.1:60455 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 15:20:04 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [10dc5529, L:/127.0.0.1:60455 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-28 15:20:04 [] DEBUG r.n.r.PooledConnectionProvider - [10dc5529, L:/127.0.0.1:60455 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-28 15:20:04 [b6f6b51e-d6e5-469c-92fa-68761d93c200] DEBUG i.m.c.u.i.l.InternalLoggerFactory - Using SLF4J as the default logging framework
2025-02-28 15:20:04 [b6f6b51e-d6e5-469c-92fa-68761d93c200] DEBUG r.n.r.PooledConnectionProvider - Creating a new [http] client pool [PoolFactory{evictionInterval=PT0S, leasingStrategy=fifo, maxConnections=500, maxIdleTime=-1, maxLifeTime=-1, metricsEnabled=false, pendingAcquireMaxCount=1000, pendingAcquireTimeout=45000}] for [localhost/<unresolved>:8082]
2025-02-28 15:20:04 [] DEBUG r.n.r.PooledConnectionProvider - [71559737] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 15:20:04 [] DEBUG r.netty.transport.TransportConfig - [71559737] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-28 15:20:04 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 15:20:04 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 15:20:04 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 15:20:04 [] DEBUG r.netty.transport.TransportConnector - [71559737] Connecting to [localhost/127.0.0.1:8082].
2025-02-28 15:20:04 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [71559737, L:/127.0.0.1:60457 - R:localhost/127.0.0.1:8082] Registering pool release on close event for channel
2025-02-28 15:20:04 [] DEBUG r.n.r.PooledConnectionProvider - [71559737, L:/127.0.0.1:60457 - R:localhost/127.0.0.1:8082] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 15:20:04 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [71559737, L:/127.0.0.1:60457 - R:localhost/127.0.0.1:8082] onStateChange(PooledConnection{channel=[id: 0x71559737, L:/127.0.0.1:60457 - R:localhost/127.0.0.1:8082]}, [connected])
2025-02-28 15:20:04 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [71559737-1, L:/127.0.0.1:60457 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0x71559737, L:/127.0.0.1:60457 - R:localhost/127.0.0.1:8082]}}, [configured])
2025-02-28 15:20:04 [] DEBUG r.n.http.client.HttpClientConnect - [71559737-1, L:/127.0.0.1:60457 - R:localhost/127.0.0.1:8082] Handler is being applied: {uri=http://localhost:8082/users, method=GET}
2025-02-28 15:20:04 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [71559737-1, L:/127.0.0.1:60457 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0x71559737, L:/127.0.0.1:60457 - R:localhost/127.0.0.1:8082]}}, [request_prepared])
2025-02-28 15:20:04 [] DEBUG r.n.http.client.HttpClientOperations - [71559737-1, L:/127.0.0.1:60457 - R:localhost/127.0.0.1:8082] No sendHeaders() called before complete, sending zero-length header
2025-02-28 15:20:04 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [71559737-1, L:/127.0.0.1:60457 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0x71559737, L:/127.0.0.1:60457 - R:localhost/127.0.0.1:8082]}}, [request_sent])
2025-02-28 15:20:04 [] DEBUG r.n.http.client.HttpClientOperations - [71559737-1, L:/127.0.0.1:60457 - R:localhost/127.0.0.1:8082] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Content-Length: <filtered>
Date: <filtered>
2025-02-28 15:20:04 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [71559737-1, L:/127.0.0.1:60457 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0x71559737, L:/127.0.0.1:60457 - R:localhost/127.0.0.1:8082]}}, [response_received])
2025-02-28 15:20:04 [] DEBUG r.n.http.client.HttpClientOperations - [71559737-1, L:/127.0.0.1:60457 - R:localhost/127.0.0.1:8082] Received last HTTP packet
2025-02-28 15:20:04 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [71559737, L:/127.0.0.1:60457 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0x71559737, L:/127.0.0.1:60457 - R:localhost/127.0.0.1:8082]}}, [response_completed])
2025-02-28 15:20:04 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [71559737, L:/127.0.0.1:60457 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0x71559737, L:/127.0.0.1:60457 - R:localhost/127.0.0.1:8082]}}, [disconnecting])
2025-02-28 15:20:04 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [71559737, L:/127.0.0.1:60457 - R:localhost/127.0.0.1:8082] Releasing channel
2025-02-28 15:20:04 [] DEBUG r.n.r.PooledConnectionProvider - [71559737, L:/127.0.0.1:60457 - R:localhost/127.0.0.1:8082] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-28 15:20:04 [] DEBUG reactor.netty.channel.FluxReceive - [c9e8da0a, L:/127.0.0.1:60457 ! R:localhost/127.0.0.1:8082] [terminated=true, cancelled=false, pending=1, error=null]: subscribing inbound receiver
2025-02-28 15:20:16 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 15:20:16 [e9ce15fa-1a5f-4e31-9af4-1ad0265ac213] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 15:20:16 [e9ce15fa-1a5f-4e31-9af4-1ad0265ac213] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /users
2025-02-28 15:20:16 [e9ce15fa-1a5f-4e31-9af4-1ad0265ac213] WARN  c.c.c.g.c.c.ValidationInterceptor - ❌ Missing X-Validation-Token or X-Org-Id!
2025-02-28 15:20:16 [] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /error
2025-02-28 15:20:16 [] WARN  c.c.c.g.c.c.ValidationInterceptor - ❌ Missing X-Validation-Token or X-Org-Id!
2025-02-28 15:20:21 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 15:20:21 [08133185-dadd-467e-a9cb-0027964bdbf1] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 15:20:21 [08133185-dadd-467e-a9cb-0027964bdbf1] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /users
2025-02-28 15:20:21 [08133185-dadd-467e-a9cb-0027964bdbf1] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔄 Sending Validation Request to: http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY&orgId=001
2025-02-28 15:20:21 [] DEBUG r.n.r.PooledConnectionProvider - [10dc5529, L:/127.0.0.1:60455 - R:localhost/127.0.0.1:8081] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 15:20:21 [] DEBUG r.n.http.client.HttpClientConnect - [10dc5529-2, L:/127.0.0.1:60455 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY&orgId=001, method=GET}
2025-02-28 15:20:21 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [10dc5529-2, L:/127.0.0.1:60455 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x10dc5529, L:/127.0.0.1:60455 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 15:20:21 [] DEBUG r.n.http.client.HttpClientOperations - [10dc5529-2, L:/127.0.0.1:60455 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 15:20:21 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [10dc5529-2, L:/127.0.0.1:60455 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x10dc5529, L:/127.0.0.1:60455 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 15:20:21 [] DEBUG r.n.http.client.HttpClientOperations - [10dc5529-2, L:/127.0.0.1:60455 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-28 15:20:21 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [10dc5529-2, L:/127.0.0.1:60455 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x10dc5529, L:/127.0.0.1:60455 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 15:20:21 [] DEBUG reactor.netty.channel.FluxReceive - [10dc5529-2, L:/127.0.0.1:60455 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-28 15:20:21 [] DEBUG r.n.http.client.HttpClientOperations - [10dc5529-2, L:/127.0.0.1:60455 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 15:20:21 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [10dc5529, L:/127.0.0.1:60455 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x10dc5529, L:/127.0.0.1:60455 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 15:20:21 [08133185-dadd-467e-a9cb-0027964bdbf1] INFO  c.c.c.g.c.c.ValidationInterceptor - ✅ Token Validated! Forwarding request...
2025-02-28 15:20:21 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [10dc5529, L:/127.0.0.1:60455 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x10dc5529, L:/127.0.0.1:60455 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 15:20:21 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [10dc5529, L:/127.0.0.1:60455 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-28 15:20:21 [] DEBUG r.n.r.PooledConnectionProvider - [10dc5529, L:/127.0.0.1:60455 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-28 15:20:21 [] DEBUG r.n.r.PooledConnectionProvider - [71559737, L:/127.0.0.1:60457 - R:localhost/127.0.0.1:8082] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 15:20:21 [] DEBUG r.n.http.client.HttpClientConnect - [71559737-2, L:/127.0.0.1:60457 - R:localhost/127.0.0.1:8082] Handler is being applied: {uri=http://localhost:8082/users, method=GET}
2025-02-28 15:20:21 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [71559737-2, L:/127.0.0.1:60457 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0x71559737, L:/127.0.0.1:60457 - R:localhost/127.0.0.1:8082]}}, [request_prepared])
2025-02-28 15:20:21 [] DEBUG r.n.http.client.HttpClientOperations - [71559737-2, L:/127.0.0.1:60457 - R:localhost/127.0.0.1:8082] No sendHeaders() called before complete, sending zero-length header
2025-02-28 15:20:21 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [71559737-2, L:/127.0.0.1:60457 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0x71559737, L:/127.0.0.1:60457 - R:localhost/127.0.0.1:8082]}}, [request_sent])
2025-02-28 15:20:21 [] DEBUG r.n.http.client.HttpClientOperations - [71559737-2, L:/127.0.0.1:60457 - R:localhost/127.0.0.1:8082] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Content-Length: <filtered>
Date: <filtered>
2025-02-28 15:20:21 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [71559737-2, L:/127.0.0.1:60457 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0x71559737, L:/127.0.0.1:60457 - R:localhost/127.0.0.1:8082]}}, [response_received])
2025-02-28 15:20:21 [] DEBUG r.n.http.client.HttpClientOperations - [71559737-2, L:/127.0.0.1:60457 - R:localhost/127.0.0.1:8082] Received last HTTP packet
2025-02-28 15:20:21 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [71559737, L:/127.0.0.1:60457 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0x71559737, L:/127.0.0.1:60457 - R:localhost/127.0.0.1:8082]}}, [response_completed])
2025-02-28 15:20:21 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [71559737, L:/127.0.0.1:60457 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0x71559737, L:/127.0.0.1:60457 - R:localhost/127.0.0.1:8082]}}, [disconnecting])
2025-02-28 15:20:21 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [71559737, L:/127.0.0.1:60457 - R:localhost/127.0.0.1:8082] Releasing channel
2025-02-28 15:20:21 [] DEBUG r.n.r.PooledConnectionProvider - [71559737, L:/127.0.0.1:60457 - R:localhost/127.0.0.1:8082] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-28 15:20:21 [] DEBUG reactor.netty.channel.FluxReceive - [3d6d626f, L:/127.0.0.1:60457 ! R:localhost/127.0.0.1:8082] [terminated=true, cancelled=false, pending=1, error=null]: subscribing inbound receiver
2025-02-28 15:21:22 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [10dc5529, L:/127.0.0.1:60455 ! R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x10dc5529, L:/127.0.0.1:60455 ! R:localhost/127.0.0.1:8081]}, [disconnecting])
2025-02-28 15:21:22 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [71559737, L:/127.0.0.1:60457 ! R:localhost/127.0.0.1:8082] onStateChange(PooledConnection{channel=[id: 0x71559737, L:/127.0.0.1:60457 ! R:localhost/127.0.0.1:8082]}, [disconnecting])
2025-02-28 15:21:34 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 15:21:34 [75a9c778-500c-4aa5-b556-286c97dd01f7] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 15:21:34 [75a9c778-500c-4aa5-b556-286c97dd01f7] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /users
2025-02-28 15:21:34 [75a9c778-500c-4aa5-b556-286c97dd01f7] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔄 Sending Validation Request to: http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY&orgId=001
2025-02-28 15:21:34 [] DEBUG r.n.r.PooledConnectionProvider - [37f68c25] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 15:21:34 [] DEBUG r.netty.transport.TransportConfig - [37f68c25] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-28 15:21:34 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 15:21:34 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 15:21:34 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 15:21:34 [] DEBUG r.netty.transport.TransportConnector - [37f68c25] Connecting to [localhost/127.0.0.1:8081].
2025-02-28 15:21:34 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [37f68c25, L:/127.0.0.1:60517 - R:localhost/127.0.0.1:8081] Registering pool release on close event for channel
2025-02-28 15:21:34 [] DEBUG r.n.r.PooledConnectionProvider - [37f68c25, L:/127.0.0.1:60517 - R:localhost/127.0.0.1:8081] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 15:21:34 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [37f68c25, L:/127.0.0.1:60517 - R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x37f68c25, L:/127.0.0.1:60517 - R:localhost/127.0.0.1:8081]}, [connected])
2025-02-28 15:21:34 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [37f68c25-1, L:/127.0.0.1:60517 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0x37f68c25, L:/127.0.0.1:60517 - R:localhost/127.0.0.1:8081]}}, [configured])
2025-02-28 15:21:34 [] DEBUG r.n.http.client.HttpClientConnect - [37f68c25-1, L:/127.0.0.1:60517 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY&orgId=001, method=GET}
2025-02-28 15:21:34 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [37f68c25-1, L:/127.0.0.1:60517 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x37f68c25, L:/127.0.0.1:60517 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 15:21:34 [] DEBUG r.n.http.client.HttpClientOperations - [37f68c25-1, L:/127.0.0.1:60517 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 15:21:34 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [37f68c25-1, L:/127.0.0.1:60517 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x37f68c25, L:/127.0.0.1:60517 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 15:21:34 [] DEBUG r.n.http.client.HttpClientOperations - [37f68c25-1, L:/127.0.0.1:60517 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-28 15:21:34 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [37f68c25-1, L:/127.0.0.1:60517 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x37f68c25, L:/127.0.0.1:60517 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 15:21:34 [] DEBUG reactor.netty.channel.FluxReceive - [37f68c25-1, L:/127.0.0.1:60517 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-28 15:21:34 [] DEBUG r.n.http.client.HttpClientOperations - [37f68c25-1, L:/127.0.0.1:60517 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 15:21:34 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [37f68c25, L:/127.0.0.1:60517 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x37f68c25, L:/127.0.0.1:60517 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 15:21:34 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [37f68c25, L:/127.0.0.1:60517 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x37f68c25, L:/127.0.0.1:60517 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 15:21:34 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [37f68c25, L:/127.0.0.1:60517 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-28 15:21:34 [75a9c778-500c-4aa5-b556-286c97dd01f7] WARN  c.c.c.g.c.c.ValidationInterceptor - ❌ Invalid X-Validation-Token or X-Org-Id!
2025-02-28 15:21:34 [] DEBUG r.n.r.PooledConnectionProvider - [37f68c25, L:/127.0.0.1:60517 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-28 15:21:34 [] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /error
2025-02-28 15:21:34 [] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔄 Sending Validation Request to: http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY&orgId=001
2025-02-28 15:21:34 [] DEBUG r.n.r.PooledConnectionProvider - [37f68c25, L:/127.0.0.1:60517 - R:localhost/127.0.0.1:8081] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 15:21:34 [] DEBUG r.n.http.client.HttpClientConnect - [37f68c25-2, L:/127.0.0.1:60517 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY&orgId=001, method=GET}
2025-02-28 15:21:34 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [37f68c25-2, L:/127.0.0.1:60517 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x37f68c25, L:/127.0.0.1:60517 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 15:21:34 [] DEBUG r.n.http.client.HttpClientOperations - [37f68c25-2, L:/127.0.0.1:60517 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 15:21:34 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [37f68c25-2, L:/127.0.0.1:60517 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x37f68c25, L:/127.0.0.1:60517 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 15:21:34 [] DEBUG r.n.http.client.HttpClientOperations - [37f68c25-2, L:/127.0.0.1:60517 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-28 15:21:34 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [37f68c25-2, L:/127.0.0.1:60517 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x37f68c25, L:/127.0.0.1:60517 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 15:21:34 [] DEBUG reactor.netty.channel.FluxReceive - [37f68c25-2, L:/127.0.0.1:60517 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-28 15:21:34 [] DEBUG r.n.http.client.HttpClientOperations - [37f68c25-2, L:/127.0.0.1:60517 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 15:21:34 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [37f68c25, L:/127.0.0.1:60517 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x37f68c25, L:/127.0.0.1:60517 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 15:21:34 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [37f68c25, L:/127.0.0.1:60517 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x37f68c25, L:/127.0.0.1:60517 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 15:21:34 [] WARN  c.c.c.g.c.c.ValidationInterceptor - ❌ Invalid X-Validation-Token or X-Org-Id!
2025-02-28 15:21:34 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [37f68c25, L:/127.0.0.1:60517 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-28 15:21:34 [] DEBUG r.n.r.PooledConnectionProvider - [37f68c25, L:/127.0.0.1:60517 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-28 15:21:55 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [37f68c25, L:/127.0.0.1:60517 ! R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x37f68c25, L:/127.0.0.1:60517 ! R:localhost/127.0.0.1:8081]}, [disconnecting])
2025-02-28 15:22:12 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 15:22:12 [1f7da3e3-e09e-46c8-9a82-0c3b681fb447] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 15:22:12 [1f7da3e3-e09e-46c8-9a82-0c3b681fb447] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /users
2025-02-28 15:22:12 [1f7da3e3-e09e-46c8-9a82-0c3b681fb447] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔄 Sending Validation Request to: http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY&orgId=001
2025-02-28 15:22:12 [] DEBUG r.n.r.PooledConnectionProvider - [5824aeba] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 15:22:12 [] DEBUG r.netty.transport.TransportConfig - [5824aeba] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-28 15:22:12 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 15:22:12 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 15:22:12 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 15:22:12 [] DEBUG r.netty.transport.TransportConnector - [5824aeba] Connecting to [localhost/127.0.0.1:8081].
2025-02-28 15:22:12 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [5824aeba, L:/127.0.0.1:60537 - R:localhost/127.0.0.1:8081] Registering pool release on close event for channel
2025-02-28 15:22:12 [] DEBUG r.n.r.PooledConnectionProvider - [5824aeba, L:/127.0.0.1:60537 - R:localhost/127.0.0.1:8081] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 15:22:12 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [5824aeba, L:/127.0.0.1:60537 - R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x5824aeba, L:/127.0.0.1:60537 - R:localhost/127.0.0.1:8081]}, [connected])
2025-02-28 15:22:12 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [5824aeba-1, L:/127.0.0.1:60537 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0x5824aeba, L:/127.0.0.1:60537 - R:localhost/127.0.0.1:8081]}}, [configured])
2025-02-28 15:22:12 [] DEBUG r.n.http.client.HttpClientConnect - [5824aeba-1, L:/127.0.0.1:60537 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY&orgId=001, method=GET}
2025-02-28 15:22:12 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [5824aeba-1, L:/127.0.0.1:60537 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x5824aeba, L:/127.0.0.1:60537 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 15:22:12 [] DEBUG r.n.http.client.HttpClientOperations - [5824aeba-1, L:/127.0.0.1:60537 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 15:22:12 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [5824aeba-1, L:/127.0.0.1:60537 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x5824aeba, L:/127.0.0.1:60537 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 15:22:12 [] DEBUG r.n.http.client.HttpClientOperations - [5824aeba-1, L:/127.0.0.1:60537 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-28 15:22:12 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [5824aeba-1, L:/127.0.0.1:60537 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x5824aeba, L:/127.0.0.1:60537 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 15:22:12 [] DEBUG reactor.netty.channel.FluxReceive - [5824aeba-1, L:/127.0.0.1:60537 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-28 15:22:12 [] DEBUG r.n.http.client.HttpClientOperations - [5824aeba-1, L:/127.0.0.1:60537 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 15:22:12 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [5824aeba, L:/127.0.0.1:60537 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x5824aeba, L:/127.0.0.1:60537 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 15:22:12 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [5824aeba, L:/127.0.0.1:60537 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x5824aeba, L:/127.0.0.1:60537 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 15:22:12 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [5824aeba, L:/127.0.0.1:60537 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-28 15:22:12 [] DEBUG r.n.r.PooledConnectionProvider - [5824aeba, L:/127.0.0.1:60537 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-28 15:22:12 [1f7da3e3-e09e-46c8-9a82-0c3b681fb447] INFO  c.c.c.g.c.c.ValidationInterceptor - ✅ Token Validated! Forwarding request...
2025-02-28 15:22:12 [] DEBUG r.n.r.PooledConnectionProvider - [eacc3935] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 15:22:12 [] DEBUG r.netty.transport.TransportConfig - [eacc3935] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-28 15:22:12 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 15:22:12 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 15:22:12 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 15:22:12 [] DEBUG r.netty.transport.TransportConnector - [eacc3935] Connecting to [localhost/127.0.0.1:8082].
2025-02-28 15:22:12 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [eacc3935, L:/127.0.0.1:60538 - R:localhost/127.0.0.1:8082] Registering pool release on close event for channel
2025-02-28 15:22:12 [] DEBUG r.n.r.PooledConnectionProvider - [eacc3935, L:/127.0.0.1:60538 - R:localhost/127.0.0.1:8082] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 15:22:12 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [eacc3935, L:/127.0.0.1:60538 - R:localhost/127.0.0.1:8082] onStateChange(PooledConnection{channel=[id: 0xeacc3935, L:/127.0.0.1:60538 - R:localhost/127.0.0.1:8082]}, [connected])
2025-02-28 15:22:12 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [eacc3935-1, L:/127.0.0.1:60538 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0xeacc3935, L:/127.0.0.1:60538 - R:localhost/127.0.0.1:8082]}}, [configured])
2025-02-28 15:22:12 [] DEBUG r.n.http.client.HttpClientConnect - [eacc3935-1, L:/127.0.0.1:60538 - R:localhost/127.0.0.1:8082] Handler is being applied: {uri=http://localhost:8082/users, method=GET}
2025-02-28 15:22:12 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [eacc3935-1, L:/127.0.0.1:60538 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0xeacc3935, L:/127.0.0.1:60538 - R:localhost/127.0.0.1:8082]}}, [request_prepared])
2025-02-28 15:22:12 [] DEBUG r.n.http.client.HttpClientOperations - [eacc3935-1, L:/127.0.0.1:60538 - R:localhost/127.0.0.1:8082] No sendHeaders() called before complete, sending zero-length header
2025-02-28 15:22:12 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [eacc3935-1, L:/127.0.0.1:60538 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0xeacc3935, L:/127.0.0.1:60538 - R:localhost/127.0.0.1:8082]}}, [request_sent])
2025-02-28 15:22:12 [] DEBUG r.n.http.client.HttpClientOperations - [eacc3935-1, L:/127.0.0.1:60538 - R:localhost/127.0.0.1:8082] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Content-Length: <filtered>
Date: <filtered>
2025-02-28 15:22:12 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [eacc3935-1, L:/127.0.0.1:60538 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0xeacc3935, L:/127.0.0.1:60538 - R:localhost/127.0.0.1:8082]}}, [response_received])
2025-02-28 15:22:12 [] DEBUG r.n.http.client.HttpClientOperations - [eacc3935-1, L:/127.0.0.1:60538 - R:localhost/127.0.0.1:8082] Received last HTTP packet
2025-02-28 15:22:12 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [eacc3935, L:/127.0.0.1:60538 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0xeacc3935, L:/127.0.0.1:60538 - R:localhost/127.0.0.1:8082]}}, [response_completed])
2025-02-28 15:22:12 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [eacc3935, L:/127.0.0.1:60538 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0xeacc3935, L:/127.0.0.1:60538 - R:localhost/127.0.0.1:8082]}}, [disconnecting])
2025-02-28 15:22:12 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [eacc3935, L:/127.0.0.1:60538 - R:localhost/127.0.0.1:8082] Releasing channel
2025-02-28 15:22:12 [] DEBUG r.n.r.PooledConnectionProvider - [eacc3935, L:/127.0.0.1:60538 - R:localhost/127.0.0.1:8082] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-28 15:22:12 [] DEBUG reactor.netty.channel.FluxReceive - [bbe6d47a, L:/127.0.0.1:60538 ! R:localhost/127.0.0.1:8082] [terminated=true, cancelled=false, pending=1, error=null]: subscribing inbound receiver
2025-02-28 15:22:21 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 15:22:21 [0791cc39-9554-4c8e-b417-8837aa6f4900] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 15:22:21 [] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /error
2025-02-28 15:22:21 [] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔄 Sending Validation Request to: http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY&orgId=001
2025-02-28 15:22:21 [] DEBUG r.n.r.PooledConnectionProvider - [5824aeba, L:/127.0.0.1:60537 - R:localhost/127.0.0.1:8081] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 15:22:21 [] DEBUG r.n.http.client.HttpClientConnect - [5824aeba-2, L:/127.0.0.1:60537 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY&orgId=001, method=GET}
2025-02-28 15:22:21 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [5824aeba-2, L:/127.0.0.1:60537 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x5824aeba, L:/127.0.0.1:60537 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 15:22:21 [] DEBUG r.n.http.client.HttpClientOperations - [5824aeba-2, L:/127.0.0.1:60537 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 15:22:21 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [5824aeba-2, L:/127.0.0.1:60537 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x5824aeba, L:/127.0.0.1:60537 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 15:22:21 [] DEBUG r.n.http.client.HttpClientOperations - [5824aeba-2, L:/127.0.0.1:60537 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-28 15:22:21 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [5824aeba-2, L:/127.0.0.1:60537 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x5824aeba, L:/127.0.0.1:60537 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 15:22:21 [] DEBUG reactor.netty.channel.FluxReceive - [5824aeba-2, L:/127.0.0.1:60537 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-28 15:22:21 [] DEBUG r.n.http.client.HttpClientOperations - [5824aeba-2, L:/127.0.0.1:60537 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 15:22:21 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [5824aeba, L:/127.0.0.1:60537 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x5824aeba, L:/127.0.0.1:60537 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 15:22:21 [] INFO  c.c.c.g.c.c.ValidationInterceptor - ✅ Token Validated! Forwarding request...
2025-02-28 15:22:21 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [5824aeba, L:/127.0.0.1:60537 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x5824aeba, L:/127.0.0.1:60537 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 15:22:21 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [5824aeba, L:/127.0.0.1:60537 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-28 15:22:21 [] DEBUG r.n.r.PooledConnectionProvider - [5824aeba, L:/127.0.0.1:60537 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-28 15:23:12 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [eacc3935, L:/127.0.0.1:60538 ! R:localhost/127.0.0.1:8082] onStateChange(PooledConnection{channel=[id: 0xeacc3935, L:/127.0.0.1:60538 ! R:localhost/127.0.0.1:8082]}, [disconnecting])
2025-02-28 15:23:22 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [5824aeba, L:/127.0.0.1:60537 ! R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x5824aeba, L:/127.0.0.1:60537 ! R:localhost/127.0.0.1:8081]}, [disconnecting])
2025-02-28 16:25:20 [] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-02-28 16:25:20 [] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-02-28 16:25:20 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 4 thread-local buffer(s) from thread: reactor-http-nio-2
2025-02-28 16:25:20 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 5 thread-local buffer(s) from thread: reactor-http-nio-4
2025-02-28 16:25:20 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 4 thread-local buffer(s) from thread: reactor-http-nio-7
2025-02-28 16:25:20 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 5 thread-local buffer(s) from thread: reactor-http-nio-5
2025-02-28 16:25:20 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 7 thread-local buffer(s) from thread: reactor-http-nio-6
2025-02-28 16:25:27 [] DEBUG org.jboss.logging - Logging Provider: org.jboss.logging.Slf4jLoggerProvider found via system property
2025-02-28 16:25:27 [] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final
2025-02-28 16:25:27 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-02-28 16:25:27 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-02-28 16:25:27 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-02-28 16:25:27 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-02-28 16:25:27 [] DEBUG o.h.v.i.e.r.TraversableResolvers - Cannot find jakarta.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2025-02-28 16:25:27 [] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-02-28 16:25:27 [] INFO  c.c.c.g.c.CommongatewayApplication - Starting CommongatewayApplication using Java 17.0.12 with PID 18216 (D:\WORKSPACE\API-GATEWAY\commongateway\target\classes started by CITPL in D:\WORKSPACE\API-GATEWAY)
2025-02-28 16:25:27 [] DEBUG c.c.c.g.c.CommongatewayApplication - Running with Spring Boot v3.4.2, Spring v6.2.2
2025-02-28 16:25:27 [] INFO  c.c.c.g.c.CommongatewayApplication - No active profile set, falling back to 1 default profile: "default"
2025-02-28 16:25:27 [] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-02-28 16:25:27 [] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-02-28 16:25:27 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-02-28 16:25:27 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-02-28 16:25:27 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-02-28 16:25:27 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-02-28 16:25:27 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-02-28 16:25:27 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-02-28 16:25:28 [] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=d2aee5ef-86a6-3b95-abd8-708d95e66676
2025-02-28 16:25:29 [] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-02-28 16:25:29 [] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-02-28 16:25:29 [] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-02-28 16:25:29 [] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.34]
2025-02-28 16:25:29 [] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-02-28 16:25:29 [] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1803 ms
2025-02-28 16:25:29 [] DEBUG i.n.u.i.l.InternalLoggerFactory - Using SLF4J as the default logging framework
2025-02-28 16:25:29 [] DEBUG i.n.util.internal.PlatformDependent0 - -Dio.netty.noUnsafe: false
2025-02-28 16:25:29 [] DEBUG i.n.util.internal.PlatformDependent0 - Java version: 17
2025-02-28 16:25:29 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe.theUnsafe: available
2025-02-28 16:25:29 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe base methods: all available
2025-02-28 16:25:29 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe.storeFence: available
2025-02-28 16:25:29 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.Buffer.address: available
2025-02-28 16:25:29 [] DEBUG i.n.util.internal.PlatformDependent0 - direct buffer constructor: unavailable: Reflective setAccessible(true) disabled
2025-02-28 16:25:29 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.Bits.unaligned: available, true
2025-02-28 16:25:29 [] DEBUG i.n.util.internal.PlatformDependent0 - jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable: class io.netty.util.internal.PlatformDependent0$7 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @23bb8443
2025-02-28 16:25:29 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.DirectByteBuffer.<init>(long, {int,long}): unavailable
2025-02-28 16:25:29 [] DEBUG i.n.util.internal.PlatformDependent - sun.misc.Unsafe: available
2025-02-28 16:25:29 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.tmpdir: C:\Users\CITPL\AppData\Local\Temp (java.io.tmpdir)
2025-02-28 16:25:29 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.bitMode: 64 (sun.arch.data.model)
2025-02-28 16:25:29 [] DEBUG i.n.util.internal.PlatformDependent - Platform: Windows
2025-02-28 16:25:29 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.maxDirectMemory: -1 bytes
2025-02-28 16:25:29 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.uninitializedArrayAllocationThreshold: -1
2025-02-28 16:25:29 [] DEBUG io.netty.util.internal.CleanerJava9 - java.nio.ByteBuffer.cleaner(): available
2025-02-28 16:25:29 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.noPreferDirect: false
2025-02-28 16:25:29 [] DEBUG reactor.util.Loggers - Using Slf4j logging framework
2025-02-28 16:25:29 [] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-02-28 16:25:29 [] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2025-02-28 16:25:29 [] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2025-02-28 16:25:29 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-02-28 16:25:29 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via user class loader
2025-02-28 16:25:29 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-02-28 16:25:29 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-02-28 16:25:29 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-02-28 16:25:29 [] DEBUG o.h.v.i.e.r.TraversableResolvers - Cannot find jakarta.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2025-02-28 16:25:29 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-02-28 16:25:29 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-02-28 16:25:29 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-02-28 16:25:29 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-02-28 16:25:29 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-02-28 16:25:29 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-02-28 16:25:29 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	c.c.c.g.c.c.HomeController:
	{GET [/home]}: get()
2025-02-28 16:25:29 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2025-02-28 16:25:29 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 'beanNameHandlerMapping' {}
2025-02-28 16:25:30 [] DEBUG _.s.w.s.HandlerMapping.Mappings - Mapped /users/** -> ProxyExchangeHandlerFunction
2025-02-28 16:25:30 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2025-02-28 16:25:30 [] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-02-28 16:25:30 [] DEBUG i.n.u.i.InternalThreadLocalMap - -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2025-02-28 16:25:30 [] DEBUG i.n.u.i.InternalThreadLocalMap - -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2025-02-28 16:25:30 [] DEBUG io.netty.util.ResourceLeakDetector - -Dio.netty.leakDetection.level: simple
2025-02-28 16:25:30 [] DEBUG io.netty.util.ResourceLeakDetector - -Dio.netty.leakDetection.targetRecords: 4
2025-02-28 16:25:30 [] DEBUG i.n.handler.codec.compression.Brotli - brotli4j not in the classpath; Brotli support will be unavailable.
2025-02-28 16:25:30 [] DEBUG reactor.netty.tcp.TcpResources - [http] resources will use the default LoopResources: DefaultLoopResources {prefix=reactor-http, daemon=true, selectCount=12, workerCount=12}
2025-02-28 16:25:30 [] DEBUG reactor.netty.tcp.TcpResources - [http] resources will use the default ConnectionProvider: reactor.netty.resources.DefaultPooledConnectionProvider@57c031ba
2025-02-28 16:25:30 [] DEBUG r.netty.resources.DefaultLoopIOUring - Default io_uring support : false
2025-02-28 16:25:30 [] DEBUG r.netty.resources.DefaultLoopEpoll - Default Epoll support : false
2025-02-28 16:25:30 [] DEBUG r.netty.resources.DefaultLoopKQueue - Default KQueue support : false
2025-02-28 16:25:30 [] DEBUG i.n.c.MultithreadEventLoopGroup - -Dio.netty.eventLoopThreads: 24
2025-02-28 16:25:30 [] DEBUG i.n.u.concurrent.GlobalEventExecutor - -Dio.netty.globalEventExecutor.quietPeriodSeconds: 1
2025-02-28 16:25:30 [] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.noKeySetOptimization: false
2025-02-28 16:25:30 [] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.selectorAutoRebuildThreshold: 512
2025-02-28 16:25:30 [] DEBUG i.n.util.internal.PlatformDependent - org.jctools-core.MpscChunkedArrayQueue: available
2025-02-28 16:25:30 [] DEBUG io.netty.util.NetUtil - -Djava.net.preferIPv4Stack: false
2025-02-28 16:25:30 [] DEBUG io.netty.util.NetUtil - -Djava.net.preferIPv6Addresses: false
2025-02-28 16:25:30 [] DEBUG i.netty.util.NetUtilInitializations - Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2025-02-28 16:25:30 [] DEBUG io.netty.util.NetUtil - Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2025-02-28 16:25:30 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default ResolvedAddressTypes: IPV4_ONLY
2025-02-28 16:25:30 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Localhost address: localhost/127.0.0.1
2025-02-28 16:25:30 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Windows hostname: DESKTOP-P307093
2025-02-28 16:25:30 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default search domains: []
2025-02-28 16:25:30 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default UnixResolverOptions{ndots=1, timeout=5, attempts=16}
2025-02-28 16:25:30 [] DEBUG i.n.r.DefaultHostsFileEntriesResolver - -Dio.netty.hostsFileRefreshInterval: 0
2025-02-28 16:25:30 [] DEBUG i.n.r.d.DefaultDnsServerAddressStreamProvider - Default DNS servers: [/8.8.8.8:53, /4.2.2.2:53] (sun.net.dns.ResolverConfiguration)
2025-02-28 16:25:30 [] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-02-28 16:25:30 [] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-02-28 16:25:30 [] INFO  c.c.c.g.c.CommongatewayApplication - Started CommongatewayApplication in 4.392 seconds (process running for 5.458)
2025-02-28 17:13:38 [] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-02-28 17:13:38 [] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-02-28 17:13:42 [] DEBUG org.jboss.logging - Logging Provider: org.jboss.logging.Slf4jLoggerProvider found via system property
2025-02-28 17:13:42 [] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final
2025-02-28 17:13:42 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-02-28 17:13:42 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-02-28 17:13:42 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-02-28 17:13:42 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-02-28 17:13:42 [] DEBUG o.h.v.i.e.r.TraversableResolvers - Cannot find jakarta.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2025-02-28 17:13:42 [] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-02-28 17:13:42 [] INFO  c.c.c.g.c.CommongatewayApplication - Starting CommongatewayApplication using Java 17.0.12 with PID 5032 (D:\WORKSPACE\API-GATEWAY\commongateway\target\classes started by CITPL in D:\WORKSPACE\API-GATEWAY)
2025-02-28 17:13:42 [] DEBUG c.c.c.g.c.CommongatewayApplication - Running with Spring Boot v3.4.2, Spring v6.2.2
2025-02-28 17:13:42 [] INFO  c.c.c.g.c.CommongatewayApplication - No active profile set, falling back to 1 default profile: "default"
2025-02-28 17:13:43 [] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-02-28 17:13:43 [] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-02-28 17:13:43 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-02-28 17:13:43 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-02-28 17:13:43 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-02-28 17:13:43 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-02-28 17:13:43 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-02-28 17:13:43 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-02-28 17:13:44 [] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=d2aee5ef-86a6-3b95-abd8-708d95e66676
2025-02-28 17:13:44 [] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-02-28 17:13:44 [] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-02-28 17:13:44 [] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-02-28 17:13:44 [] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.34]
2025-02-28 17:13:44 [] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-02-28 17:13:44 [] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1900 ms
2025-02-28 17:13:45 [] DEBUG i.n.u.i.l.InternalLoggerFactory - Using SLF4J as the default logging framework
2025-02-28 17:13:45 [] DEBUG i.n.util.internal.PlatformDependent0 - -Dio.netty.noUnsafe: false
2025-02-28 17:13:45 [] DEBUG i.n.util.internal.PlatformDependent0 - Java version: 17
2025-02-28 17:13:45 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe.theUnsafe: available
2025-02-28 17:13:45 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe base methods: all available
2025-02-28 17:13:45 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe.storeFence: available
2025-02-28 17:13:45 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.Buffer.address: available
2025-02-28 17:13:45 [] DEBUG i.n.util.internal.PlatformDependent0 - direct buffer constructor: unavailable: Reflective setAccessible(true) disabled
2025-02-28 17:13:45 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.Bits.unaligned: available, true
2025-02-28 17:13:45 [] DEBUG i.n.util.internal.PlatformDependent0 - jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable: class io.netty.util.internal.PlatformDependent0$7 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @23bb8443
2025-02-28 17:13:45 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.DirectByteBuffer.<init>(long, {int,long}): unavailable
2025-02-28 17:13:45 [] DEBUG i.n.util.internal.PlatformDependent - sun.misc.Unsafe: available
2025-02-28 17:13:45 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.tmpdir: C:\Users\CITPL\AppData\Local\Temp (java.io.tmpdir)
2025-02-28 17:13:45 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.bitMode: 64 (sun.arch.data.model)
2025-02-28 17:13:45 [] DEBUG i.n.util.internal.PlatformDependent - Platform: Windows
2025-02-28 17:13:45 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.maxDirectMemory: -1 bytes
2025-02-28 17:13:45 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.uninitializedArrayAllocationThreshold: -1
2025-02-28 17:13:45 [] DEBUG io.netty.util.internal.CleanerJava9 - java.nio.ByteBuffer.cleaner(): available
2025-02-28 17:13:45 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.noPreferDirect: false
2025-02-28 17:13:45 [] DEBUG reactor.util.Loggers - Using Slf4j logging framework
2025-02-28 17:13:45 [] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-02-28 17:13:45 [] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2025-02-28 17:13:45 [] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2025-02-28 17:13:45 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-02-28 17:13:45 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via user class loader
2025-02-28 17:13:45 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-02-28 17:13:45 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-02-28 17:13:45 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-02-28 17:13:45 [] DEBUG o.h.v.i.e.r.TraversableResolvers - Cannot find jakarta.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2025-02-28 17:13:45 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-02-28 17:13:45 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-02-28 17:13:45 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-02-28 17:13:45 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-02-28 17:13:45 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-02-28 17:13:45 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-02-28 17:13:45 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	c.c.c.g.c.c.HomeController:
	{GET [/home]}: get()
2025-02-28 17:13:45 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2025-02-28 17:13:45 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 'beanNameHandlerMapping' {}
2025-02-28 17:13:45 [] DEBUG _.s.w.s.HandlerMapping.Mappings - Mapped /users/** -> ProxyExchangeHandlerFunction
2025-02-28 17:13:45 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2025-02-28 17:13:46 [] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-02-28 17:13:46 [] DEBUG i.n.u.i.InternalThreadLocalMap - -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2025-02-28 17:13:46 [] DEBUG i.n.u.i.InternalThreadLocalMap - -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2025-02-28 17:13:46 [] DEBUG io.netty.util.ResourceLeakDetector - -Dio.netty.leakDetection.level: simple
2025-02-28 17:13:46 [] DEBUG io.netty.util.ResourceLeakDetector - -Dio.netty.leakDetection.targetRecords: 4
2025-02-28 17:13:46 [] DEBUG i.n.handler.codec.compression.Brotli - brotli4j not in the classpath; Brotli support will be unavailable.
2025-02-28 17:13:46 [] DEBUG reactor.netty.tcp.TcpResources - [http] resources will use the default LoopResources: DefaultLoopResources {prefix=reactor-http, daemon=true, selectCount=12, workerCount=12}
2025-02-28 17:13:46 [] DEBUG reactor.netty.tcp.TcpResources - [http] resources will use the default ConnectionProvider: reactor.netty.resources.DefaultPooledConnectionProvider@581e7da1
2025-02-28 17:13:46 [] DEBUG r.netty.resources.DefaultLoopIOUring - Default io_uring support : false
2025-02-28 17:13:46 [] DEBUG r.netty.resources.DefaultLoopEpoll - Default Epoll support : false
2025-02-28 17:13:46 [] DEBUG r.netty.resources.DefaultLoopKQueue - Default KQueue support : false
2025-02-28 17:13:46 [] DEBUG i.n.c.MultithreadEventLoopGroup - -Dio.netty.eventLoopThreads: 24
2025-02-28 17:13:46 [] DEBUG i.n.u.concurrent.GlobalEventExecutor - -Dio.netty.globalEventExecutor.quietPeriodSeconds: 1
2025-02-28 17:13:46 [] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.noKeySetOptimization: false
2025-02-28 17:13:46 [] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.selectorAutoRebuildThreshold: 512
2025-02-28 17:13:46 [] DEBUG i.n.util.internal.PlatformDependent - org.jctools-core.MpscChunkedArrayQueue: available
2025-02-28 17:13:46 [] DEBUG io.netty.util.NetUtil - -Djava.net.preferIPv4Stack: false
2025-02-28 17:13:46 [] DEBUG io.netty.util.NetUtil - -Djava.net.preferIPv6Addresses: false
2025-02-28 17:13:46 [] DEBUG i.netty.util.NetUtilInitializations - Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2025-02-28 17:13:46 [] DEBUG io.netty.util.NetUtil - Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2025-02-28 17:13:46 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default ResolvedAddressTypes: IPV4_ONLY
2025-02-28 17:13:46 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Localhost address: localhost/127.0.0.1
2025-02-28 17:13:46 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Windows hostname: DESKTOP-P307093
2025-02-28 17:13:46 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default search domains: []
2025-02-28 17:13:46 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default UnixResolverOptions{ndots=1, timeout=5, attempts=16}
2025-02-28 17:13:46 [] DEBUG i.n.r.DefaultHostsFileEntriesResolver - -Dio.netty.hostsFileRefreshInterval: 0
2025-02-28 17:13:46 [] DEBUG i.n.r.d.DefaultDnsServerAddressStreamProvider - Default DNS servers: [/8.8.8.8:53, /4.2.2.2:53] (sun.net.dns.ResolverConfiguration)
2025-02-28 17:13:46 [] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-02-28 17:13:46 [] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-02-28 17:13:46 [] INFO  c.c.c.g.c.CommongatewayApplication - Started CommongatewayApplication in 4.775 seconds (process running for 5.923)
2025-02-28 17:53:16 [] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-02-28 17:53:16 [] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-02-28 17:53:16 [] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 3 ms
2025-02-28 17:53:16 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 17:53:16 [4531e635-4581-4814-95fe-f56c621651a7] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 17:53:16 [4531e635-4581-4814-95fe-f56c621651a7] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /users
2025-02-28 17:53:16 [4531e635-4581-4814-95fe-f56c621651a7] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔄 Sending Validation Request to: http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY&orgId=001
2025-02-28 17:53:16 [4531e635-4581-4814-95fe-f56c621651a7] DEBUG r.n.r.PooledConnectionProvider - Creating a new [http] client pool [PoolFactory{evictionInterval=PT0S, leasingStrategy=fifo, maxConnections=500, maxIdleTime=-1, maxLifeTime=-1, metricsEnabled=false, pendingAcquireMaxCount=1000, pendingAcquireTimeout=45000}] for [localhost/<unresolved>:8081]
2025-02-28 17:53:16 [4531e635-4581-4814-95fe-f56c621651a7] DEBUG io.netty.channel.DefaultChannelId - -Dio.netty.processId: 5032 (auto-detected)
2025-02-28 17:53:16 [4531e635-4581-4814-95fe-f56c621651a7] DEBUG io.netty.channel.DefaultChannelId - -Dio.netty.machineId: 00:15:5d:ff:fe:02:b5:1f (auto-detected)
2025-02-28 17:53:16 [4531e635-4581-4814-95fe-f56c621651a7] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.numHeapArenas: 24
2025-02-28 17:53:16 [4531e635-4581-4814-95fe-f56c621651a7] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.numDirectArenas: 24
2025-02-28 17:53:16 [4531e635-4581-4814-95fe-f56c621651a7] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.pageSize: 8192
2025-02-28 17:53:16 [4531e635-4581-4814-95fe-f56c621651a7] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxOrder: 9
2025-02-28 17:53:16 [4531e635-4581-4814-95fe-f56c621651a7] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.chunkSize: 4194304
2025-02-28 17:53:16 [4531e635-4581-4814-95fe-f56c621651a7] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.smallCacheSize: 256
2025-02-28 17:53:16 [4531e635-4581-4814-95fe-f56c621651a7] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.normalCacheSize: 64
2025-02-28 17:53:16 [4531e635-4581-4814-95fe-f56c621651a7] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2025-02-28 17:53:16 [4531e635-4581-4814-95fe-f56c621651a7] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.cacheTrimInterval: 8192
2025-02-28 17:53:16 [4531e635-4581-4814-95fe-f56c621651a7] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.cacheTrimIntervalMillis: 0
2025-02-28 17:53:16 [4531e635-4581-4814-95fe-f56c621651a7] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.useCacheForAllThreads: false
2025-02-28 17:53:16 [4531e635-4581-4814-95fe-f56c621651a7] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
2025-02-28 17:53:16 [4531e635-4581-4814-95fe-f56c621651a7] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.disableCacheFinalizersForFastThreadLocalThreads: false
2025-02-28 17:53:16 [4531e635-4581-4814-95fe-f56c621651a7] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.allocator.type: pooled
2025-02-28 17:53:16 [4531e635-4581-4814-95fe-f56c621651a7] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.threadLocalDirectBufferSize: 0
2025-02-28 17:53:16 [4531e635-4581-4814-95fe-f56c621651a7] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.maxThreadLocalCharBufferSize: 16384
2025-02-28 17:53:16 [] DEBUG r.n.r.PooledConnectionProvider - [f252947f] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 17:53:16 [] DEBUG io.netty.buffer.AbstractByteBuf - -Dio.netty.buffer.checkAccessible: true
2025-02-28 17:53:16 [] DEBUG io.netty.buffer.AbstractByteBuf - -Dio.netty.buffer.checkBounds: true
2025-02-28 17:53:16 [] DEBUG i.n.util.ResourceLeakDetectorFactory - Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@592d95fe
2025-02-28 17:53:16 [] DEBUG r.netty.transport.TransportConfig - [f252947f] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-28 17:53:16 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 17:53:16 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 17:53:16 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 17:53:16 [] DEBUG i.n.b.ChannelInitializerExtensions - -Dio.netty.bootstrap.extensions: null
2025-02-28 17:53:16 [] DEBUG r.netty.transport.TransportConnector - [f252947f] Connecting to [localhost/127.0.0.1:8081].
2025-02-28 17:53:16 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f252947f, L:/127.0.0.1:63202 - R:localhost/127.0.0.1:8081] Registering pool release on close event for channel
2025-02-28 17:53:16 [] DEBUG r.n.r.PooledConnectionProvider - [f252947f, L:/127.0.0.1:63202 - R:localhost/127.0.0.1:8081] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 17:53:16 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f252947f, L:/127.0.0.1:63202 - R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0xf252947f, L:/127.0.0.1:63202 - R:localhost/127.0.0.1:8081]}, [connected])
2025-02-28 17:53:16 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f252947f-1, L:/127.0.0.1:63202 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0xf252947f, L:/127.0.0.1:63202 - R:localhost/127.0.0.1:8081]}}, [configured])
2025-02-28 17:53:16 [] DEBUG r.n.http.client.HttpClientConnect - [f252947f-1, L:/127.0.0.1:63202 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY&orgId=001, method=GET}
2025-02-28 17:53:16 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f252947f-1, L:/127.0.0.1:63202 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xf252947f, L:/127.0.0.1:63202 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 17:53:16 [] DEBUG r.n.http.client.HttpClientOperations - [f252947f-1, L:/127.0.0.1:63202 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 17:53:16 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.maxCapacityPerThread: 4096
2025-02-28 17:53:16 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.ratio: 8
2025-02-28 17:53:16 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.chunkSize: 32
2025-02-28 17:53:16 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.blocking: false
2025-02-28 17:53:16 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.batchFastThreadLocalOnly: true
2025-02-28 17:53:16 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f252947f-1, L:/127.0.0.1:63202 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xf252947f, L:/127.0.0.1:63202 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 17:53:16 [] DEBUG i.n.handler.codec.compression.Zstd - zstd-jni not in the classpath; Zstd support will be unavailable.
2025-02-28 17:53:16 [] DEBUG r.n.http.client.HttpClientOperations - [f252947f-1, L:/127.0.0.1:63202 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 500 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
Connection: <filtered>
2025-02-28 17:53:16 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f252947f-1, L:/127.0.0.1:63202 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xf252947f, L:/127.0.0.1:63202 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 17:53:16 [] DEBUG reactor.netty.channel.FluxReceive - [f252947f-1, L:/127.0.0.1:63202 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-28 17:53:16 [] DEBUG r.n.http.client.HttpClientOperations - [f252947f-1, L:/127.0.0.1:63202 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 17:53:16 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f252947f, L:/127.0.0.1:63202 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xf252947f, L:/127.0.0.1:63202 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 17:53:16 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f252947f, L:/127.0.0.1:63202 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xf252947f, L:/127.0.0.1:63202 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 17:53:16 [] DEBUG r.n.r.PooledConnectionProvider - [f252947f, L:/127.0.0.1:63202 ! R:localhost/127.0.0.1:8081] Channel closed, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 17:53:16 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f252947f, L:/127.0.0.1:63202 ! R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0xf252947f, L:/127.0.0.1:63202 ! R:localhost/127.0.0.1:8081]}, [disconnecting])
2025-02-28 17:53:16 [4531e635-4581-4814-95fe-f56c621651a7] ERROR c.c.c.g.c.c.ValidationInterceptor - ⚠️ Error calling validation service: 500 Internal Server Error from GET http://localhost:8081/validate
org.springframework.web.reactive.function.client.WebClientResponseException$InternalServerError: 500 Internal Server Error from GET http://localhost:8081/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 500 INTERNAL_SERVER_ERROR from GET http://localhost:8081/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104)
		at reactor.core.publisher.Mono.block(Mono.java:1779)
		at com.citpl.common.gateway.commongateway.config.ValidationInterceptor.preHandle(ValidationInterceptor.java:65)
		at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:146)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1083)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
		at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at com.citpl.common.gateway.commongateway.filter.MDCFilter.doFilter(MDCFilter.java:37)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.cloud.gateway.server.mvc.filter.WeightCalculatorFilter.doFilter(WeightCalculatorFilter.java:229)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.cloud.gateway.server.mvc.filter.FormFilter.doFilter(FormFilter.java:93)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-28 17:53:16 [] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /error
2025-02-28 17:53:16 [] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔄 Sending Validation Request to: http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY&orgId=001
2025-02-28 17:53:16 [] DEBUG r.n.r.PooledConnectionProvider - [3977463d] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 17:53:16 [] DEBUG r.netty.transport.TransportConfig - [3977463d] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-28 17:53:16 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 17:53:16 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 17:53:16 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 17:53:16 [] DEBUG r.netty.transport.TransportConnector - [3977463d] Connecting to [localhost/127.0.0.1:8081].
2025-02-28 17:53:16 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [3977463d, L:/127.0.0.1:63203 - R:localhost/127.0.0.1:8081] Registering pool release on close event for channel
2025-02-28 17:53:16 [] DEBUG r.n.r.PooledConnectionProvider - [3977463d, L:/127.0.0.1:63203 - R:localhost/127.0.0.1:8081] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 17:53:16 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [3977463d, L:/127.0.0.1:63203 - R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x3977463d, L:/127.0.0.1:63203 - R:localhost/127.0.0.1:8081]}, [connected])
2025-02-28 17:53:16 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [3977463d-1, L:/127.0.0.1:63203 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0x3977463d, L:/127.0.0.1:63203 - R:localhost/127.0.0.1:8081]}}, [configured])
2025-02-28 17:53:16 [] DEBUG r.n.http.client.HttpClientConnect - [3977463d-1, L:/127.0.0.1:63203 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY&orgId=001, method=GET}
2025-02-28 17:53:16 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [3977463d-1, L:/127.0.0.1:63203 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x3977463d, L:/127.0.0.1:63203 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 17:53:16 [] DEBUG r.n.http.client.HttpClientOperations - [3977463d-1, L:/127.0.0.1:63203 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 17:53:16 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [3977463d-1, L:/127.0.0.1:63203 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x3977463d, L:/127.0.0.1:63203 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 17:53:16 [] DEBUG r.n.http.client.HttpClientOperations - [3977463d-1, L:/127.0.0.1:63203 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 500 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
Connection: <filtered>
2025-02-28 17:53:16 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [3977463d-1, L:/127.0.0.1:63203 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x3977463d, L:/127.0.0.1:63203 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 17:53:16 [] DEBUG reactor.netty.channel.FluxReceive - [3977463d-1, L:/127.0.0.1:63203 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-28 17:53:16 [] DEBUG r.n.http.client.HttpClientOperations - [3977463d-1, L:/127.0.0.1:63203 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 17:53:16 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [3977463d, L:/127.0.0.1:63203 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x3977463d, L:/127.0.0.1:63203 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 17:53:16 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [3977463d, L:/127.0.0.1:63203 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x3977463d, L:/127.0.0.1:63203 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 17:53:16 [] DEBUG r.n.r.PooledConnectionProvider - [3977463d, L:/127.0.0.1:63203 ! R:localhost/127.0.0.1:8081] Channel closed, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 17:53:16 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [3977463d, L:/127.0.0.1:63203 ! R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x3977463d, L:/127.0.0.1:63203 ! R:localhost/127.0.0.1:8081]}, [disconnecting])
2025-02-28 17:53:16 [] ERROR c.c.c.g.c.c.ValidationInterceptor - ⚠️ Error calling validation service: 500 Internal Server Error from GET http://localhost:8081/validate
org.springframework.web.reactive.function.client.WebClientResponseException$InternalServerError: 500 Internal Server Error from GET http://localhost:8081/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 500 INTERNAL_SERVER_ERROR from GET http://localhost:8081/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104)
		at reactor.core.publisher.Mono.block(Mono.java:1779)
		at com.citpl.common.gateway.commongateway.config.ValidationInterceptor.preHandle(ValidationInterceptor.java:65)
		at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:146)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1083)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
		at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:633)
		at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:411)
		at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:331)
		at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:268)
		at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:380)
		at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:208)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:151)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-28 17:56:54 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 17:56:54 [108153fe-7c8c-445b-930a-b093c857f389] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 17:56:54 [108153fe-7c8c-445b-930a-b093c857f389] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /users
2025-02-28 17:56:54 [108153fe-7c8c-445b-930a-b093c857f389] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔄 Sending Validation Request to: http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY&orgId=001
2025-02-28 17:56:54 [] DEBUG r.n.r.PooledConnectionProvider - [b0ccf313] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 17:56:54 [] DEBUG r.netty.transport.TransportConfig - [b0ccf313] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-28 17:56:54 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 17:56:54 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 17:56:54 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 17:56:54 [] DEBUG r.netty.transport.TransportConnector - [b0ccf313] Connecting to [localhost/127.0.0.1:8081].
2025-02-28 17:56:54 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b0ccf313, L:/127.0.0.1:63279 - R:localhost/127.0.0.1:8081] Registering pool release on close event for channel
2025-02-28 17:56:54 [] DEBUG r.n.r.PooledConnectionProvider - [b0ccf313, L:/127.0.0.1:63279 - R:localhost/127.0.0.1:8081] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 17:56:54 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b0ccf313, L:/127.0.0.1:63279 - R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0xb0ccf313, L:/127.0.0.1:63279 - R:localhost/127.0.0.1:8081]}, [connected])
2025-02-28 17:56:54 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b0ccf313-1, L:/127.0.0.1:63279 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0xb0ccf313, L:/127.0.0.1:63279 - R:localhost/127.0.0.1:8081]}}, [configured])
2025-02-28 17:56:54 [] DEBUG r.n.http.client.HttpClientConnect - [b0ccf313-1, L:/127.0.0.1:63279 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY&orgId=001, method=GET}
2025-02-28 17:56:54 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b0ccf313-1, L:/127.0.0.1:63279 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xb0ccf313, L:/127.0.0.1:63279 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 17:56:54 [] DEBUG r.n.http.client.HttpClientOperations - [b0ccf313-1, L:/127.0.0.1:63279 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 17:56:54 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b0ccf313-1, L:/127.0.0.1:63279 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xb0ccf313, L:/127.0.0.1:63279 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 17:56:54 [] DEBUG r.n.http.client.HttpClientOperations - [b0ccf313-1, L:/127.0.0.1:63279 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 500 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
Connection: <filtered>
2025-02-28 17:56:54 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b0ccf313-1, L:/127.0.0.1:63279 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xb0ccf313, L:/127.0.0.1:63279 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 17:56:54 [] DEBUG reactor.netty.channel.FluxReceive - [b0ccf313-1, L:/127.0.0.1:63279 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-28 17:56:54 [] DEBUG r.n.http.client.HttpClientOperations - [b0ccf313-1, L:/127.0.0.1:63279 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 17:56:54 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b0ccf313, L:/127.0.0.1:63279 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xb0ccf313, L:/127.0.0.1:63279 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 17:56:54 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b0ccf313, L:/127.0.0.1:63279 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xb0ccf313, L:/127.0.0.1:63279 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 17:56:54 [] DEBUG r.n.r.PooledConnectionProvider - [b0ccf313, L:/127.0.0.1:63279 ! R:localhost/127.0.0.1:8081] Channel closed, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 17:56:54 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b0ccf313, L:/127.0.0.1:63279 ! R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0xb0ccf313, L:/127.0.0.1:63279 ! R:localhost/127.0.0.1:8081]}, [disconnecting])
2025-02-28 17:56:54 [108153fe-7c8c-445b-930a-b093c857f389] ERROR c.c.c.g.c.c.ValidationInterceptor - ⚠️ Error calling validation service: 500 Internal Server Error from GET http://localhost:8081/validate
org.springframework.web.reactive.function.client.WebClientResponseException$InternalServerError: 500 Internal Server Error from GET http://localhost:8081/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 500 INTERNAL_SERVER_ERROR from GET http://localhost:8081/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104)
		at reactor.core.publisher.Mono.block(Mono.java:1779)
		at com.citpl.common.gateway.commongateway.config.ValidationInterceptor.preHandle(ValidationInterceptor.java:65)
		at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:146)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1083)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
		at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at com.citpl.common.gateway.commongateway.filter.MDCFilter.doFilter(MDCFilter.java:37)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.cloud.gateway.server.mvc.filter.WeightCalculatorFilter.doFilter(WeightCalculatorFilter.java:229)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.cloud.gateway.server.mvc.filter.FormFilter.doFilter(FormFilter.java:93)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-28 17:56:54 [] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /error
2025-02-28 17:56:54 [] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔄 Sending Validation Request to: http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY&orgId=001
2025-02-28 17:56:54 [] DEBUG r.n.r.PooledConnectionProvider - [3de0db34] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 17:56:54 [] DEBUG r.netty.transport.TransportConfig - [3de0db34] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-28 17:56:54 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 17:56:54 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 17:56:54 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 17:56:54 [] DEBUG r.netty.transport.TransportConnector - [3de0db34] Connecting to [localhost/127.0.0.1:8081].
2025-02-28 17:56:54 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [3de0db34, L:/127.0.0.1:63280 - R:localhost/127.0.0.1:8081] Registering pool release on close event for channel
2025-02-28 17:56:54 [] DEBUG r.n.r.PooledConnectionProvider - [3de0db34, L:/127.0.0.1:63280 - R:localhost/127.0.0.1:8081] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 17:56:54 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [3de0db34, L:/127.0.0.1:63280 - R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x3de0db34, L:/127.0.0.1:63280 - R:localhost/127.0.0.1:8081]}, [connected])
2025-02-28 17:56:54 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [3de0db34-1, L:/127.0.0.1:63280 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0x3de0db34, L:/127.0.0.1:63280 - R:localhost/127.0.0.1:8081]}}, [configured])
2025-02-28 17:56:54 [] DEBUG r.n.http.client.HttpClientConnect - [3de0db34-1, L:/127.0.0.1:63280 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY&orgId=001, method=GET}
2025-02-28 17:56:54 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [3de0db34-1, L:/127.0.0.1:63280 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x3de0db34, L:/127.0.0.1:63280 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 17:56:54 [] DEBUG r.n.http.client.HttpClientOperations - [3de0db34-1, L:/127.0.0.1:63280 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 17:56:54 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [3de0db34-1, L:/127.0.0.1:63280 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x3de0db34, L:/127.0.0.1:63280 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 17:56:54 [] DEBUG r.n.http.client.HttpClientOperations - [3de0db34-1, L:/127.0.0.1:63280 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 500 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
Connection: <filtered>
2025-02-28 17:56:54 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [3de0db34-1, L:/127.0.0.1:63280 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x3de0db34, L:/127.0.0.1:63280 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 17:56:54 [] DEBUG reactor.netty.channel.FluxReceive - [3de0db34-1, L:/127.0.0.1:63280 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-28 17:56:54 [] DEBUG r.n.http.client.HttpClientOperations - [3de0db34-1, L:/127.0.0.1:63280 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 17:56:54 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [3de0db34, L:/127.0.0.1:63280 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x3de0db34, L:/127.0.0.1:63280 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 17:56:54 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [3de0db34, L:/127.0.0.1:63280 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x3de0db34, L:/127.0.0.1:63280 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 17:56:54 [] DEBUG r.n.r.PooledConnectionProvider - [3de0db34, L:/127.0.0.1:63280 ! R:localhost/127.0.0.1:8081] Channel closed, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 17:56:54 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [3de0db34, L:/127.0.0.1:63280 ! R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x3de0db34, L:/127.0.0.1:63280 ! R:localhost/127.0.0.1:8081]}, [disconnecting])
2025-02-28 17:56:54 [] ERROR c.c.c.g.c.c.ValidationInterceptor - ⚠️ Error calling validation service: 500 Internal Server Error from GET http://localhost:8081/validate
org.springframework.web.reactive.function.client.WebClientResponseException$InternalServerError: 500 Internal Server Error from GET http://localhost:8081/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 500 INTERNAL_SERVER_ERROR from GET http://localhost:8081/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104)
		at reactor.core.publisher.Mono.block(Mono.java:1779)
		at com.citpl.common.gateway.commongateway.config.ValidationInterceptor.preHandle(ValidationInterceptor.java:65)
		at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:146)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1083)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
		at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:633)
		at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:411)
		at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:331)
		at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:268)
		at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:380)
		at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:208)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:151)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-28 17:56:56 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 17:56:56 [72865011-330d-4ee1-ba9f-b20081737e14] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 17:56:56 [72865011-330d-4ee1-ba9f-b20081737e14] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /users
2025-02-28 17:56:56 [72865011-330d-4ee1-ba9f-b20081737e14] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔄 Sending Validation Request to: http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY&orgId=001
2025-02-28 17:56:56 [] DEBUG r.n.r.PooledConnectionProvider - [255f59da] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 17:56:56 [] DEBUG r.netty.transport.TransportConfig - [255f59da] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-28 17:56:56 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 17:56:56 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 17:56:56 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 17:56:56 [] DEBUG r.netty.transport.TransportConnector - [255f59da] Connecting to [localhost/127.0.0.1:8081].
2025-02-28 17:56:56 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [255f59da, L:/127.0.0.1:63289 - R:localhost/127.0.0.1:8081] Registering pool release on close event for channel
2025-02-28 17:56:56 [] DEBUG r.n.r.PooledConnectionProvider - [255f59da, L:/127.0.0.1:63289 - R:localhost/127.0.0.1:8081] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 17:56:56 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [255f59da, L:/127.0.0.1:63289 - R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x255f59da, L:/127.0.0.1:63289 - R:localhost/127.0.0.1:8081]}, [connected])
2025-02-28 17:56:56 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [255f59da-1, L:/127.0.0.1:63289 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0x255f59da, L:/127.0.0.1:63289 - R:localhost/127.0.0.1:8081]}}, [configured])
2025-02-28 17:56:56 [] DEBUG r.n.http.client.HttpClientConnect - [255f59da-1, L:/127.0.0.1:63289 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY&orgId=001, method=GET}
2025-02-28 17:56:56 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [255f59da-1, L:/127.0.0.1:63289 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x255f59da, L:/127.0.0.1:63289 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 17:56:56 [] DEBUG r.n.http.client.HttpClientOperations - [255f59da-1, L:/127.0.0.1:63289 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 17:56:56 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [255f59da-1, L:/127.0.0.1:63289 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x255f59da, L:/127.0.0.1:63289 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 17:56:56 [] DEBUG r.n.http.client.HttpClientOperations - [255f59da-1, L:/127.0.0.1:63289 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 500 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
Connection: <filtered>
2025-02-28 17:56:56 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [255f59da-1, L:/127.0.0.1:63289 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x255f59da, L:/127.0.0.1:63289 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 17:56:56 [] DEBUG reactor.netty.channel.FluxReceive - [255f59da-1, L:/127.0.0.1:63289 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-28 17:56:56 [] DEBUG r.n.http.client.HttpClientOperations - [255f59da-1, L:/127.0.0.1:63289 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 17:56:56 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [255f59da, L:/127.0.0.1:63289 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x255f59da, L:/127.0.0.1:63289 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 17:56:56 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [255f59da, L:/127.0.0.1:63289 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x255f59da, L:/127.0.0.1:63289 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 17:56:56 [72865011-330d-4ee1-ba9f-b20081737e14] ERROR c.c.c.g.c.c.ValidationInterceptor - ⚠️ Error calling validation service: 500 Internal Server Error from GET http://localhost:8081/validate
org.springframework.web.reactive.function.client.WebClientResponseException$InternalServerError: 500 Internal Server Error from GET http://localhost:8081/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 500 INTERNAL_SERVER_ERROR from GET http://localhost:8081/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104)
		at reactor.core.publisher.Mono.block(Mono.java:1779)
		at com.citpl.common.gateway.commongateway.config.ValidationInterceptor.preHandle(ValidationInterceptor.java:65)
		at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:146)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1083)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
		at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at com.citpl.common.gateway.commongateway.filter.MDCFilter.doFilter(MDCFilter.java:37)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.cloud.gateway.server.mvc.filter.WeightCalculatorFilter.doFilter(WeightCalculatorFilter.java:229)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.cloud.gateway.server.mvc.filter.FormFilter.doFilter(FormFilter.java:93)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-28 17:56:56 [] DEBUG r.n.r.PooledConnectionProvider - [255f59da, L:/127.0.0.1:63289 ! R:localhost/127.0.0.1:8081] Channel closed, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 17:56:56 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [255f59da, L:/127.0.0.1:63289 ! R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x255f59da, L:/127.0.0.1:63289 ! R:localhost/127.0.0.1:8081]}, [disconnecting])
2025-02-28 17:56:56 [] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /error
2025-02-28 17:56:56 [] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔄 Sending Validation Request to: http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY&orgId=001
2025-02-28 17:56:56 [] DEBUG r.n.r.PooledConnectionProvider - [47376c22] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 17:56:56 [] DEBUG r.netty.transport.TransportConfig - [47376c22] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-28 17:56:56 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 17:56:56 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 17:56:56 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-28 17:56:56 [] DEBUG r.netty.transport.TransportConnector - [47376c22] Connecting to [localhost/127.0.0.1:8081].
2025-02-28 17:56:56 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [47376c22, L:/127.0.0.1:63290 - R:localhost/127.0.0.1:8081] Registering pool release on close event for channel
2025-02-28 17:56:56 [] DEBUG r.n.r.PooledConnectionProvider - [47376c22, L:/127.0.0.1:63290 - R:localhost/127.0.0.1:8081] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 17:56:56 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [47376c22, L:/127.0.0.1:63290 - R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x47376c22, L:/127.0.0.1:63290 - R:localhost/127.0.0.1:8081]}, [connected])
2025-02-28 17:56:56 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [47376c22-1, L:/127.0.0.1:63290 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0x47376c22, L:/127.0.0.1:63290 - R:localhost/127.0.0.1:8081]}}, [configured])
2025-02-28 17:56:56 [] DEBUG r.n.http.client.HttpClientConnect - [47376c22-1, L:/127.0.0.1:63290 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY&orgId=001, method=GET}
2025-02-28 17:56:56 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [47376c22-1, L:/127.0.0.1:63290 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x47376c22, L:/127.0.0.1:63290 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-28 17:56:56 [] DEBUG r.n.http.client.HttpClientOperations - [47376c22-1, L:/127.0.0.1:63290 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-28 17:56:56 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [47376c22-1, L:/127.0.0.1:63290 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x47376c22, L:/127.0.0.1:63290 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-28 17:56:56 [] DEBUG r.n.http.client.HttpClientOperations - [47376c22-1, L:/127.0.0.1:63290 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 500 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
Connection: <filtered>
2025-02-28 17:56:56 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [47376c22-1, L:/127.0.0.1:63290 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x47376c22, L:/127.0.0.1:63290 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-28 17:56:56 [] DEBUG reactor.netty.channel.FluxReceive - [47376c22-1, L:/127.0.0.1:63290 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-28 17:56:56 [] DEBUG r.n.http.client.HttpClientOperations - [47376c22-1, L:/127.0.0.1:63290 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-28 17:56:56 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [47376c22, L:/127.0.0.1:63290 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x47376c22, L:/127.0.0.1:63290 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-28 17:56:56 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [47376c22, L:/127.0.0.1:63290 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x47376c22, L:/127.0.0.1:63290 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-28 17:56:56 [] DEBUG r.n.r.PooledConnectionProvider - [47376c22, L:/127.0.0.1:63290 ! R:localhost/127.0.0.1:8081] Channel closed, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-28 17:56:56 [] ERROR c.c.c.g.c.c.ValidationInterceptor - ⚠️ Error calling validation service: 500 Internal Server Error from GET http://localhost:8081/validate
org.springframework.web.reactive.function.client.WebClientResponseException$InternalServerError: 500 Internal Server Error from GET http://localhost:8081/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 500 INTERNAL_SERVER_ERROR from GET http://localhost:8081/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104)
		at reactor.core.publisher.Mono.block(Mono.java:1779)
		at com.citpl.common.gateway.commongateway.config.ValidationInterceptor.preHandle(ValidationInterceptor.java:65)
		at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:146)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1083)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
		at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:633)
		at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:411)
		at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:331)
		at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:268)
		at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:380)
		at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:208)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:151)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-28 17:56:56 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [47376c22, L:/127.0.0.1:63290 ! R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x47376c22, L:/127.0.0.1:63290 ! R:localhost/127.0.0.1:8081]}, [disconnecting])
2025-02-28 17:57:05 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 17:57:05 [ed4bea9d-871a-472f-ba24-a1fb188ca03e] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 17:57:05 [ed4bea9d-871a-472f-ba24-a1fb188ca03e] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /users
2025-02-28 17:57:05 [ed4bea9d-871a-472f-ba24-a1fb188ca03e] WARN  c.c.c.g.c.c.ValidationInterceptor - ❌ Missing X-Validation-Token or X-Org-Id!
2025-02-28 17:57:05 [] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /error
2025-02-28 17:57:05 [] WARN  c.c.c.g.c.c.ValidationInterceptor - ❌ Missing X-Validation-Token or X-Org-Id!
2025-02-28 17:57:07 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 17:57:07 [d5b10639-d158-4e92-9ccb-8c82d236d80b] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 17:57:07 [d5b10639-d158-4e92-9ccb-8c82d236d80b] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /users
2025-02-28 17:57:07 [d5b10639-d158-4e92-9ccb-8c82d236d80b] WARN  c.c.c.g.c.c.ValidationInterceptor - ❌ Missing X-Validation-Token or X-Org-Id!
2025-02-28 17:57:07 [] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /error
2025-02-28 17:57:07 [] WARN  c.c.c.g.c.c.ValidationInterceptor - ❌ Missing X-Validation-Token or X-Org-Id!
2025-02-28 17:57:42 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-28 17:57:42 [87e9413d-15fb-412c-9a9f-7ae89ec9e320] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-28 17:57:42 [87e9413d-15fb-412c-9a9f-7ae89ec9e320] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /users
2025-02-28 17:57:42 [87e9413d-15fb-412c-9a9f-7ae89ec9e320] WARN  c.c.c.g.c.c.ValidationInterceptor - ❌ Missing X-Validation-Token or X-Org-Id!
2025-02-28 17:57:42 [] INFO  c.c.c.g.c.c.ValidationInterceptor - 🔍 Intercepting Request: [GET] /error
2025-02-28 17:57:42 [] WARN  c.c.c.g.c.c.ValidationInterceptor - ❌ Missing X-Validation-Token or X-Org-Id!
