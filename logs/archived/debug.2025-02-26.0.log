2025-02-26 18:19:07 [] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-02-26 18:19:07 [] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-02-26 18:19:07 [] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 76 ms
2025-02-26 18:19:07 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-26 18:19:07 [ef06cca9-a621-4b2c-bbd5-41488a32aad6] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-26 18:19:08 [ef06cca9-a621-4b2c-bbd5-41488a32aad6] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-26 18:19:08 [ef06cca9-a621-4b2c-bbd5-41488a32aad6] INFO  c.c.c.g.c.config.RouterConfiguration - Authorized Request!
2025-02-26 18:19:08 [ef06cca9-a621-4b2c-bbd5-41488a32aad6] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [GET] /users
2025-02-26 18:19:08 [ef06cca9-a621-4b2c-bbd5-41488a32aad6] DEBUG r.n.r.PooledConnectionProvider - Creating a new [http] client pool [PoolFactory{evictionInterval=PT0S, leasingStrategy=fifo, maxConnections=500, maxIdleTime=-1, maxLifeTime=-1, metricsEnabled=false, pendingAcquireMaxCount=1000, pendingAcquireTimeout=45000}] for [localhost/<unresolved>:8081]
2025-02-26 18:19:08 [ef06cca9-a621-4b2c-bbd5-41488a32aad6] DEBUG io.netty.channel.DefaultChannelId - -Dio.netty.processId: 38628 (auto-detected)
2025-02-26 18:19:08 [ef06cca9-a621-4b2c-bbd5-41488a32aad6] DEBUG io.netty.channel.DefaultChannelId - -Dio.netty.machineId: a0:d3:65:ff:fe:5e:b0:28 (auto-detected)
2025-02-26 18:19:08 [ef06cca9-a621-4b2c-bbd5-41488a32aad6] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.numHeapArenas: 24
2025-02-26 18:19:08 [ef06cca9-a621-4b2c-bbd5-41488a32aad6] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.numDirectArenas: 24
2025-02-26 18:19:08 [ef06cca9-a621-4b2c-bbd5-41488a32aad6] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.pageSize: 8192
2025-02-26 18:19:08 [ef06cca9-a621-4b2c-bbd5-41488a32aad6] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxOrder: 9
2025-02-26 18:19:08 [ef06cca9-a621-4b2c-bbd5-41488a32aad6] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.chunkSize: 4194304
2025-02-26 18:19:08 [ef06cca9-a621-4b2c-bbd5-41488a32aad6] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.smallCacheSize: 256
2025-02-26 18:19:08 [ef06cca9-a621-4b2c-bbd5-41488a32aad6] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.normalCacheSize: 64
2025-02-26 18:19:08 [ef06cca9-a621-4b2c-bbd5-41488a32aad6] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2025-02-26 18:19:08 [ef06cca9-a621-4b2c-bbd5-41488a32aad6] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.cacheTrimInterval: 8192
2025-02-26 18:19:08 [ef06cca9-a621-4b2c-bbd5-41488a32aad6] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.cacheTrimIntervalMillis: 0
2025-02-26 18:19:08 [ef06cca9-a621-4b2c-bbd5-41488a32aad6] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.useCacheForAllThreads: false
2025-02-26 18:19:08 [ef06cca9-a621-4b2c-bbd5-41488a32aad6] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
2025-02-26 18:19:08 [ef06cca9-a621-4b2c-bbd5-41488a32aad6] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.disableCacheFinalizersForFastThreadLocalThreads: false
2025-02-26 18:19:08 [ef06cca9-a621-4b2c-bbd5-41488a32aad6] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.allocator.type: pooled
2025-02-26 18:19:08 [ef06cca9-a621-4b2c-bbd5-41488a32aad6] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.threadLocalDirectBufferSize: 0
2025-02-26 18:19:08 [ef06cca9-a621-4b2c-bbd5-41488a32aad6] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.maxThreadLocalCharBufferSize: 16384
2025-02-26 18:19:08 [] DEBUG r.n.r.PooledConnectionProvider - [4d12f0ed] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-26 18:19:08 [] DEBUG io.netty.buffer.AbstractByteBuf - -Dio.netty.buffer.checkAccessible: true
2025-02-26 18:19:08 [] DEBUG io.netty.buffer.AbstractByteBuf - -Dio.netty.buffer.checkBounds: true
2025-02-26 18:19:08 [] DEBUG i.n.util.ResourceLeakDetectorFactory - Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@63dbbe2b
2025-02-26 18:19:08 [] DEBUG r.netty.transport.TransportConfig - [4d12f0ed] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-26 18:19:08 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-26 18:19:08 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-26 18:19:08 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-26 18:19:08 [] DEBUG i.n.b.ChannelInitializerExtensions - -Dio.netty.bootstrap.extensions: null
2025-02-26 18:19:08 [] DEBUG r.netty.transport.TransportConnector - [4d12f0ed] Connecting to [localhost/127.0.0.1:8081].
2025-02-26 18:19:08 [] DEBUG r.netty.transport.TransportConnector - [4d12f0ed] Connect attempt to [localhost/127.0.0.1:8081] failed.
io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: no further information: localhost/127.0.0.1:8081
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:946)
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:336)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:339)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:776)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-26 18:19:08 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.web.reactive.function.client.WebClientRequestException: Connection refused: no further information: localhost/127.0.0.1:8081] with root cause
java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:946)
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:336)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:339)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:776)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-26 18:19:08 [] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-26 18:19:08 [] INFO  c.c.c.g.c.config.RouterConfiguration - Authorized Request!
2025-02-26 18:19:08 [] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [GET] /error
2025-02-26 18:19:08 [] DEBUG r.n.r.PooledConnectionProvider - [36981afa] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-26 18:19:08 [] DEBUG r.netty.transport.TransportConfig - [36981afa] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-26 18:19:08 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-26 18:19:08 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-26 18:19:08 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-26 18:19:08 [] DEBUG r.netty.transport.TransportConnector - [36981afa] Connecting to [localhost/127.0.0.1:8081].
2025-02-26 18:19:08 [] DEBUG r.netty.transport.TransportConnector - [36981afa] Connect attempt to [localhost/127.0.0.1:8081] failed.
io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: no further information: localhost/127.0.0.1:8081
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:946)
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:336)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:339)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:776)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-26 18:19:08 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] threw exception
java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:946)
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:336)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:339)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:776)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-26 18:19:08 [] ERROR o.a.c.c.C.[Tomcat].[localhost] - Exception Processing [ErrorPage[errorCode=0, location=/error]]
jakarta.servlet.ServletException: Request processing failed: org.springframework.web.reactive.function.client.WebClientRequestException: Connection refused: no further information: localhost/127.0.0.1:8081
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1022)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:633)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:411)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:331)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:268)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:380)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:208)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:285)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:149)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.web.reactive.function.client.WebClientRequestException: Connection refused: no further information: localhost/127.0.0.1:8081
	at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:137)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ Request to GET http://localhost:8081/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:137)
		at reactor.core.publisher.MonoErrorSupplied.subscribe(MonoErrorSupplied.java:55)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.MonoNext$NextSubscriber.onError(MonoNext.java:93)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onError(MonoFlatMapMany.java:205)
		at reactor.core.publisher.SerializedSubscriber.onError(SerializedSubscriber.java:124)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.whenError(FluxRetryWhen.java:229)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenOtherSubscriber.onError(FluxRetryWhen.java:279)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onError(FluxContextWrite.java:121)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.maybeOnError(FluxConcatMapNoPrefetch.java:327)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onNext(FluxConcatMapNoPrefetch.java:212)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.SinkManyEmitterProcessor.drain(SinkManyEmitterProcessor.java:476)
		at reactor.core.publisher.SinkManyEmitterProcessor$EmitterInner.drainParent(SinkManyEmitterProcessor.java:620)
		at reactor.core.publisher.FluxPublish$PubSubInner.request(FluxPublish.java:874)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
		at reactor.core.publisher.Operators$DeferredSubscription.request(Operators.java:1743)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.onError(FluxRetryWhen.java:196)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:205)
		at reactor.netty.http.client.HttpClientConnect$MonoHttpConnect$ClientTransportSubscriber.onError(HttpClientConnect.java:318)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:205)
		at reactor.netty.resources.DefaultPooledConnectionProvider$DisposableAcquire.onError(DefaultPooledConnectionProvider.java:174)
		at reactor.netty.internal.shaded.reactor.pool.AbstractPool$Borrower.fail(AbstractPool.java:479)
		at reactor.netty.internal.shaded.reactor.pool.SimpleDequePool.lambda$drainLoop$9(SimpleDequePool.java:442)
		at reactor.core.publisher.FluxDoOnEach$DoOnEachSubscriber.onError(FluxDoOnEach.java:186)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:205)
		at reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnectionAllocator$PooledConnectionInitializer.onError(DefaultPooledConnectionProvider.java:593)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.secondError(MonoFlatMap.java:241)
		at reactor.core.publisher.MonoFlatMap$FlatMapInner.onError(MonoFlatMap.java:315)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:106)
		at reactor.core.publisher.Operators.error(Operators.java:198)
		at reactor.core.publisher.MonoError.subscribe(MonoError.java:53)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
		at reactor.netty.transport.TransportConnector$MonoChannelPromise.tryFailure(TransportConnector.java:576)
		at reactor.netty.transport.TransportConnector$MonoChannelPromise.setFailure(TransportConnector.java:522)
		at reactor.netty.transport.TransportConnector.lambda$doConnect$7(TransportConnector.java:261)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:583)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:559)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
		at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:629)
		at io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:118)
		at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.fulfillConnectPromise(AbstractNioChannel.java:326)
		at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:342)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:776)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104)
		at reactor.core.publisher.Mono.block(Mono.java:1779)
		at com.citpl.common.gateway.commongateway.config.RouterConfiguration.lambda$dynamicRouting$2(RouterConfiguration.java:63)
		at org.springframework.web.servlet.function.HandlerFilterFunction.lambda$ofErrorHandler$5(HandlerFilterFunction.java:114)
		at org.springframework.web.servlet.function.HandlerFilterFunction.lambda$andThen$0(HandlerFilterFunction.java:58)
		at org.springframework.web.servlet.function.HandlerFilterFunction.lambda$ofRequestProcessor$3(HandlerFilterFunction.java:83)
		at org.springframework.web.servlet.function.HandlerFilterFunction.lambda$andThen$1(HandlerFilterFunction.java:59)
		at org.springframework.web.servlet.function.HandlerFilterFunction.lambda$apply$2(HandlerFilterFunction.java:70)
		at org.springframework.web.servlet.function.support.HandlerFunctionAdapter.handle(HandlerFunctionAdapter.java:108)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
		at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:633)
		at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:411)
		at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:331)
		at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:268)
		at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:380)
		at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:208)
		at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:285)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:149)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: no further information: localhost/127.0.0.1:8081
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:946)
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:336)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:339)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:776)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-26 18:19:28 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-26 18:19:28 [0664ef83-8d66-4259-97d3-a864082ae6cd] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-26 18:19:28 [0664ef83-8d66-4259-97d3-a864082ae6cd] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-26 18:19:28 [0664ef83-8d66-4259-97d3-a864082ae6cd] INFO  c.c.c.g.c.config.RouterConfiguration - Authorized Request!
2025-02-26 18:19:28 [0664ef83-8d66-4259-97d3-a864082ae6cd] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [GET] /users
2025-02-26 18:19:28 [] DEBUG r.n.r.PooledConnectionProvider - [1b6132bc] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-26 18:19:28 [] DEBUG r.netty.transport.TransportConfig - [1b6132bc] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-26 18:19:28 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-26 18:19:28 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-26 18:19:28 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-26 18:19:28 [] DEBUG r.netty.transport.TransportConnector - [1b6132bc] Connecting to [localhost/127.0.0.1:8081].
2025-02-26 18:19:28 [] DEBUG r.netty.transport.TransportConnector - [1b6132bc] Connect attempt to [localhost/127.0.0.1:8081] failed.
io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: no further information: localhost/127.0.0.1:8081
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:946)
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:336)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:339)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:776)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-26 18:19:28 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.web.reactive.function.client.WebClientRequestException: Connection refused: no further information: localhost/127.0.0.1:8081] with root cause
java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:946)
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:336)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:339)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:776)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-26 18:19:28 [] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-26 18:19:28 [] INFO  c.c.c.g.c.config.RouterConfiguration - Authorized Request!
2025-02-26 18:19:28 [] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [GET] /error
2025-02-26 18:19:28 [] DEBUG r.n.r.PooledConnectionProvider - [5802e5a4] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-26 18:19:28 [] DEBUG r.netty.transport.TransportConfig - [5802e5a4] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-26 18:19:28 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-26 18:19:28 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-26 18:19:28 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-26 18:19:28 [] DEBUG r.netty.transport.TransportConnector - [5802e5a4] Connecting to [localhost/127.0.0.1:8081].
2025-02-26 18:19:28 [] DEBUG r.netty.transport.TransportConnector - [5802e5a4] Connect attempt to [localhost/127.0.0.1:8081] failed.
io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: no further information: localhost/127.0.0.1:8081
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:946)
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:336)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:339)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:776)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-26 18:19:28 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] threw exception
java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:946)
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:336)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:339)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:776)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-26 18:19:28 [] ERROR o.a.c.c.C.[Tomcat].[localhost] - Exception Processing [ErrorPage[errorCode=0, location=/error]]
jakarta.servlet.ServletException: Request processing failed: org.springframework.web.reactive.function.client.WebClientRequestException: Connection refused: no further information: localhost/127.0.0.1:8081
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1022)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:633)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:411)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:331)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:268)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:380)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:208)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:285)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:149)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.web.reactive.function.client.WebClientRequestException: Connection refused: no further information: localhost/127.0.0.1:8081
	at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:137)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ Request to GET http://localhost:8081/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:137)
		at reactor.core.publisher.MonoErrorSupplied.subscribe(MonoErrorSupplied.java:55)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.MonoNext$NextSubscriber.onError(MonoNext.java:93)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onError(MonoFlatMapMany.java:205)
		at reactor.core.publisher.SerializedSubscriber.onError(SerializedSubscriber.java:124)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.whenError(FluxRetryWhen.java:229)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenOtherSubscriber.onError(FluxRetryWhen.java:279)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onError(FluxContextWrite.java:121)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.maybeOnError(FluxConcatMapNoPrefetch.java:327)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onNext(FluxConcatMapNoPrefetch.java:212)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.SinkManyEmitterProcessor.drain(SinkManyEmitterProcessor.java:476)
		at reactor.core.publisher.SinkManyEmitterProcessor$EmitterInner.drainParent(SinkManyEmitterProcessor.java:620)
		at reactor.core.publisher.FluxPublish$PubSubInner.request(FluxPublish.java:874)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
		at reactor.core.publisher.Operators$DeferredSubscription.request(Operators.java:1743)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.onError(FluxRetryWhen.java:196)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:205)
		at reactor.netty.http.client.HttpClientConnect$MonoHttpConnect$ClientTransportSubscriber.onError(HttpClientConnect.java:318)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:205)
		at reactor.netty.resources.DefaultPooledConnectionProvider$DisposableAcquire.onError(DefaultPooledConnectionProvider.java:174)
		at reactor.netty.internal.shaded.reactor.pool.AbstractPool$Borrower.fail(AbstractPool.java:479)
		at reactor.netty.internal.shaded.reactor.pool.SimpleDequePool.lambda$drainLoop$9(SimpleDequePool.java:442)
		at reactor.core.publisher.FluxDoOnEach$DoOnEachSubscriber.onError(FluxDoOnEach.java:186)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:205)
		at reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnectionAllocator$PooledConnectionInitializer.onError(DefaultPooledConnectionProvider.java:593)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.secondError(MonoFlatMap.java:241)
		at reactor.core.publisher.MonoFlatMap$FlatMapInner.onError(MonoFlatMap.java:315)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:106)
		at reactor.core.publisher.Operators.error(Operators.java:198)
		at reactor.core.publisher.MonoError.subscribe(MonoError.java:53)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
		at reactor.netty.transport.TransportConnector$MonoChannelPromise.tryFailure(TransportConnector.java:576)
		at reactor.netty.transport.TransportConnector$MonoChannelPromise.setFailure(TransportConnector.java:522)
		at reactor.netty.transport.TransportConnector.lambda$doConnect$7(TransportConnector.java:261)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:583)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:559)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
		at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:629)
		at io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:118)
		at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.fulfillConnectPromise(AbstractNioChannel.java:326)
		at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:342)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:776)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104)
		at reactor.core.publisher.Mono.block(Mono.java:1779)
		at com.citpl.common.gateway.commongateway.config.RouterConfiguration.lambda$dynamicRouting$2(RouterConfiguration.java:63)
		at org.springframework.web.servlet.function.HandlerFilterFunction.lambda$ofErrorHandler$5(HandlerFilterFunction.java:114)
		at org.springframework.web.servlet.function.HandlerFilterFunction.lambda$andThen$0(HandlerFilterFunction.java:58)
		at org.springframework.web.servlet.function.HandlerFilterFunction.lambda$ofRequestProcessor$3(HandlerFilterFunction.java:83)
		at org.springframework.web.servlet.function.HandlerFilterFunction.lambda$andThen$1(HandlerFilterFunction.java:59)
		at org.springframework.web.servlet.function.HandlerFilterFunction.lambda$apply$2(HandlerFilterFunction.java:70)
		at org.springframework.web.servlet.function.support.HandlerFunctionAdapter.handle(HandlerFunctionAdapter.java:108)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
		at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:633)
		at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:411)
		at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:331)
		at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:268)
		at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:380)
		at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:208)
		at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:285)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:149)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: no further information: localhost/127.0.0.1:8081
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:946)
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:336)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:339)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:776)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-26 18:19:41 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-26 18:19:41 [bd34e329-ae09-4795-bbf2-195397088ec4] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-26 18:19:41 [bd34e329-ae09-4795-bbf2-195397088ec4] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-26 18:19:41 [bd34e329-ae09-4795-bbf2-195397088ec4] INFO  c.c.c.g.c.config.RouterConfiguration - Authorized Request!
2025-02-26 18:19:41 [bd34e329-ae09-4795-bbf2-195397088ec4] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [GET] /users
2025-02-26 18:19:41 [] DEBUG r.n.r.PooledConnectionProvider - [ce6c126f] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-26 18:19:41 [] DEBUG r.netty.transport.TransportConfig - [ce6c126f] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-26 18:19:41 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-26 18:19:41 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-26 18:19:41 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-26 18:19:41 [] DEBUG r.netty.transport.TransportConnector - [ce6c126f] Connecting to [localhost/127.0.0.1:8081].
2025-02-26 18:19:41 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [ce6c126f, L:/127.0.0.1:58046 - R:localhost/127.0.0.1:8081] Registering pool release on close event for channel
2025-02-26 18:19:41 [] DEBUG r.n.r.PooledConnectionProvider - [ce6c126f, L:/127.0.0.1:58046 - R:localhost/127.0.0.1:8081] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-26 18:19:41 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [ce6c126f, L:/127.0.0.1:58046 - R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0xce6c126f, L:/127.0.0.1:58046 - R:localhost/127.0.0.1:8081]}, [connected])
2025-02-26 18:19:41 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [ce6c126f-1, L:/127.0.0.1:58046 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0xce6c126f, L:/127.0.0.1:58046 - R:localhost/127.0.0.1:8081]}}, [configured])
2025-02-26 18:19:41 [] DEBUG r.n.http.client.HttpClientConnect - [ce6c126f-1, L:/127.0.0.1:58046 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate, method=GET}
2025-02-26 18:19:41 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [ce6c126f-1, L:/127.0.0.1:58046 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xce6c126f, L:/127.0.0.1:58046 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-26 18:19:41 [] DEBUG r.n.http.client.HttpClientOperations - [ce6c126f-1, L:/127.0.0.1:58046 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-26 18:19:41 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.maxCapacityPerThread: 4096
2025-02-26 18:19:41 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.ratio: 8
2025-02-26 18:19:41 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.chunkSize: 32
2025-02-26 18:19:41 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.blocking: false
2025-02-26 18:19:41 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.batchFastThreadLocalOnly: true
2025-02-26 18:19:41 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [ce6c126f-1, L:/127.0.0.1:58046 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xce6c126f, L:/127.0.0.1:58046 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-26 18:19:41 [] DEBUG i.n.handler.codec.compression.Zstd - zstd-jni not in the classpath; Zstd support will be unavailable.
2025-02-26 18:19:41 [] DEBUG r.n.http.client.HttpClientOperations - [ce6c126f-1, L:/127.0.0.1:58046 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-26 18:19:41 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [ce6c126f-1, L:/127.0.0.1:58046 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xce6c126f, L:/127.0.0.1:58046 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-26 18:19:42 [] DEBUG reactor.netty.channel.FluxReceive - [ce6c126f-1, L:/127.0.0.1:58046 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-26 18:19:42 [] DEBUG r.n.http.client.HttpClientOperations - [ce6c126f-1, L:/127.0.0.1:58046 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-26 18:19:42 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [ce6c126f, L:/127.0.0.1:58046 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xce6c126f, L:/127.0.0.1:58046 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-26 18:19:42 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [ce6c126f, L:/127.0.0.1:58046 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xce6c126f, L:/127.0.0.1:58046 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-26 18:19:42 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [ce6c126f, L:/127.0.0.1:58046 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-26 18:19:42 [] DEBUG r.n.r.PooledConnectionProvider - [ce6c126f, L:/127.0.0.1:58046 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-26 18:19:42 [bd34e329-ae09-4795-bbf2-195397088ec4] INFO  c.c.c.g.c.config.RouterConfiguration - Validation Response: true (Cached)
2025-02-26 18:19:42 [bd34e329-ae09-4795-bbf2-195397088ec4] INFO  c.c.c.g.c.config.RouterConfiguration - Forwarding [GET] /users to User Microservice
2025-02-26 18:19:42 [bd34e329-ae09-4795-bbf2-195397088ec4] DEBUG r.n.r.PooledConnectionProvider - Creating a new [http] client pool [PoolFactory{evictionInterval=PT0S, leasingStrategy=fifo, maxConnections=500, maxIdleTime=-1, maxLifeTime=-1, metricsEnabled=false, pendingAcquireMaxCount=1000, pendingAcquireTimeout=45000}] for [localhost/<unresolved>:8082]
2025-02-26 18:19:42 [] DEBUG r.n.r.PooledConnectionProvider - [0b5d2e02] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-26 18:19:42 [] DEBUG r.netty.transport.TransportConfig - [0b5d2e02] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-26 18:19:42 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-26 18:19:42 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-26 18:19:42 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-26 18:19:42 [] DEBUG r.netty.transport.TransportConnector - [0b5d2e02] Connecting to [localhost/127.0.0.1:8082].
2025-02-26 18:19:42 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [0b5d2e02, L:/127.0.0.1:58048 - R:localhost/127.0.0.1:8082] Registering pool release on close event for channel
2025-02-26 18:19:42 [] DEBUG r.n.r.PooledConnectionProvider - [0b5d2e02, L:/127.0.0.1:58048 - R:localhost/127.0.0.1:8082] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-26 18:19:42 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [0b5d2e02, L:/127.0.0.1:58048 - R:localhost/127.0.0.1:8082] onStateChange(PooledConnection{channel=[id: 0x0b5d2e02, L:/127.0.0.1:58048 - R:localhost/127.0.0.1:8082]}, [connected])
2025-02-26 18:19:42 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [0b5d2e02-1, L:/127.0.0.1:58048 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0x0b5d2e02, L:/127.0.0.1:58048 - R:localhost/127.0.0.1:8082]}}, [configured])
2025-02-26 18:19:42 [] DEBUG r.n.http.client.HttpClientConnect - [0b5d2e02-1, L:/127.0.0.1:58048 - R:localhost/127.0.0.1:8082] Handler is being applied: {uri=http://localhost:8082/users, method=GET}
2025-02-26 18:19:42 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [0b5d2e02-1, L:/127.0.0.1:58048 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0x0b5d2e02, L:/127.0.0.1:58048 - R:localhost/127.0.0.1:8082]}}, [request_prepared])
2025-02-26 18:19:42 [] DEBUG r.n.http.client.HttpClientOperations - [0b5d2e02-1, L:/127.0.0.1:58048 - R:localhost/127.0.0.1:8082] No sendHeaders() called before complete, sending zero-length header
2025-02-26 18:19:42 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [0b5d2e02-1, L:/127.0.0.1:58048 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0x0b5d2e02, L:/127.0.0.1:58048 - R:localhost/127.0.0.1:8082]}}, [request_sent])
2025-02-26 18:19:42 [] DEBUG r.n.http.client.HttpClientOperations - [0b5d2e02-1, L:/127.0.0.1:58048 - R:localhost/127.0.0.1:8082] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Content-Length: <filtered>
Date: <filtered>
2025-02-26 18:19:42 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [0b5d2e02-1, L:/127.0.0.1:58048 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0x0b5d2e02, L:/127.0.0.1:58048 - R:localhost/127.0.0.1:8082]}}, [response_received])
2025-02-26 18:19:42 [] DEBUG reactor.netty.channel.FluxReceive - [0b5d2e02-1, L:/127.0.0.1:58048 - R:localhost/127.0.0.1:8082] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-26 18:19:42 [] DEBUG r.n.http.client.HttpClientOperations - [0b5d2e02-1, L:/127.0.0.1:58048 - R:localhost/127.0.0.1:8082] Received last HTTP packet
2025-02-26 18:19:42 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [0b5d2e02, L:/127.0.0.1:58048 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0x0b5d2e02, L:/127.0.0.1:58048 - R:localhost/127.0.0.1:8082]}}, [response_completed])
2025-02-26 18:19:42 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [0b5d2e02, L:/127.0.0.1:58048 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0x0b5d2e02, L:/127.0.0.1:58048 - R:localhost/127.0.0.1:8082]}}, [disconnecting])
2025-02-26 18:19:42 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [0b5d2e02, L:/127.0.0.1:58048 - R:localhost/127.0.0.1:8082] Releasing channel
2025-02-26 18:19:42 [] DEBUG r.n.r.PooledConnectionProvider - [0b5d2e02, L:/127.0.0.1:58048 - R:localhost/127.0.0.1:8082] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-26 18:20:15 [] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-02-26 18:20:16 [] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-02-26 18:20:16 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [0b5d2e02, L:/127.0.0.1:58048 ! R:localhost/127.0.0.1:8082] onStateChange(PooledConnection{channel=[id: 0x0b5d2e02, L:/127.0.0.1:58048 ! R:localhost/127.0.0.1:8082]}, [disconnecting])
2025-02-26 18:20:16 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [ce6c126f, L:/127.0.0.1:58046 ! R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0xce6c126f, L:/127.0.0.1:58046 ! R:localhost/127.0.0.1:8081]}, [disconnecting])
2025-02-26 18:20:18 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 2 thread-local buffer(s) from thread: reactor-http-nio-7
2025-02-26 18:20:18 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 2 thread-local buffer(s) from thread: reactor-http-nio-6
2025-02-26 18:20:22 [] DEBUG org.jboss.logging - Logging Provider: org.jboss.logging.Slf4jLoggerProvider found via system property
2025-02-26 18:20:22 [] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final
2025-02-26 18:20:22 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-02-26 18:20:22 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-02-26 18:20:22 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-02-26 18:20:22 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-02-26 18:20:22 [] DEBUG o.h.v.i.e.r.TraversableResolvers - Cannot find jakarta.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2025-02-26 18:20:22 [] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-02-26 18:20:22 [] INFO  c.c.c.g.c.CommongatewayApplication - Starting CommongatewayApplication using Java 17.0.12 with PID 62996 (D:\WORKSPACE\API-GATEWAY\commongateway\target\classes started by CITPL in D:\WORKSPACE\API-GATEWAY)
2025-02-26 18:20:22 [] DEBUG c.c.c.g.c.CommongatewayApplication - Running with Spring Boot v3.4.2, Spring v6.2.2
2025-02-26 18:20:22 [] INFO  c.c.c.g.c.CommongatewayApplication - No active profile set, falling back to 1 default profile: "default"
2025-02-26 18:20:23 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-02-26 18:20:23 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-02-26 18:20:23 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-02-26 18:20:23 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-02-26 18:20:23 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-02-26 18:20:23 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-02-26 18:20:24 [] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=db7a461d-3fba-387a-918c-4c77c09c8bed
2025-02-26 18:20:24 [] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-02-26 18:20:24 [] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-02-26 18:20:24 [] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-02-26 18:20:24 [] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.34]
2025-02-26 18:20:24 [] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-02-26 18:20:24 [] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1678 ms
2025-02-26 18:20:24 [] DEBUG i.n.u.i.l.InternalLoggerFactory - Using SLF4J as the default logging framework
2025-02-26 18:20:24 [] DEBUG i.n.util.internal.PlatformDependent0 - -Dio.netty.noUnsafe: false
2025-02-26 18:20:24 [] DEBUG i.n.util.internal.PlatformDependent0 - Java version: 17
2025-02-26 18:20:24 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe.theUnsafe: available
2025-02-26 18:20:24 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe base methods: all available
2025-02-26 18:20:24 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe.storeFence: available
2025-02-26 18:20:24 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.Buffer.address: available
2025-02-26 18:20:24 [] DEBUG i.n.util.internal.PlatformDependent0 - direct buffer constructor: unavailable: Reflective setAccessible(true) disabled
2025-02-26 18:20:24 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.Bits.unaligned: available, true
2025-02-26 18:20:24 [] DEBUG i.n.util.internal.PlatformDependent0 - jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable: class io.netty.util.internal.PlatformDependent0$7 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @1dd02175
2025-02-26 18:20:24 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.DirectByteBuffer.<init>(long, {int,long}): unavailable
2025-02-26 18:20:24 [] DEBUG i.n.util.internal.PlatformDependent - sun.misc.Unsafe: available
2025-02-26 18:20:24 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.tmpdir: C:\Users\CITPL\AppData\Local\Temp (java.io.tmpdir)
2025-02-26 18:20:24 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.bitMode: 64 (sun.arch.data.model)
2025-02-26 18:20:24 [] DEBUG i.n.util.internal.PlatformDependent - Platform: Windows
2025-02-26 18:20:24 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.maxDirectMemory: -1 bytes
2025-02-26 18:20:24 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.uninitializedArrayAllocationThreshold: -1
2025-02-26 18:20:24 [] DEBUG io.netty.util.internal.CleanerJava9 - java.nio.ByteBuffer.cleaner(): available
2025-02-26 18:20:24 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.noPreferDirect: false
2025-02-26 18:20:25 [] DEBUG reactor.util.Loggers - Using Slf4j logging framework
2025-02-26 18:20:25 [] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-02-26 18:20:25 [] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2025-02-26 18:20:25 [] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2025-02-26 18:20:25 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-02-26 18:20:25 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via user class loader
2025-02-26 18:20:25 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-02-26 18:20:25 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-02-26 18:20:25 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-02-26 18:20:25 [] DEBUG o.h.v.i.e.r.TraversableResolvers - Cannot find jakarta.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2025-02-26 18:20:25 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-02-26 18:20:25 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-02-26 18:20:25 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-02-26 18:20:25 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-02-26 18:20:25 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-02-26 18:20:25 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-02-26 18:20:25 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	c.c.c.g.c.c.HomeController:
	{GET [/home]}: get()
2025-02-26 18:20:25 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2025-02-26 18:20:25 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 'beanNameHandlerMapping' {}
2025-02-26 18:20:25 [] DEBUG _.s.w.s.HandlerMapping.Mappings - Mapped com.citpl.common.gateway.commongateway.config.RouterConfiguration$$Lambda$895/0x000001b6de4fc8f8@39652a30 -> com.citpl.common.gateway.commongateway.config.RouterConfiguration$$Lambda$896/0x000001b6de4fcb60@5763a655
2025-02-26 18:20:25 [] DEBUG _.s.w.s.HandlerMapping.Mappings - Mapped /validate/** -> ProxyExchangeHandlerFunction
/users/** -> ProxyExchangeHandlerFunction
2025-02-26 18:20:25 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2025-02-26 18:20:26 [] DEBUG i.n.u.i.InternalThreadLocalMap - -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2025-02-26 18:20:26 [] DEBUG i.n.u.i.InternalThreadLocalMap - -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2025-02-26 18:20:26 [] DEBUG io.netty.util.ResourceLeakDetector - -Dio.netty.leakDetection.level: simple
2025-02-26 18:20:26 [] DEBUG io.netty.util.ResourceLeakDetector - -Dio.netty.leakDetection.targetRecords: 4
2025-02-26 18:20:26 [] DEBUG i.n.handler.codec.compression.Brotli - brotli4j not in the classpath; Brotli support will be unavailable.
2025-02-26 18:20:26 [] DEBUG reactor.netty.tcp.TcpResources - [http] resources will use the default LoopResources: DefaultLoopResources {prefix=reactor-http, daemon=true, selectCount=12, workerCount=12}
2025-02-26 18:20:26 [] DEBUG reactor.netty.tcp.TcpResources - [http] resources will use the default ConnectionProvider: reactor.netty.resources.DefaultPooledConnectionProvider@6dded900
2025-02-26 18:20:26 [] DEBUG r.netty.resources.DefaultLoopIOUring - Default io_uring support : false
2025-02-26 18:20:26 [] DEBUG r.netty.resources.DefaultLoopEpoll - Default Epoll support : false
2025-02-26 18:20:26 [] DEBUG r.netty.resources.DefaultLoopKQueue - Default KQueue support : false
2025-02-26 18:20:26 [] DEBUG i.n.c.MultithreadEventLoopGroup - -Dio.netty.eventLoopThreads: 24
2025-02-26 18:20:26 [] DEBUG i.n.u.concurrent.GlobalEventExecutor - -Dio.netty.globalEventExecutor.quietPeriodSeconds: 1
2025-02-26 18:20:26 [] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.noKeySetOptimization: false
2025-02-26 18:20:26 [] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.selectorAutoRebuildThreshold: 512
2025-02-26 18:20:26 [] DEBUG i.n.util.internal.PlatformDependent - org.jctools-core.MpscChunkedArrayQueue: available
2025-02-26 18:20:26 [] DEBUG io.netty.util.NetUtil - -Djava.net.preferIPv4Stack: false
2025-02-26 18:20:26 [] DEBUG io.netty.util.NetUtil - -Djava.net.preferIPv6Addresses: false
2025-02-26 18:20:26 [] DEBUG i.netty.util.NetUtilInitializations - Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2025-02-26 18:20:26 [] DEBUG io.netty.util.NetUtil - Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2025-02-26 18:20:26 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default ResolvedAddressTypes: IPV4_ONLY
2025-02-26 18:20:26 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Localhost address: localhost/127.0.0.1
2025-02-26 18:20:26 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Windows hostname: DESKTOP-P307093
2025-02-26 18:20:26 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default search domains: []
2025-02-26 18:20:26 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default UnixResolverOptions{ndots=1, timeout=5, attempts=16}
2025-02-26 18:20:26 [] DEBUG i.n.r.DefaultHostsFileEntriesResolver - -Dio.netty.hostsFileRefreshInterval: 0
2025-02-26 18:20:26 [] DEBUG i.n.r.d.DefaultDnsServerAddressStreamProvider - Default DNS servers: [/8.8.8.8:53, /4.2.2.2:53] (sun.net.dns.ResolverConfiguration)
2025-02-26 18:20:26 [] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-02-26 18:20:26 [] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-02-26 18:20:26 [] INFO  c.c.c.g.c.CommongatewayApplication - Started CommongatewayApplication in 4.289 seconds (process running for 5.169)
2025-02-26 18:20:33 [] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-02-26 18:20:33 [] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-02-26 18:20:33 [] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-02-26 18:20:33 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-26 18:20:33 [85f58c27-2786-4437-821b-6269ad2efba1] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-26 18:20:33 [85f58c27-2786-4437-821b-6269ad2efba1] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-26 18:20:33 [85f58c27-2786-4437-821b-6269ad2efba1] INFO  c.c.c.g.c.config.RouterConfiguration - Authorized Request!
2025-02-26 18:20:33 [85f58c27-2786-4437-821b-6269ad2efba1] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [GET] /users
2025-02-26 18:20:33 [85f58c27-2786-4437-821b-6269ad2efba1] DEBUG r.n.r.PooledConnectionProvider - Creating a new [http] client pool [PoolFactory{evictionInterval=PT0S, leasingStrategy=fifo, maxConnections=500, maxIdleTime=-1, maxLifeTime=-1, metricsEnabled=false, pendingAcquireMaxCount=1000, pendingAcquireTimeout=45000}] for [localhost/<unresolved>:8081]
2025-02-26 18:20:33 [85f58c27-2786-4437-821b-6269ad2efba1] DEBUG io.netty.channel.DefaultChannelId - -Dio.netty.processId: 62996 (auto-detected)
2025-02-26 18:20:33 [85f58c27-2786-4437-821b-6269ad2efba1] DEBUG io.netty.channel.DefaultChannelId - -Dio.netty.machineId: a0:d3:65:ff:fe:5e:b0:28 (auto-detected)
2025-02-26 18:20:33 [85f58c27-2786-4437-821b-6269ad2efba1] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.numHeapArenas: 24
2025-02-26 18:20:33 [85f58c27-2786-4437-821b-6269ad2efba1] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.numDirectArenas: 24
2025-02-26 18:20:33 [85f58c27-2786-4437-821b-6269ad2efba1] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.pageSize: 8192
2025-02-26 18:20:33 [85f58c27-2786-4437-821b-6269ad2efba1] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxOrder: 9
2025-02-26 18:20:33 [85f58c27-2786-4437-821b-6269ad2efba1] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.chunkSize: 4194304
2025-02-26 18:20:33 [85f58c27-2786-4437-821b-6269ad2efba1] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.smallCacheSize: 256
2025-02-26 18:20:33 [85f58c27-2786-4437-821b-6269ad2efba1] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.normalCacheSize: 64
2025-02-26 18:20:33 [85f58c27-2786-4437-821b-6269ad2efba1] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2025-02-26 18:20:33 [85f58c27-2786-4437-821b-6269ad2efba1] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.cacheTrimInterval: 8192
2025-02-26 18:20:33 [85f58c27-2786-4437-821b-6269ad2efba1] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.cacheTrimIntervalMillis: 0
2025-02-26 18:20:33 [85f58c27-2786-4437-821b-6269ad2efba1] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.useCacheForAllThreads: false
2025-02-26 18:20:33 [85f58c27-2786-4437-821b-6269ad2efba1] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
2025-02-26 18:20:33 [85f58c27-2786-4437-821b-6269ad2efba1] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.disableCacheFinalizersForFastThreadLocalThreads: false
2025-02-26 18:20:33 [85f58c27-2786-4437-821b-6269ad2efba1] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.allocator.type: pooled
2025-02-26 18:20:33 [85f58c27-2786-4437-821b-6269ad2efba1] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.threadLocalDirectBufferSize: 0
2025-02-26 18:20:33 [85f58c27-2786-4437-821b-6269ad2efba1] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.maxThreadLocalCharBufferSize: 16384
2025-02-26 18:20:33 [] DEBUG r.n.r.PooledConnectionProvider - [5b64aceb] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-26 18:20:33 [] DEBUG io.netty.buffer.AbstractByteBuf - -Dio.netty.buffer.checkAccessible: true
2025-02-26 18:20:33 [] DEBUG io.netty.buffer.AbstractByteBuf - -Dio.netty.buffer.checkBounds: true
2025-02-26 18:20:33 [] DEBUG i.n.util.ResourceLeakDetectorFactory - Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@b2e02bf
2025-02-26 18:20:33 [] DEBUG r.netty.transport.TransportConfig - [5b64aceb] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-26 18:20:33 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-26 18:20:33 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-26 18:20:33 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-26 18:20:33 [] DEBUG i.n.b.ChannelInitializerExtensions - -Dio.netty.bootstrap.extensions: null
2025-02-26 18:20:33 [] DEBUG r.netty.transport.TransportConnector - [5b64aceb] Connecting to [localhost/127.0.0.1:8081].
2025-02-26 18:20:33 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [5b64aceb, L:/127.0.0.1:58072 - R:localhost/127.0.0.1:8081] Registering pool release on close event for channel
2025-02-26 18:20:33 [] DEBUG r.n.r.PooledConnectionProvider - [5b64aceb, L:/127.0.0.1:58072 - R:localhost/127.0.0.1:8081] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-26 18:20:33 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [5b64aceb, L:/127.0.0.1:58072 - R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x5b64aceb, L:/127.0.0.1:58072 - R:localhost/127.0.0.1:8081]}, [connected])
2025-02-26 18:20:33 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [5b64aceb-1, L:/127.0.0.1:58072 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0x5b64aceb, L:/127.0.0.1:58072 - R:localhost/127.0.0.1:8081]}}, [configured])
2025-02-26 18:20:33 [] DEBUG r.n.http.client.HttpClientConnect - [5b64aceb-1, L:/127.0.0.1:58072 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate, method=GET}
2025-02-26 18:20:33 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [5b64aceb-1, L:/127.0.0.1:58072 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x5b64aceb, L:/127.0.0.1:58072 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-26 18:20:33 [] DEBUG r.n.http.client.HttpClientOperations - [5b64aceb-1, L:/127.0.0.1:58072 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-26 18:20:33 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.maxCapacityPerThread: 4096
2025-02-26 18:20:33 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.ratio: 8
2025-02-26 18:20:33 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.chunkSize: 32
2025-02-26 18:20:33 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.blocking: false
2025-02-26 18:20:33 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.batchFastThreadLocalOnly: true
2025-02-26 18:20:33 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [5b64aceb-1, L:/127.0.0.1:58072 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x5b64aceb, L:/127.0.0.1:58072 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-26 18:20:33 [] DEBUG i.n.handler.codec.compression.Zstd - zstd-jni not in the classpath; Zstd support will be unavailable.
2025-02-26 18:20:33 [] DEBUG r.n.http.client.HttpClientOperations - [5b64aceb-1, L:/127.0.0.1:58072 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-26 18:20:33 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [5b64aceb-1, L:/127.0.0.1:58072 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x5b64aceb, L:/127.0.0.1:58072 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-26 18:20:33 [] DEBUG reactor.netty.channel.FluxReceive - [5b64aceb-1, L:/127.0.0.1:58072 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-26 18:20:33 [] DEBUG r.n.http.client.HttpClientOperations - [5b64aceb-1, L:/127.0.0.1:58072 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-26 18:20:33 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [5b64aceb, L:/127.0.0.1:58072 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x5b64aceb, L:/127.0.0.1:58072 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-26 18:20:33 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [5b64aceb, L:/127.0.0.1:58072 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x5b64aceb, L:/127.0.0.1:58072 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-26 18:20:33 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [5b64aceb, L:/127.0.0.1:58072 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-26 18:20:33 [85f58c27-2786-4437-821b-6269ad2efba1] INFO  c.c.c.g.c.config.RouterConfiguration - Validation Response: true (Cached)
2025-02-26 18:20:33 [85f58c27-2786-4437-821b-6269ad2efba1] INFO  c.c.c.g.c.config.RouterConfiguration - Forwarding [GET] /users to User Microservice
2025-02-26 18:20:33 [] DEBUG r.n.r.PooledConnectionProvider - [5b64aceb, L:/127.0.0.1:58072 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-26 18:20:33 [] DEBUG r.n.r.PooledConnectionProvider - [5b64aceb, L:/127.0.0.1:58072 - R:localhost/127.0.0.1:8081] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-26 18:20:33 [] DEBUG r.n.http.client.HttpClientConnect - [5b64aceb-2, L:/127.0.0.1:58072 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/users, method=GET}
2025-02-26 18:20:33 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [5b64aceb-2, L:/127.0.0.1:58072 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0x5b64aceb, L:/127.0.0.1:58072 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-26 18:20:33 [] DEBUG r.n.http.client.HttpClientOperations - [5b64aceb-2, L:/127.0.0.1:58072 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-26 18:20:33 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [5b64aceb-2, L:/127.0.0.1:58072 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0x5b64aceb, L:/127.0.0.1:58072 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-26 18:20:33 [] DEBUG r.n.http.client.HttpClientOperations - [5b64aceb-2, L:/127.0.0.1:58072 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 500 
Vary: <filtered>
Vary: <filtered>
Vary: <filtered>
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
Connection: <filtered>
2025-02-26 18:20:33 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [5b64aceb-2, L:/127.0.0.1:58072 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0x5b64aceb, L:/127.0.0.1:58072 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-26 18:20:33 [] DEBUG reactor.netty.channel.FluxReceive - [5b64aceb-2, L:/127.0.0.1:58072 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-26 18:20:33 [] DEBUG r.n.http.client.HttpClientOperations - [5b64aceb-2, L:/127.0.0.1:58072 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-26 18:20:33 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [5b64aceb, L:/127.0.0.1:58072 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0x5b64aceb, L:/127.0.0.1:58072 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-26 18:20:33 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [5b64aceb, L:/127.0.0.1:58072 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0x5b64aceb, L:/127.0.0.1:58072 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-26 18:20:33 [] DEBUG r.n.r.PooledConnectionProvider - [5b64aceb, L:/127.0.0.1:58072 ! R:localhost/127.0.0.1:8081] Channel closed, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-26 18:20:33 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [5b64aceb, L:/127.0.0.1:58072 ! R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x5b64aceb, L:/127.0.0.1:58072 ! R:localhost/127.0.0.1:8081]}, [disconnecting])
2025-02-26 18:20:33 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] threw exception
org.springframework.web.reactive.function.client.WebClientResponseException$InternalServerError: 500 Internal Server Error from GET http://localhost:8081/users
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 500 INTERNAL_SERVER_ERROR from GET http://localhost:8081/users [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-26 18:20:33 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [org.springframework.web.reactive.function.client.WebClientResponseException$InternalServerError: 500 Internal Server Error from GET http://localhost:8081/users] with root cause
org.springframework.web.reactive.function.client.WebClientResponseException$InternalServerError: 500 Internal Server Error from GET http://localhost:8081/users
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 500 INTERNAL_SERVER_ERROR from GET http://localhost:8081/users [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-26 18:20:33 [] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-26 18:20:33 [] INFO  c.c.c.g.c.config.RouterConfiguration - Authorized Request!
2025-02-26 18:20:33 [] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [GET] /error
2025-02-26 18:20:33 [] INFO  c.c.c.g.c.config.RouterConfiguration - Validation Response from Cache: true
2025-02-26 18:20:33 [] INFO  c.c.c.g.c.config.RouterConfiguration - Forwarding [GET] /error to User Microservice
2025-02-26 18:20:33 [] DEBUG r.n.r.PooledConnectionProvider - [fcab5c72] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-26 18:20:33 [] DEBUG r.netty.transport.TransportConfig - [fcab5c72] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-26 18:20:33 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-26 18:20:33 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-26 18:20:33 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-26 18:20:33 [] DEBUG r.netty.transport.TransportConnector - [fcab5c72] Connecting to [localhost/127.0.0.1:8081].
2025-02-26 18:20:33 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [fcab5c72, L:/127.0.0.1:58073 - R:localhost/127.0.0.1:8081] Registering pool release on close event for channel
2025-02-26 18:20:33 [] DEBUG r.n.r.PooledConnectionProvider - [fcab5c72, L:/127.0.0.1:58073 - R:localhost/127.0.0.1:8081] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-26 18:20:33 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [fcab5c72, L:/127.0.0.1:58073 - R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0xfcab5c72, L:/127.0.0.1:58073 - R:localhost/127.0.0.1:8081]}, [connected])
2025-02-26 18:20:33 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [fcab5c72-1, L:/127.0.0.1:58073 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0xfcab5c72, L:/127.0.0.1:58073 - R:localhost/127.0.0.1:8081]}}, [configured])
2025-02-26 18:20:33 [] DEBUG r.n.http.client.HttpClientConnect - [fcab5c72-1, L:/127.0.0.1:58073 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/error, method=GET}
2025-02-26 18:20:33 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [fcab5c72-1, L:/127.0.0.1:58073 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0xfcab5c72, L:/127.0.0.1:58073 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-26 18:20:33 [] DEBUG r.n.http.client.HttpClientOperations - [fcab5c72-1, L:/127.0.0.1:58073 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-26 18:20:33 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] threw exception
org.springframework.web.reactive.function.client.WebClientResponseException$InternalServerError: 500 Internal Server Error from GET http://localhost:8081/users
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 500 INTERNAL_SERVER_ERROR from GET http://localhost:8081/users [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-26 18:20:33 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [org.springframework.web.reactive.function.client.WebClientResponseException$InternalServerError: 500 Internal Server Error from GET http://localhost:8081/users] with root cause
org.springframework.web.reactive.function.client.WebClientResponseException$InternalServerError: 500 Internal Server Error from GET http://localhost:8081/users
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 500 INTERNAL_SERVER_ERROR from GET http://localhost:8081/users [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-26 18:20:33 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [fcab5c72-1, L:/127.0.0.1:58073 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0xfcab5c72, L:/127.0.0.1:58073 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-26 18:20:33 [] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-26 18:20:33 [] INFO  c.c.c.g.c.config.RouterConfiguration - Authorized Request!
2025-02-26 18:20:33 [] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [GET] /error
2025-02-26 18:20:33 [] INFO  c.c.c.g.c.config.RouterConfiguration - Validation Response from Cache: true
2025-02-26 18:20:33 [] INFO  c.c.c.g.c.config.RouterConfiguration - Forwarding [GET] /error to User Microservice
2025-02-26 18:20:33 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] threw exception
java.lang.IllegalStateException: Cannot start async: [ERROR]
	at org.springframework.util.Assert.state(Assert.java:79)
	at org.springframework.web.context.request.async.StandardServletAsyncWebRequest.startAsync(StandardServletAsyncWebRequest.java:157)
	at org.springframework.web.context.request.async.WebAsyncManager.startAsyncProcessing(WebAsyncManager.java:487)
	at org.springframework.web.context.request.async.WebAsyncManager.startDeferredResultProcessing(WebAsyncManager.java:462)
	at org.springframework.web.servlet.function.DefaultAsyncServerResponse.writeAsync(DefaultAsyncServerResponse.java:130)
	at org.springframework.web.servlet.function.DefaultEntityResponseBuilder$PublisherEntityResponse.writeToInternal(DefaultEntityResponseBuilder.java:429)
	at org.springframework.web.servlet.function.AbstractServerResponse.writeTo(AbstractServerResponse.java:101)
	at org.springframework.web.servlet.function.support.HandlerFunctionAdapter.handle(HandlerFunctionAdapter.java:112)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:633)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:511)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:454)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:361)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:208)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:285)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:149)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:239)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:243)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:57)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-26 18:20:33 [] ERROR o.a.c.c.C.[Tomcat].[localhost] - Exception Processing [ErrorPage[errorCode=0, location=/error]]
jakarta.servlet.ServletException: Async processing failed
	at org.springframework.web.servlet.function.DefaultAsyncServerResponse.writeAsync(DefaultAsyncServerResponse.java:136)
	at org.springframework.web.servlet.function.DefaultEntityResponseBuilder$PublisherEntityResponse.writeToInternal(DefaultEntityResponseBuilder.java:429)
	at org.springframework.web.servlet.function.AbstractServerResponse.writeTo(AbstractServerResponse.java:101)
	at org.springframework.web.servlet.function.support.HandlerFunctionAdapter.handle(HandlerFunctionAdapter.java:112)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:633)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:511)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:454)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:361)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:208)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:285)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:149)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:239)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:243)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:57)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: java.lang.IllegalStateException: Cannot start async: [ERROR]
	at org.springframework.util.Assert.state(Assert.java:79)
	at org.springframework.web.context.request.async.StandardServletAsyncWebRequest.startAsync(StandardServletAsyncWebRequest.java:157)
	at org.springframework.web.context.request.async.WebAsyncManager.startAsyncProcessing(WebAsyncManager.java:487)
	at org.springframework.web.context.request.async.WebAsyncManager.startDeferredResultProcessing(WebAsyncManager.java:462)
	at org.springframework.web.servlet.function.DefaultAsyncServerResponse.writeAsync(DefaultAsyncServerResponse.java:130)
	... 41 common frames omitted
2025-02-26 18:20:33 [] DEBUG r.n.http.client.HttpClientOperations - [fcab5c72-1, L:/127.0.0.1:58073 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 500 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
Connection: <filtered>
2025-02-26 18:20:33 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [fcab5c72-1, L:/127.0.0.1:58073 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0xfcab5c72, L:/127.0.0.1:58073 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-26 18:20:33 [] DEBUG reactor.netty.channel.FluxReceive - [fcab5c72-1, L:/127.0.0.1:58073 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-26 18:20:33 [] DEBUG r.n.http.client.HttpClientOperations - [fcab5c72-1, L:/127.0.0.1:58073 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-26 18:20:33 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [fcab5c72, L:/127.0.0.1:58073 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0xfcab5c72, L:/127.0.0.1:58073 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-26 18:20:33 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [fcab5c72, L:/127.0.0.1:58073 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0xfcab5c72, L:/127.0.0.1:58073 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-26 18:20:33 [] DEBUG r.n.r.PooledConnectionProvider - [fcab5c72, L:/127.0.0.1:58073 ! R:localhost/127.0.0.1:8081] Channel closed, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-26 18:20:33 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [fcab5c72, L:/127.0.0.1:58073 ! R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0xfcab5c72, L:/127.0.0.1:58073 ! R:localhost/127.0.0.1:8081]}, [disconnecting])
2025-02-26 18:22:29 [] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-02-26 18:22:29 [] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-02-26 18:22:31 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 3 thread-local buffer(s) from thread: reactor-http-nio-3
2025-02-26 18:22:31 [] DEBUG io.netty.channel.nio.NioEventLoop - Selector.select() returned prematurely 20 times in a row for Selector io.netty.channel.nio.SelectedSelectionKeySetSelector@47272daf.
2025-02-26 18:22:31 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 3 thread-local buffer(s) from thread: reactor-http-nio-2
2025-02-26 18:22:37 [] DEBUG org.jboss.logging - Logging Provider: org.jboss.logging.Slf4jLoggerProvider found via system property
2025-02-26 18:22:37 [] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final
2025-02-26 18:22:37 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-02-26 18:22:37 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-02-26 18:22:37 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-02-26 18:22:37 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-02-26 18:22:37 [] DEBUG o.h.v.i.e.r.TraversableResolvers - Cannot find jakarta.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2025-02-26 18:22:37 [] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-02-26 18:22:37 [] INFO  c.c.c.g.c.CommongatewayApplication - Starting CommongatewayApplication using Java 17.0.12 with PID 34024 (D:\WORKSPACE\API-GATEWAY\commongateway\target\classes started by CITPL in D:\WORKSPACE\API-GATEWAY)
2025-02-26 18:22:37 [] DEBUG c.c.c.g.c.CommongatewayApplication - Running with Spring Boot v3.4.2, Spring v6.2.2
2025-02-26 18:22:37 [] INFO  c.c.c.g.c.CommongatewayApplication - No active profile set, falling back to 1 default profile: "default"
2025-02-26 18:22:37 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-02-26 18:22:37 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-02-26 18:22:37 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-02-26 18:22:37 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-02-26 18:22:37 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-02-26 18:22:37 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-02-26 18:22:38 [] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=db7a461d-3fba-387a-918c-4c77c09c8bed
2025-02-26 18:22:39 [] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-02-26 18:22:39 [] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-02-26 18:22:39 [] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-02-26 18:22:39 [] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.34]
2025-02-26 18:22:39 [] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-02-26 18:22:39 [] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1672 ms
2025-02-26 18:22:39 [] DEBUG i.n.u.i.l.InternalLoggerFactory - Using SLF4J as the default logging framework
2025-02-26 18:22:39 [] DEBUG i.n.util.internal.PlatformDependent0 - -Dio.netty.noUnsafe: false
2025-02-26 18:22:39 [] DEBUG i.n.util.internal.PlatformDependent0 - Java version: 17
2025-02-26 18:22:39 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe.theUnsafe: available
2025-02-26 18:22:39 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe base methods: all available
2025-02-26 18:22:39 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe.storeFence: available
2025-02-26 18:22:39 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.Buffer.address: available
2025-02-26 18:22:39 [] DEBUG i.n.util.internal.PlatformDependent0 - direct buffer constructor: unavailable: Reflective setAccessible(true) disabled
2025-02-26 18:22:39 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.Bits.unaligned: available, true
2025-02-26 18:22:39 [] DEBUG i.n.util.internal.PlatformDependent0 - jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable: class io.netty.util.internal.PlatformDependent0$7 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @1dd02175
2025-02-26 18:22:39 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.DirectByteBuffer.<init>(long, {int,long}): unavailable
2025-02-26 18:22:39 [] DEBUG i.n.util.internal.PlatformDependent - sun.misc.Unsafe: available
2025-02-26 18:22:39 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.tmpdir: C:\Users\CITPL\AppData\Local\Temp (java.io.tmpdir)
2025-02-26 18:22:39 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.bitMode: 64 (sun.arch.data.model)
2025-02-26 18:22:39 [] DEBUG i.n.util.internal.PlatformDependent - Platform: Windows
2025-02-26 18:22:39 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.maxDirectMemory: -1 bytes
2025-02-26 18:22:39 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.uninitializedArrayAllocationThreshold: -1
2025-02-26 18:22:39 [] DEBUG io.netty.util.internal.CleanerJava9 - java.nio.ByteBuffer.cleaner(): available
2025-02-26 18:22:39 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.noPreferDirect: false
2025-02-26 18:22:39 [] DEBUG reactor.util.Loggers - Using Slf4j logging framework
2025-02-26 18:22:39 [] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-02-26 18:22:39 [] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2025-02-26 18:22:39 [] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2025-02-26 18:22:39 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-02-26 18:22:39 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via user class loader
2025-02-26 18:22:39 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-02-26 18:22:39 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-02-26 18:22:39 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-02-26 18:22:39 [] DEBUG o.h.v.i.e.r.TraversableResolvers - Cannot find jakarta.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2025-02-26 18:22:39 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-02-26 18:22:39 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-02-26 18:22:39 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-02-26 18:22:39 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-02-26 18:22:39 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-02-26 18:22:39 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-02-26 18:22:39 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	c.c.c.g.c.c.HomeController:
	{GET [/home]}: get()
2025-02-26 18:22:39 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2025-02-26 18:22:39 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 'beanNameHandlerMapping' {}
2025-02-26 18:22:39 [] DEBUG _.s.w.s.HandlerMapping.Mappings - Mapped com.citpl.common.gateway.commongateway.config.RouterConfiguration$$Lambda$895/0x00000167564fb5f8@203e705e -> com.citpl.common.gateway.commongateway.config.RouterConfiguration$$Lambda$896/0x00000167564fb860@78c74647
2025-02-26 18:22:39 [] DEBUG _.s.w.s.HandlerMapping.Mappings - Mapped /users/** -> ProxyExchangeHandlerFunction
2025-02-26 18:22:39 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2025-02-26 18:22:40 [] DEBUG i.n.u.i.InternalThreadLocalMap - -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2025-02-26 18:22:40 [] DEBUG i.n.u.i.InternalThreadLocalMap - -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2025-02-26 18:22:40 [] DEBUG io.netty.util.ResourceLeakDetector - -Dio.netty.leakDetection.level: simple
2025-02-26 18:22:40 [] DEBUG io.netty.util.ResourceLeakDetector - -Dio.netty.leakDetection.targetRecords: 4
2025-02-26 18:22:40 [] DEBUG i.n.handler.codec.compression.Brotli - brotli4j not in the classpath; Brotli support will be unavailable.
2025-02-26 18:22:40 [] DEBUG reactor.netty.tcp.TcpResources - [http] resources will use the default LoopResources: DefaultLoopResources {prefix=reactor-http, daemon=true, selectCount=12, workerCount=12}
2025-02-26 18:22:40 [] DEBUG reactor.netty.tcp.TcpResources - [http] resources will use the default ConnectionProvider: reactor.netty.resources.DefaultPooledConnectionProvider@3386c206
2025-02-26 18:22:40 [] DEBUG r.netty.resources.DefaultLoopIOUring - Default io_uring support : false
2025-02-26 18:22:40 [] DEBUG r.netty.resources.DefaultLoopEpoll - Default Epoll support : false
2025-02-26 18:22:40 [] DEBUG r.netty.resources.DefaultLoopKQueue - Default KQueue support : false
2025-02-26 18:22:40 [] DEBUG i.n.c.MultithreadEventLoopGroup - -Dio.netty.eventLoopThreads: 24
2025-02-26 18:22:40 [] DEBUG i.n.u.concurrent.GlobalEventExecutor - -Dio.netty.globalEventExecutor.quietPeriodSeconds: 1
2025-02-26 18:22:40 [] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.noKeySetOptimization: false
2025-02-26 18:22:40 [] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.selectorAutoRebuildThreshold: 512
2025-02-26 18:22:40 [] DEBUG i.n.util.internal.PlatformDependent - org.jctools-core.MpscChunkedArrayQueue: available
2025-02-26 18:22:40 [] DEBUG io.netty.util.NetUtil - -Djava.net.preferIPv4Stack: false
2025-02-26 18:22:40 [] DEBUG io.netty.util.NetUtil - -Djava.net.preferIPv6Addresses: false
2025-02-26 18:22:40 [] DEBUG i.netty.util.NetUtilInitializations - Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2025-02-26 18:22:40 [] DEBUG io.netty.util.NetUtil - Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2025-02-26 18:22:40 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default ResolvedAddressTypes: IPV4_ONLY
2025-02-26 18:22:40 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Localhost address: localhost/127.0.0.1
2025-02-26 18:22:40 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Windows hostname: DESKTOP-P307093
2025-02-26 18:22:40 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default search domains: []
2025-02-26 18:22:40 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default UnixResolverOptions{ndots=1, timeout=5, attempts=16}
2025-02-26 18:22:40 [] DEBUG i.n.r.DefaultHostsFileEntriesResolver - -Dio.netty.hostsFileRefreshInterval: 0
2025-02-26 18:22:40 [] DEBUG i.n.r.d.DefaultDnsServerAddressStreamProvider - Default DNS servers: [/8.8.8.8:53, /4.2.2.2:53] (sun.net.dns.ResolverConfiguration)
2025-02-26 18:22:40 [] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-02-26 18:22:40 [] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-02-26 18:22:40 [] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-02-26 18:22:40 [] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-02-26 18:22:40 [] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-02-26 18:22:40 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-26 18:22:40 [401e5452-94c0-412d-b7a2-a962ec896ff8] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-26 18:22:40 [] INFO  c.c.c.g.c.CommongatewayApplication - Started CommongatewayApplication in 4.127 seconds (process running for 5.087)
2025-02-26 18:22:40 [401e5452-94c0-412d-b7a2-a962ec896ff8] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-26 18:22:40 [401e5452-94c0-412d-b7a2-a962ec896ff8] INFO  c.c.c.g.c.config.RouterConfiguration - Authorized Request!
2025-02-26 18:22:40 [401e5452-94c0-412d-b7a2-a962ec896ff8] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [GET] /users
2025-02-26 18:22:40 [401e5452-94c0-412d-b7a2-a962ec896ff8] DEBUG r.n.r.PooledConnectionProvider - Creating a new [http] client pool [PoolFactory{evictionInterval=PT0S, leasingStrategy=fifo, maxConnections=500, maxIdleTime=-1, maxLifeTime=-1, metricsEnabled=false, pendingAcquireMaxCount=1000, pendingAcquireTimeout=45000}] for [localhost/<unresolved>:8081]
2025-02-26 18:22:40 [401e5452-94c0-412d-b7a2-a962ec896ff8] DEBUG io.netty.channel.DefaultChannelId - -Dio.netty.processId: 34024 (auto-detected)
2025-02-26 18:22:40 [401e5452-94c0-412d-b7a2-a962ec896ff8] DEBUG io.netty.channel.DefaultChannelId - -Dio.netty.machineId: a0:d3:65:ff:fe:5e:b0:28 (auto-detected)
2025-02-26 18:22:41 [401e5452-94c0-412d-b7a2-a962ec896ff8] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.numHeapArenas: 24
2025-02-26 18:22:41 [401e5452-94c0-412d-b7a2-a962ec896ff8] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.numDirectArenas: 24
2025-02-26 18:22:41 [401e5452-94c0-412d-b7a2-a962ec896ff8] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.pageSize: 8192
2025-02-26 18:22:41 [401e5452-94c0-412d-b7a2-a962ec896ff8] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxOrder: 9
2025-02-26 18:22:41 [401e5452-94c0-412d-b7a2-a962ec896ff8] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.chunkSize: 4194304
2025-02-26 18:22:41 [401e5452-94c0-412d-b7a2-a962ec896ff8] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.smallCacheSize: 256
2025-02-26 18:22:41 [401e5452-94c0-412d-b7a2-a962ec896ff8] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.normalCacheSize: 64
2025-02-26 18:22:41 [401e5452-94c0-412d-b7a2-a962ec896ff8] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2025-02-26 18:22:41 [401e5452-94c0-412d-b7a2-a962ec896ff8] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.cacheTrimInterval: 8192
2025-02-26 18:22:41 [401e5452-94c0-412d-b7a2-a962ec896ff8] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.cacheTrimIntervalMillis: 0
2025-02-26 18:22:41 [401e5452-94c0-412d-b7a2-a962ec896ff8] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.useCacheForAllThreads: false
2025-02-26 18:22:41 [401e5452-94c0-412d-b7a2-a962ec896ff8] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
2025-02-26 18:22:41 [401e5452-94c0-412d-b7a2-a962ec896ff8] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.disableCacheFinalizersForFastThreadLocalThreads: false
2025-02-26 18:22:41 [401e5452-94c0-412d-b7a2-a962ec896ff8] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.allocator.type: pooled
2025-02-26 18:22:41 [401e5452-94c0-412d-b7a2-a962ec896ff8] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.threadLocalDirectBufferSize: 0
2025-02-26 18:22:41 [401e5452-94c0-412d-b7a2-a962ec896ff8] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.maxThreadLocalCharBufferSize: 16384
2025-02-26 18:22:41 [] DEBUG r.n.r.PooledConnectionProvider - [5e4f6cf9] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-26 18:22:41 [] DEBUG io.netty.buffer.AbstractByteBuf - -Dio.netty.buffer.checkAccessible: true
2025-02-26 18:22:41 [] DEBUG io.netty.buffer.AbstractByteBuf - -Dio.netty.buffer.checkBounds: true
2025-02-26 18:22:41 [] DEBUG i.n.util.ResourceLeakDetectorFactory - Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@546a59a5
2025-02-26 18:22:41 [] DEBUG r.netty.transport.TransportConfig - [5e4f6cf9] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-26 18:22:41 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-26 18:22:41 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-26 18:22:41 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-26 18:22:41 [] DEBUG i.n.b.ChannelInitializerExtensions - -Dio.netty.bootstrap.extensions: null
2025-02-26 18:22:41 [] DEBUG r.netty.transport.TransportConnector - [5e4f6cf9] Connecting to [localhost/127.0.0.1:8081].
2025-02-26 18:22:41 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [5e4f6cf9, L:/127.0.0.1:58116 - R:localhost/127.0.0.1:8081] Registering pool release on close event for channel
2025-02-26 18:22:41 [] DEBUG r.n.r.PooledConnectionProvider - [5e4f6cf9, L:/127.0.0.1:58116 - R:localhost/127.0.0.1:8081] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-26 18:22:41 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [5e4f6cf9, L:/127.0.0.1:58116 - R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x5e4f6cf9, L:/127.0.0.1:58116 - R:localhost/127.0.0.1:8081]}, [connected])
2025-02-26 18:22:41 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [5e4f6cf9-1, L:/127.0.0.1:58116 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0x5e4f6cf9, L:/127.0.0.1:58116 - R:localhost/127.0.0.1:8081]}}, [configured])
2025-02-26 18:22:41 [] DEBUG r.n.http.client.HttpClientConnect - [5e4f6cf9-1, L:/127.0.0.1:58116 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate, method=GET}
2025-02-26 18:22:41 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [5e4f6cf9-1, L:/127.0.0.1:58116 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x5e4f6cf9, L:/127.0.0.1:58116 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-26 18:22:41 [] DEBUG r.n.http.client.HttpClientOperations - [5e4f6cf9-1, L:/127.0.0.1:58116 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-26 18:22:41 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.maxCapacityPerThread: 4096
2025-02-26 18:22:41 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.ratio: 8
2025-02-26 18:22:41 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.chunkSize: 32
2025-02-26 18:22:41 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.blocking: false
2025-02-26 18:22:41 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.batchFastThreadLocalOnly: true
2025-02-26 18:22:41 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [5e4f6cf9-1, L:/127.0.0.1:58116 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x5e4f6cf9, L:/127.0.0.1:58116 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-26 18:22:41 [] DEBUG i.n.handler.codec.compression.Zstd - zstd-jni not in the classpath; Zstd support will be unavailable.
2025-02-26 18:22:41 [] DEBUG r.n.http.client.HttpClientOperations - [5e4f6cf9-1, L:/127.0.0.1:58116 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-26 18:22:41 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [5e4f6cf9-1, L:/127.0.0.1:58116 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x5e4f6cf9, L:/127.0.0.1:58116 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-26 18:22:41 [] DEBUG reactor.netty.channel.FluxReceive - [5e4f6cf9-1, L:/127.0.0.1:58116 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-26 18:22:41 [] DEBUG r.n.http.client.HttpClientOperations - [5e4f6cf9-1, L:/127.0.0.1:58116 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-26 18:22:41 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [5e4f6cf9, L:/127.0.0.1:58116 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x5e4f6cf9, L:/127.0.0.1:58116 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-26 18:22:41 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [5e4f6cf9, L:/127.0.0.1:58116 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x5e4f6cf9, L:/127.0.0.1:58116 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-26 18:22:41 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [5e4f6cf9, L:/127.0.0.1:58116 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-26 18:22:41 [401e5452-94c0-412d-b7a2-a962ec896ff8] INFO  c.c.c.g.c.config.RouterConfiguration - Validation Response: true (Cached)
2025-02-26 18:22:41 [401e5452-94c0-412d-b7a2-a962ec896ff8] INFO  c.c.c.g.c.config.RouterConfiguration - Forwarding [GET] /users to User Microservice
2025-02-26 18:22:41 [] DEBUG r.n.r.PooledConnectionProvider - [5e4f6cf9, L:/127.0.0.1:58116 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-26 18:22:41 [] DEBUG r.n.r.PooledConnectionProvider - [5e4f6cf9, L:/127.0.0.1:58116 - R:localhost/127.0.0.1:8081] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-26 18:22:41 [] DEBUG r.n.http.client.HttpClientConnect - [5e4f6cf9-2, L:/127.0.0.1:58116 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/users, method=GET}
2025-02-26 18:22:41 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [5e4f6cf9-2, L:/127.0.0.1:58116 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0x5e4f6cf9, L:/127.0.0.1:58116 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-26 18:22:41 [] DEBUG r.n.http.client.HttpClientOperations - [5e4f6cf9-2, L:/127.0.0.1:58116 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-26 18:22:41 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [5e4f6cf9-2, L:/127.0.0.1:58116 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0x5e4f6cf9, L:/127.0.0.1:58116 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-26 18:22:41 [] DEBUG r.n.http.client.HttpClientOperations - [5e4f6cf9-2, L:/127.0.0.1:58116 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 500 
Vary: <filtered>
Vary: <filtered>
Vary: <filtered>
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
Connection: <filtered>
2025-02-26 18:22:41 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [5e4f6cf9-2, L:/127.0.0.1:58116 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0x5e4f6cf9, L:/127.0.0.1:58116 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-26 18:22:41 [] DEBUG reactor.netty.channel.FluxReceive - [5e4f6cf9-2, L:/127.0.0.1:58116 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-26 18:22:41 [] DEBUG r.n.http.client.HttpClientOperations - [5e4f6cf9-2, L:/127.0.0.1:58116 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-26 18:22:41 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [5e4f6cf9, L:/127.0.0.1:58116 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0x5e4f6cf9, L:/127.0.0.1:58116 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-26 18:22:41 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [5e4f6cf9, L:/127.0.0.1:58116 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0x5e4f6cf9, L:/127.0.0.1:58116 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-26 18:22:41 [] DEBUG r.n.r.PooledConnectionProvider - [5e4f6cf9, L:/127.0.0.1:58116 ! R:localhost/127.0.0.1:8081] Channel closed, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-26 18:22:41 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [5e4f6cf9, L:/127.0.0.1:58116 ! R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x5e4f6cf9, L:/127.0.0.1:58116 ! R:localhost/127.0.0.1:8081]}, [disconnecting])
2025-02-26 18:22:41 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] threw exception
org.springframework.web.reactive.function.client.WebClientResponseException$InternalServerError: 500 Internal Server Error from GET http://localhost:8081/users
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 500 INTERNAL_SERVER_ERROR from GET http://localhost:8081/users [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-26 18:22:41 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [org.springframework.web.reactive.function.client.WebClientResponseException$InternalServerError: 500 Internal Server Error from GET http://localhost:8081/users] with root cause
org.springframework.web.reactive.function.client.WebClientResponseException$InternalServerError: 500 Internal Server Error from GET http://localhost:8081/users
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 500 INTERNAL_SERVER_ERROR from GET http://localhost:8081/users [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-26 18:22:41 [] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-26 18:22:41 [] INFO  c.c.c.g.c.config.RouterConfiguration - Authorized Request!
2025-02-26 18:22:41 [] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [GET] /error
2025-02-26 18:22:41 [] INFO  c.c.c.g.c.config.RouterConfiguration - Validation Response from Cache: true
2025-02-26 18:22:41 [] INFO  c.c.c.g.c.config.RouterConfiguration - Forwarding [GET] /error to User Microservice
2025-02-26 18:22:41 [] DEBUG r.n.r.PooledConnectionProvider - [f63da066] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-26 18:22:41 [] DEBUG r.netty.transport.TransportConfig - [f63da066] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-26 18:22:41 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-26 18:22:41 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-26 18:22:41 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-26 18:22:41 [] DEBUG r.netty.transport.TransportConnector - [f63da066] Connecting to [localhost/127.0.0.1:8081].
2025-02-26 18:22:41 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f63da066, L:/127.0.0.1:58117 - R:localhost/127.0.0.1:8081] Registering pool release on close event for channel
2025-02-26 18:22:41 [] DEBUG r.n.r.PooledConnectionProvider - [f63da066, L:/127.0.0.1:58117 - R:localhost/127.0.0.1:8081] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-26 18:22:41 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f63da066, L:/127.0.0.1:58117 - R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0xf63da066, L:/127.0.0.1:58117 - R:localhost/127.0.0.1:8081]}, [connected])
2025-02-26 18:22:41 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f63da066-1, L:/127.0.0.1:58117 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0xf63da066, L:/127.0.0.1:58117 - R:localhost/127.0.0.1:8081]}}, [configured])
2025-02-26 18:22:41 [] DEBUG r.n.http.client.HttpClientConnect - [f63da066-1, L:/127.0.0.1:58117 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/error, method=GET}
2025-02-26 18:22:41 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f63da066-1, L:/127.0.0.1:58117 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0xf63da066, L:/127.0.0.1:58117 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-26 18:22:41 [] DEBUG r.n.http.client.HttpClientOperations - [f63da066-1, L:/127.0.0.1:58117 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-26 18:22:41 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] threw exception
org.springframework.web.reactive.function.client.WebClientResponseException$InternalServerError: 500 Internal Server Error from GET http://localhost:8081/users
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 500 INTERNAL_SERVER_ERROR from GET http://localhost:8081/users [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-26 18:22:41 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f63da066-1, L:/127.0.0.1:58117 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0xf63da066, L:/127.0.0.1:58117 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-26 18:22:41 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [org.springframework.web.reactive.function.client.WebClientResponseException$InternalServerError: 500 Internal Server Error from GET http://localhost:8081/users] with root cause
org.springframework.web.reactive.function.client.WebClientResponseException$InternalServerError: 500 Internal Server Error from GET http://localhost:8081/users
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 500 INTERNAL_SERVER_ERROR from GET http://localhost:8081/users [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-26 18:22:41 [] DEBUG r.n.http.client.HttpClientOperations - [f63da066-1, L:/127.0.0.1:58117 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 500 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
Connection: <filtered>
2025-02-26 18:22:41 [] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-26 18:22:41 [] INFO  c.c.c.g.c.config.RouterConfiguration - Authorized Request!
2025-02-26 18:22:41 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f63da066-1, L:/127.0.0.1:58117 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0xf63da066, L:/127.0.0.1:58117 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-26 18:22:41 [] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [GET] /error
2025-02-26 18:22:41 [] INFO  c.c.c.g.c.config.RouterConfiguration - Validation Response from Cache: true
2025-02-26 18:22:41 [] INFO  c.c.c.g.c.config.RouterConfiguration - Forwarding [GET] /error to User Microservice
2025-02-26 18:22:41 [] DEBUG reactor.netty.channel.FluxReceive - [f63da066-1, L:/127.0.0.1:58117 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-26 18:22:41 [] DEBUG r.n.http.client.HttpClientOperations - [f63da066-1, L:/127.0.0.1:58117 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-26 18:22:41 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f63da066, L:/127.0.0.1:58117 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0xf63da066, L:/127.0.0.1:58117 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-26 18:22:41 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f63da066, L:/127.0.0.1:58117 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0xf63da066, L:/127.0.0.1:58117 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-26 18:22:41 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] threw exception
java.lang.IllegalStateException: Cannot start async: [ERROR]
	at org.springframework.util.Assert.state(Assert.java:79)
	at org.springframework.web.context.request.async.StandardServletAsyncWebRequest.startAsync(StandardServletAsyncWebRequest.java:157)
	at org.springframework.web.context.request.async.WebAsyncManager.startAsyncProcessing(WebAsyncManager.java:487)
	at org.springframework.web.context.request.async.WebAsyncManager.startDeferredResultProcessing(WebAsyncManager.java:462)
	at org.springframework.web.servlet.function.DefaultAsyncServerResponse.writeAsync(DefaultAsyncServerResponse.java:130)
	at org.springframework.web.servlet.function.DefaultEntityResponseBuilder$PublisherEntityResponse.writeToInternal(DefaultEntityResponseBuilder.java:429)
	at org.springframework.web.servlet.function.AbstractServerResponse.writeTo(AbstractServerResponse.java:101)
	at org.springframework.web.servlet.function.support.HandlerFunctionAdapter.handle(HandlerFunctionAdapter.java:112)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:633)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:511)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:454)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:361)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:208)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:285)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:149)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:239)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:243)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:57)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-26 18:22:41 [] DEBUG r.n.r.PooledConnectionProvider - [f63da066, L:/127.0.0.1:58117 ! R:localhost/127.0.0.1:8081] Channel closed, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-26 18:22:41 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f63da066, L:/127.0.0.1:58117 ! R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0xf63da066, L:/127.0.0.1:58117 ! R:localhost/127.0.0.1:8081]}, [disconnecting])
2025-02-26 18:22:41 [] ERROR o.a.c.c.C.[Tomcat].[localhost] - Exception Processing [ErrorPage[errorCode=0, location=/error]]
jakarta.servlet.ServletException: Async processing failed
	at org.springframework.web.servlet.function.DefaultAsyncServerResponse.writeAsync(DefaultAsyncServerResponse.java:136)
	at org.springframework.web.servlet.function.DefaultEntityResponseBuilder$PublisherEntityResponse.writeToInternal(DefaultEntityResponseBuilder.java:429)
	at org.springframework.web.servlet.function.AbstractServerResponse.writeTo(AbstractServerResponse.java:101)
	at org.springframework.web.servlet.function.support.HandlerFunctionAdapter.handle(HandlerFunctionAdapter.java:112)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:633)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:511)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:454)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:361)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:208)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:285)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:149)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:239)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:243)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:57)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: java.lang.IllegalStateException: Cannot start async: [ERROR]
	at org.springframework.util.Assert.state(Assert.java:79)
	at org.springframework.web.context.request.async.StandardServletAsyncWebRequest.startAsync(StandardServletAsyncWebRequest.java:157)
	at org.springframework.web.context.request.async.WebAsyncManager.startAsyncProcessing(WebAsyncManager.java:487)
	at org.springframework.web.context.request.async.WebAsyncManager.startDeferredResultProcessing(WebAsyncManager.java:462)
	at org.springframework.web.servlet.function.DefaultAsyncServerResponse.writeAsync(DefaultAsyncServerResponse.java:130)
	... 41 common frames omitted
2025-02-26 18:22:55 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-26 18:22:55 [4ae59748-25cd-40b5-a72a-e9cf47dde961] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-26 18:22:55 [4ae59748-25cd-40b5-a72a-e9cf47dde961] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-26 18:22:55 [4ae59748-25cd-40b5-a72a-e9cf47dde961] INFO  c.c.c.g.c.config.RouterConfiguration - Authorized Request!
2025-02-26 18:22:55 [4ae59748-25cd-40b5-a72a-e9cf47dde961] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [GET] /validate
2025-02-26 18:22:55 [4ae59748-25cd-40b5-a72a-e9cf47dde961] INFO  c.c.c.g.c.config.RouterConfiguration - Validation Response from Cache: true
2025-02-26 18:22:55 [4ae59748-25cd-40b5-a72a-e9cf47dde961] INFO  c.c.c.g.c.config.RouterConfiguration - Forwarding [GET] /validate to User Microservice
2025-02-26 18:22:55 [] DEBUG r.n.r.PooledConnectionProvider - [1b009784] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-26 18:22:55 [] DEBUG r.netty.transport.TransportConfig - [1b009784] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-26 18:22:55 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-26 18:22:55 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-26 18:22:55 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-26 18:22:55 [] DEBUG r.netty.transport.TransportConnector - [1b009784] Connecting to [localhost/127.0.0.1:8081].
2025-02-26 18:22:55 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [1b009784, L:/127.0.0.1:58128 - R:localhost/127.0.0.1:8081] Registering pool release on close event for channel
2025-02-26 18:22:55 [] DEBUG r.n.r.PooledConnectionProvider - [1b009784, L:/127.0.0.1:58128 - R:localhost/127.0.0.1:8081] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-26 18:22:55 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [1b009784, L:/127.0.0.1:58128 - R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x1b009784, L:/127.0.0.1:58128 - R:localhost/127.0.0.1:8081]}, [connected])
2025-02-26 18:22:55 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [1b009784-1, L:/127.0.0.1:58128 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0x1b009784, L:/127.0.0.1:58128 - R:localhost/127.0.0.1:8081]}}, [configured])
2025-02-26 18:22:55 [] DEBUG r.n.http.client.HttpClientConnect - [1b009784-1, L:/127.0.0.1:58128 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate, method=GET}
2025-02-26 18:22:55 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [1b009784-1, L:/127.0.0.1:58128 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x1b009784, L:/127.0.0.1:58128 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-26 18:22:55 [] DEBUG r.n.http.client.HttpClientOperations - [1b009784-1, L:/127.0.0.1:58128 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-26 18:22:55 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [1b009784-1, L:/127.0.0.1:58128 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x1b009784, L:/127.0.0.1:58128 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-26 18:22:55 [] DEBUG r.n.http.client.HttpClientOperations - [1b009784-1, L:/127.0.0.1:58128 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-26 18:22:55 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [1b009784-1, L:/127.0.0.1:58128 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x1b009784, L:/127.0.0.1:58128 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-26 18:22:55 [] DEBUG reactor.netty.channel.FluxReceive - [1b009784-1, L:/127.0.0.1:58128 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-26 18:22:55 [] DEBUG r.n.http.client.HttpClientOperations - [1b009784-1, L:/127.0.0.1:58128 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-26 18:22:55 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [1b009784, L:/127.0.0.1:58128 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x1b009784, L:/127.0.0.1:58128 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-26 18:22:55 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [1b009784, L:/127.0.0.1:58128 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x1b009784, L:/127.0.0.1:58128 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-26 18:22:55 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [1b009784, L:/127.0.0.1:58128 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-26 18:22:55 [] DEBUG r.n.r.PooledConnectionProvider - [1b009784, L:/127.0.0.1:58128 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-26 18:23:08 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-26 18:23:08 [a4523875-970c-4ce9-8885-ac164dbe50bc] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-26 18:23:08 [a4523875-970c-4ce9-8885-ac164dbe50bc] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-26 18:23:08 [a4523875-970c-4ce9-8885-ac164dbe50bc] INFO  c.c.c.g.c.config.RouterConfiguration - Authorized Request!
2025-02-26 18:23:08 [a4523875-970c-4ce9-8885-ac164dbe50bc] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [GET] /users
2025-02-26 18:23:08 [a4523875-970c-4ce9-8885-ac164dbe50bc] INFO  c.c.c.g.c.config.RouterConfiguration - Validation Response from Cache: true
2025-02-26 18:23:08 [a4523875-970c-4ce9-8885-ac164dbe50bc] INFO  c.c.c.g.c.config.RouterConfiguration - Forwarding [GET] /users to User Microservice
2025-02-26 18:23:08 [] DEBUG r.n.r.PooledConnectionProvider - [1b009784, L:/127.0.0.1:58128 - R:localhost/127.0.0.1:8081] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-26 18:23:08 [] DEBUG r.n.http.client.HttpClientConnect - [1b009784-2, L:/127.0.0.1:58128 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/users, method=GET}
2025-02-26 18:23:08 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [1b009784-2, L:/127.0.0.1:58128 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0x1b009784, L:/127.0.0.1:58128 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-26 18:23:08 [] DEBUG r.n.http.client.HttpClientOperations - [1b009784-2, L:/127.0.0.1:58128 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-26 18:23:08 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [1b009784-2, L:/127.0.0.1:58128 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0x1b009784, L:/127.0.0.1:58128 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-26 18:23:08 [] DEBUG r.n.http.client.HttpClientOperations - [1b009784-2, L:/127.0.0.1:58128 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 500 
Vary: <filtered>
Vary: <filtered>
Vary: <filtered>
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
Connection: <filtered>
2025-02-26 18:23:08 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [1b009784-2, L:/127.0.0.1:58128 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0x1b009784, L:/127.0.0.1:58128 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-26 18:23:08 [] DEBUG reactor.netty.channel.FluxReceive - [1b009784-2, L:/127.0.0.1:58128 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-26 18:23:08 [] DEBUG r.n.http.client.HttpClientOperations - [1b009784-2, L:/127.0.0.1:58128 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-26 18:23:08 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [1b009784, L:/127.0.0.1:58128 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0x1b009784, L:/127.0.0.1:58128 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-26 18:23:08 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [1b009784, L:/127.0.0.1:58128 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0x1b009784, L:/127.0.0.1:58128 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-26 18:23:08 [] DEBUG r.n.r.PooledConnectionProvider - [1b009784, L:/127.0.0.1:58128 ! R:localhost/127.0.0.1:8081] Channel closed, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-26 18:23:08 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [1b009784, L:/127.0.0.1:58128 ! R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x1b009784, L:/127.0.0.1:58128 ! R:localhost/127.0.0.1:8081]}, [disconnecting])
2025-02-26 18:23:08 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] threw exception
org.springframework.web.reactive.function.client.WebClientResponseException$InternalServerError: 500 Internal Server Error from GET http://localhost:8081/users
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 500 INTERNAL_SERVER_ERROR from GET http://localhost:8081/users [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-26 18:23:08 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [org.springframework.web.reactive.function.client.WebClientResponseException$InternalServerError: 500 Internal Server Error from GET http://localhost:8081/users] with root cause
org.springframework.web.reactive.function.client.WebClientResponseException$InternalServerError: 500 Internal Server Error from GET http://localhost:8081/users
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 500 INTERNAL_SERVER_ERROR from GET http://localhost:8081/users [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-26 18:23:08 [] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-26 18:23:08 [] INFO  c.c.c.g.c.config.RouterConfiguration - Authorized Request!
2025-02-26 18:23:08 [] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [GET] /error
2025-02-26 18:23:08 [] INFO  c.c.c.g.c.config.RouterConfiguration - Validation Response from Cache: true
2025-02-26 18:23:08 [] INFO  c.c.c.g.c.config.RouterConfiguration - Forwarding [GET] /error to User Microservice
2025-02-26 18:23:08 [] DEBUG r.n.r.PooledConnectionProvider - [85779030] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-26 18:23:08 [] DEBUG r.netty.transport.TransportConfig - [85779030] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-26 18:23:08 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-26 18:23:08 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-26 18:23:08 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-26 18:23:09 [] DEBUG r.netty.transport.TransportConnector - [85779030] Connecting to [localhost/127.0.0.1:8081].
2025-02-26 18:23:09 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [85779030, L:/127.0.0.1:58136 - R:localhost/127.0.0.1:8081] Registering pool release on close event for channel
2025-02-26 18:23:09 [] DEBUG r.n.r.PooledConnectionProvider - [85779030, L:/127.0.0.1:58136 - R:localhost/127.0.0.1:8081] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-26 18:23:09 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] threw exception
org.springframework.web.reactive.function.client.WebClientResponseException$InternalServerError: 500 Internal Server Error from GET http://localhost:8081/users
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 500 INTERNAL_SERVER_ERROR from GET http://localhost:8081/users [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-26 18:23:09 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [85779030, L:/127.0.0.1:58136 - R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x85779030, L:/127.0.0.1:58136 - R:localhost/127.0.0.1:8081]}, [connected])
2025-02-26 18:23:09 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [85779030-1, L:/127.0.0.1:58136 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0x85779030, L:/127.0.0.1:58136 - R:localhost/127.0.0.1:8081]}}, [configured])
2025-02-26 18:23:09 [] DEBUG r.n.http.client.HttpClientConnect - [85779030-1, L:/127.0.0.1:58136 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/error, method=GET}
2025-02-26 18:23:09 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [85779030-1, L:/127.0.0.1:58136 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0x85779030, L:/127.0.0.1:58136 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-26 18:23:09 [] DEBUG r.n.http.client.HttpClientOperations - [85779030-1, L:/127.0.0.1:58136 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-26 18:23:09 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [org.springframework.web.reactive.function.client.WebClientResponseException$InternalServerError: 500 Internal Server Error from GET http://localhost:8081/users] with root cause
org.springframework.web.reactive.function.client.WebClientResponseException$InternalServerError: 500 Internal Server Error from GET http://localhost:8081/users
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 500 INTERNAL_SERVER_ERROR from GET http://localhost:8081/users [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-26 18:23:09 [] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-26 18:23:09 [] INFO  c.c.c.g.c.config.RouterConfiguration - Authorized Request!
2025-02-26 18:23:09 [] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [GET] /error
2025-02-26 18:23:09 [] INFO  c.c.c.g.c.config.RouterConfiguration - Validation Response from Cache: true
2025-02-26 18:23:09 [] INFO  c.c.c.g.c.config.RouterConfiguration - Forwarding [GET] /error to User Microservice
2025-02-26 18:23:09 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] threw exception
java.lang.IllegalStateException: Cannot start async: [ERROR]
	at org.springframework.util.Assert.state(Assert.java:79)
	at org.springframework.web.context.request.async.StandardServletAsyncWebRequest.startAsync(StandardServletAsyncWebRequest.java:157)
	at org.springframework.web.context.request.async.WebAsyncManager.startAsyncProcessing(WebAsyncManager.java:487)
	at org.springframework.web.context.request.async.WebAsyncManager.startDeferredResultProcessing(WebAsyncManager.java:462)
	at org.springframework.web.servlet.function.DefaultAsyncServerResponse.writeAsync(DefaultAsyncServerResponse.java:130)
	at org.springframework.web.servlet.function.DefaultEntityResponseBuilder$PublisherEntityResponse.writeToInternal(DefaultEntityResponseBuilder.java:429)
	at org.springframework.web.servlet.function.AbstractServerResponse.writeTo(AbstractServerResponse.java:101)
	at org.springframework.web.servlet.function.support.HandlerFunctionAdapter.handle(HandlerFunctionAdapter.java:112)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:633)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:511)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:454)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:361)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:208)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:285)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:149)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:239)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:243)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:57)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-26 18:23:09 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [85779030-1, L:/127.0.0.1:58136 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0x85779030, L:/127.0.0.1:58136 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-26 18:23:09 [] ERROR o.a.c.c.C.[Tomcat].[localhost] - Exception Processing [ErrorPage[errorCode=0, location=/error]]
jakarta.servlet.ServletException: Async processing failed
	at org.springframework.web.servlet.function.DefaultAsyncServerResponse.writeAsync(DefaultAsyncServerResponse.java:136)
	at org.springframework.web.servlet.function.DefaultEntityResponseBuilder$PublisherEntityResponse.writeToInternal(DefaultEntityResponseBuilder.java:429)
	at org.springframework.web.servlet.function.AbstractServerResponse.writeTo(AbstractServerResponse.java:101)
	at org.springframework.web.servlet.function.support.HandlerFunctionAdapter.handle(HandlerFunctionAdapter.java:112)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:633)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:511)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:454)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:361)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:208)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:285)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:149)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:239)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:243)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:57)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: java.lang.IllegalStateException: Cannot start async: [ERROR]
	at org.springframework.util.Assert.state(Assert.java:79)
	at org.springframework.web.context.request.async.StandardServletAsyncWebRequest.startAsync(StandardServletAsyncWebRequest.java:157)
	at org.springframework.web.context.request.async.WebAsyncManager.startAsyncProcessing(WebAsyncManager.java:487)
	at org.springframework.web.context.request.async.WebAsyncManager.startDeferredResultProcessing(WebAsyncManager.java:462)
	at org.springframework.web.servlet.function.DefaultAsyncServerResponse.writeAsync(DefaultAsyncServerResponse.java:130)
	... 41 common frames omitted
2025-02-26 18:23:09 [] DEBUG r.n.http.client.HttpClientOperations - [85779030-1, L:/127.0.0.1:58136 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 500 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
Connection: <filtered>
2025-02-26 18:23:09 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [85779030-1, L:/127.0.0.1:58136 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0x85779030, L:/127.0.0.1:58136 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-26 18:23:09 [] DEBUG reactor.netty.channel.FluxReceive - [85779030-1, L:/127.0.0.1:58136 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-26 18:23:09 [] DEBUG r.n.http.client.HttpClientOperations - [85779030-1, L:/127.0.0.1:58136 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-26 18:23:09 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [85779030, L:/127.0.0.1:58136 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0x85779030, L:/127.0.0.1:58136 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-26 18:23:09 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [85779030, L:/127.0.0.1:58136 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0x85779030, L:/127.0.0.1:58136 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-26 18:23:09 [] DEBUG r.n.r.PooledConnectionProvider - [85779030, L:/127.0.0.1:58136 ! R:localhost/127.0.0.1:8081] Channel closed, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-26 18:23:09 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [85779030, L:/127.0.0.1:58136 ! R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x85779030, L:/127.0.0.1:58136 ! R:localhost/127.0.0.1:8081]}, [disconnecting])
2025-02-26 18:23:32 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-26 18:23:32 [88c0a291-07d0-4bba-946e-3500a73a2e96] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-26 18:23:32 [88c0a291-07d0-4bba-946e-3500a73a2e96] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-26 18:23:32 [88c0a291-07d0-4bba-946e-3500a73a2e96] INFO  c.c.c.g.c.config.RouterConfiguration - Authorized Request!
2025-02-26 18:23:32 [88c0a291-07d0-4bba-946e-3500a73a2e96] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [GET] /users
2025-02-26 18:23:32 [88c0a291-07d0-4bba-946e-3500a73a2e96] INFO  c.c.c.g.c.config.RouterConfiguration - Validation Response from Cache: true
2025-02-26 18:23:32 [88c0a291-07d0-4bba-946e-3500a73a2e96] INFO  c.c.c.g.c.config.RouterConfiguration - Forwarding [GET] /users to User Microservice
2025-02-26 18:23:32 [] DEBUG r.n.r.PooledConnectionProvider - [8e81b2f7] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-26 18:23:32 [] DEBUG r.netty.transport.TransportConfig - [8e81b2f7] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-26 18:23:32 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-26 18:23:32 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-26 18:23:32 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-26 18:23:32 [] DEBUG r.netty.transport.TransportConnector - [8e81b2f7] Connecting to [localhost/127.0.0.1:8081].
2025-02-26 18:23:32 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [8e81b2f7, L:/127.0.0.1:58156 - R:localhost/127.0.0.1:8081] Registering pool release on close event for channel
2025-02-26 18:23:32 [] DEBUG r.n.r.PooledConnectionProvider - [8e81b2f7, L:/127.0.0.1:58156 - R:localhost/127.0.0.1:8081] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-26 18:23:32 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [8e81b2f7, L:/127.0.0.1:58156 - R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x8e81b2f7, L:/127.0.0.1:58156 - R:localhost/127.0.0.1:8081]}, [connected])
2025-02-26 18:23:32 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [8e81b2f7-1, L:/127.0.0.1:58156 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0x8e81b2f7, L:/127.0.0.1:58156 - R:localhost/127.0.0.1:8081]}}, [configured])
2025-02-26 18:23:32 [] DEBUG r.n.http.client.HttpClientConnect - [8e81b2f7-1, L:/127.0.0.1:58156 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/users, method=GET}
2025-02-26 18:23:32 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [8e81b2f7-1, L:/127.0.0.1:58156 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0x8e81b2f7, L:/127.0.0.1:58156 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-26 18:23:32 [] DEBUG r.n.http.client.HttpClientOperations - [8e81b2f7-1, L:/127.0.0.1:58156 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-26 18:23:32 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [8e81b2f7-1, L:/127.0.0.1:58156 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0x8e81b2f7, L:/127.0.0.1:58156 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-26 18:23:32 [] DEBUG r.n.http.client.HttpClientOperations - [8e81b2f7-1, L:/127.0.0.1:58156 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 500 
Vary: <filtered>
Vary: <filtered>
Vary: <filtered>
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
Connection: <filtered>
2025-02-26 18:23:32 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [8e81b2f7-1, L:/127.0.0.1:58156 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0x8e81b2f7, L:/127.0.0.1:58156 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-26 18:23:32 [] DEBUG reactor.netty.channel.FluxReceive - [8e81b2f7-1, L:/127.0.0.1:58156 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-26 18:23:32 [] DEBUG r.n.http.client.HttpClientOperations - [8e81b2f7-1, L:/127.0.0.1:58156 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-26 18:23:32 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [8e81b2f7, L:/127.0.0.1:58156 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0x8e81b2f7, L:/127.0.0.1:58156 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-26 18:23:32 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [8e81b2f7, L:/127.0.0.1:58156 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0x8e81b2f7, L:/127.0.0.1:58156 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-26 18:23:32 [] DEBUG r.n.r.PooledConnectionProvider - [8e81b2f7, L:/127.0.0.1:58156 ! R:localhost/127.0.0.1:8081] Channel closed, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-26 18:23:32 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [8e81b2f7, L:/127.0.0.1:58156 ! R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x8e81b2f7, L:/127.0.0.1:58156 ! R:localhost/127.0.0.1:8081]}, [disconnecting])
2025-02-26 18:23:32 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] threw exception
org.springframework.web.reactive.function.client.WebClientResponseException$InternalServerError: 500 Internal Server Error from GET http://localhost:8081/users
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 500 INTERNAL_SERVER_ERROR from GET http://localhost:8081/users [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-26 18:23:32 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [org.springframework.web.reactive.function.client.WebClientResponseException$InternalServerError: 500 Internal Server Error from GET http://localhost:8081/users] with root cause
org.springframework.web.reactive.function.client.WebClientResponseException$InternalServerError: 500 Internal Server Error from GET http://localhost:8081/users
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 500 INTERNAL_SERVER_ERROR from GET http://localhost:8081/users [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-26 18:23:32 [] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-26 18:23:32 [] INFO  c.c.c.g.c.config.RouterConfiguration - Authorized Request!
2025-02-26 18:23:32 [] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [GET] /error
2025-02-26 18:23:32 [] INFO  c.c.c.g.c.config.RouterConfiguration - Validation Response from Cache: true
2025-02-26 18:23:32 [] INFO  c.c.c.g.c.config.RouterConfiguration - Forwarding [GET] /error to User Microservice
2025-02-26 18:23:32 [] DEBUG r.n.r.PooledConnectionProvider - [9e5cec0d] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-26 18:23:32 [] DEBUG r.netty.transport.TransportConfig - [9e5cec0d] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-26 18:23:32 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-26 18:23:32 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-26 18:23:32 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-26 18:23:32 [] DEBUG r.netty.transport.TransportConnector - [9e5cec0d] Connecting to [localhost/127.0.0.1:8081].
2025-02-26 18:23:32 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [9e5cec0d, L:/127.0.0.1:58157 - R:localhost/127.0.0.1:8081] Registering pool release on close event for channel
2025-02-26 18:23:32 [] DEBUG r.n.r.PooledConnectionProvider - [9e5cec0d, L:/127.0.0.1:58157 - R:localhost/127.0.0.1:8081] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-26 18:23:32 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] threw exception
org.springframework.web.reactive.function.client.WebClientResponseException$InternalServerError: 500 Internal Server Error from GET http://localhost:8081/users
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 500 INTERNAL_SERVER_ERROR from GET http://localhost:8081/users [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-26 18:23:32 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [9e5cec0d, L:/127.0.0.1:58157 - R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x9e5cec0d, L:/127.0.0.1:58157 - R:localhost/127.0.0.1:8081]}, [connected])
2025-02-26 18:23:32 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [9e5cec0d-1, L:/127.0.0.1:58157 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0x9e5cec0d, L:/127.0.0.1:58157 - R:localhost/127.0.0.1:8081]}}, [configured])
2025-02-26 18:23:32 [] DEBUG r.n.http.client.HttpClientConnect - [9e5cec0d-1, L:/127.0.0.1:58157 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/error, method=GET}
2025-02-26 18:23:32 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [9e5cec0d-1, L:/127.0.0.1:58157 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0x9e5cec0d, L:/127.0.0.1:58157 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-26 18:23:32 [] DEBUG r.n.http.client.HttpClientOperations - [9e5cec0d-1, L:/127.0.0.1:58157 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-26 18:23:32 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [org.springframework.web.reactive.function.client.WebClientResponseException$InternalServerError: 500 Internal Server Error from GET http://localhost:8081/users] with root cause
org.springframework.web.reactive.function.client.WebClientResponseException$InternalServerError: 500 Internal Server Error from GET http://localhost:8081/users
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 500 INTERNAL_SERVER_ERROR from GET http://localhost:8081/users [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-26 18:23:32 [] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-26 18:23:32 [] INFO  c.c.c.g.c.config.RouterConfiguration - Authorized Request!
2025-02-26 18:23:32 [] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [GET] /error
2025-02-26 18:23:32 [] INFO  c.c.c.g.c.config.RouterConfiguration - Validation Response from Cache: true
2025-02-26 18:23:32 [] INFO  c.c.c.g.c.config.RouterConfiguration - Forwarding [GET] /error to User Microservice
2025-02-26 18:23:32 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [9e5cec0d-1, L:/127.0.0.1:58157 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0x9e5cec0d, L:/127.0.0.1:58157 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-26 18:23:32 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] threw exception
java.lang.IllegalStateException: Cannot start async: [ERROR]
	at org.springframework.util.Assert.state(Assert.java:79)
	at org.springframework.web.context.request.async.StandardServletAsyncWebRequest.startAsync(StandardServletAsyncWebRequest.java:157)
	at org.springframework.web.context.request.async.WebAsyncManager.startAsyncProcessing(WebAsyncManager.java:487)
	at org.springframework.web.context.request.async.WebAsyncManager.startDeferredResultProcessing(WebAsyncManager.java:462)
	at org.springframework.web.servlet.function.DefaultAsyncServerResponse.writeAsync(DefaultAsyncServerResponse.java:130)
	at org.springframework.web.servlet.function.DefaultEntityResponseBuilder$PublisherEntityResponse.writeToInternal(DefaultEntityResponseBuilder.java:429)
	at org.springframework.web.servlet.function.AbstractServerResponse.writeTo(AbstractServerResponse.java:101)
	at org.springframework.web.servlet.function.support.HandlerFunctionAdapter.handle(HandlerFunctionAdapter.java:112)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:633)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:511)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:454)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:361)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:208)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:285)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:149)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:239)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:243)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:57)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-26 18:23:32 [] ERROR o.a.c.c.C.[Tomcat].[localhost] - Exception Processing [ErrorPage[errorCode=0, location=/error]]
jakarta.servlet.ServletException: Async processing failed
	at org.springframework.web.servlet.function.DefaultAsyncServerResponse.writeAsync(DefaultAsyncServerResponse.java:136)
	at org.springframework.web.servlet.function.DefaultEntityResponseBuilder$PublisherEntityResponse.writeToInternal(DefaultEntityResponseBuilder.java:429)
	at org.springframework.web.servlet.function.AbstractServerResponse.writeTo(AbstractServerResponse.java:101)
	at org.springframework.web.servlet.function.support.HandlerFunctionAdapter.handle(HandlerFunctionAdapter.java:112)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:633)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:511)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:454)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:361)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:208)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:285)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:149)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:239)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:243)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:57)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: java.lang.IllegalStateException: Cannot start async: [ERROR]
	at org.springframework.util.Assert.state(Assert.java:79)
	at org.springframework.web.context.request.async.StandardServletAsyncWebRequest.startAsync(StandardServletAsyncWebRequest.java:157)
	at org.springframework.web.context.request.async.WebAsyncManager.startAsyncProcessing(WebAsyncManager.java:487)
	at org.springframework.web.context.request.async.WebAsyncManager.startDeferredResultProcessing(WebAsyncManager.java:462)
	at org.springframework.web.servlet.function.DefaultAsyncServerResponse.writeAsync(DefaultAsyncServerResponse.java:130)
	... 41 common frames omitted
2025-02-26 18:23:32 [] DEBUG r.n.http.client.HttpClientOperations - [9e5cec0d-1, L:/127.0.0.1:58157 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 500 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
Connection: <filtered>
2025-02-26 18:23:32 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [9e5cec0d-1, L:/127.0.0.1:58157 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0x9e5cec0d, L:/127.0.0.1:58157 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-26 18:23:32 [] DEBUG reactor.netty.channel.FluxReceive - [9e5cec0d-1, L:/127.0.0.1:58157 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-26 18:23:32 [] DEBUG r.n.http.client.HttpClientOperations - [9e5cec0d-1, L:/127.0.0.1:58157 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-26 18:23:32 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [9e5cec0d, L:/127.0.0.1:58157 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0x9e5cec0d, L:/127.0.0.1:58157 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-26 18:23:32 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [9e5cec0d, L:/127.0.0.1:58157 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0x9e5cec0d, L:/127.0.0.1:58157 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-26 18:23:32 [] DEBUG r.n.r.PooledConnectionProvider - [9e5cec0d, L:/127.0.0.1:58157 ! R:localhost/127.0.0.1:8081] Channel closed, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-26 18:23:32 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [9e5cec0d, L:/127.0.0.1:58157 ! R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x9e5cec0d, L:/127.0.0.1:58157 ! R:localhost/127.0.0.1:8081]}, [disconnecting])
