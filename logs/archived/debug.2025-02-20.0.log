2025-02-20 11:35:26 [] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-02-20 11:35:26 [] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-02-20 11:35:28 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 4 thread-local buffer(s) from thread: reactor-http-nio-3
2025-02-20 11:35:28 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 3 thread-local buffer(s) from thread: reactor-http-nio-2
2025-02-20 11:35:33 [] DEBUG org.jboss.logging - Logging Provider: org.jboss.logging.Slf4jLoggerProvider found via system property
2025-02-20 11:35:33 [] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final
2025-02-20 11:35:33 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-02-20 11:35:33 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-02-20 11:35:33 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-02-20 11:35:33 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-02-20 11:35:33 [] DEBUG o.h.v.i.e.r.TraversableResolvers - Cannot find jakarta.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2025-02-20 11:35:33 [] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-02-20 11:35:33 [] INFO  c.c.c.g.c.CommongatewayApplication - Starting CommongatewayApplication using Java 17.0.12 with PID 28072 (E:\API-GATEWAY\commongateway\target\classes started by CITPL in E:\API-GATEWAY)
2025-02-20 11:35:33 [] DEBUG c.c.c.g.c.CommongatewayApplication - Running with Spring Boot v3.4.2, Spring v6.2.2
2025-02-20 11:35:33 [] INFO  c.c.c.g.c.CommongatewayApplication - No active profile set, falling back to 1 default profile: "default"
2025-02-20 11:35:33 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-02-20 11:35:33 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-02-20 11:35:33 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-02-20 11:35:33 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-02-20 11:35:33 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-02-20 11:35:33 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-02-20 11:35:34 [] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=50299984-946b-3bba-87da-3c9a1df8a676
2025-02-20 11:35:35 [] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-02-20 11:35:35 [] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-02-20 11:35:35 [] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-02-20 11:35:35 [] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.34]
2025-02-20 11:35:35 [] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-02-20 11:35:35 [] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1424 ms
2025-02-20 11:35:35 [] DEBUG i.n.u.i.l.InternalLoggerFactory - Using SLF4J as the default logging framework
2025-02-20 11:35:35 [] DEBUG i.n.util.internal.PlatformDependent0 - -Dio.netty.noUnsafe: false
2025-02-20 11:35:35 [] DEBUG i.n.util.internal.PlatformDependent0 - Java version: 17
2025-02-20 11:35:35 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe.theUnsafe: available
2025-02-20 11:35:35 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe base methods: all available
2025-02-20 11:35:35 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe.storeFence: available
2025-02-20 11:35:35 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.Buffer.address: available
2025-02-20 11:35:35 [] DEBUG i.n.util.internal.PlatformDependent0 - direct buffer constructor: unavailable: Reflective setAccessible(true) disabled
2025-02-20 11:35:35 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.Bits.unaligned: available, true
2025-02-20 11:35:35 [] DEBUG i.n.util.internal.PlatformDependent0 - jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable: class io.netty.util.internal.PlatformDependent0$7 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @7dc222ae
2025-02-20 11:35:35 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.DirectByteBuffer.<init>(long, {int,long}): unavailable
2025-02-20 11:35:35 [] DEBUG i.n.util.internal.PlatformDependent - sun.misc.Unsafe: available
2025-02-20 11:35:35 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.tmpdir: C:\Users\CITPL\AppData\Local\Temp (java.io.tmpdir)
2025-02-20 11:35:35 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.bitMode: 64 (sun.arch.data.model)
2025-02-20 11:35:35 [] DEBUG i.n.util.internal.PlatformDependent - Platform: Windows
2025-02-20 11:35:35 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.maxDirectMemory: -1 bytes
2025-02-20 11:35:35 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.uninitializedArrayAllocationThreshold: -1
2025-02-20 11:35:35 [] DEBUG io.netty.util.internal.CleanerJava9 - java.nio.ByteBuffer.cleaner(): available
2025-02-20 11:35:35 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.noPreferDirect: false
2025-02-20 11:35:35 [] DEBUG reactor.util.Loggers - Using Slf4j logging framework
2025-02-20 11:35:35 [] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-02-20 11:35:35 [] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2025-02-20 11:35:35 [] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2025-02-20 11:35:35 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-02-20 11:35:35 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via user class loader
2025-02-20 11:35:35 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-02-20 11:35:35 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-02-20 11:35:35 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-02-20 11:35:35 [] DEBUG o.h.v.i.e.r.TraversableResolvers - Cannot find jakarta.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2025-02-20 11:35:35 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-02-20 11:35:35 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-02-20 11:35:35 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-02-20 11:35:35 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-02-20 11:35:35 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-02-20 11:35:35 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-02-20 11:35:35 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	c.c.c.g.c.c.HomeController:
	{GET [/home]}: get()
2025-02-20 11:35:35 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2025-02-20 11:35:35 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 'beanNameHandlerMapping' {}
2025-02-20 11:35:35 [] DEBUG _.s.w.s.HandlerMapping.Mappings - Mapped com.citpl.common.gateway.commongateway.config.RouterConfiguration$$Lambda$895/0x000001e1534edeb0@5fef0c19 -> com.citpl.common.gateway.commongateway.config.RouterConfiguration$$Lambda$896/0x000001e1534ee118@2e6d76ba
2025-02-20 11:35:35 [] DEBUG _.s.w.s.HandlerMapping.Mappings - Mapped /validate/** -> ProxyExchangeHandlerFunction
/users/** -> ProxyExchangeHandlerFunction
2025-02-20 11:35:35 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2025-02-20 11:35:36 [] DEBUG i.n.u.i.InternalThreadLocalMap - -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2025-02-20 11:35:36 [] DEBUG i.n.u.i.InternalThreadLocalMap - -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2025-02-20 11:35:36 [] DEBUG io.netty.util.ResourceLeakDetector - -Dio.netty.leakDetection.level: simple
2025-02-20 11:35:36 [] DEBUG io.netty.util.ResourceLeakDetector - -Dio.netty.leakDetection.targetRecords: 4
2025-02-20 11:35:36 [] DEBUG i.n.handler.codec.compression.Brotli - brotli4j not in the classpath; Brotli support will be unavailable.
2025-02-20 11:35:36 [] DEBUG reactor.netty.tcp.TcpResources - [http] resources will use the default LoopResources: DefaultLoopResources {prefix=reactor-http, daemon=true, selectCount=12, workerCount=12}
2025-02-20 11:35:36 [] DEBUG reactor.netty.tcp.TcpResources - [http] resources will use the default ConnectionProvider: reactor.netty.resources.DefaultPooledConnectionProvider@496cedbb
2025-02-20 11:35:36 [] DEBUG r.netty.resources.DefaultLoopIOUring - Default io_uring support : false
2025-02-20 11:35:36 [] DEBUG r.netty.resources.DefaultLoopEpoll - Default Epoll support : false
2025-02-20 11:35:36 [] DEBUG r.netty.resources.DefaultLoopKQueue - Default KQueue support : false
2025-02-20 11:35:36 [] DEBUG i.n.c.MultithreadEventLoopGroup - -Dio.netty.eventLoopThreads: 24
2025-02-20 11:35:36 [] DEBUG i.n.u.concurrent.GlobalEventExecutor - -Dio.netty.globalEventExecutor.quietPeriodSeconds: 1
2025-02-20 11:35:36 [] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.noKeySetOptimization: false
2025-02-20 11:35:36 [] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.selectorAutoRebuildThreshold: 512
2025-02-20 11:35:36 [] DEBUG i.n.util.internal.PlatformDependent - org.jctools-core.MpscChunkedArrayQueue: available
2025-02-20 11:35:36 [] DEBUG io.netty.util.NetUtil - -Djava.net.preferIPv4Stack: false
2025-02-20 11:35:36 [] DEBUG io.netty.util.NetUtil - -Djava.net.preferIPv6Addresses: false
2025-02-20 11:35:36 [] DEBUG i.netty.util.NetUtilInitializations - Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2025-02-20 11:35:36 [] DEBUG io.netty.util.NetUtil - Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2025-02-20 11:35:36 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default ResolvedAddressTypes: IPV4_ONLY
2025-02-20 11:35:36 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Localhost address: localhost/127.0.0.1
2025-02-20 11:35:36 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Windows hostname: DESKTOP-P307093
2025-02-20 11:35:36 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default search domains: []
2025-02-20 11:35:36 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default UnixResolverOptions{ndots=1, timeout=5, attempts=16}
2025-02-20 11:35:36 [] DEBUG i.n.r.DefaultHostsFileEntriesResolver - -Dio.netty.hostsFileRefreshInterval: 0
2025-02-20 11:35:36 [] DEBUG i.n.r.d.DefaultDnsServerAddressStreamProvider - Default DNS servers: [/8.8.8.8:53, /4.2.2.2:53] (sun.net.dns.ResolverConfiguration)
2025-02-20 11:35:36 [] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-02-20 11:35:36 [] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-02-20 11:35:36 [] INFO  c.c.c.g.c.CommongatewayApplication - Started CommongatewayApplication in 3.707 seconds (process running for 4.595)
2025-02-20 11:35:52 [] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-02-20 11:35:52 [] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-02-20 11:35:52 [] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-02-20 11:35:52 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-20 11:35:52 [325ad0e9-912f-4930-9193-7df0fc21d0a8] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-20 11:35:52 [325ad0e9-912f-4930-9193-7df0fc21d0a8] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-20 11:35:52 [325ad0e9-912f-4930-9193-7df0fc21d0a8] INFO  c.c.c.g.c.config.RouterConfiguration - ✅ Authorized Request!
2025-02-20 11:35:52 [325ad0e9-912f-4930-9193-7df0fc21d0a8] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [GET] /validate
2025-02-20 11:35:53 [325ad0e9-912f-4930-9193-7df0fc21d0a8] DEBUG r.n.r.PooledConnectionProvider - Creating a new [http] client pool [PoolFactory{evictionInterval=PT0S, leasingStrategy=fifo, maxConnections=500, maxIdleTime=-1, maxLifeTime=-1, metricsEnabled=false, pendingAcquireMaxCount=1000, pendingAcquireTimeout=45000}] for [localhost/<unresolved>:8081]
2025-02-20 11:35:53 [325ad0e9-912f-4930-9193-7df0fc21d0a8] DEBUG io.netty.channel.DefaultChannelId - -Dio.netty.processId: 28072 (auto-detected)
2025-02-20 11:35:53 [325ad0e9-912f-4930-9193-7df0fc21d0a8] DEBUG io.netty.channel.DefaultChannelId - -Dio.netty.machineId: a0:d3:65:ff:fe:5e:b0:28 (auto-detected)
2025-02-20 11:35:53 [325ad0e9-912f-4930-9193-7df0fc21d0a8] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.numHeapArenas: 24
2025-02-20 11:35:53 [325ad0e9-912f-4930-9193-7df0fc21d0a8] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.numDirectArenas: 24
2025-02-20 11:35:53 [325ad0e9-912f-4930-9193-7df0fc21d0a8] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.pageSize: 8192
2025-02-20 11:35:53 [325ad0e9-912f-4930-9193-7df0fc21d0a8] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxOrder: 9
2025-02-20 11:35:53 [325ad0e9-912f-4930-9193-7df0fc21d0a8] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.chunkSize: 4194304
2025-02-20 11:35:53 [325ad0e9-912f-4930-9193-7df0fc21d0a8] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.smallCacheSize: 256
2025-02-20 11:35:53 [325ad0e9-912f-4930-9193-7df0fc21d0a8] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.normalCacheSize: 64
2025-02-20 11:35:53 [325ad0e9-912f-4930-9193-7df0fc21d0a8] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2025-02-20 11:35:53 [325ad0e9-912f-4930-9193-7df0fc21d0a8] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.cacheTrimInterval: 8192
2025-02-20 11:35:53 [325ad0e9-912f-4930-9193-7df0fc21d0a8] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.cacheTrimIntervalMillis: 0
2025-02-20 11:35:53 [325ad0e9-912f-4930-9193-7df0fc21d0a8] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.useCacheForAllThreads: false
2025-02-20 11:35:53 [325ad0e9-912f-4930-9193-7df0fc21d0a8] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
2025-02-20 11:35:53 [325ad0e9-912f-4930-9193-7df0fc21d0a8] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.disableCacheFinalizersForFastThreadLocalThreads: false
2025-02-20 11:35:53 [325ad0e9-912f-4930-9193-7df0fc21d0a8] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.allocator.type: pooled
2025-02-20 11:35:53 [325ad0e9-912f-4930-9193-7df0fc21d0a8] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.threadLocalDirectBufferSize: 0
2025-02-20 11:35:53 [325ad0e9-912f-4930-9193-7df0fc21d0a8] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.maxThreadLocalCharBufferSize: 16384
2025-02-20 11:35:53 [] DEBUG r.n.r.PooledConnectionProvider - [60ec0dc4] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 11:35:53 [] DEBUG io.netty.buffer.AbstractByteBuf - -Dio.netty.buffer.checkAccessible: true
2025-02-20 11:35:53 [] DEBUG io.netty.buffer.AbstractByteBuf - -Dio.netty.buffer.checkBounds: true
2025-02-20 11:35:53 [] DEBUG i.n.util.ResourceLeakDetectorFactory - Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@30f8186a
2025-02-20 11:35:53 [] DEBUG r.netty.transport.TransportConfig - [60ec0dc4] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-20 11:35:53 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 11:35:53 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 11:35:53 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 11:35:53 [] DEBUG i.n.b.ChannelInitializerExtensions - -Dio.netty.bootstrap.extensions: null
2025-02-20 11:35:53 [] DEBUG r.netty.transport.TransportConnector - [60ec0dc4] Connecting to [localhost/127.0.0.1:8081].
2025-02-20 11:35:53 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [60ec0dc4, L:/127.0.0.1:57016 - R:localhost/127.0.0.1:8081] Registering pool release on close event for channel
2025-02-20 11:35:53 [] DEBUG r.n.r.PooledConnectionProvider - [60ec0dc4, L:/127.0.0.1:57016 - R:localhost/127.0.0.1:8081] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 11:35:53 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [60ec0dc4, L:/127.0.0.1:57016 - R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x60ec0dc4, L:/127.0.0.1:57016 - R:localhost/127.0.0.1:8081]}, [connected])
2025-02-20 11:35:53 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [60ec0dc4-1, L:/127.0.0.1:57016 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0x60ec0dc4, L:/127.0.0.1:57016 - R:localhost/127.0.0.1:8081]}}, [configured])
2025-02-20 11:35:53 [] DEBUG r.n.http.client.HttpClientConnect - [60ec0dc4-1, L:/127.0.0.1:57016 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY, method=GET}
2025-02-20 11:35:53 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [60ec0dc4-1, L:/127.0.0.1:57016 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x60ec0dc4, L:/127.0.0.1:57016 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-20 11:35:53 [] DEBUG r.n.http.client.HttpClientOperations - [60ec0dc4-1, L:/127.0.0.1:57016 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-20 11:35:53 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.maxCapacityPerThread: 4096
2025-02-20 11:35:53 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.ratio: 8
2025-02-20 11:35:53 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.chunkSize: 32
2025-02-20 11:35:53 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.blocking: false
2025-02-20 11:35:53 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.batchFastThreadLocalOnly: true
2025-02-20 11:35:53 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [60ec0dc4-1, L:/127.0.0.1:57016 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x60ec0dc4, L:/127.0.0.1:57016 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-20 11:35:53 [] DEBUG i.n.handler.codec.compression.Zstd - zstd-jni not in the classpath; Zstd support will be unavailable.
2025-02-20 11:35:53 [] DEBUG r.n.http.client.HttpClientOperations - [60ec0dc4-1, L:/127.0.0.1:57016 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-20 11:35:53 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [60ec0dc4-1, L:/127.0.0.1:57016 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x60ec0dc4, L:/127.0.0.1:57016 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-20 11:35:53 [] DEBUG reactor.netty.channel.FluxReceive - [60ec0dc4-1, L:/127.0.0.1:57016 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 11:35:53 [] DEBUG r.n.http.client.HttpClientOperations - [60ec0dc4-1, L:/127.0.0.1:57016 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-20 11:35:53 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [60ec0dc4, L:/127.0.0.1:57016 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x60ec0dc4, L:/127.0.0.1:57016 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-20 11:35:53 [325ad0e9-912f-4930-9193-7df0fc21d0a8] INFO  c.c.c.g.c.config.RouterConfiguration - 🔹 Validation Response: true
2025-02-20 11:35:53 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [60ec0dc4, L:/127.0.0.1:57016 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x60ec0dc4, L:/127.0.0.1:57016 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-20 11:35:53 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [60ec0dc4, L:/127.0.0.1:57016 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-20 11:35:53 [325ad0e9-912f-4930-9193-7df0fc21d0a8] INFO  c.c.c.g.c.config.RouterConfiguration - ➡️ Forwarding [GET] /validate to User Microservice
2025-02-20 11:35:53 [] DEBUG r.n.r.PooledConnectionProvider - [60ec0dc4, L:/127.0.0.1:57016 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-20 11:35:53 [325ad0e9-912f-4930-9193-7df0fc21d0a8] DEBUG r.n.r.PooledConnectionProvider - Creating a new [http] client pool [PoolFactory{evictionInterval=PT0S, leasingStrategy=fifo, maxConnections=500, maxIdleTime=-1, maxLifeTime=-1, metricsEnabled=false, pendingAcquireMaxCount=1000, pendingAcquireTimeout=45000}] for [localhost/<unresolved>:8082]
2025-02-20 11:35:53 [] DEBUG r.n.r.PooledConnectionProvider - [f8c7b33f] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 11:35:53 [] DEBUG r.netty.transport.TransportConfig - [f8c7b33f] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-20 11:35:53 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 11:35:53 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 11:35:53 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 11:35:53 [] DEBUG r.netty.transport.TransportConnector - [f8c7b33f] Connecting to [localhost/127.0.0.1:8082].
2025-02-20 11:35:53 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f8c7b33f, L:/127.0.0.1:57017 - R:localhost/127.0.0.1:8082] Registering pool release on close event for channel
2025-02-20 11:35:53 [] DEBUG r.n.r.PooledConnectionProvider - [f8c7b33f, L:/127.0.0.1:57017 - R:localhost/127.0.0.1:8082] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 11:35:53 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f8c7b33f, L:/127.0.0.1:57017 - R:localhost/127.0.0.1:8082] onStateChange(PooledConnection{channel=[id: 0xf8c7b33f, L:/127.0.0.1:57017 - R:localhost/127.0.0.1:8082]}, [connected])
2025-02-20 11:35:53 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f8c7b33f-1, L:/127.0.0.1:57017 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0xf8c7b33f, L:/127.0.0.1:57017 - R:localhost/127.0.0.1:8082]}}, [configured])
2025-02-20 11:35:53 [] DEBUG r.n.http.client.HttpClientConnect - [f8c7b33f-1, L:/127.0.0.1:57017 - R:localhost/127.0.0.1:8082] Handler is being applied: {uri=http://localhost:8082/validate, method=GET}
2025-02-20 11:35:53 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f8c7b33f-1, L:/127.0.0.1:57017 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xf8c7b33f, L:/127.0.0.1:57017 - R:localhost/127.0.0.1:8082]}}, [request_prepared])
2025-02-20 11:35:53 [] DEBUG r.n.http.client.HttpClientOperations - [f8c7b33f-1, L:/127.0.0.1:57017 - R:localhost/127.0.0.1:8082] No sendHeaders() called before complete, sending zero-length header
2025-02-20 11:35:53 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f8c7b33f-1, L:/127.0.0.1:57017 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xf8c7b33f, L:/127.0.0.1:57017 - R:localhost/127.0.0.1:8082]}}, [request_sent])
2025-02-20 11:35:53 [] DEBUG r.n.http.client.HttpClientOperations - [f8c7b33f-1, L:/127.0.0.1:57017 - R:localhost/127.0.0.1:8082] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 404 
Vary: <filtered>
Vary: <filtered>
Vary: <filtered>
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-20 11:35:53 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f8c7b33f-1, L:/127.0.0.1:57017 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xf8c7b33f, L:/127.0.0.1:57017 - R:localhost/127.0.0.1:8082]}}, [response_received])
2025-02-20 11:35:53 [] DEBUG reactor.netty.channel.FluxReceive - [f8c7b33f-1, L:/127.0.0.1:57017 - R:localhost/127.0.0.1:8082] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 11:35:53 [] DEBUG r.n.http.client.HttpClientOperations - [f8c7b33f-1, L:/127.0.0.1:57017 - R:localhost/127.0.0.1:8082] Received last HTTP packet
2025-02-20 11:35:53 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f8c7b33f, L:/127.0.0.1:57017 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xf8c7b33f, L:/127.0.0.1:57017 - R:localhost/127.0.0.1:8082]}}, [response_completed])
2025-02-20 11:35:53 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f8c7b33f, L:/127.0.0.1:57017 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xf8c7b33f, L:/127.0.0.1:57017 - R:localhost/127.0.0.1:8082]}}, [disconnecting])
2025-02-20 11:35:53 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f8c7b33f, L:/127.0.0.1:57017 - R:localhost/127.0.0.1:8082] Releasing channel
2025-02-20 11:35:53 [] DEBUG r.n.r.PooledConnectionProvider - [f8c7b33f, L:/127.0.0.1:57017 - R:localhost/127.0.0.1:8082] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-20 11:35:53 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] threw exception
org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 404 NOT_FOUND from GET http://localhost:8082/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 11:35:53 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate] with root cause
org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 404 NOT_FOUND from GET http://localhost:8082/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 11:35:53 [] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-20 11:35:53 [] INFO  c.c.c.g.c.config.RouterConfiguration - ✅ Authorized Request!
2025-02-20 11:35:53 [] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [GET] /error
2025-02-20 11:35:53 [] DEBUG r.n.r.PooledConnectionProvider - [60ec0dc4, L:/127.0.0.1:57016 - R:localhost/127.0.0.1:8081] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 11:35:53 [] DEBUG r.n.http.client.HttpClientConnect - [60ec0dc4-2, L:/127.0.0.1:57016 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY, method=GET}
2025-02-20 11:35:53 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [60ec0dc4-2, L:/127.0.0.1:57016 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x60ec0dc4, L:/127.0.0.1:57016 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-20 11:35:53 [] DEBUG r.n.http.client.HttpClientOperations - [60ec0dc4-2, L:/127.0.0.1:57016 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-20 11:35:53 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [60ec0dc4-2, L:/127.0.0.1:57016 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x60ec0dc4, L:/127.0.0.1:57016 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-20 11:35:53 [] DEBUG r.n.http.client.HttpClientOperations - [60ec0dc4-2, L:/127.0.0.1:57016 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-20 11:35:53 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [60ec0dc4-2, L:/127.0.0.1:57016 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x60ec0dc4, L:/127.0.0.1:57016 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-20 11:35:53 [] DEBUG reactor.netty.channel.FluxReceive - [60ec0dc4-2, L:/127.0.0.1:57016 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 11:35:53 [] DEBUG r.n.http.client.HttpClientOperations - [60ec0dc4-2, L:/127.0.0.1:57016 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-20 11:35:53 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [60ec0dc4, L:/127.0.0.1:57016 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x60ec0dc4, L:/127.0.0.1:57016 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-20 11:35:53 [] INFO  c.c.c.g.c.config.RouterConfiguration - 🔹 Validation Response: true
2025-02-20 11:35:53 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [60ec0dc4, L:/127.0.0.1:57016 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x60ec0dc4, L:/127.0.0.1:57016 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-20 11:35:53 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [60ec0dc4, L:/127.0.0.1:57016 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-20 11:35:53 [] INFO  c.c.c.g.c.config.RouterConfiguration - ➡️ Forwarding [GET] /error to User Microservice
2025-02-20 11:35:53 [] DEBUG r.n.r.PooledConnectionProvider - [60ec0dc4, L:/127.0.0.1:57016 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-20 11:35:53 [] DEBUG r.n.r.PooledConnectionProvider - [f8c7b33f, L:/127.0.0.1:57017 - R:localhost/127.0.0.1:8082] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 11:35:53 [] DEBUG r.n.http.client.HttpClientConnect - [f8c7b33f-2, L:/127.0.0.1:57017 - R:localhost/127.0.0.1:8082] Handler is being applied: {uri=http://localhost:8082/error, method=GET}
2025-02-20 11:35:53 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f8c7b33f-2, L:/127.0.0.1:57017 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0xf8c7b33f, L:/127.0.0.1:57017 - R:localhost/127.0.0.1:8082]}}, [request_prepared])
2025-02-20 11:35:53 [] DEBUG r.n.http.client.HttpClientOperations - [f8c7b33f-2, L:/127.0.0.1:57017 - R:localhost/127.0.0.1:8082] No sendHeaders() called before complete, sending zero-length header
2025-02-20 11:35:53 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f8c7b33f-2, L:/127.0.0.1:57017 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0xf8c7b33f, L:/127.0.0.1:57017 - R:localhost/127.0.0.1:8082]}}, [request_sent])
2025-02-20 11:35:53 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] threw exception
org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 404 NOT_FOUND from GET http://localhost:8082/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 11:35:53 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate] with root cause
org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 404 NOT_FOUND from GET http://localhost:8082/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 11:35:53 [] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-20 11:35:53 [] INFO  c.c.c.g.c.config.RouterConfiguration - ✅ Authorized Request!
2025-02-20 11:35:53 [] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [GET] /error
2025-02-20 11:35:53 [] DEBUG r.n.http.client.HttpClientOperations - [f8c7b33f-2, L:/127.0.0.1:57017 - R:localhost/127.0.0.1:8082] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 500 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
Connection: <filtered>
2025-02-20 11:35:53 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f8c7b33f-2, L:/127.0.0.1:57017 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0xf8c7b33f, L:/127.0.0.1:57017 - R:localhost/127.0.0.1:8082]}}, [response_received])
2025-02-20 11:35:53 [] DEBUG r.n.r.PooledConnectionProvider - [60ec0dc4, L:/127.0.0.1:57016 - R:localhost/127.0.0.1:8081] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 11:35:53 [] DEBUG reactor.netty.channel.FluxReceive - [f8c7b33f-2, L:/127.0.0.1:57017 - R:localhost/127.0.0.1:8082] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 11:35:53 [] DEBUG r.n.http.client.HttpClientConnect - [60ec0dc4-3, L:/127.0.0.1:57016 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY, method=GET}
2025-02-20 11:35:53 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [60ec0dc4-3, L:/127.0.0.1:57016 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x60ec0dc4, L:/127.0.0.1:57016 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-20 11:35:53 [] DEBUG r.n.http.client.HttpClientOperations - [f8c7b33f-2, L:/127.0.0.1:57017 - R:localhost/127.0.0.1:8082] Received last HTTP packet
2025-02-20 11:35:53 [] DEBUG r.n.http.client.HttpClientOperations - [60ec0dc4-3, L:/127.0.0.1:57016 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-20 11:35:53 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [60ec0dc4-3, L:/127.0.0.1:57016 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x60ec0dc4, L:/127.0.0.1:57016 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-20 11:35:53 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f8c7b33f, L:/127.0.0.1:57017 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0xf8c7b33f, L:/127.0.0.1:57017 - R:localhost/127.0.0.1:8082]}}, [response_completed])
2025-02-20 11:35:53 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f8c7b33f, L:/127.0.0.1:57017 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0xf8c7b33f, L:/127.0.0.1:57017 - R:localhost/127.0.0.1:8082]}}, [disconnecting])
2025-02-20 11:35:53 [] DEBUG r.n.http.client.HttpClientOperations - [60ec0dc4-3, L:/127.0.0.1:57016 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-20 11:35:53 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [60ec0dc4-3, L:/127.0.0.1:57016 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x60ec0dc4, L:/127.0.0.1:57016 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-20 11:35:53 [] DEBUG r.n.r.PooledConnectionProvider - [f8c7b33f, L:/127.0.0.1:57017 ! R:localhost/127.0.0.1:8082] Channel closed, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 11:35:53 [] DEBUG reactor.netty.channel.FluxReceive - [60ec0dc4-3, L:/127.0.0.1:57016 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 11:35:53 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f8c7b33f, L:/127.0.0.1:57017 ! R:localhost/127.0.0.1:8082] onStateChange(PooledConnection{channel=[id: 0xf8c7b33f, L:/127.0.0.1:57017 ! R:localhost/127.0.0.1:8082]}, [disconnecting])
2025-02-20 11:35:53 [] DEBUG r.n.http.client.HttpClientOperations - [60ec0dc4-3, L:/127.0.0.1:57016 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-20 11:35:53 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [60ec0dc4, L:/127.0.0.1:57016 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x60ec0dc4, L:/127.0.0.1:57016 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-20 11:35:53 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [60ec0dc4, L:/127.0.0.1:57016 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x60ec0dc4, L:/127.0.0.1:57016 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-20 11:35:53 [] INFO  c.c.c.g.c.config.RouterConfiguration - 🔹 Validation Response: true
2025-02-20 11:35:53 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [60ec0dc4, L:/127.0.0.1:57016 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-20 11:35:53 [] INFO  c.c.c.g.c.config.RouterConfiguration - ➡️ Forwarding [GET] /error to User Microservice
2025-02-20 11:35:53 [] DEBUG r.n.r.PooledConnectionProvider - [60ec0dc4, L:/127.0.0.1:57016 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-20 11:35:53 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] threw exception
java.lang.IllegalStateException: Cannot start async: [ERROR]
	at org.springframework.util.Assert.state(Assert.java:79)
	at org.springframework.web.context.request.async.StandardServletAsyncWebRequest.startAsync(StandardServletAsyncWebRequest.java:157)
	at org.springframework.web.context.request.async.WebAsyncManager.startAsyncProcessing(WebAsyncManager.java:487)
	at org.springframework.web.context.request.async.WebAsyncManager.startDeferredResultProcessing(WebAsyncManager.java:462)
	at org.springframework.web.servlet.function.DefaultAsyncServerResponse.writeAsync(DefaultAsyncServerResponse.java:130)
	at org.springframework.web.servlet.function.DefaultEntityResponseBuilder$PublisherEntityResponse.writeToInternal(DefaultEntityResponseBuilder.java:429)
	at org.springframework.web.servlet.function.AbstractServerResponse.writeTo(AbstractServerResponse.java:101)
	at org.springframework.web.servlet.function.support.HandlerFunctionAdapter.handle(HandlerFunctionAdapter.java:112)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:633)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:511)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:454)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:361)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:208)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:285)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:149)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:239)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:243)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:57)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 11:35:53 [] ERROR o.a.c.c.C.[Tomcat].[localhost] - Exception Processing [ErrorPage[errorCode=0, location=/error]]
jakarta.servlet.ServletException: Async processing failed
	at org.springframework.web.servlet.function.DefaultAsyncServerResponse.writeAsync(DefaultAsyncServerResponse.java:136)
	at org.springframework.web.servlet.function.DefaultEntityResponseBuilder$PublisherEntityResponse.writeToInternal(DefaultEntityResponseBuilder.java:429)
	at org.springframework.web.servlet.function.AbstractServerResponse.writeTo(AbstractServerResponse.java:101)
	at org.springframework.web.servlet.function.support.HandlerFunctionAdapter.handle(HandlerFunctionAdapter.java:112)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:633)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:511)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:454)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:361)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:208)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:285)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:149)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:239)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:243)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:57)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: java.lang.IllegalStateException: Cannot start async: [ERROR]
	at org.springframework.util.Assert.state(Assert.java:79)
	at org.springframework.web.context.request.async.StandardServletAsyncWebRequest.startAsync(StandardServletAsyncWebRequest.java:157)
	at org.springframework.web.context.request.async.WebAsyncManager.startAsyncProcessing(WebAsyncManager.java:487)
	at org.springframework.web.context.request.async.WebAsyncManager.startDeferredResultProcessing(WebAsyncManager.java:462)
	at org.springframework.web.servlet.function.DefaultAsyncServerResponse.writeAsync(DefaultAsyncServerResponse.java:130)
	... 41 common frames omitted
2025-02-20 11:36:21 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-20 11:36:21 [871da678-13a9-410f-a337-e37ef52530e4] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-20 11:36:21 [871da678-13a9-410f-a337-e37ef52530e4] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-20 11:36:21 [871da678-13a9-410f-a337-e37ef52530e4] INFO  c.c.c.g.c.config.RouterConfiguration - ✅ Authorized Request!
2025-02-20 11:36:21 [871da678-13a9-410f-a337-e37ef52530e4] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [GET] /users
2025-02-20 11:36:21 [] DEBUG r.n.r.PooledConnectionProvider - [60ec0dc4, L:/127.0.0.1:57016 - R:localhost/127.0.0.1:8081] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 11:36:21 [] DEBUG r.n.http.client.HttpClientConnect - [60ec0dc4-4, L:/127.0.0.1:57016 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY, method=GET}
2025-02-20 11:36:21 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [60ec0dc4-4, L:/127.0.0.1:57016 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x60ec0dc4, L:/127.0.0.1:57016 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-20 11:36:21 [] DEBUG r.n.http.client.HttpClientOperations - [60ec0dc4-4, L:/127.0.0.1:57016 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-20 11:36:21 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [60ec0dc4-4, L:/127.0.0.1:57016 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x60ec0dc4, L:/127.0.0.1:57016 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-20 11:36:21 [] DEBUG r.n.http.client.HttpClientOperations - [60ec0dc4-4, L:/127.0.0.1:57016 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-20 11:36:21 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [60ec0dc4-4, L:/127.0.0.1:57016 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x60ec0dc4, L:/127.0.0.1:57016 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-20 11:36:21 [] DEBUG reactor.netty.channel.FluxReceive - [60ec0dc4-4, L:/127.0.0.1:57016 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 11:36:21 [] DEBUG r.n.http.client.HttpClientOperations - [60ec0dc4-4, L:/127.0.0.1:57016 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-20 11:36:21 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [60ec0dc4, L:/127.0.0.1:57016 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x60ec0dc4, L:/127.0.0.1:57016 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-20 11:36:21 [871da678-13a9-410f-a337-e37ef52530e4] INFO  c.c.c.g.c.config.RouterConfiguration - 🔹 Validation Response: true
2025-02-20 11:36:21 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [60ec0dc4, L:/127.0.0.1:57016 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x60ec0dc4, L:/127.0.0.1:57016 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-20 11:36:21 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [60ec0dc4, L:/127.0.0.1:57016 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-20 11:36:21 [871da678-13a9-410f-a337-e37ef52530e4] INFO  c.c.c.g.c.config.RouterConfiguration - ➡️ Forwarding [GET] /users to User Microservice
2025-02-20 11:36:21 [] DEBUG r.n.r.PooledConnectionProvider - [60ec0dc4, L:/127.0.0.1:57016 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-20 11:36:21 [] DEBUG r.n.r.PooledConnectionProvider - [bfed353b] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 11:36:21 [] DEBUG r.netty.transport.TransportConfig - [bfed353b] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-20 11:36:21 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 11:36:21 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 11:36:21 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 11:36:21 [] DEBUG r.netty.transport.TransportConnector - [bfed353b] Connecting to [localhost/127.0.0.1:8082].
2025-02-20 11:36:21 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [bfed353b, L:/127.0.0.1:57031 - R:localhost/127.0.0.1:8082] Registering pool release on close event for channel
2025-02-20 11:36:21 [] DEBUG r.n.r.PooledConnectionProvider - [bfed353b, L:/127.0.0.1:57031 - R:localhost/127.0.0.1:8082] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 11:36:21 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [bfed353b, L:/127.0.0.1:57031 - R:localhost/127.0.0.1:8082] onStateChange(PooledConnection{channel=[id: 0xbfed353b, L:/127.0.0.1:57031 - R:localhost/127.0.0.1:8082]}, [connected])
2025-02-20 11:36:21 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [bfed353b-1, L:/127.0.0.1:57031 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0xbfed353b, L:/127.0.0.1:57031 - R:localhost/127.0.0.1:8082]}}, [configured])
2025-02-20 11:36:21 [] DEBUG r.n.http.client.HttpClientConnect - [bfed353b-1, L:/127.0.0.1:57031 - R:localhost/127.0.0.1:8082] Handler is being applied: {uri=http://localhost:8082/users, method=GET}
2025-02-20 11:36:21 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [bfed353b-1, L:/127.0.0.1:57031 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0xbfed353b, L:/127.0.0.1:57031 - R:localhost/127.0.0.1:8082]}}, [request_prepared])
2025-02-20 11:36:21 [] DEBUG r.n.http.client.HttpClientOperations - [bfed353b-1, L:/127.0.0.1:57031 - R:localhost/127.0.0.1:8082] No sendHeaders() called before complete, sending zero-length header
2025-02-20 11:36:21 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [bfed353b-1, L:/127.0.0.1:57031 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0xbfed353b, L:/127.0.0.1:57031 - R:localhost/127.0.0.1:8082]}}, [request_sent])
2025-02-20 11:36:21 [] DEBUG r.n.http.client.HttpClientOperations - [bfed353b-1, L:/127.0.0.1:57031 - R:localhost/127.0.0.1:8082] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Content-Length: <filtered>
Date: <filtered>
2025-02-20 11:36:21 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [bfed353b-1, L:/127.0.0.1:57031 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0xbfed353b, L:/127.0.0.1:57031 - R:localhost/127.0.0.1:8082]}}, [response_received])
2025-02-20 11:36:21 [] DEBUG reactor.netty.channel.FluxReceive - [bfed353b-1, L:/127.0.0.1:57031 - R:localhost/127.0.0.1:8082] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 11:36:21 [] DEBUG r.n.http.client.HttpClientOperations - [bfed353b-1, L:/127.0.0.1:57031 - R:localhost/127.0.0.1:8082] Received last HTTP packet
2025-02-20 11:36:21 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [bfed353b, L:/127.0.0.1:57031 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0xbfed353b, L:/127.0.0.1:57031 - R:localhost/127.0.0.1:8082]}}, [response_completed])
2025-02-20 11:36:21 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [bfed353b, L:/127.0.0.1:57031 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0xbfed353b, L:/127.0.0.1:57031 - R:localhost/127.0.0.1:8082]}}, [disconnecting])
2025-02-20 11:36:21 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [bfed353b, L:/127.0.0.1:57031 - R:localhost/127.0.0.1:8082] Releasing channel
2025-02-20 11:36:21 [] DEBUG r.n.r.PooledConnectionProvider - [bfed353b, L:/127.0.0.1:57031 - R:localhost/127.0.0.1:8082] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-20 11:36:34 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-20 11:36:34 [3a5e20dd-ca2b-4942-9902-a5dd3561d589] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-20 11:36:34 [3a5e20dd-ca2b-4942-9902-a5dd3561d589] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-20 11:36:34 [3a5e20dd-ca2b-4942-9902-a5dd3561d589] INFO  c.c.c.g.c.config.RouterConfiguration - ✅ Authorized Request!
2025-02-20 11:36:34 [3a5e20dd-ca2b-4942-9902-a5dd3561d589] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [GET] /users
2025-02-20 11:36:34 [3a5e20dd-ca2b-4942-9902-a5dd3561d589] WARN  c.c.c.g.c.config.RouterConfiguration - ❌ Missing Validation Token!
2025-02-20 11:36:39 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-20 11:36:39 [317e9a51-a8ac-4d29-abdc-0e28ff15dacf] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-20 11:36:39 [317e9a51-a8ac-4d29-abdc-0e28ff15dacf] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-20 11:36:39 [317e9a51-a8ac-4d29-abdc-0e28ff15dacf] INFO  c.c.c.g.c.config.RouterConfiguration - ✅ Authorized Request!
2025-02-20 11:36:39 [317e9a51-a8ac-4d29-abdc-0e28ff15dacf] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [GET] /users
2025-02-20 11:36:39 [] DEBUG r.n.r.PooledConnectionProvider - [60ec0dc4, L:/127.0.0.1:57016 - R:localhost/127.0.0.1:8081] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 11:36:39 [] DEBUG r.n.http.client.HttpClientConnect - [60ec0dc4-5, L:/127.0.0.1:57016 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY, method=GET}
2025-02-20 11:36:39 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [60ec0dc4-5, L:/127.0.0.1:57016 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x60ec0dc4, L:/127.0.0.1:57016 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-20 11:36:39 [] DEBUG r.n.http.client.HttpClientOperations - [60ec0dc4-5, L:/127.0.0.1:57016 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-20 11:36:39 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [60ec0dc4-5, L:/127.0.0.1:57016 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x60ec0dc4, L:/127.0.0.1:57016 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-20 11:36:39 [] DEBUG r.n.http.client.HttpClientOperations - [60ec0dc4-5, L:/127.0.0.1:57016 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-20 11:36:39 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [60ec0dc4-5, L:/127.0.0.1:57016 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x60ec0dc4, L:/127.0.0.1:57016 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-20 11:36:39 [] DEBUG reactor.netty.channel.FluxReceive - [60ec0dc4-5, L:/127.0.0.1:57016 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 11:36:39 [] DEBUG r.n.http.client.HttpClientOperations - [60ec0dc4-5, L:/127.0.0.1:57016 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-20 11:36:39 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [60ec0dc4, L:/127.0.0.1:57016 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x60ec0dc4, L:/127.0.0.1:57016 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-20 11:36:39 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [60ec0dc4, L:/127.0.0.1:57016 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x60ec0dc4, L:/127.0.0.1:57016 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-20 11:36:39 [317e9a51-a8ac-4d29-abdc-0e28ff15dacf] INFO  c.c.c.g.c.config.RouterConfiguration - 🔹 Validation Response: true
2025-02-20 11:36:39 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [60ec0dc4, L:/127.0.0.1:57016 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-20 11:36:39 [317e9a51-a8ac-4d29-abdc-0e28ff15dacf] INFO  c.c.c.g.c.config.RouterConfiguration - ➡️ Forwarding [GET] /users to User Microservice
2025-02-20 11:36:39 [] DEBUG r.n.r.PooledConnectionProvider - [60ec0dc4, L:/127.0.0.1:57016 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-20 11:36:39 [] DEBUG r.n.r.PooledConnectionProvider - [bfed353b, L:/127.0.0.1:57031 - R:localhost/127.0.0.1:8082] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 11:36:39 [] DEBUG r.n.http.client.HttpClientConnect - [bfed353b-2, L:/127.0.0.1:57031 - R:localhost/127.0.0.1:8082] Handler is being applied: {uri=http://localhost:8082/users, method=GET}
2025-02-20 11:36:39 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [bfed353b-2, L:/127.0.0.1:57031 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0xbfed353b, L:/127.0.0.1:57031 - R:localhost/127.0.0.1:8082]}}, [request_prepared])
2025-02-20 11:36:39 [] DEBUG r.n.http.client.HttpClientOperations - [bfed353b-2, L:/127.0.0.1:57031 - R:localhost/127.0.0.1:8082] No sendHeaders() called before complete, sending zero-length header
2025-02-20 11:36:39 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [bfed353b-2, L:/127.0.0.1:57031 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0xbfed353b, L:/127.0.0.1:57031 - R:localhost/127.0.0.1:8082]}}, [request_sent])
2025-02-20 11:36:39 [] DEBUG r.n.http.client.HttpClientOperations - [bfed353b-2, L:/127.0.0.1:57031 - R:localhost/127.0.0.1:8082] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Content-Length: <filtered>
Date: <filtered>
2025-02-20 11:36:39 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [bfed353b-2, L:/127.0.0.1:57031 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0xbfed353b, L:/127.0.0.1:57031 - R:localhost/127.0.0.1:8082]}}, [response_received])
2025-02-20 11:36:39 [] DEBUG reactor.netty.channel.FluxReceive - [bfed353b-2, L:/127.0.0.1:57031 - R:localhost/127.0.0.1:8082] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 11:36:39 [] DEBUG r.n.http.client.HttpClientOperations - [bfed353b-2, L:/127.0.0.1:57031 - R:localhost/127.0.0.1:8082] Received last HTTP packet
2025-02-20 11:36:39 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [bfed353b, L:/127.0.0.1:57031 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0xbfed353b, L:/127.0.0.1:57031 - R:localhost/127.0.0.1:8082]}}, [response_completed])
2025-02-20 11:36:39 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [bfed353b, L:/127.0.0.1:57031 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0xbfed353b, L:/127.0.0.1:57031 - R:localhost/127.0.0.1:8082]}}, [disconnecting])
2025-02-20 11:36:39 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [bfed353b, L:/127.0.0.1:57031 - R:localhost/127.0.0.1:8082] Releasing channel
2025-02-20 11:36:39 [] DEBUG r.n.r.PooledConnectionProvider - [bfed353b, L:/127.0.0.1:57031 - R:localhost/127.0.0.1:8082] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-20 11:36:44 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-20 11:36:44 [ce6ab4f4-b773-4fa2-8969-6db276c61e1b] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-20 11:36:44 [ce6ab4f4-b773-4fa2-8969-6db276c61e1b] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: []
2025-02-20 11:36:44 [ce6ab4f4-b773-4fa2-8969-6db276c61e1b] WARN  c.c.c.g.c.config.RouterConfiguration - ❌ Invalid Organization - Access Denied
2025-02-20 11:36:56 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-20 11:36:56 [e17196ed-841e-44f2-a63f-8a3dfd1d16ed] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-20 11:36:56 [e17196ed-841e-44f2-a63f-8a3dfd1d16ed] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-20 11:36:56 [e17196ed-841e-44f2-a63f-8a3dfd1d16ed] INFO  c.c.c.g.c.config.RouterConfiguration - ✅ Authorized Request!
2025-02-20 11:36:56 [e17196ed-841e-44f2-a63f-8a3dfd1d16ed] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [GET] /validate
2025-02-20 11:36:56 [e17196ed-841e-44f2-a63f-8a3dfd1d16ed] WARN  c.c.c.g.c.config.RouterConfiguration - ❌ Missing Validation Token!
2025-02-20 11:37:04 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-20 11:37:04 [e1cc6db5-467e-4c9a-a001-8a3b8dbe3fdb] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-20 11:37:04 [e1cc6db5-467e-4c9a-a001-8a3b8dbe3fdb] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: []
2025-02-20 11:37:04 [e1cc6db5-467e-4c9a-a001-8a3b8dbe3fdb] WARN  c.c.c.g.c.config.RouterConfiguration - ❌ Invalid Organization - Access Denied
2025-02-20 11:37:40 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [60ec0dc4, L:/127.0.0.1:57016 ! R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x60ec0dc4, L:/127.0.0.1:57016 ! R:localhost/127.0.0.1:8081]}, [disconnecting])
2025-02-20 11:37:40 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [bfed353b, L:/127.0.0.1:57031 ! R:localhost/127.0.0.1:8082] onStateChange(PooledConnection{channel=[id: 0xbfed353b, L:/127.0.0.1:57031 ! R:localhost/127.0.0.1:8082]}, [disconnecting])
2025-02-20 11:39:27 [] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-02-20 11:39:27 [] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-02-20 11:39:30 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 5 thread-local buffer(s) from thread: reactor-http-nio-3
2025-02-20 11:39:30 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 7 thread-local buffer(s) from thread: reactor-http-nio-2
2025-02-20 11:39:30 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 3 thread-local buffer(s) from thread: reactor-http-nio-4
2025-02-20 11:39:33 [] DEBUG org.jboss.logging - Logging Provider: org.jboss.logging.Slf4jLoggerProvider found via system property
2025-02-20 11:39:33 [] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final
2025-02-20 11:39:33 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-02-20 11:39:33 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-02-20 11:39:33 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-02-20 11:39:33 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-02-20 11:39:33 [] DEBUG o.h.v.i.e.r.TraversableResolvers - Cannot find jakarta.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2025-02-20 11:39:33 [] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-02-20 11:39:33 [] INFO  c.c.c.g.c.CommongatewayApplication - Starting CommongatewayApplication using Java 17.0.12 with PID 8524 (E:\API-GATEWAY\commongateway\target\classes started by CITPL in E:\API-GATEWAY)
2025-02-20 11:39:33 [] DEBUG c.c.c.g.c.CommongatewayApplication - Running with Spring Boot v3.4.2, Spring v6.2.2
2025-02-20 11:39:33 [] INFO  c.c.c.g.c.CommongatewayApplication - No active profile set, falling back to 1 default profile: "default"
2025-02-20 11:39:33 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-02-20 11:39:33 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-02-20 11:39:33 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-02-20 11:39:33 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-02-20 11:39:33 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-02-20 11:39:33 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-02-20 11:39:34 [] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=50299984-946b-3bba-87da-3c9a1df8a676
2025-02-20 11:39:35 [] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-02-20 11:39:35 [] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-02-20 11:39:35 [] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-02-20 11:39:35 [] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.34]
2025-02-20 11:39:35 [] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-02-20 11:39:35 [] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1471 ms
2025-02-20 11:39:35 [] DEBUG i.n.u.i.l.InternalLoggerFactory - Using SLF4J as the default logging framework
2025-02-20 11:39:35 [] DEBUG i.n.util.internal.PlatformDependent0 - -Dio.netty.noUnsafe: false
2025-02-20 11:39:35 [] DEBUG i.n.util.internal.PlatformDependent0 - Java version: 17
2025-02-20 11:39:35 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe.theUnsafe: available
2025-02-20 11:39:35 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe base methods: all available
2025-02-20 11:39:35 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe.storeFence: available
2025-02-20 11:39:35 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.Buffer.address: available
2025-02-20 11:39:35 [] DEBUG i.n.util.internal.PlatformDependent0 - direct buffer constructor: unavailable: Reflective setAccessible(true) disabled
2025-02-20 11:39:35 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.Bits.unaligned: available, true
2025-02-20 11:39:35 [] DEBUG i.n.util.internal.PlatformDependent0 - jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable: class io.netty.util.internal.PlatformDependent0$7 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @7dc222ae
2025-02-20 11:39:35 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.DirectByteBuffer.<init>(long, {int,long}): unavailable
2025-02-20 11:39:35 [] DEBUG i.n.util.internal.PlatformDependent - sun.misc.Unsafe: available
2025-02-20 11:39:35 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.tmpdir: C:\Users\CITPL\AppData\Local\Temp (java.io.tmpdir)
2025-02-20 11:39:35 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.bitMode: 64 (sun.arch.data.model)
2025-02-20 11:39:35 [] DEBUG i.n.util.internal.PlatformDependent - Platform: Windows
2025-02-20 11:39:35 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.maxDirectMemory: -1 bytes
2025-02-20 11:39:35 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.uninitializedArrayAllocationThreshold: -1
2025-02-20 11:39:35 [] DEBUG io.netty.util.internal.CleanerJava9 - java.nio.ByteBuffer.cleaner(): available
2025-02-20 11:39:35 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.noPreferDirect: false
2025-02-20 11:39:35 [] DEBUG reactor.util.Loggers - Using Slf4j logging framework
2025-02-20 11:39:35 [] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-02-20 11:39:35 [] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2025-02-20 11:39:35 [] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2025-02-20 11:39:35 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-02-20 11:39:35 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via user class loader
2025-02-20 11:39:35 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-02-20 11:39:35 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-02-20 11:39:35 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-02-20 11:39:35 [] DEBUG o.h.v.i.e.r.TraversableResolvers - Cannot find jakarta.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2025-02-20 11:39:35 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-02-20 11:39:35 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-02-20 11:39:35 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-02-20 11:39:35 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-02-20 11:39:35 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-02-20 11:39:35 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-02-20 11:39:35 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	c.c.c.g.c.c.HomeController:
	{GET [/home]}: get()
2025-02-20 11:39:35 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2025-02-20 11:39:35 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 'beanNameHandlerMapping' {}
2025-02-20 11:39:35 [] DEBUG _.s.w.s.HandlerMapping.Mappings - Mapped com.citpl.common.gateway.commongateway.config.RouterConfiguration$$Lambda$895/0x000001bdd64efb30@3b0d3a63 -> com.citpl.common.gateway.commongateway.config.RouterConfiguration$$Lambda$896/0x000001bdd64efd98@50598a1a
2025-02-20 11:39:35 [] DEBUG _.s.w.s.HandlerMapping.Mappings - Mapped /validate/** -> ProxyExchangeHandlerFunction
/users/** -> ProxyExchangeHandlerFunction
2025-02-20 11:39:35 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2025-02-20 11:39:36 [] DEBUG i.n.u.i.InternalThreadLocalMap - -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2025-02-20 11:39:36 [] DEBUG i.n.u.i.InternalThreadLocalMap - -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2025-02-20 11:39:36 [] DEBUG io.netty.util.ResourceLeakDetector - -Dio.netty.leakDetection.level: simple
2025-02-20 11:39:36 [] DEBUG io.netty.util.ResourceLeakDetector - -Dio.netty.leakDetection.targetRecords: 4
2025-02-20 11:39:36 [] DEBUG i.n.handler.codec.compression.Brotli - brotli4j not in the classpath; Brotli support will be unavailable.
2025-02-20 11:39:36 [] DEBUG reactor.netty.tcp.TcpResources - [http] resources will use the default LoopResources: DefaultLoopResources {prefix=reactor-http, daemon=true, selectCount=12, workerCount=12}
2025-02-20 11:39:36 [] DEBUG reactor.netty.tcp.TcpResources - [http] resources will use the default ConnectionProvider: reactor.netty.resources.DefaultPooledConnectionProvider@7cb29ea8
2025-02-20 11:39:36 [] DEBUG r.netty.resources.DefaultLoopIOUring - Default io_uring support : false
2025-02-20 11:39:36 [] DEBUG r.netty.resources.DefaultLoopEpoll - Default Epoll support : false
2025-02-20 11:39:36 [] DEBUG r.netty.resources.DefaultLoopKQueue - Default KQueue support : false
2025-02-20 11:39:36 [] DEBUG i.n.c.MultithreadEventLoopGroup - -Dio.netty.eventLoopThreads: 24
2025-02-20 11:39:36 [] DEBUG i.n.u.concurrent.GlobalEventExecutor - -Dio.netty.globalEventExecutor.quietPeriodSeconds: 1
2025-02-20 11:39:36 [] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.noKeySetOptimization: false
2025-02-20 11:39:36 [] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.selectorAutoRebuildThreshold: 512
2025-02-20 11:39:36 [] DEBUG i.n.util.internal.PlatformDependent - org.jctools-core.MpscChunkedArrayQueue: available
2025-02-20 11:39:36 [] DEBUG io.netty.util.NetUtil - -Djava.net.preferIPv4Stack: false
2025-02-20 11:39:36 [] DEBUG io.netty.util.NetUtil - -Djava.net.preferIPv6Addresses: false
2025-02-20 11:39:36 [] DEBUG i.netty.util.NetUtilInitializations - Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2025-02-20 11:39:36 [] DEBUG io.netty.util.NetUtil - Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2025-02-20 11:39:36 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default ResolvedAddressTypes: IPV4_ONLY
2025-02-20 11:39:36 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Localhost address: localhost/127.0.0.1
2025-02-20 11:39:36 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Windows hostname: DESKTOP-P307093
2025-02-20 11:39:36 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default search domains: []
2025-02-20 11:39:36 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default UnixResolverOptions{ndots=1, timeout=5, attempts=16}
2025-02-20 11:39:36 [] DEBUG i.n.r.DefaultHostsFileEntriesResolver - -Dio.netty.hostsFileRefreshInterval: 0
2025-02-20 11:39:36 [] DEBUG i.n.r.d.DefaultDnsServerAddressStreamProvider - Default DNS servers: [/8.8.8.8:53, /4.2.2.2:53] (sun.net.dns.ResolverConfiguration)
2025-02-20 11:39:36 [] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-02-20 11:39:36 [] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-02-20 11:39:36 [] INFO  c.c.c.g.c.CommongatewayApplication - Started CommongatewayApplication in 3.507 seconds (process running for 4.312)
2025-02-20 11:40:01 [] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-02-20 11:40:01 [] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-02-20 11:40:01 [] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-02-20 11:40:01 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-20 11:40:01 [55de1653-94f6-48b2-a871-049432e71662] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-20 11:40:01 [55de1653-94f6-48b2-a871-049432e71662] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-20 11:40:01 [55de1653-94f6-48b2-a871-049432e71662] INFO  c.c.c.g.c.config.RouterConfiguration - ✅ Authorized Request!
2025-02-20 11:40:01 [55de1653-94f6-48b2-a871-049432e71662] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [GET] /users
2025-02-20 11:40:01 [55de1653-94f6-48b2-a871-049432e71662] DEBUG r.n.r.PooledConnectionProvider - Creating a new [http] client pool [PoolFactory{evictionInterval=PT0S, leasingStrategy=fifo, maxConnections=500, maxIdleTime=-1, maxLifeTime=-1, metricsEnabled=false, pendingAcquireMaxCount=1000, pendingAcquireTimeout=45000}] for [localhost/<unresolved>:8081]
2025-02-20 11:40:01 [55de1653-94f6-48b2-a871-049432e71662] DEBUG io.netty.channel.DefaultChannelId - -Dio.netty.processId: 8524 (auto-detected)
2025-02-20 11:40:01 [55de1653-94f6-48b2-a871-049432e71662] DEBUG io.netty.channel.DefaultChannelId - -Dio.netty.machineId: a0:d3:65:ff:fe:5e:b0:28 (auto-detected)
2025-02-20 11:40:01 [55de1653-94f6-48b2-a871-049432e71662] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.numHeapArenas: 24
2025-02-20 11:40:01 [55de1653-94f6-48b2-a871-049432e71662] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.numDirectArenas: 24
2025-02-20 11:40:01 [55de1653-94f6-48b2-a871-049432e71662] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.pageSize: 8192
2025-02-20 11:40:01 [55de1653-94f6-48b2-a871-049432e71662] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxOrder: 9
2025-02-20 11:40:01 [55de1653-94f6-48b2-a871-049432e71662] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.chunkSize: 4194304
2025-02-20 11:40:01 [55de1653-94f6-48b2-a871-049432e71662] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.smallCacheSize: 256
2025-02-20 11:40:01 [55de1653-94f6-48b2-a871-049432e71662] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.normalCacheSize: 64
2025-02-20 11:40:01 [55de1653-94f6-48b2-a871-049432e71662] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2025-02-20 11:40:01 [55de1653-94f6-48b2-a871-049432e71662] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.cacheTrimInterval: 8192
2025-02-20 11:40:01 [55de1653-94f6-48b2-a871-049432e71662] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.cacheTrimIntervalMillis: 0
2025-02-20 11:40:01 [55de1653-94f6-48b2-a871-049432e71662] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.useCacheForAllThreads: false
2025-02-20 11:40:01 [55de1653-94f6-48b2-a871-049432e71662] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
2025-02-20 11:40:01 [55de1653-94f6-48b2-a871-049432e71662] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.disableCacheFinalizersForFastThreadLocalThreads: false
2025-02-20 11:40:01 [55de1653-94f6-48b2-a871-049432e71662] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.allocator.type: pooled
2025-02-20 11:40:01 [55de1653-94f6-48b2-a871-049432e71662] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.threadLocalDirectBufferSize: 0
2025-02-20 11:40:01 [55de1653-94f6-48b2-a871-049432e71662] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.maxThreadLocalCharBufferSize: 16384
2025-02-20 11:40:01 [] DEBUG r.n.r.PooledConnectionProvider - [d581a222] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 11:40:01 [] DEBUG io.netty.buffer.AbstractByteBuf - -Dio.netty.buffer.checkAccessible: true
2025-02-20 11:40:01 [] DEBUG io.netty.buffer.AbstractByteBuf - -Dio.netty.buffer.checkBounds: true
2025-02-20 11:40:01 [] DEBUG i.n.util.ResourceLeakDetectorFactory - Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@2558b259
2025-02-20 11:40:01 [] DEBUG r.netty.transport.TransportConfig - [d581a222] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-20 11:40:01 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 11:40:01 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 11:40:01 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 11:40:01 [] DEBUG i.n.b.ChannelInitializerExtensions - -Dio.netty.bootstrap.extensions: null
2025-02-20 11:40:01 [] DEBUG r.netty.transport.TransportConnector - [d581a222] Connecting to [localhost/127.0.0.1:8081].
2025-02-20 11:40:01 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [d581a222, L:/127.0.0.1:57125 - R:localhost/127.0.0.1:8081] Registering pool release on close event for channel
2025-02-20 11:40:01 [] DEBUG r.n.r.PooledConnectionProvider - [d581a222, L:/127.0.0.1:57125 - R:localhost/127.0.0.1:8081] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 11:40:01 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [d581a222, L:/127.0.0.1:57125 - R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0xd581a222, L:/127.0.0.1:57125 - R:localhost/127.0.0.1:8081]}, [connected])
2025-02-20 11:40:01 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [d581a222-1, L:/127.0.0.1:57125 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0xd581a222, L:/127.0.0.1:57125 - R:localhost/127.0.0.1:8081]}}, [configured])
2025-02-20 11:40:01 [] DEBUG r.n.http.client.HttpClientConnect - [d581a222-1, L:/127.0.0.1:57125 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY, method=GET}
2025-02-20 11:40:01 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [d581a222-1, L:/127.0.0.1:57125 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xd581a222, L:/127.0.0.1:57125 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-20 11:40:01 [] DEBUG r.n.http.client.HttpClientOperations - [d581a222-1, L:/127.0.0.1:57125 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-20 11:40:02 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.maxCapacityPerThread: 4096
2025-02-20 11:40:02 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.ratio: 8
2025-02-20 11:40:02 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.chunkSize: 32
2025-02-20 11:40:02 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.blocking: false
2025-02-20 11:40:02 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.batchFastThreadLocalOnly: true
2025-02-20 11:40:02 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [d581a222-1, L:/127.0.0.1:57125 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xd581a222, L:/127.0.0.1:57125 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-20 11:40:02 [] DEBUG i.n.handler.codec.compression.Zstd - zstd-jni not in the classpath; Zstd support will be unavailable.
2025-02-20 11:40:02 [] DEBUG r.n.http.client.HttpClientOperations - [d581a222-1, L:/127.0.0.1:57125 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-20 11:40:02 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [d581a222-1, L:/127.0.0.1:57125 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xd581a222, L:/127.0.0.1:57125 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-20 11:40:02 [] DEBUG reactor.netty.channel.FluxReceive - [d581a222-1, L:/127.0.0.1:57125 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 11:40:02 [] DEBUG r.n.http.client.HttpClientOperations - [d581a222-1, L:/127.0.0.1:57125 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-20 11:40:02 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [d581a222, L:/127.0.0.1:57125 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xd581a222, L:/127.0.0.1:57125 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-20 11:40:02 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [d581a222, L:/127.0.0.1:57125 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xd581a222, L:/127.0.0.1:57125 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-20 11:40:02 [55de1653-94f6-48b2-a871-049432e71662] INFO  c.c.c.g.c.config.RouterConfiguration - 🔹 Validation Response: true
2025-02-20 11:40:02 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [d581a222, L:/127.0.0.1:57125 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-20 11:40:02 [55de1653-94f6-48b2-a871-049432e71662] INFO  c.c.c.g.c.config.RouterConfiguration - method: GET
2025-02-20 11:40:02 [55de1653-94f6-48b2-a871-049432e71662] INFO  c.c.c.g.c.config.RouterConfiguration - path: /users
2025-02-20 11:40:02 [55de1653-94f6-48b2-a871-049432e71662] INFO  c.c.c.g.c.config.RouterConfiguration - ➡️ Forwarding [GET] /users to User Microservice
2025-02-20 11:40:02 [] DEBUG r.n.r.PooledConnectionProvider - [d581a222, L:/127.0.0.1:57125 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-20 11:40:02 [55de1653-94f6-48b2-a871-049432e71662] DEBUG r.n.r.PooledConnectionProvider - Creating a new [http] client pool [PoolFactory{evictionInterval=PT0S, leasingStrategy=fifo, maxConnections=500, maxIdleTime=-1, maxLifeTime=-1, metricsEnabled=false, pendingAcquireMaxCount=1000, pendingAcquireTimeout=45000}] for [localhost/<unresolved>:8082]
2025-02-20 11:40:02 [] DEBUG r.n.r.PooledConnectionProvider - [9dc61126] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 11:40:02 [] DEBUG r.netty.transport.TransportConfig - [9dc61126] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-20 11:40:02 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 11:40:02 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 11:40:02 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 11:40:02 [] DEBUG r.netty.transport.TransportConnector - [9dc61126] Connecting to [localhost/127.0.0.1:8082].
2025-02-20 11:40:02 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [9dc61126, L:/127.0.0.1:57126 - R:localhost/127.0.0.1:8082] Registering pool release on close event for channel
2025-02-20 11:40:02 [] DEBUG r.n.r.PooledConnectionProvider - [9dc61126, L:/127.0.0.1:57126 - R:localhost/127.0.0.1:8082] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 11:40:02 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [9dc61126, L:/127.0.0.1:57126 - R:localhost/127.0.0.1:8082] onStateChange(PooledConnection{channel=[id: 0x9dc61126, L:/127.0.0.1:57126 - R:localhost/127.0.0.1:8082]}, [connected])
2025-02-20 11:40:02 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [9dc61126-1, L:/127.0.0.1:57126 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0x9dc61126, L:/127.0.0.1:57126 - R:localhost/127.0.0.1:8082]}}, [configured])
2025-02-20 11:40:02 [] DEBUG r.n.http.client.HttpClientConnect - [9dc61126-1, L:/127.0.0.1:57126 - R:localhost/127.0.0.1:8082] Handler is being applied: {uri=http://localhost:8082/users, method=GET}
2025-02-20 11:40:02 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [9dc61126-1, L:/127.0.0.1:57126 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0x9dc61126, L:/127.0.0.1:57126 - R:localhost/127.0.0.1:8082]}}, [request_prepared])
2025-02-20 11:40:02 [] DEBUG r.n.http.client.HttpClientOperations - [9dc61126-1, L:/127.0.0.1:57126 - R:localhost/127.0.0.1:8082] No sendHeaders() called before complete, sending zero-length header
2025-02-20 11:40:02 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [9dc61126-1, L:/127.0.0.1:57126 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0x9dc61126, L:/127.0.0.1:57126 - R:localhost/127.0.0.1:8082]}}, [request_sent])
2025-02-20 11:40:02 [] DEBUG r.n.http.client.HttpClientOperations - [9dc61126-1, L:/127.0.0.1:57126 - R:localhost/127.0.0.1:8082] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Content-Length: <filtered>
Date: <filtered>
2025-02-20 11:40:02 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [9dc61126-1, L:/127.0.0.1:57126 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0x9dc61126, L:/127.0.0.1:57126 - R:localhost/127.0.0.1:8082]}}, [response_received])
2025-02-20 11:40:02 [] DEBUG reactor.netty.channel.FluxReceive - [9dc61126-1, L:/127.0.0.1:57126 - R:localhost/127.0.0.1:8082] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 11:40:02 [] DEBUG r.n.http.client.HttpClientOperations - [9dc61126-1, L:/127.0.0.1:57126 - R:localhost/127.0.0.1:8082] Received last HTTP packet
2025-02-20 11:40:02 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [9dc61126, L:/127.0.0.1:57126 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0x9dc61126, L:/127.0.0.1:57126 - R:localhost/127.0.0.1:8082]}}, [response_completed])
2025-02-20 11:40:02 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [9dc61126, L:/127.0.0.1:57126 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0x9dc61126, L:/127.0.0.1:57126 - R:localhost/127.0.0.1:8082]}}, [disconnecting])
2025-02-20 11:40:02 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [9dc61126, L:/127.0.0.1:57126 - R:localhost/127.0.0.1:8082] Releasing channel
2025-02-20 11:40:02 [] DEBUG r.n.r.PooledConnectionProvider - [9dc61126, L:/127.0.0.1:57126 - R:localhost/127.0.0.1:8082] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-20 11:41:02 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [d581a222, L:/127.0.0.1:57125 ! R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0xd581a222, L:/127.0.0.1:57125 ! R:localhost/127.0.0.1:8081]}, [disconnecting])
2025-02-20 11:41:02 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [9dc61126, L:/127.0.0.1:57126 ! R:localhost/127.0.0.1:8082] onStateChange(PooledConnection{channel=[id: 0x9dc61126, L:/127.0.0.1:57126 ! R:localhost/127.0.0.1:8082]}, [disconnecting])
2025-02-20 11:45:39 [] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-02-20 11:45:39 [] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-02-20 11:45:41 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 2 thread-local buffer(s) from thread: reactor-http-nio-3
2025-02-20 11:45:41 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 3 thread-local buffer(s) from thread: reactor-http-nio-2
2025-02-20 11:47:02 [] DEBUG org.jboss.logging - Logging Provider: org.jboss.logging.Slf4jLoggerProvider found via system property
2025-02-20 11:47:02 [] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final
2025-02-20 11:47:02 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-02-20 11:47:02 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-02-20 11:47:02 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-02-20 11:47:02 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-02-20 11:47:02 [] DEBUG o.h.v.i.e.r.TraversableResolvers - Cannot find jakarta.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2025-02-20 11:47:02 [] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-02-20 11:47:02 [] INFO  c.c.c.g.c.CommongatewayApplication - Starting CommongatewayApplication using Java 17.0.12 with PID 28532 (E:\API-GATEWAY\commongateway\target\classes started by CITPL in E:\API-GATEWAY)
2025-02-20 11:47:02 [] DEBUG c.c.c.g.c.CommongatewayApplication - Running with Spring Boot v3.4.2, Spring v6.2.2
2025-02-20 11:47:02 [] INFO  c.c.c.g.c.CommongatewayApplication - No active profile set, falling back to 1 default profile: "default"
2025-02-20 11:47:02 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-02-20 11:47:02 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-02-20 11:47:02 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-02-20 11:47:02 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-02-20 11:47:02 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-02-20 11:47:02 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-02-20 11:47:03 [] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=50299984-946b-3bba-87da-3c9a1df8a676
2025-02-20 11:47:03 [] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-02-20 11:47:03 [] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-02-20 11:47:03 [] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-02-20 11:47:03 [] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.34]
2025-02-20 11:47:03 [] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-02-20 11:47:03 [] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1445 ms
2025-02-20 11:47:04 [] DEBUG i.n.u.i.l.InternalLoggerFactory - Using SLF4J as the default logging framework
2025-02-20 11:47:04 [] DEBUG i.n.util.internal.PlatformDependent0 - -Dio.netty.noUnsafe: false
2025-02-20 11:47:04 [] DEBUG i.n.util.internal.PlatformDependent0 - Java version: 17
2025-02-20 11:47:04 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe.theUnsafe: available
2025-02-20 11:47:04 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe base methods: all available
2025-02-20 11:47:04 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe.storeFence: available
2025-02-20 11:47:04 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.Buffer.address: available
2025-02-20 11:47:04 [] DEBUG i.n.util.internal.PlatformDependent0 - direct buffer constructor: unavailable: Reflective setAccessible(true) disabled
2025-02-20 11:47:04 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.Bits.unaligned: available, true
2025-02-20 11:47:04 [] DEBUG i.n.util.internal.PlatformDependent0 - jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable: class io.netty.util.internal.PlatformDependent0$7 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @7dc222ae
2025-02-20 11:47:04 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.DirectByteBuffer.<init>(long, {int,long}): unavailable
2025-02-20 11:47:04 [] DEBUG i.n.util.internal.PlatformDependent - sun.misc.Unsafe: available
2025-02-20 11:47:04 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.tmpdir: C:\Users\CITPL\AppData\Local\Temp (java.io.tmpdir)
2025-02-20 11:47:04 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.bitMode: 64 (sun.arch.data.model)
2025-02-20 11:47:04 [] DEBUG i.n.util.internal.PlatformDependent - Platform: Windows
2025-02-20 11:47:04 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.maxDirectMemory: -1 bytes
2025-02-20 11:47:04 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.uninitializedArrayAllocationThreshold: -1
2025-02-20 11:47:04 [] DEBUG io.netty.util.internal.CleanerJava9 - java.nio.ByteBuffer.cleaner(): available
2025-02-20 11:47:04 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.noPreferDirect: false
2025-02-20 11:47:04 [] DEBUG reactor.util.Loggers - Using Slf4j logging framework
2025-02-20 11:47:04 [] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-02-20 11:47:04 [] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2025-02-20 11:47:04 [] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2025-02-20 11:47:04 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-02-20 11:47:04 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via user class loader
2025-02-20 11:47:04 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-02-20 11:47:04 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-02-20 11:47:04 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-02-20 11:47:04 [] DEBUG o.h.v.i.e.r.TraversableResolvers - Cannot find jakarta.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2025-02-20 11:47:04 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-02-20 11:47:04 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-02-20 11:47:04 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-02-20 11:47:04 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-02-20 11:47:04 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-02-20 11:47:04 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-02-20 11:47:04 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	c.c.c.g.c.c.HomeController:
	{GET [/home]}: get()
2025-02-20 11:47:04 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
	{ [/error]}: error(HttpServletRequest)
2025-02-20 11:47:04 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 'beanNameHandlerMapping' {}
2025-02-20 11:47:04 [] DEBUG _.s.w.s.HandlerMapping.Mappings - Mapped com.citpl.common.gateway.commongateway.config.RouterConfiguration$$Lambda$895/0x00000167bb4ee3a8@6380e9e9 -> com.citpl.common.gateway.commongateway.config.RouterConfiguration$$Lambda$896/0x00000167bb4ee610@350da119
2025-02-20 11:47:04 [] DEBUG _.s.w.s.HandlerMapping.Mappings - Mapped /validate/** -> ProxyExchangeHandlerFunction
/users/** -> ProxyExchangeHandlerFunction
2025-02-20 11:47:04 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2025-02-20 11:47:05 [] DEBUG i.n.u.i.InternalThreadLocalMap - -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2025-02-20 11:47:05 [] DEBUG i.n.u.i.InternalThreadLocalMap - -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2025-02-20 11:47:05 [] DEBUG io.netty.util.ResourceLeakDetector - -Dio.netty.leakDetection.level: simple
2025-02-20 11:47:05 [] DEBUG io.netty.util.ResourceLeakDetector - -Dio.netty.leakDetection.targetRecords: 4
2025-02-20 11:47:05 [] DEBUG i.n.handler.codec.compression.Brotli - brotli4j not in the classpath; Brotli support will be unavailable.
2025-02-20 11:47:05 [] DEBUG reactor.netty.tcp.TcpResources - [http] resources will use the default LoopResources: DefaultLoopResources {prefix=reactor-http, daemon=true, selectCount=12, workerCount=12}
2025-02-20 11:47:05 [] DEBUG reactor.netty.tcp.TcpResources - [http] resources will use the default ConnectionProvider: reactor.netty.resources.DefaultPooledConnectionProvider@634aa81e
2025-02-20 11:47:05 [] DEBUG r.netty.resources.DefaultLoopIOUring - Default io_uring support : false
2025-02-20 11:47:05 [] DEBUG r.netty.resources.DefaultLoopEpoll - Default Epoll support : false
2025-02-20 11:47:05 [] DEBUG r.netty.resources.DefaultLoopKQueue - Default KQueue support : false
2025-02-20 11:47:05 [] DEBUG i.n.c.MultithreadEventLoopGroup - -Dio.netty.eventLoopThreads: 24
2025-02-20 11:47:05 [] DEBUG i.n.u.concurrent.GlobalEventExecutor - -Dio.netty.globalEventExecutor.quietPeriodSeconds: 1
2025-02-20 11:47:05 [] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.noKeySetOptimization: false
2025-02-20 11:47:05 [] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.selectorAutoRebuildThreshold: 512
2025-02-20 11:47:05 [] DEBUG i.n.util.internal.PlatformDependent - org.jctools-core.MpscChunkedArrayQueue: available
2025-02-20 11:47:05 [] DEBUG io.netty.util.NetUtil - -Djava.net.preferIPv4Stack: false
2025-02-20 11:47:05 [] DEBUG io.netty.util.NetUtil - -Djava.net.preferIPv6Addresses: false
2025-02-20 11:47:05 [] DEBUG i.netty.util.NetUtilInitializations - Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2025-02-20 11:47:05 [] DEBUG io.netty.util.NetUtil - Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2025-02-20 11:47:05 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default ResolvedAddressTypes: IPV4_ONLY
2025-02-20 11:47:05 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Localhost address: localhost/127.0.0.1
2025-02-20 11:47:05 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Windows hostname: DESKTOP-P307093
2025-02-20 11:47:05 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default search domains: []
2025-02-20 11:47:05 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default UnixResolverOptions{ndots=1, timeout=5, attempts=16}
2025-02-20 11:47:05 [] DEBUG i.n.r.DefaultHostsFileEntriesResolver - -Dio.netty.hostsFileRefreshInterval: 0
2025-02-20 11:47:05 [] DEBUG i.n.r.d.DefaultDnsServerAddressStreamProvider - Default DNS servers: [/8.8.8.8:53, /4.2.2.2:53] (sun.net.dns.ResolverConfiguration)
2025-02-20 11:47:05 [] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-02-20 11:47:05 [] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-02-20 11:47:05 [] INFO  c.c.c.g.c.CommongatewayApplication - Started CommongatewayApplication in 3.601 seconds (process running for 4.45)
2025-02-20 11:47:22 [] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-02-20 11:47:22 [] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-02-20 11:47:22 [] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-02-20 11:47:22 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-20 11:47:22 [3da4b332-f5f2-4581-8536-092f08e2398f] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-20 11:47:22 [3da4b332-f5f2-4581-8536-092f08e2398f] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-20 11:47:22 [3da4b332-f5f2-4581-8536-092f08e2398f] INFO  c.c.c.g.c.config.RouterConfiguration - Authorized Request!
2025-02-20 11:47:22 [3da4b332-f5f2-4581-8536-092f08e2398f] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [GET] /validate
2025-02-20 11:47:22 [3da4b332-f5f2-4581-8536-092f08e2398f] INFO  c.c.c.g.c.config.RouterConfiguration - method: GET
2025-02-20 11:47:22 [3da4b332-f5f2-4581-8536-092f08e2398f] INFO  c.c.c.g.c.config.RouterConfiguration - path: /validate
2025-02-20 11:47:22 [3da4b332-f5f2-4581-8536-092f08e2398f] DEBUG r.n.r.PooledConnectionProvider - Creating a new [http] client pool [PoolFactory{evictionInterval=PT0S, leasingStrategy=fifo, maxConnections=500, maxIdleTime=-1, maxLifeTime=-1, metricsEnabled=false, pendingAcquireMaxCount=1000, pendingAcquireTimeout=45000}] for [localhost/<unresolved>:8081]
2025-02-20 11:47:22 [3da4b332-f5f2-4581-8536-092f08e2398f] DEBUG io.netty.channel.DefaultChannelId - -Dio.netty.processId: 28532 (auto-detected)
2025-02-20 11:47:22 [3da4b332-f5f2-4581-8536-092f08e2398f] DEBUG io.netty.channel.DefaultChannelId - -Dio.netty.machineId: a0:d3:65:ff:fe:5e:b0:28 (auto-detected)
2025-02-20 11:47:22 [3da4b332-f5f2-4581-8536-092f08e2398f] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.numHeapArenas: 24
2025-02-20 11:47:22 [3da4b332-f5f2-4581-8536-092f08e2398f] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.numDirectArenas: 24
2025-02-20 11:47:22 [3da4b332-f5f2-4581-8536-092f08e2398f] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.pageSize: 8192
2025-02-20 11:47:22 [3da4b332-f5f2-4581-8536-092f08e2398f] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxOrder: 9
2025-02-20 11:47:22 [3da4b332-f5f2-4581-8536-092f08e2398f] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.chunkSize: 4194304
2025-02-20 11:47:22 [3da4b332-f5f2-4581-8536-092f08e2398f] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.smallCacheSize: 256
2025-02-20 11:47:22 [3da4b332-f5f2-4581-8536-092f08e2398f] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.normalCacheSize: 64
2025-02-20 11:47:22 [3da4b332-f5f2-4581-8536-092f08e2398f] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2025-02-20 11:47:22 [3da4b332-f5f2-4581-8536-092f08e2398f] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.cacheTrimInterval: 8192
2025-02-20 11:47:22 [3da4b332-f5f2-4581-8536-092f08e2398f] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.cacheTrimIntervalMillis: 0
2025-02-20 11:47:22 [3da4b332-f5f2-4581-8536-092f08e2398f] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.useCacheForAllThreads: false
2025-02-20 11:47:22 [3da4b332-f5f2-4581-8536-092f08e2398f] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
2025-02-20 11:47:22 [3da4b332-f5f2-4581-8536-092f08e2398f] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.disableCacheFinalizersForFastThreadLocalThreads: false
2025-02-20 11:47:22 [3da4b332-f5f2-4581-8536-092f08e2398f] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.allocator.type: pooled
2025-02-20 11:47:22 [3da4b332-f5f2-4581-8536-092f08e2398f] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.threadLocalDirectBufferSize: 0
2025-02-20 11:47:22 [3da4b332-f5f2-4581-8536-092f08e2398f] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.maxThreadLocalCharBufferSize: 16384
2025-02-20 11:47:22 [] DEBUG r.n.r.PooledConnectionProvider - [1a7a16f9] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 11:47:22 [] DEBUG io.netty.buffer.AbstractByteBuf - -Dio.netty.buffer.checkAccessible: true
2025-02-20 11:47:22 [] DEBUG io.netty.buffer.AbstractByteBuf - -Dio.netty.buffer.checkBounds: true
2025-02-20 11:47:22 [] DEBUG i.n.util.ResourceLeakDetectorFactory - Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@18414bf1
2025-02-20 11:47:22 [] DEBUG r.netty.transport.TransportConfig - [1a7a16f9] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-20 11:47:22 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 11:47:22 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 11:47:22 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 11:47:22 [] DEBUG i.n.b.ChannelInitializerExtensions - -Dio.netty.bootstrap.extensions: null
2025-02-20 11:47:22 [] DEBUG r.netty.transport.TransportConnector - [1a7a16f9] Connecting to [localhost/127.0.0.1:8081].
2025-02-20 11:47:22 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [1a7a16f9, L:/127.0.0.1:57262 - R:localhost/127.0.0.1:8081] Registering pool release on close event for channel
2025-02-20 11:47:22 [] DEBUG r.n.r.PooledConnectionProvider - [1a7a16f9, L:/127.0.0.1:57262 - R:localhost/127.0.0.1:8081] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 11:47:22 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [1a7a16f9, L:/127.0.0.1:57262 - R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x1a7a16f9, L:/127.0.0.1:57262 - R:localhost/127.0.0.1:8081]}, [connected])
2025-02-20 11:47:22 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [1a7a16f9-1, L:/127.0.0.1:57262 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0x1a7a16f9, L:/127.0.0.1:57262 - R:localhost/127.0.0.1:8081]}}, [configured])
2025-02-20 11:47:23 [] DEBUG r.n.http.client.HttpClientConnect - [1a7a16f9-1, L:/127.0.0.1:57262 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY, method=GET}
2025-02-20 11:47:23 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [1a7a16f9-1, L:/127.0.0.1:57262 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x1a7a16f9, L:/127.0.0.1:57262 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-20 11:47:23 [] DEBUG r.n.http.client.HttpClientOperations - [1a7a16f9-1, L:/127.0.0.1:57262 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-20 11:47:23 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.maxCapacityPerThread: 4096
2025-02-20 11:47:23 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.ratio: 8
2025-02-20 11:47:23 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.chunkSize: 32
2025-02-20 11:47:23 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.blocking: false
2025-02-20 11:47:23 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.batchFastThreadLocalOnly: true
2025-02-20 11:47:23 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [1a7a16f9-1, L:/127.0.0.1:57262 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x1a7a16f9, L:/127.0.0.1:57262 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-20 11:47:23 [] DEBUG i.n.handler.codec.compression.Zstd - zstd-jni not in the classpath; Zstd support will be unavailable.
2025-02-20 11:47:23 [] DEBUG r.n.http.client.HttpClientOperations - [1a7a16f9-1, L:/127.0.0.1:57262 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-20 11:47:23 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [1a7a16f9-1, L:/127.0.0.1:57262 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x1a7a16f9, L:/127.0.0.1:57262 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-20 11:47:23 [] DEBUG reactor.netty.channel.FluxReceive - [1a7a16f9-1, L:/127.0.0.1:57262 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 11:47:23 [] DEBUG r.n.http.client.HttpClientOperations - [1a7a16f9-1, L:/127.0.0.1:57262 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-20 11:47:23 [3da4b332-f5f2-4581-8536-092f08e2398f] INFO  c.c.c.g.c.config.RouterConfiguration - Validation Response: true
2025-02-20 11:47:23 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [1a7a16f9, L:/127.0.0.1:57262 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x1a7a16f9, L:/127.0.0.1:57262 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-20 11:47:23 [3da4b332-f5f2-4581-8536-092f08e2398f] INFO  c.c.c.g.c.config.RouterConfiguration - Forwarding [GET] /validate to User Microservice
2025-02-20 11:47:23 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [1a7a16f9, L:/127.0.0.1:57262 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x1a7a16f9, L:/127.0.0.1:57262 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-20 11:47:23 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [1a7a16f9, L:/127.0.0.1:57262 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-20 11:47:23 [] DEBUG r.n.r.PooledConnectionProvider - [1a7a16f9, L:/127.0.0.1:57262 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-20 11:47:23 [3da4b332-f5f2-4581-8536-092f08e2398f] DEBUG r.n.r.PooledConnectionProvider - Creating a new [http] client pool [PoolFactory{evictionInterval=PT0S, leasingStrategy=fifo, maxConnections=500, maxIdleTime=-1, maxLifeTime=-1, metricsEnabled=false, pendingAcquireMaxCount=1000, pendingAcquireTimeout=45000}] for [localhost/<unresolved>:8082]
2025-02-20 11:47:23 [] DEBUG r.n.r.PooledConnectionProvider - [446fc73f] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 11:47:23 [] DEBUG r.netty.transport.TransportConfig - [446fc73f] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-20 11:47:23 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 11:47:23 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 11:47:23 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 11:47:23 [] DEBUG r.netty.transport.TransportConnector - [446fc73f] Connecting to [localhost/127.0.0.1:8082].
2025-02-20 11:47:23 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [446fc73f, L:/127.0.0.1:57263 - R:localhost/127.0.0.1:8082] Registering pool release on close event for channel
2025-02-20 11:47:23 [] DEBUG r.n.r.PooledConnectionProvider - [446fc73f, L:/127.0.0.1:57263 - R:localhost/127.0.0.1:8082] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 11:47:23 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [446fc73f, L:/127.0.0.1:57263 - R:localhost/127.0.0.1:8082] onStateChange(PooledConnection{channel=[id: 0x446fc73f, L:/127.0.0.1:57263 - R:localhost/127.0.0.1:8082]}, [connected])
2025-02-20 11:47:23 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [446fc73f-1, L:/127.0.0.1:57263 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0x446fc73f, L:/127.0.0.1:57263 - R:localhost/127.0.0.1:8082]}}, [configured])
2025-02-20 11:47:23 [] DEBUG r.n.http.client.HttpClientConnect - [446fc73f-1, L:/127.0.0.1:57263 - R:localhost/127.0.0.1:8082] Handler is being applied: {uri=http://localhost:8082/validate, method=GET}
2025-02-20 11:47:23 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [446fc73f-1, L:/127.0.0.1:57263 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x446fc73f, L:/127.0.0.1:57263 - R:localhost/127.0.0.1:8082]}}, [request_prepared])
2025-02-20 11:47:23 [] DEBUG r.n.http.client.HttpClientOperations - [446fc73f-1, L:/127.0.0.1:57263 - R:localhost/127.0.0.1:8082] No sendHeaders() called before complete, sending zero-length header
2025-02-20 11:47:23 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [446fc73f-1, L:/127.0.0.1:57263 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x446fc73f, L:/127.0.0.1:57263 - R:localhost/127.0.0.1:8082]}}, [request_sent])
2025-02-20 11:47:23 [] DEBUG r.n.http.client.HttpClientOperations - [446fc73f-1, L:/127.0.0.1:57263 - R:localhost/127.0.0.1:8082] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 404 
Vary: <filtered>
Vary: <filtered>
Vary: <filtered>
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-20 11:47:23 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [446fc73f-1, L:/127.0.0.1:57263 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x446fc73f, L:/127.0.0.1:57263 - R:localhost/127.0.0.1:8082]}}, [response_received])
2025-02-20 11:47:23 [] DEBUG reactor.netty.channel.FluxReceive - [446fc73f-1, L:/127.0.0.1:57263 - R:localhost/127.0.0.1:8082] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 11:47:23 [] DEBUG r.n.http.client.HttpClientOperations - [446fc73f-1, L:/127.0.0.1:57263 - R:localhost/127.0.0.1:8082] Received last HTTP packet
2025-02-20 11:47:23 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [446fc73f, L:/127.0.0.1:57263 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x446fc73f, L:/127.0.0.1:57263 - R:localhost/127.0.0.1:8082]}}, [response_completed])
2025-02-20 11:47:23 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [446fc73f, L:/127.0.0.1:57263 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x446fc73f, L:/127.0.0.1:57263 - R:localhost/127.0.0.1:8082]}}, [disconnecting])
2025-02-20 11:47:23 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [446fc73f, L:/127.0.0.1:57263 - R:localhost/127.0.0.1:8082] Releasing channel
2025-02-20 11:47:23 [] DEBUG r.n.r.PooledConnectionProvider - [446fc73f, L:/127.0.0.1:57263 - R:localhost/127.0.0.1:8082] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-20 11:47:23 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] threw exception
org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 404 NOT_FOUND from GET http://localhost:8082/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 11:47:23 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate] with root cause
org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 404 NOT_FOUND from GET http://localhost:8082/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 11:47:23 [] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-20 11:47:23 [] INFO  c.c.c.g.c.config.RouterConfiguration - Authorized Request!
2025-02-20 11:47:23 [] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [GET] /error
2025-02-20 11:47:23 [] INFO  c.c.c.g.c.config.RouterConfiguration - method: GET
2025-02-20 11:47:23 [] INFO  c.c.c.g.c.config.RouterConfiguration - path: /error
2025-02-20 11:47:23 [] DEBUG r.n.r.PooledConnectionProvider - [1a7a16f9, L:/127.0.0.1:57262 - R:localhost/127.0.0.1:8081] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 11:47:23 [] DEBUG r.n.http.client.HttpClientConnect - [1a7a16f9-2, L:/127.0.0.1:57262 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY, method=GET}
2025-02-20 11:47:23 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [1a7a16f9-2, L:/127.0.0.1:57262 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x1a7a16f9, L:/127.0.0.1:57262 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-20 11:47:23 [] DEBUG r.n.http.client.HttpClientOperations - [1a7a16f9-2, L:/127.0.0.1:57262 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-20 11:47:23 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [1a7a16f9-2, L:/127.0.0.1:57262 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x1a7a16f9, L:/127.0.0.1:57262 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-20 11:47:23 [] DEBUG r.n.http.client.HttpClientOperations - [1a7a16f9-2, L:/127.0.0.1:57262 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-20 11:47:23 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [1a7a16f9-2, L:/127.0.0.1:57262 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x1a7a16f9, L:/127.0.0.1:57262 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-20 11:47:23 [] DEBUG reactor.netty.channel.FluxReceive - [1a7a16f9-2, L:/127.0.0.1:57262 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 11:47:23 [] DEBUG r.n.http.client.HttpClientOperations - [1a7a16f9-2, L:/127.0.0.1:57262 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-20 11:47:23 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [1a7a16f9, L:/127.0.0.1:57262 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x1a7a16f9, L:/127.0.0.1:57262 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-20 11:47:23 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [1a7a16f9, L:/127.0.0.1:57262 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x1a7a16f9, L:/127.0.0.1:57262 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-20 11:47:23 [] INFO  c.c.c.g.c.config.RouterConfiguration - Validation Response: true
2025-02-20 11:47:23 [] INFO  c.c.c.g.c.config.RouterConfiguration - Forwarding [GET] /error to User Microservice
2025-02-20 11:47:23 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [1a7a16f9, L:/127.0.0.1:57262 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-20 11:47:23 [] DEBUG r.n.r.PooledConnectionProvider - [1a7a16f9, L:/127.0.0.1:57262 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-20 11:47:23 [] DEBUG r.n.r.PooledConnectionProvider - [446fc73f, L:/127.0.0.1:57263 - R:localhost/127.0.0.1:8082] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 11:47:23 [] DEBUG r.n.http.client.HttpClientConnect - [446fc73f-2, L:/127.0.0.1:57263 - R:localhost/127.0.0.1:8082] Handler is being applied: {uri=http://localhost:8082/error, method=GET}
2025-02-20 11:47:23 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [446fc73f-2, L:/127.0.0.1:57263 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0x446fc73f, L:/127.0.0.1:57263 - R:localhost/127.0.0.1:8082]}}, [request_prepared])
2025-02-20 11:47:23 [] DEBUG r.n.http.client.HttpClientOperations - [446fc73f-2, L:/127.0.0.1:57263 - R:localhost/127.0.0.1:8082] No sendHeaders() called before complete, sending zero-length header
2025-02-20 11:47:23 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [446fc73f-2, L:/127.0.0.1:57263 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0x446fc73f, L:/127.0.0.1:57263 - R:localhost/127.0.0.1:8082]}}, [request_sent])
2025-02-20 11:47:23 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] threw exception
org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 404 NOT_FOUND from GET http://localhost:8082/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 11:47:23 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate] with root cause
org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 404 NOT_FOUND from GET http://localhost:8082/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 11:47:23 [] DEBUG r.n.http.client.HttpClientOperations - [446fc73f-2, L:/127.0.0.1:57263 - R:localhost/127.0.0.1:8082] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 500 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
Connection: <filtered>
2025-02-20 11:47:23 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [446fc73f-2, L:/127.0.0.1:57263 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0x446fc73f, L:/127.0.0.1:57263 - R:localhost/127.0.0.1:8082]}}, [response_received])
2025-02-20 11:47:23 [] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-20 11:47:23 [] INFO  c.c.c.g.c.config.RouterConfiguration - Authorized Request!
2025-02-20 11:47:23 [] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [GET] /error
2025-02-20 11:47:23 [] INFO  c.c.c.g.c.config.RouterConfiguration - method: GET
2025-02-20 11:47:23 [] INFO  c.c.c.g.c.config.RouterConfiguration - path: /error
2025-02-20 11:47:23 [] DEBUG reactor.netty.channel.FluxReceive - [446fc73f-2, L:/127.0.0.1:57263 - R:localhost/127.0.0.1:8082] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 11:47:23 [] DEBUG r.n.http.client.HttpClientOperations - [446fc73f-2, L:/127.0.0.1:57263 - R:localhost/127.0.0.1:8082] Received last HTTP packet
2025-02-20 11:47:23 [] DEBUG r.n.r.PooledConnectionProvider - [1a7a16f9, L:/127.0.0.1:57262 - R:localhost/127.0.0.1:8081] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 11:47:23 [] DEBUG r.n.http.client.HttpClientConnect - [1a7a16f9-3, L:/127.0.0.1:57262 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY, method=GET}
2025-02-20 11:47:23 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [1a7a16f9-3, L:/127.0.0.1:57262 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x1a7a16f9, L:/127.0.0.1:57262 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-20 11:47:23 [] DEBUG r.n.http.client.HttpClientOperations - [1a7a16f9-3, L:/127.0.0.1:57262 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-20 11:47:23 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [1a7a16f9-3, L:/127.0.0.1:57262 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x1a7a16f9, L:/127.0.0.1:57262 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-20 11:47:23 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [446fc73f, L:/127.0.0.1:57263 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0x446fc73f, L:/127.0.0.1:57263 - R:localhost/127.0.0.1:8082]}}, [response_completed])
2025-02-20 11:47:23 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [446fc73f, L:/127.0.0.1:57263 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0x446fc73f, L:/127.0.0.1:57263 - R:localhost/127.0.0.1:8082]}}, [disconnecting])
2025-02-20 11:47:23 [] DEBUG r.n.http.client.HttpClientOperations - [1a7a16f9-3, L:/127.0.0.1:57262 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-20 11:47:23 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [1a7a16f9-3, L:/127.0.0.1:57262 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x1a7a16f9, L:/127.0.0.1:57262 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-20 11:47:23 [] DEBUG r.n.r.PooledConnectionProvider - [446fc73f, L:/127.0.0.1:57263 ! R:localhost/127.0.0.1:8082] Channel closed, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 11:47:23 [] DEBUG reactor.netty.channel.FluxReceive - [1a7a16f9-3, L:/127.0.0.1:57262 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 11:47:23 [] DEBUG r.n.http.client.HttpClientOperations - [1a7a16f9-3, L:/127.0.0.1:57262 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-20 11:47:23 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [1a7a16f9, L:/127.0.0.1:57262 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x1a7a16f9, L:/127.0.0.1:57262 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-20 11:47:23 [] INFO  c.c.c.g.c.config.RouterConfiguration - Validation Response: true
2025-02-20 11:47:23 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [1a7a16f9, L:/127.0.0.1:57262 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x1a7a16f9, L:/127.0.0.1:57262 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-20 11:47:23 [] INFO  c.c.c.g.c.config.RouterConfiguration - Forwarding [GET] /error to User Microservice
2025-02-20 11:47:23 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [446fc73f, L:/127.0.0.1:57263 ! R:localhost/127.0.0.1:8082] onStateChange(PooledConnection{channel=[id: 0x446fc73f, L:/127.0.0.1:57263 ! R:localhost/127.0.0.1:8082]}, [disconnecting])
2025-02-20 11:47:23 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [1a7a16f9, L:/127.0.0.1:57262 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-20 11:47:23 [] DEBUG r.n.r.PooledConnectionProvider - [1a7a16f9, L:/127.0.0.1:57262 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-20 11:47:23 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] threw exception
java.lang.IllegalStateException: Cannot start async: [ERROR]
	at org.springframework.util.Assert.state(Assert.java:79)
	at org.springframework.web.context.request.async.StandardServletAsyncWebRequest.startAsync(StandardServletAsyncWebRequest.java:157)
	at org.springframework.web.context.request.async.WebAsyncManager.startAsyncProcessing(WebAsyncManager.java:487)
	at org.springframework.web.context.request.async.WebAsyncManager.startDeferredResultProcessing(WebAsyncManager.java:462)
	at org.springframework.web.servlet.function.DefaultAsyncServerResponse.writeAsync(DefaultAsyncServerResponse.java:130)
	at org.springframework.web.servlet.function.DefaultEntityResponseBuilder$PublisherEntityResponse.writeToInternal(DefaultEntityResponseBuilder.java:429)
	at org.springframework.web.servlet.function.AbstractServerResponse.writeTo(AbstractServerResponse.java:101)
	at org.springframework.web.servlet.function.support.HandlerFunctionAdapter.handle(HandlerFunctionAdapter.java:112)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:633)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:511)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:454)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:361)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:208)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:285)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:149)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:239)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:243)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:57)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 11:47:23 [] ERROR o.a.c.c.C.[Tomcat].[localhost] - Exception Processing [ErrorPage[errorCode=0, location=/error]]
jakarta.servlet.ServletException: Async processing failed
	at org.springframework.web.servlet.function.DefaultAsyncServerResponse.writeAsync(DefaultAsyncServerResponse.java:136)
	at org.springframework.web.servlet.function.DefaultEntityResponseBuilder$PublisherEntityResponse.writeToInternal(DefaultEntityResponseBuilder.java:429)
	at org.springframework.web.servlet.function.AbstractServerResponse.writeTo(AbstractServerResponse.java:101)
	at org.springframework.web.servlet.function.support.HandlerFunctionAdapter.handle(HandlerFunctionAdapter.java:112)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:633)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:511)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:454)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:361)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:208)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:285)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:149)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:239)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:243)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:57)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: java.lang.IllegalStateException: Cannot start async: [ERROR]
	at org.springframework.util.Assert.state(Assert.java:79)
	at org.springframework.web.context.request.async.StandardServletAsyncWebRequest.startAsync(StandardServletAsyncWebRequest.java:157)
	at org.springframework.web.context.request.async.WebAsyncManager.startAsyncProcessing(WebAsyncManager.java:487)
	at org.springframework.web.context.request.async.WebAsyncManager.startDeferredResultProcessing(WebAsyncManager.java:462)
	at org.springframework.web.servlet.function.DefaultAsyncServerResponse.writeAsync(DefaultAsyncServerResponse.java:130)
	... 41 common frames omitted
2025-02-20 11:48:23 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [1a7a16f9, L:/127.0.0.1:57262 ! R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x1a7a16f9, L:/127.0.0.1:57262 ! R:localhost/127.0.0.1:8081]}, [disconnecting])
2025-02-20 11:53:02 [] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-02-20 11:53:02 [] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-02-20 11:53:04 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 6 thread-local buffer(s) from thread: reactor-http-nio-2
2025-02-20 11:53:04 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 2 thread-local buffer(s) from thread: reactor-http-nio-3
2025-02-20 11:53:08 [] DEBUG org.jboss.logging - Logging Provider: org.jboss.logging.Slf4jLoggerProvider found via system property
2025-02-20 11:53:08 [] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final
2025-02-20 11:53:08 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-02-20 11:53:08 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-02-20 11:53:08 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-02-20 11:53:08 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-02-20 11:53:08 [] DEBUG o.h.v.i.e.r.TraversableResolvers - Cannot find jakarta.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2025-02-20 11:53:08 [] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-02-20 11:53:08 [] INFO  c.c.c.g.c.CommongatewayApplication - Starting CommongatewayApplication using Java 17.0.12 with PID 26840 (E:\API-GATEWAY\commongateway\target\classes started by CITPL in E:\API-GATEWAY)
2025-02-20 11:53:08 [] DEBUG c.c.c.g.c.CommongatewayApplication - Running with Spring Boot v3.4.2, Spring v6.2.2
2025-02-20 11:53:08 [] INFO  c.c.c.g.c.CommongatewayApplication - No active profile set, falling back to 1 default profile: "default"
2025-02-20 11:53:08 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-02-20 11:53:08 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-02-20 11:53:08 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-02-20 11:53:08 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-02-20 11:53:08 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-02-20 11:53:08 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-02-20 11:53:09 [] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=50299984-946b-3bba-87da-3c9a1df8a676
2025-02-20 11:53:09 [] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-02-20 11:53:09 [] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-02-20 11:53:09 [] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-02-20 11:53:09 [] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.34]
2025-02-20 11:53:09 [] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-02-20 11:53:09 [] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1440 ms
2025-02-20 11:53:09 [] DEBUG i.n.u.i.l.InternalLoggerFactory - Using SLF4J as the default logging framework
2025-02-20 11:53:09 [] DEBUG i.n.util.internal.PlatformDependent0 - -Dio.netty.noUnsafe: false
2025-02-20 11:53:09 [] DEBUG i.n.util.internal.PlatformDependent0 - Java version: 17
2025-02-20 11:53:09 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe.theUnsafe: available
2025-02-20 11:53:09 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe base methods: all available
2025-02-20 11:53:09 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe.storeFence: available
2025-02-20 11:53:09 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.Buffer.address: available
2025-02-20 11:53:09 [] DEBUG i.n.util.internal.PlatformDependent0 - direct buffer constructor: unavailable: Reflective setAccessible(true) disabled
2025-02-20 11:53:09 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.Bits.unaligned: available, true
2025-02-20 11:53:09 [] DEBUG i.n.util.internal.PlatformDependent0 - jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable: class io.netty.util.internal.PlatformDependent0$7 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @7dc222ae
2025-02-20 11:53:09 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.DirectByteBuffer.<init>(long, {int,long}): unavailable
2025-02-20 11:53:09 [] DEBUG i.n.util.internal.PlatformDependent - sun.misc.Unsafe: available
2025-02-20 11:53:09 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.tmpdir: C:\Users\CITPL\AppData\Local\Temp (java.io.tmpdir)
2025-02-20 11:53:09 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.bitMode: 64 (sun.arch.data.model)
2025-02-20 11:53:09 [] DEBUG i.n.util.internal.PlatformDependent - Platform: Windows
2025-02-20 11:53:09 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.maxDirectMemory: -1 bytes
2025-02-20 11:53:09 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.uninitializedArrayAllocationThreshold: -1
2025-02-20 11:53:09 [] DEBUG io.netty.util.internal.CleanerJava9 - java.nio.ByteBuffer.cleaner(): available
2025-02-20 11:53:09 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.noPreferDirect: false
2025-02-20 11:53:10 [] DEBUG reactor.util.Loggers - Using Slf4j logging framework
2025-02-20 11:53:10 [] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-02-20 11:53:10 [] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2025-02-20 11:53:10 [] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2025-02-20 11:53:10 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-02-20 11:53:10 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via user class loader
2025-02-20 11:53:10 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-02-20 11:53:10 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-02-20 11:53:10 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-02-20 11:53:10 [] DEBUG o.h.v.i.e.r.TraversableResolvers - Cannot find jakarta.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2025-02-20 11:53:10 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-02-20 11:53:10 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-02-20 11:53:10 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-02-20 11:53:10 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-02-20 11:53:10 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-02-20 11:53:10 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-02-20 11:53:10 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	c.c.c.g.c.c.HomeController:
	{GET [/home]}: get()
2025-02-20 11:53:10 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2025-02-20 11:53:10 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 'beanNameHandlerMapping' {}
2025-02-20 11:53:10 [] DEBUG _.s.w.s.HandlerMapping.Mappings - Mapped com.citpl.common.gateway.commongateway.config.RouterConfiguration$$Lambda$895/0x000001dd544ef938@1cd2ff5b -> com.citpl.common.gateway.commongateway.config.RouterConfiguration$$Lambda$896/0x000001dd544efba0@38ac8968
2025-02-20 11:53:10 [] DEBUG _.s.w.s.HandlerMapping.Mappings - Mapped /validate/** -> ProxyExchangeHandlerFunction
/users/** -> ProxyExchangeHandlerFunction
2025-02-20 11:53:10 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2025-02-20 11:53:10 [] DEBUG i.n.u.i.InternalThreadLocalMap - -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2025-02-20 11:53:10 [] DEBUG i.n.u.i.InternalThreadLocalMap - -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2025-02-20 11:53:10 [] DEBUG io.netty.util.ResourceLeakDetector - -Dio.netty.leakDetection.level: simple
2025-02-20 11:53:10 [] DEBUG io.netty.util.ResourceLeakDetector - -Dio.netty.leakDetection.targetRecords: 4
2025-02-20 11:53:10 [] DEBUG i.n.handler.codec.compression.Brotli - brotli4j not in the classpath; Brotli support will be unavailable.
2025-02-20 11:53:10 [] DEBUG reactor.netty.tcp.TcpResources - [http] resources will use the default LoopResources: DefaultLoopResources {prefix=reactor-http, daemon=true, selectCount=12, workerCount=12}
2025-02-20 11:53:10 [] DEBUG reactor.netty.tcp.TcpResources - [http] resources will use the default ConnectionProvider: reactor.netty.resources.DefaultPooledConnectionProvider@5ce3409b
2025-02-20 11:53:10 [] DEBUG r.netty.resources.DefaultLoopIOUring - Default io_uring support : false
2025-02-20 11:53:10 [] DEBUG r.netty.resources.DefaultLoopEpoll - Default Epoll support : false
2025-02-20 11:53:10 [] DEBUG r.netty.resources.DefaultLoopKQueue - Default KQueue support : false
2025-02-20 11:53:10 [] DEBUG i.n.c.MultithreadEventLoopGroup - -Dio.netty.eventLoopThreads: 24
2025-02-20 11:53:10 [] DEBUG i.n.u.concurrent.GlobalEventExecutor - -Dio.netty.globalEventExecutor.quietPeriodSeconds: 1
2025-02-20 11:53:10 [] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.noKeySetOptimization: false
2025-02-20 11:53:10 [] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.selectorAutoRebuildThreshold: 512
2025-02-20 11:53:10 [] DEBUG i.n.util.internal.PlatformDependent - org.jctools-core.MpscChunkedArrayQueue: available
2025-02-20 11:53:10 [] DEBUG io.netty.util.NetUtil - -Djava.net.preferIPv4Stack: false
2025-02-20 11:53:10 [] DEBUG io.netty.util.NetUtil - -Djava.net.preferIPv6Addresses: false
2025-02-20 11:53:10 [] DEBUG i.netty.util.NetUtilInitializations - Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2025-02-20 11:53:10 [] DEBUG io.netty.util.NetUtil - Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2025-02-20 11:53:10 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default ResolvedAddressTypes: IPV4_ONLY
2025-02-20 11:53:10 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Localhost address: localhost/127.0.0.1
2025-02-20 11:53:10 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Windows hostname: DESKTOP-P307093
2025-02-20 11:53:10 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default search domains: []
2025-02-20 11:53:10 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default UnixResolverOptions{ndots=1, timeout=5, attempts=16}
2025-02-20 11:53:11 [] DEBUG i.n.r.DefaultHostsFileEntriesResolver - -Dio.netty.hostsFileRefreshInterval: 0
2025-02-20 11:53:11 [] DEBUG i.n.r.d.DefaultDnsServerAddressStreamProvider - Default DNS servers: [/8.8.8.8:53, /4.2.2.2:53] (sun.net.dns.ResolverConfiguration)
2025-02-20 11:53:11 [] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-02-20 11:53:11 [] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-02-20 11:53:11 [] INFO  c.c.c.g.c.CommongatewayApplication - Started CommongatewayApplication in 3.626 seconds (process running for 4.402)
2025-02-20 11:53:14 [] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-02-20 11:53:14 [] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-02-20 11:53:14 [] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 3 ms
2025-02-20 11:53:14 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-20 11:53:14 [aacd69d9-3aec-4626-bc3f-7665ec83fd71] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-20 11:53:14 [aacd69d9-3aec-4626-bc3f-7665ec83fd71] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-20 11:53:14 [aacd69d9-3aec-4626-bc3f-7665ec83fd71] INFO  c.c.c.g.c.config.RouterConfiguration - Authorized Request!
2025-02-20 11:53:14 [aacd69d9-3aec-4626-bc3f-7665ec83fd71] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [GET] /validate
2025-02-20 11:53:14 [aacd69d9-3aec-4626-bc3f-7665ec83fd71] INFO  c.c.c.g.c.config.RouterConfiguration - method: GET
2025-02-20 11:53:14 [aacd69d9-3aec-4626-bc3f-7665ec83fd71] INFO  c.c.c.g.c.config.RouterConfiguration - path: /validate
2025-02-20 11:53:15 [aacd69d9-3aec-4626-bc3f-7665ec83fd71] DEBUG r.n.r.PooledConnectionProvider - Creating a new [http] client pool [PoolFactory{evictionInterval=PT0S, leasingStrategy=fifo, maxConnections=500, maxIdleTime=-1, maxLifeTime=-1, metricsEnabled=false, pendingAcquireMaxCount=1000, pendingAcquireTimeout=45000}] for [localhost/<unresolved>:8081]
2025-02-20 11:53:15 [aacd69d9-3aec-4626-bc3f-7665ec83fd71] DEBUG io.netty.channel.DefaultChannelId - -Dio.netty.processId: 26840 (auto-detected)
2025-02-20 11:53:15 [aacd69d9-3aec-4626-bc3f-7665ec83fd71] DEBUG io.netty.channel.DefaultChannelId - -Dio.netty.machineId: a0:d3:65:ff:fe:5e:b0:28 (auto-detected)
2025-02-20 11:53:15 [aacd69d9-3aec-4626-bc3f-7665ec83fd71] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.numHeapArenas: 24
2025-02-20 11:53:15 [aacd69d9-3aec-4626-bc3f-7665ec83fd71] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.numDirectArenas: 24
2025-02-20 11:53:15 [aacd69d9-3aec-4626-bc3f-7665ec83fd71] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.pageSize: 8192
2025-02-20 11:53:15 [aacd69d9-3aec-4626-bc3f-7665ec83fd71] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxOrder: 9
2025-02-20 11:53:15 [aacd69d9-3aec-4626-bc3f-7665ec83fd71] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.chunkSize: 4194304
2025-02-20 11:53:15 [aacd69d9-3aec-4626-bc3f-7665ec83fd71] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.smallCacheSize: 256
2025-02-20 11:53:15 [aacd69d9-3aec-4626-bc3f-7665ec83fd71] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.normalCacheSize: 64
2025-02-20 11:53:15 [aacd69d9-3aec-4626-bc3f-7665ec83fd71] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2025-02-20 11:53:15 [aacd69d9-3aec-4626-bc3f-7665ec83fd71] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.cacheTrimInterval: 8192
2025-02-20 11:53:15 [aacd69d9-3aec-4626-bc3f-7665ec83fd71] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.cacheTrimIntervalMillis: 0
2025-02-20 11:53:15 [aacd69d9-3aec-4626-bc3f-7665ec83fd71] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.useCacheForAllThreads: false
2025-02-20 11:53:15 [aacd69d9-3aec-4626-bc3f-7665ec83fd71] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
2025-02-20 11:53:15 [aacd69d9-3aec-4626-bc3f-7665ec83fd71] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.disableCacheFinalizersForFastThreadLocalThreads: false
2025-02-20 11:53:15 [aacd69d9-3aec-4626-bc3f-7665ec83fd71] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.allocator.type: pooled
2025-02-20 11:53:15 [aacd69d9-3aec-4626-bc3f-7665ec83fd71] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.threadLocalDirectBufferSize: 0
2025-02-20 11:53:15 [aacd69d9-3aec-4626-bc3f-7665ec83fd71] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.maxThreadLocalCharBufferSize: 16384
2025-02-20 11:53:15 [] DEBUG r.n.r.PooledConnectionProvider - [c90e03d8] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 11:53:15 [] DEBUG io.netty.buffer.AbstractByteBuf - -Dio.netty.buffer.checkAccessible: true
2025-02-20 11:53:15 [] DEBUG io.netty.buffer.AbstractByteBuf - -Dio.netty.buffer.checkBounds: true
2025-02-20 11:53:15 [] DEBUG i.n.util.ResourceLeakDetectorFactory - Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@209be6a1
2025-02-20 11:53:15 [] DEBUG r.netty.transport.TransportConfig - [c90e03d8] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-20 11:53:15 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 11:53:15 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 11:53:15 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 11:53:15 [] DEBUG i.n.b.ChannelInitializerExtensions - -Dio.netty.bootstrap.extensions: null
2025-02-20 11:53:15 [] DEBUG r.netty.transport.TransportConnector - [c90e03d8] Connecting to [localhost/127.0.0.1:8081].
2025-02-20 11:53:15 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [c90e03d8, L:/127.0.0.1:57400 - R:localhost/127.0.0.1:8081] Registering pool release on close event for channel
2025-02-20 11:53:15 [] DEBUG r.n.r.PooledConnectionProvider - [c90e03d8, L:/127.0.0.1:57400 - R:localhost/127.0.0.1:8081] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 11:53:15 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [c90e03d8, L:/127.0.0.1:57400 - R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0xc90e03d8, L:/127.0.0.1:57400 - R:localhost/127.0.0.1:8081]}, [connected])
2025-02-20 11:53:15 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [c90e03d8-1, L:/127.0.0.1:57400 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0xc90e03d8, L:/127.0.0.1:57400 - R:localhost/127.0.0.1:8081]}}, [configured])
2025-02-20 11:53:15 [] DEBUG r.n.http.client.HttpClientConnect - [c90e03d8-1, L:/127.0.0.1:57400 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY, method=GET}
2025-02-20 11:53:15 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [c90e03d8-1, L:/127.0.0.1:57400 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xc90e03d8, L:/127.0.0.1:57400 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-20 11:53:15 [] DEBUG r.n.http.client.HttpClientOperations - [c90e03d8-1, L:/127.0.0.1:57400 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-20 11:53:15 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.maxCapacityPerThread: 4096
2025-02-20 11:53:15 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.ratio: 8
2025-02-20 11:53:15 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.chunkSize: 32
2025-02-20 11:53:15 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.blocking: false
2025-02-20 11:53:15 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.batchFastThreadLocalOnly: true
2025-02-20 11:53:15 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [c90e03d8-1, L:/127.0.0.1:57400 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xc90e03d8, L:/127.0.0.1:57400 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-20 11:53:15 [] DEBUG i.n.handler.codec.compression.Zstd - zstd-jni not in the classpath; Zstd support will be unavailable.
2025-02-20 11:53:15 [] DEBUG r.n.http.client.HttpClientOperations - [c90e03d8-1, L:/127.0.0.1:57400 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-20 11:53:15 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [c90e03d8-1, L:/127.0.0.1:57400 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xc90e03d8, L:/127.0.0.1:57400 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-20 11:53:15 [] DEBUG reactor.netty.channel.FluxReceive - [c90e03d8-1, L:/127.0.0.1:57400 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 11:53:15 [] DEBUG r.n.http.client.HttpClientOperations - [c90e03d8-1, L:/127.0.0.1:57400 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-20 11:53:15 [aacd69d9-3aec-4626-bc3f-7665ec83fd71] INFO  c.c.c.g.c.config.RouterConfiguration - Validation Response: true
2025-02-20 11:53:15 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [c90e03d8, L:/127.0.0.1:57400 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xc90e03d8, L:/127.0.0.1:57400 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-20 11:53:15 [aacd69d9-3aec-4626-bc3f-7665ec83fd71] INFO  c.c.c.g.c.config.RouterConfiguration - Forwarding [GET] /validate to User Microservice
2025-02-20 11:53:15 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [c90e03d8, L:/127.0.0.1:57400 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xc90e03d8, L:/127.0.0.1:57400 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-20 11:53:15 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [c90e03d8, L:/127.0.0.1:57400 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-20 11:53:15 [] DEBUG r.n.r.PooledConnectionProvider - [c90e03d8, L:/127.0.0.1:57400 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-20 11:53:15 [aacd69d9-3aec-4626-bc3f-7665ec83fd71] DEBUG r.n.r.PooledConnectionProvider - Creating a new [http] client pool [PoolFactory{evictionInterval=PT0S, leasingStrategy=fifo, maxConnections=500, maxIdleTime=-1, maxLifeTime=-1, metricsEnabled=false, pendingAcquireMaxCount=1000, pendingAcquireTimeout=45000}] for [localhost/<unresolved>:8082]
2025-02-20 11:53:15 [] DEBUG r.n.r.PooledConnectionProvider - [c3a9dc71] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 11:53:15 [] DEBUG r.netty.transport.TransportConfig - [c3a9dc71] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-20 11:53:15 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 11:53:15 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 11:53:15 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 11:53:15 [] DEBUG r.netty.transport.TransportConnector - [c3a9dc71] Connecting to [localhost/127.0.0.1:8082].
2025-02-20 11:53:15 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [c3a9dc71, L:/127.0.0.1:57401 - R:localhost/127.0.0.1:8082] Registering pool release on close event for channel
2025-02-20 11:53:15 [] DEBUG r.n.r.PooledConnectionProvider - [c3a9dc71, L:/127.0.0.1:57401 - R:localhost/127.0.0.1:8082] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 11:53:15 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [c3a9dc71, L:/127.0.0.1:57401 - R:localhost/127.0.0.1:8082] onStateChange(PooledConnection{channel=[id: 0xc3a9dc71, L:/127.0.0.1:57401 - R:localhost/127.0.0.1:8082]}, [connected])
2025-02-20 11:53:15 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [c3a9dc71-1, L:/127.0.0.1:57401 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0xc3a9dc71, L:/127.0.0.1:57401 - R:localhost/127.0.0.1:8082]}}, [configured])
2025-02-20 11:53:15 [] DEBUG r.n.http.client.HttpClientConnect - [c3a9dc71-1, L:/127.0.0.1:57401 - R:localhost/127.0.0.1:8082] Handler is being applied: {uri=http://localhost:8082/validate, method=GET}
2025-02-20 11:53:15 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [c3a9dc71-1, L:/127.0.0.1:57401 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xc3a9dc71, L:/127.0.0.1:57401 - R:localhost/127.0.0.1:8082]}}, [request_prepared])
2025-02-20 11:53:15 [] DEBUG r.n.http.client.HttpClientOperations - [c3a9dc71-1, L:/127.0.0.1:57401 - R:localhost/127.0.0.1:8082] No sendHeaders() called before complete, sending zero-length header
2025-02-20 11:53:15 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [c3a9dc71-1, L:/127.0.0.1:57401 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xc3a9dc71, L:/127.0.0.1:57401 - R:localhost/127.0.0.1:8082]}}, [request_sent])
2025-02-20 11:53:15 [] DEBUG r.n.http.client.HttpClientOperations - [c3a9dc71-1, L:/127.0.0.1:57401 - R:localhost/127.0.0.1:8082] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 404 
Vary: <filtered>
Vary: <filtered>
Vary: <filtered>
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-20 11:53:15 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [c3a9dc71-1, L:/127.0.0.1:57401 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xc3a9dc71, L:/127.0.0.1:57401 - R:localhost/127.0.0.1:8082]}}, [response_received])
2025-02-20 11:53:15 [] DEBUG reactor.netty.channel.FluxReceive - [c3a9dc71-1, L:/127.0.0.1:57401 - R:localhost/127.0.0.1:8082] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 11:53:15 [] DEBUG r.n.http.client.HttpClientOperations - [c3a9dc71-1, L:/127.0.0.1:57401 - R:localhost/127.0.0.1:8082] Received last HTTP packet
2025-02-20 11:53:15 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [c3a9dc71, L:/127.0.0.1:57401 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xc3a9dc71, L:/127.0.0.1:57401 - R:localhost/127.0.0.1:8082]}}, [response_completed])
2025-02-20 11:53:15 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [c3a9dc71, L:/127.0.0.1:57401 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xc3a9dc71, L:/127.0.0.1:57401 - R:localhost/127.0.0.1:8082]}}, [disconnecting])
2025-02-20 11:53:15 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [c3a9dc71, L:/127.0.0.1:57401 - R:localhost/127.0.0.1:8082] Releasing channel
2025-02-20 11:53:15 [] DEBUG r.n.r.PooledConnectionProvider - [c3a9dc71, L:/127.0.0.1:57401 - R:localhost/127.0.0.1:8082] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-20 11:53:15 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] threw exception
org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 404 NOT_FOUND from GET http://localhost:8082/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 11:53:15 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate] with root cause
org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 404 NOT_FOUND from GET http://localhost:8082/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 11:53:15 [] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-20 11:53:15 [] INFO  c.c.c.g.c.config.RouterConfiguration - Authorized Request!
2025-02-20 11:53:15 [] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [GET] /error
2025-02-20 11:53:15 [] INFO  c.c.c.g.c.config.RouterConfiguration - method: GET
2025-02-20 11:53:15 [] INFO  c.c.c.g.c.config.RouterConfiguration - path: /error
2025-02-20 11:53:15 [] DEBUG r.n.r.PooledConnectionProvider - [c90e03d8, L:/127.0.0.1:57400 - R:localhost/127.0.0.1:8081] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 11:53:15 [] DEBUG r.n.http.client.HttpClientConnect - [c90e03d8-2, L:/127.0.0.1:57400 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY, method=GET}
2025-02-20 11:53:15 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [c90e03d8-2, L:/127.0.0.1:57400 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xc90e03d8, L:/127.0.0.1:57400 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-20 11:53:15 [] DEBUG r.n.http.client.HttpClientOperations - [c90e03d8-2, L:/127.0.0.1:57400 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-20 11:53:15 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [c90e03d8-2, L:/127.0.0.1:57400 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xc90e03d8, L:/127.0.0.1:57400 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-20 11:53:15 [] DEBUG r.n.http.client.HttpClientOperations - [c90e03d8-2, L:/127.0.0.1:57400 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-20 11:53:15 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [c90e03d8-2, L:/127.0.0.1:57400 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xc90e03d8, L:/127.0.0.1:57400 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-20 11:53:15 [] DEBUG reactor.netty.channel.FluxReceive - [c90e03d8-2, L:/127.0.0.1:57400 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 11:53:15 [] DEBUG r.n.http.client.HttpClientOperations - [c90e03d8-2, L:/127.0.0.1:57400 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-20 11:53:15 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [c90e03d8, L:/127.0.0.1:57400 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xc90e03d8, L:/127.0.0.1:57400 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-20 11:53:15 [] INFO  c.c.c.g.c.config.RouterConfiguration - Validation Response: true
2025-02-20 11:53:15 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [c90e03d8, L:/127.0.0.1:57400 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xc90e03d8, L:/127.0.0.1:57400 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-20 11:53:15 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [c90e03d8, L:/127.0.0.1:57400 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-20 11:53:15 [] INFO  c.c.c.g.c.config.RouterConfiguration - Forwarding [GET] /error to User Microservice
2025-02-20 11:53:15 [] DEBUG r.n.r.PooledConnectionProvider - [c90e03d8, L:/127.0.0.1:57400 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-20 11:53:15 [] DEBUG r.n.r.PooledConnectionProvider - [c3a9dc71, L:/127.0.0.1:57401 - R:localhost/127.0.0.1:8082] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 11:53:15 [] DEBUG r.n.http.client.HttpClientConnect - [c3a9dc71-2, L:/127.0.0.1:57401 - R:localhost/127.0.0.1:8082] Handler is being applied: {uri=http://localhost:8082/error, method=GET}
2025-02-20 11:53:15 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [c3a9dc71-2, L:/127.0.0.1:57401 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0xc3a9dc71, L:/127.0.0.1:57401 - R:localhost/127.0.0.1:8082]}}, [request_prepared])
2025-02-20 11:53:15 [] DEBUG r.n.http.client.HttpClientOperations - [c3a9dc71-2, L:/127.0.0.1:57401 - R:localhost/127.0.0.1:8082] No sendHeaders() called before complete, sending zero-length header
2025-02-20 11:53:15 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [c3a9dc71-2, L:/127.0.0.1:57401 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0xc3a9dc71, L:/127.0.0.1:57401 - R:localhost/127.0.0.1:8082]}}, [request_sent])
2025-02-20 11:53:15 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] threw exception
org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 404 NOT_FOUND from GET http://localhost:8082/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 11:53:15 [] DEBUG r.n.http.client.HttpClientOperations - [c3a9dc71-2, L:/127.0.0.1:57401 - R:localhost/127.0.0.1:8082] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 500 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
Connection: <filtered>
2025-02-20 11:53:15 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [c3a9dc71-2, L:/127.0.0.1:57401 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0xc3a9dc71, L:/127.0.0.1:57401 - R:localhost/127.0.0.1:8082]}}, [response_received])
2025-02-20 11:53:15 [] DEBUG reactor.netty.channel.FluxReceive - [c3a9dc71-2, L:/127.0.0.1:57401 - R:localhost/127.0.0.1:8082] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 11:53:15 [] DEBUG r.n.http.client.HttpClientOperations - [c3a9dc71-2, L:/127.0.0.1:57401 - R:localhost/127.0.0.1:8082] Received last HTTP packet
2025-02-20 11:53:15 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate] with root cause
org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 404 NOT_FOUND from GET http://localhost:8082/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 11:53:15 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [c3a9dc71, L:/127.0.0.1:57401 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0xc3a9dc71, L:/127.0.0.1:57401 - R:localhost/127.0.0.1:8082]}}, [response_completed])
2025-02-20 11:53:15 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [c3a9dc71, L:/127.0.0.1:57401 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0xc3a9dc71, L:/127.0.0.1:57401 - R:localhost/127.0.0.1:8082]}}, [disconnecting])
2025-02-20 11:53:15 [] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-20 11:53:15 [] INFO  c.c.c.g.c.config.RouterConfiguration - Authorized Request!
2025-02-20 11:53:15 [] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [GET] /error
2025-02-20 11:53:15 [] INFO  c.c.c.g.c.config.RouterConfiguration - method: GET
2025-02-20 11:53:15 [] INFO  c.c.c.g.c.config.RouterConfiguration - path: /error
2025-02-20 11:53:15 [] DEBUG r.n.r.PooledConnectionProvider - [c3a9dc71, L:/127.0.0.1:57401 ! R:localhost/127.0.0.1:8082] Channel closed, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 11:53:15 [] DEBUG r.n.r.PooledConnectionProvider - [c90e03d8, L:/127.0.0.1:57400 - R:localhost/127.0.0.1:8081] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 11:53:15 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [c3a9dc71, L:/127.0.0.1:57401 ! R:localhost/127.0.0.1:8082] onStateChange(PooledConnection{channel=[id: 0xc3a9dc71, L:/127.0.0.1:57401 ! R:localhost/127.0.0.1:8082]}, [disconnecting])
2025-02-20 11:53:15 [] DEBUG r.n.http.client.HttpClientConnect - [c90e03d8-3, L:/127.0.0.1:57400 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY, method=GET}
2025-02-20 11:53:15 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [c90e03d8-3, L:/127.0.0.1:57400 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xc90e03d8, L:/127.0.0.1:57400 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-20 11:53:15 [] DEBUG r.n.http.client.HttpClientOperations - [c90e03d8-3, L:/127.0.0.1:57400 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-20 11:53:15 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [c90e03d8-3, L:/127.0.0.1:57400 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xc90e03d8, L:/127.0.0.1:57400 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-20 11:53:15 [] DEBUG r.n.http.client.HttpClientOperations - [c90e03d8-3, L:/127.0.0.1:57400 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-20 11:53:15 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [c90e03d8-3, L:/127.0.0.1:57400 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xc90e03d8, L:/127.0.0.1:57400 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-20 11:53:15 [] DEBUG reactor.netty.channel.FluxReceive - [c90e03d8-3, L:/127.0.0.1:57400 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 11:53:15 [] DEBUG r.n.http.client.HttpClientOperations - [c90e03d8-3, L:/127.0.0.1:57400 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-20 11:53:15 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [c90e03d8, L:/127.0.0.1:57400 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xc90e03d8, L:/127.0.0.1:57400 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-20 11:53:15 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [c90e03d8, L:/127.0.0.1:57400 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xc90e03d8, L:/127.0.0.1:57400 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-20 11:53:15 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [c90e03d8, L:/127.0.0.1:57400 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-20 11:53:15 [] INFO  c.c.c.g.c.config.RouterConfiguration - Validation Response: true
2025-02-20 11:53:15 [] DEBUG r.n.r.PooledConnectionProvider - [c90e03d8, L:/127.0.0.1:57400 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-20 11:53:15 [] INFO  c.c.c.g.c.config.RouterConfiguration - Forwarding [GET] /error to User Microservice
2025-02-20 11:53:15 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] threw exception
java.lang.IllegalStateException: Cannot start async: [ERROR]
	at org.springframework.util.Assert.state(Assert.java:79)
	at org.springframework.web.context.request.async.StandardServletAsyncWebRequest.startAsync(StandardServletAsyncWebRequest.java:157)
	at org.springframework.web.context.request.async.WebAsyncManager.startAsyncProcessing(WebAsyncManager.java:487)
	at org.springframework.web.context.request.async.WebAsyncManager.startDeferredResultProcessing(WebAsyncManager.java:462)
	at org.springframework.web.servlet.function.DefaultAsyncServerResponse.writeAsync(DefaultAsyncServerResponse.java:130)
	at org.springframework.web.servlet.function.DefaultEntityResponseBuilder$PublisherEntityResponse.writeToInternal(DefaultEntityResponseBuilder.java:429)
	at org.springframework.web.servlet.function.AbstractServerResponse.writeTo(AbstractServerResponse.java:101)
	at org.springframework.web.servlet.function.support.HandlerFunctionAdapter.handle(HandlerFunctionAdapter.java:112)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:633)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:511)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:454)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:361)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:208)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:285)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:149)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:239)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:243)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:57)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 11:53:15 [] ERROR o.a.c.c.C.[Tomcat].[localhost] - Exception Processing [ErrorPage[errorCode=0, location=/error]]
jakarta.servlet.ServletException: Async processing failed
	at org.springframework.web.servlet.function.DefaultAsyncServerResponse.writeAsync(DefaultAsyncServerResponse.java:136)
	at org.springframework.web.servlet.function.DefaultEntityResponseBuilder$PublisherEntityResponse.writeToInternal(DefaultEntityResponseBuilder.java:429)
	at org.springframework.web.servlet.function.AbstractServerResponse.writeTo(AbstractServerResponse.java:101)
	at org.springframework.web.servlet.function.support.HandlerFunctionAdapter.handle(HandlerFunctionAdapter.java:112)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:633)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:511)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:454)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:361)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:208)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:285)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:149)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:239)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:243)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:57)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: java.lang.IllegalStateException: Cannot start async: [ERROR]
	at org.springframework.util.Assert.state(Assert.java:79)
	at org.springframework.web.context.request.async.StandardServletAsyncWebRequest.startAsync(StandardServletAsyncWebRequest.java:157)
	at org.springframework.web.context.request.async.WebAsyncManager.startAsyncProcessing(WebAsyncManager.java:487)
	at org.springframework.web.context.request.async.WebAsyncManager.startDeferredResultProcessing(WebAsyncManager.java:462)
	at org.springframework.web.servlet.function.DefaultAsyncServerResponse.writeAsync(DefaultAsyncServerResponse.java:130)
	... 41 common frames omitted
2025-02-20 11:53:39 [] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-02-20 11:53:39 [] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-02-20 11:53:39 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [c90e03d8, L:/127.0.0.1:57400 ! R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0xc90e03d8, L:/127.0.0.1:57400 ! R:localhost/127.0.0.1:8081]}, [disconnecting])
2025-02-20 11:53:41 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 5 thread-local buffer(s) from thread: reactor-http-nio-3
2025-02-20 11:53:41 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 5 thread-local buffer(s) from thread: reactor-http-nio-2
2025-02-20 11:53:44 [] DEBUG org.jboss.logging - Logging Provider: org.jboss.logging.Slf4jLoggerProvider found via system property
2025-02-20 11:53:44 [] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final
2025-02-20 11:53:44 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-02-20 11:53:44 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-02-20 11:53:44 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-02-20 11:53:44 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-02-20 11:53:44 [] DEBUG o.h.v.i.e.r.TraversableResolvers - Cannot find jakarta.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2025-02-20 11:53:44 [] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-02-20 11:53:44 [] INFO  c.c.c.g.c.CommongatewayApplication - Starting CommongatewayApplication using Java 17.0.12 with PID 27680 (E:\API-GATEWAY\commongateway\target\classes started by CITPL in E:\API-GATEWAY)
2025-02-20 11:53:44 [] DEBUG c.c.c.g.c.CommongatewayApplication - Running with Spring Boot v3.4.2, Spring v6.2.2
2025-02-20 11:53:44 [] INFO  c.c.c.g.c.CommongatewayApplication - No active profile set, falling back to 1 default profile: "default"
2025-02-20 11:53:44 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-02-20 11:53:44 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-02-20 11:53:44 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-02-20 11:53:44 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-02-20 11:53:44 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-02-20 11:53:44 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-02-20 11:53:45 [] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=50299984-946b-3bba-87da-3c9a1df8a676
2025-02-20 11:53:45 [] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-02-20 11:53:45 [] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-02-20 11:53:45 [] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-02-20 11:53:45 [] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.34]
2025-02-20 11:53:45 [] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-02-20 11:53:45 [] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1403 ms
2025-02-20 11:53:45 [] DEBUG i.n.u.i.l.InternalLoggerFactory - Using SLF4J as the default logging framework
2025-02-20 11:53:45 [] DEBUG i.n.util.internal.PlatformDependent0 - -Dio.netty.noUnsafe: false
2025-02-20 11:53:45 [] DEBUG i.n.util.internal.PlatformDependent0 - Java version: 17
2025-02-20 11:53:45 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe.theUnsafe: available
2025-02-20 11:53:45 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe base methods: all available
2025-02-20 11:53:45 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe.storeFence: available
2025-02-20 11:53:45 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.Buffer.address: available
2025-02-20 11:53:45 [] DEBUG i.n.util.internal.PlatformDependent0 - direct buffer constructor: unavailable: Reflective setAccessible(true) disabled
2025-02-20 11:53:45 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.Bits.unaligned: available, true
2025-02-20 11:53:45 [] DEBUG i.n.util.internal.PlatformDependent0 - jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable: class io.netty.util.internal.PlatformDependent0$7 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @7dc222ae
2025-02-20 11:53:45 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.DirectByteBuffer.<init>(long, {int,long}): unavailable
2025-02-20 11:53:45 [] DEBUG i.n.util.internal.PlatformDependent - sun.misc.Unsafe: available
2025-02-20 11:53:45 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.tmpdir: C:\Users\CITPL\AppData\Local\Temp (java.io.tmpdir)
2025-02-20 11:53:45 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.bitMode: 64 (sun.arch.data.model)
2025-02-20 11:53:45 [] DEBUG i.n.util.internal.PlatformDependent - Platform: Windows
2025-02-20 11:53:45 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.maxDirectMemory: -1 bytes
2025-02-20 11:53:45 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.uninitializedArrayAllocationThreshold: -1
2025-02-20 11:53:45 [] DEBUG io.netty.util.internal.CleanerJava9 - java.nio.ByteBuffer.cleaner(): available
2025-02-20 11:53:45 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.noPreferDirect: false
2025-02-20 11:53:45 [] DEBUG reactor.util.Loggers - Using Slf4j logging framework
2025-02-20 11:53:45 [] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-02-20 11:53:45 [] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2025-02-20 11:53:45 [] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2025-02-20 11:53:45 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-02-20 11:53:45 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via user class loader
2025-02-20 11:53:45 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-02-20 11:53:45 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-02-20 11:53:45 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-02-20 11:53:45 [] DEBUG o.h.v.i.e.r.TraversableResolvers - Cannot find jakarta.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2025-02-20 11:53:45 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-02-20 11:53:45 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-02-20 11:53:45 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-02-20 11:53:45 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-02-20 11:53:45 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-02-20 11:53:45 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-02-20 11:53:46 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	c.c.c.g.c.c.HomeController:
	{GET [/home]}: get()
2025-02-20 11:53:46 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2025-02-20 11:53:46 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 'beanNameHandlerMapping' {}
2025-02-20 11:53:46 [] DEBUG _.s.w.s.HandlerMapping.Mappings - Mapped com.citpl.common.gateway.commongateway.config.RouterConfiguration$$Lambda$895/0x000001978150deb0@50ec4bfc -> com.citpl.common.gateway.commongateway.config.RouterConfiguration$$Lambda$896/0x000001978150e118@8b13d91
2025-02-20 11:53:46 [] DEBUG _.s.w.s.HandlerMapping.Mappings - Mapped /validate/** -> ProxyExchangeHandlerFunction
/users/** -> ProxyExchangeHandlerFunction
2025-02-20 11:53:46 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2025-02-20 11:53:46 [] DEBUG i.n.u.i.InternalThreadLocalMap - -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2025-02-20 11:53:46 [] DEBUG i.n.u.i.InternalThreadLocalMap - -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2025-02-20 11:53:46 [] DEBUG io.netty.util.ResourceLeakDetector - -Dio.netty.leakDetection.level: simple
2025-02-20 11:53:46 [] DEBUG io.netty.util.ResourceLeakDetector - -Dio.netty.leakDetection.targetRecords: 4
2025-02-20 11:53:46 [] DEBUG i.n.handler.codec.compression.Brotli - brotli4j not in the classpath; Brotli support will be unavailable.
2025-02-20 11:53:46 [] DEBUG reactor.netty.tcp.TcpResources - [http] resources will use the default LoopResources: DefaultLoopResources {prefix=reactor-http, daemon=true, selectCount=12, workerCount=12}
2025-02-20 11:53:46 [] DEBUG reactor.netty.tcp.TcpResources - [http] resources will use the default ConnectionProvider: reactor.netty.resources.DefaultPooledConnectionProvider@3302035b
2025-02-20 11:53:46 [] DEBUG r.netty.resources.DefaultLoopIOUring - Default io_uring support : false
2025-02-20 11:53:46 [] DEBUG r.netty.resources.DefaultLoopEpoll - Default Epoll support : false
2025-02-20 11:53:46 [] DEBUG r.netty.resources.DefaultLoopKQueue - Default KQueue support : false
2025-02-20 11:53:46 [] DEBUG i.n.c.MultithreadEventLoopGroup - -Dio.netty.eventLoopThreads: 24
2025-02-20 11:53:46 [] DEBUG i.n.u.concurrent.GlobalEventExecutor - -Dio.netty.globalEventExecutor.quietPeriodSeconds: 1
2025-02-20 11:53:46 [] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.noKeySetOptimization: false
2025-02-20 11:53:46 [] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.selectorAutoRebuildThreshold: 512
2025-02-20 11:53:46 [] DEBUG i.n.util.internal.PlatformDependent - org.jctools-core.MpscChunkedArrayQueue: available
2025-02-20 11:53:46 [] DEBUG io.netty.util.NetUtil - -Djava.net.preferIPv4Stack: false
2025-02-20 11:53:46 [] DEBUG io.netty.util.NetUtil - -Djava.net.preferIPv6Addresses: false
2025-02-20 11:53:46 [] DEBUG i.netty.util.NetUtilInitializations - Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2025-02-20 11:53:46 [] DEBUG io.netty.util.NetUtil - Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2025-02-20 11:53:46 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default ResolvedAddressTypes: IPV4_ONLY
2025-02-20 11:53:46 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Localhost address: localhost/127.0.0.1
2025-02-20 11:53:46 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Windows hostname: DESKTOP-P307093
2025-02-20 11:53:46 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default search domains: []
2025-02-20 11:53:46 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default UnixResolverOptions{ndots=1, timeout=5, attempts=16}
2025-02-20 11:53:46 [] DEBUG i.n.r.DefaultHostsFileEntriesResolver - -Dio.netty.hostsFileRefreshInterval: 0
2025-02-20 11:53:46 [] DEBUG i.n.r.d.DefaultDnsServerAddressStreamProvider - Default DNS servers: [/8.8.8.8:53, /4.2.2.2:53] (sun.net.dns.ResolverConfiguration)
2025-02-20 11:53:46 [] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-02-20 11:53:46 [] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-02-20 11:53:46 [] INFO  c.c.c.g.c.CommongatewayApplication - Started CommongatewayApplication in 3.532 seconds (process running for 4.339)
2025-02-20 11:53:56 [] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-02-20 11:53:56 [] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-02-20 11:53:56 [] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-02-20 11:53:57 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-20 11:53:57 [897191cd-1acc-4271-a633-29c2a945ec7b] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-20 11:53:57 [897191cd-1acc-4271-a633-29c2a945ec7b] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-20 11:53:57 [897191cd-1acc-4271-a633-29c2a945ec7b] INFO  c.c.c.g.c.config.RouterConfiguration - Authorized Request!
2025-02-20 11:53:57 [897191cd-1acc-4271-a633-29c2a945ec7b] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [GET] /users
2025-02-20 11:53:57 [897191cd-1acc-4271-a633-29c2a945ec7b] INFO  c.c.c.g.c.config.RouterConfiguration - method: GET
2025-02-20 11:53:57 [897191cd-1acc-4271-a633-29c2a945ec7b] INFO  c.c.c.g.c.config.RouterConfiguration - path: /users
2025-02-20 11:53:57 [897191cd-1acc-4271-a633-29c2a945ec7b] DEBUG r.n.r.PooledConnectionProvider - Creating a new [http] client pool [PoolFactory{evictionInterval=PT0S, leasingStrategy=fifo, maxConnections=500, maxIdleTime=-1, maxLifeTime=-1, metricsEnabled=false, pendingAcquireMaxCount=1000, pendingAcquireTimeout=45000}] for [localhost/<unresolved>:8081]
2025-02-20 11:53:57 [897191cd-1acc-4271-a633-29c2a945ec7b] DEBUG io.netty.channel.DefaultChannelId - -Dio.netty.processId: 27680 (auto-detected)
2025-02-20 11:53:57 [897191cd-1acc-4271-a633-29c2a945ec7b] DEBUG io.netty.channel.DefaultChannelId - -Dio.netty.machineId: a0:d3:65:ff:fe:5e:b0:28 (auto-detected)
2025-02-20 11:53:57 [897191cd-1acc-4271-a633-29c2a945ec7b] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.numHeapArenas: 24
2025-02-20 11:53:57 [897191cd-1acc-4271-a633-29c2a945ec7b] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.numDirectArenas: 24
2025-02-20 11:53:57 [897191cd-1acc-4271-a633-29c2a945ec7b] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.pageSize: 8192
2025-02-20 11:53:57 [897191cd-1acc-4271-a633-29c2a945ec7b] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxOrder: 9
2025-02-20 11:53:57 [897191cd-1acc-4271-a633-29c2a945ec7b] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.chunkSize: 4194304
2025-02-20 11:53:57 [897191cd-1acc-4271-a633-29c2a945ec7b] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.smallCacheSize: 256
2025-02-20 11:53:57 [897191cd-1acc-4271-a633-29c2a945ec7b] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.normalCacheSize: 64
2025-02-20 11:53:57 [897191cd-1acc-4271-a633-29c2a945ec7b] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2025-02-20 11:53:57 [897191cd-1acc-4271-a633-29c2a945ec7b] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.cacheTrimInterval: 8192
2025-02-20 11:53:57 [897191cd-1acc-4271-a633-29c2a945ec7b] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.cacheTrimIntervalMillis: 0
2025-02-20 11:53:57 [897191cd-1acc-4271-a633-29c2a945ec7b] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.useCacheForAllThreads: false
2025-02-20 11:53:57 [897191cd-1acc-4271-a633-29c2a945ec7b] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
2025-02-20 11:53:57 [897191cd-1acc-4271-a633-29c2a945ec7b] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.disableCacheFinalizersForFastThreadLocalThreads: false
2025-02-20 11:53:57 [897191cd-1acc-4271-a633-29c2a945ec7b] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.allocator.type: pooled
2025-02-20 11:53:57 [897191cd-1acc-4271-a633-29c2a945ec7b] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.threadLocalDirectBufferSize: 0
2025-02-20 11:53:57 [897191cd-1acc-4271-a633-29c2a945ec7b] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.maxThreadLocalCharBufferSize: 16384
2025-02-20 11:53:57 [] DEBUG r.n.r.PooledConnectionProvider - [0698785e] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 11:53:57 [] DEBUG io.netty.buffer.AbstractByteBuf - -Dio.netty.buffer.checkAccessible: true
2025-02-20 11:53:57 [] DEBUG io.netty.buffer.AbstractByteBuf - -Dio.netty.buffer.checkBounds: true
2025-02-20 11:53:57 [] DEBUG i.n.util.ResourceLeakDetectorFactory - Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@d7da0ea
2025-02-20 11:53:57 [] DEBUG r.netty.transport.TransportConfig - [0698785e] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-20 11:53:57 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 11:53:57 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 11:53:57 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 11:53:57 [] DEBUG i.n.b.ChannelInitializerExtensions - -Dio.netty.bootstrap.extensions: null
2025-02-20 11:53:57 [] DEBUG r.netty.transport.TransportConnector - [0698785e] Connecting to [localhost/127.0.0.1:8081].
2025-02-20 11:53:57 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [0698785e, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081] Registering pool release on close event for channel
2025-02-20 11:53:57 [] DEBUG r.n.r.PooledConnectionProvider - [0698785e, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 11:53:57 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [0698785e, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x0698785e, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081]}, [connected])
2025-02-20 11:53:57 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [0698785e-1, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0x0698785e, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081]}}, [configured])
2025-02-20 11:53:57 [] DEBUG r.n.http.client.HttpClientConnect - [0698785e-1, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY, method=GET}
2025-02-20 11:53:57 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [0698785e-1, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x0698785e, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-20 11:53:57 [] DEBUG r.n.http.client.HttpClientOperations - [0698785e-1, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-20 11:53:57 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.maxCapacityPerThread: 4096
2025-02-20 11:53:57 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.ratio: 8
2025-02-20 11:53:57 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.chunkSize: 32
2025-02-20 11:53:57 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.blocking: false
2025-02-20 11:53:57 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.batchFastThreadLocalOnly: true
2025-02-20 11:53:57 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [0698785e-1, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x0698785e, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-20 11:53:57 [] DEBUG i.n.handler.codec.compression.Zstd - zstd-jni not in the classpath; Zstd support will be unavailable.
2025-02-20 11:53:57 [] DEBUG r.n.http.client.HttpClientOperations - [0698785e-1, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-20 11:53:57 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [0698785e-1, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x0698785e, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-20 11:53:57 [] DEBUG reactor.netty.channel.FluxReceive - [0698785e-1, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 11:53:57 [] DEBUG r.n.http.client.HttpClientOperations - [0698785e-1, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-20 11:53:57 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [0698785e, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x0698785e, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-20 11:53:57 [897191cd-1acc-4271-a633-29c2a945ec7b] INFO  c.c.c.g.c.config.RouterConfiguration - Validation Response: true
2025-02-20 11:53:57 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [0698785e, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x0698785e, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-20 11:53:57 [897191cd-1acc-4271-a633-29c2a945ec7b] INFO  c.c.c.g.c.config.RouterConfiguration - Forwarding [GET] /users to User Microservice
2025-02-20 11:53:57 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [0698785e, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-20 11:53:57 [] DEBUG r.n.r.PooledConnectionProvider - [0698785e, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-20 11:53:57 [897191cd-1acc-4271-a633-29c2a945ec7b] DEBUG r.n.r.PooledConnectionProvider - Creating a new [http] client pool [PoolFactory{evictionInterval=PT0S, leasingStrategy=fifo, maxConnections=500, maxIdleTime=-1, maxLifeTime=-1, metricsEnabled=false, pendingAcquireMaxCount=1000, pendingAcquireTimeout=45000}] for [localhost/<unresolved>:8082]
2025-02-20 11:53:57 [] DEBUG r.n.r.PooledConnectionProvider - [da8d7d2c] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 11:53:57 [] DEBUG r.netty.transport.TransportConfig - [da8d7d2c] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-20 11:53:57 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 11:53:57 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 11:53:57 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 11:53:57 [] DEBUG r.netty.transport.TransportConnector - [da8d7d2c] Connecting to [localhost/127.0.0.1:8082].
2025-02-20 11:53:57 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [da8d7d2c, L:/127.0.0.1:57423 - R:localhost/127.0.0.1:8082] Registering pool release on close event for channel
2025-02-20 11:53:57 [] DEBUG r.n.r.PooledConnectionProvider - [da8d7d2c, L:/127.0.0.1:57423 - R:localhost/127.0.0.1:8082] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 11:53:57 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [da8d7d2c, L:/127.0.0.1:57423 - R:localhost/127.0.0.1:8082] onStateChange(PooledConnection{channel=[id: 0xda8d7d2c, L:/127.0.0.1:57423 - R:localhost/127.0.0.1:8082]}, [connected])
2025-02-20 11:53:57 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [da8d7d2c-1, L:/127.0.0.1:57423 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0xda8d7d2c, L:/127.0.0.1:57423 - R:localhost/127.0.0.1:8082]}}, [configured])
2025-02-20 11:53:57 [] DEBUG r.n.http.client.HttpClientConnect - [da8d7d2c-1, L:/127.0.0.1:57423 - R:localhost/127.0.0.1:8082] Handler is being applied: {uri=http://localhost:8082/users, method=GET}
2025-02-20 11:53:57 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [da8d7d2c-1, L:/127.0.0.1:57423 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0xda8d7d2c, L:/127.0.0.1:57423 - R:localhost/127.0.0.1:8082]}}, [request_prepared])
2025-02-20 11:53:57 [] DEBUG r.n.http.client.HttpClientOperations - [da8d7d2c-1, L:/127.0.0.1:57423 - R:localhost/127.0.0.1:8082] No sendHeaders() called before complete, sending zero-length header
2025-02-20 11:53:57 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [da8d7d2c-1, L:/127.0.0.1:57423 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0xda8d7d2c, L:/127.0.0.1:57423 - R:localhost/127.0.0.1:8082]}}, [request_sent])
2025-02-20 11:53:57 [] DEBUG r.n.http.client.HttpClientOperations - [da8d7d2c-1, L:/127.0.0.1:57423 - R:localhost/127.0.0.1:8082] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Content-Length: <filtered>
Date: <filtered>
2025-02-20 11:53:57 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [da8d7d2c-1, L:/127.0.0.1:57423 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0xda8d7d2c, L:/127.0.0.1:57423 - R:localhost/127.0.0.1:8082]}}, [response_received])
2025-02-20 11:53:57 [] DEBUG reactor.netty.channel.FluxReceive - [da8d7d2c-1, L:/127.0.0.1:57423 - R:localhost/127.0.0.1:8082] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 11:53:57 [] DEBUG r.n.http.client.HttpClientOperations - [da8d7d2c-1, L:/127.0.0.1:57423 - R:localhost/127.0.0.1:8082] Received last HTTP packet
2025-02-20 11:53:57 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [da8d7d2c, L:/127.0.0.1:57423 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0xda8d7d2c, L:/127.0.0.1:57423 - R:localhost/127.0.0.1:8082]}}, [response_completed])
2025-02-20 11:53:57 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [da8d7d2c, L:/127.0.0.1:57423 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0xda8d7d2c, L:/127.0.0.1:57423 - R:localhost/127.0.0.1:8082]}}, [disconnecting])
2025-02-20 11:53:57 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [da8d7d2c, L:/127.0.0.1:57423 - R:localhost/127.0.0.1:8082] Releasing channel
2025-02-20 11:53:57 [] DEBUG r.n.r.PooledConnectionProvider - [da8d7d2c, L:/127.0.0.1:57423 - R:localhost/127.0.0.1:8082] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-20 11:54:10 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-20 11:54:10 [b63c970f-3649-4a54-baac-047d3c179345] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-20 11:54:10 [b63c970f-3649-4a54-baac-047d3c179345] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-20 11:54:10 [b63c970f-3649-4a54-baac-047d3c179345] INFO  c.c.c.g.c.config.RouterConfiguration - Authorized Request!
2025-02-20 11:54:10 [b63c970f-3649-4a54-baac-047d3c179345] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [GET] /validate
2025-02-20 11:54:10 [b63c970f-3649-4a54-baac-047d3c179345] WARN  c.c.c.g.c.config.RouterConfiguration - Missing Validation Token!
2025-02-20 11:54:15 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-20 11:54:15 [795d8825-4640-42bf-ac35-c8ec7473ba63] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-20 11:54:15 [795d8825-4640-42bf-ac35-c8ec7473ba63] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-20 11:54:15 [795d8825-4640-42bf-ac35-c8ec7473ba63] INFO  c.c.c.g.c.config.RouterConfiguration - Authorized Request!
2025-02-20 11:54:15 [795d8825-4640-42bf-ac35-c8ec7473ba63] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [GET] /validate
2025-02-20 11:54:15 [795d8825-4640-42bf-ac35-c8ec7473ba63] INFO  c.c.c.g.c.config.RouterConfiguration - method: GET
2025-02-20 11:54:15 [795d8825-4640-42bf-ac35-c8ec7473ba63] INFO  c.c.c.g.c.config.RouterConfiguration - path: /validate
2025-02-20 11:54:15 [] DEBUG r.n.r.PooledConnectionProvider - [0698785e, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 11:54:15 [] DEBUG r.n.http.client.HttpClientConnect - [0698785e-2, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY, method=GET}
2025-02-20 11:54:15 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [0698785e-2, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x0698785e, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-20 11:54:15 [] DEBUG r.n.http.client.HttpClientOperations - [0698785e-2, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-20 11:54:15 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [0698785e-2, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x0698785e, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-20 11:54:15 [] DEBUG r.n.http.client.HttpClientOperations - [0698785e-2, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-20 11:54:15 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [0698785e-2, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x0698785e, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-20 11:54:15 [] DEBUG reactor.netty.channel.FluxReceive - [0698785e-2, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 11:54:15 [] DEBUG r.n.http.client.HttpClientOperations - [0698785e-2, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-20 11:54:15 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [0698785e, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x0698785e, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-20 11:54:15 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [0698785e, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x0698785e, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-20 11:54:15 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [0698785e, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-20 11:54:15 [795d8825-4640-42bf-ac35-c8ec7473ba63] INFO  c.c.c.g.c.config.RouterConfiguration - Validation Response: true
2025-02-20 11:54:15 [] DEBUG r.n.r.PooledConnectionProvider - [0698785e, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-20 11:54:15 [795d8825-4640-42bf-ac35-c8ec7473ba63] INFO  c.c.c.g.c.config.RouterConfiguration - Forwarding [GET] /validate to User Microservice
2025-02-20 11:54:15 [] DEBUG r.n.r.PooledConnectionProvider - [da8d7d2c, L:/127.0.0.1:57423 - R:localhost/127.0.0.1:8082] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 11:54:15 [] DEBUG r.n.http.client.HttpClientConnect - [da8d7d2c-2, L:/127.0.0.1:57423 - R:localhost/127.0.0.1:8082] Handler is being applied: {uri=http://localhost:8082/validate, method=GET}
2025-02-20 11:54:15 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [da8d7d2c-2, L:/127.0.0.1:57423 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xda8d7d2c, L:/127.0.0.1:57423 - R:localhost/127.0.0.1:8082]}}, [request_prepared])
2025-02-20 11:54:15 [] DEBUG r.n.http.client.HttpClientOperations - [da8d7d2c-2, L:/127.0.0.1:57423 - R:localhost/127.0.0.1:8082] No sendHeaders() called before complete, sending zero-length header
2025-02-20 11:54:15 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [da8d7d2c-2, L:/127.0.0.1:57423 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xda8d7d2c, L:/127.0.0.1:57423 - R:localhost/127.0.0.1:8082]}}, [request_sent])
2025-02-20 11:54:15 [] DEBUG r.n.http.client.HttpClientOperations - [da8d7d2c-2, L:/127.0.0.1:57423 - R:localhost/127.0.0.1:8082] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 404 
Vary: <filtered>
Vary: <filtered>
Vary: <filtered>
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-20 11:54:15 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [da8d7d2c-2, L:/127.0.0.1:57423 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xda8d7d2c, L:/127.0.0.1:57423 - R:localhost/127.0.0.1:8082]}}, [response_received])
2025-02-20 11:54:15 [] DEBUG reactor.netty.channel.FluxReceive - [da8d7d2c-2, L:/127.0.0.1:57423 - R:localhost/127.0.0.1:8082] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 11:54:15 [] DEBUG r.n.http.client.HttpClientOperations - [da8d7d2c-2, L:/127.0.0.1:57423 - R:localhost/127.0.0.1:8082] Received last HTTP packet
2025-02-20 11:54:15 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [da8d7d2c, L:/127.0.0.1:57423 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xda8d7d2c, L:/127.0.0.1:57423 - R:localhost/127.0.0.1:8082]}}, [response_completed])
2025-02-20 11:54:15 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [da8d7d2c, L:/127.0.0.1:57423 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xda8d7d2c, L:/127.0.0.1:57423 - R:localhost/127.0.0.1:8082]}}, [disconnecting])
2025-02-20 11:54:15 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [da8d7d2c, L:/127.0.0.1:57423 - R:localhost/127.0.0.1:8082] Releasing channel
2025-02-20 11:54:15 [] DEBUG r.n.r.PooledConnectionProvider - [da8d7d2c, L:/127.0.0.1:57423 - R:localhost/127.0.0.1:8082] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-20 11:54:15 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] threw exception
org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 404 NOT_FOUND from GET http://localhost:8082/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 11:54:15 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate] with root cause
org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 404 NOT_FOUND from GET http://localhost:8082/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 11:54:15 [] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-20 11:54:15 [] INFO  c.c.c.g.c.config.RouterConfiguration - Authorized Request!
2025-02-20 11:54:15 [] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [GET] /error
2025-02-20 11:54:15 [] INFO  c.c.c.g.c.config.RouterConfiguration - method: GET
2025-02-20 11:54:15 [] INFO  c.c.c.g.c.config.RouterConfiguration - path: /error
2025-02-20 11:54:15 [] DEBUG r.n.r.PooledConnectionProvider - [0698785e, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 11:54:15 [] DEBUG r.n.http.client.HttpClientConnect - [0698785e-3, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY, method=GET}
2025-02-20 11:54:15 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [0698785e-3, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x0698785e, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-20 11:54:15 [] DEBUG r.n.http.client.HttpClientOperations - [0698785e-3, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-20 11:54:15 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [0698785e-3, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x0698785e, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-20 11:54:15 [] DEBUG r.n.http.client.HttpClientOperations - [0698785e-3, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-20 11:54:15 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [0698785e-3, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x0698785e, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-20 11:54:15 [] DEBUG reactor.netty.channel.FluxReceive - [0698785e-3, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 11:54:15 [] DEBUG r.n.http.client.HttpClientOperations - [0698785e-3, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-20 11:54:15 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [0698785e, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x0698785e, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-20 11:54:15 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [0698785e, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x0698785e, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-20 11:54:15 [] INFO  c.c.c.g.c.config.RouterConfiguration - Validation Response: true
2025-02-20 11:54:15 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [0698785e, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-20 11:54:15 [] INFO  c.c.c.g.c.config.RouterConfiguration - Forwarding [GET] /error to User Microservice
2025-02-20 11:54:15 [] DEBUG r.n.r.PooledConnectionProvider - [0698785e, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-20 11:54:15 [] DEBUG r.n.r.PooledConnectionProvider - [da8d7d2c, L:/127.0.0.1:57423 - R:localhost/127.0.0.1:8082] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 11:54:15 [] DEBUG r.n.http.client.HttpClientConnect - [da8d7d2c-3, L:/127.0.0.1:57423 - R:localhost/127.0.0.1:8082] Handler is being applied: {uri=http://localhost:8082/error, method=GET}
2025-02-20 11:54:15 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [da8d7d2c-3, L:/127.0.0.1:57423 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0xda8d7d2c, L:/127.0.0.1:57423 - R:localhost/127.0.0.1:8082]}}, [request_prepared])
2025-02-20 11:54:15 [] DEBUG r.n.http.client.HttpClientOperations - [da8d7d2c-3, L:/127.0.0.1:57423 - R:localhost/127.0.0.1:8082] No sendHeaders() called before complete, sending zero-length header
2025-02-20 11:54:15 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [da8d7d2c-3, L:/127.0.0.1:57423 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0xda8d7d2c, L:/127.0.0.1:57423 - R:localhost/127.0.0.1:8082]}}, [request_sent])
2025-02-20 11:54:15 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] threw exception
org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 404 NOT_FOUND from GET http://localhost:8082/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 11:54:15 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate] with root cause
org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 404 NOT_FOUND from GET http://localhost:8082/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 11:54:15 [] DEBUG r.n.http.client.HttpClientOperations - [da8d7d2c-3, L:/127.0.0.1:57423 - R:localhost/127.0.0.1:8082] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 500 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
Connection: <filtered>
2025-02-20 11:54:15 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [da8d7d2c-3, L:/127.0.0.1:57423 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0xda8d7d2c, L:/127.0.0.1:57423 - R:localhost/127.0.0.1:8082]}}, [response_received])
2025-02-20 11:54:15 [] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-20 11:54:15 [] INFO  c.c.c.g.c.config.RouterConfiguration - Authorized Request!
2025-02-20 11:54:15 [] DEBUG reactor.netty.channel.FluxReceive - [da8d7d2c-3, L:/127.0.0.1:57423 - R:localhost/127.0.0.1:8082] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 11:54:15 [] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [GET] /error
2025-02-20 11:54:15 [] INFO  c.c.c.g.c.config.RouterConfiguration - method: GET
2025-02-20 11:54:15 [] INFO  c.c.c.g.c.config.RouterConfiguration - path: /error
2025-02-20 11:54:15 [] DEBUG r.n.http.client.HttpClientOperations - [da8d7d2c-3, L:/127.0.0.1:57423 - R:localhost/127.0.0.1:8082] Received last HTTP packet
2025-02-20 11:54:15 [] DEBUG r.n.r.PooledConnectionProvider - [0698785e, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 11:54:15 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [da8d7d2c, L:/127.0.0.1:57423 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0xda8d7d2c, L:/127.0.0.1:57423 - R:localhost/127.0.0.1:8082]}}, [response_completed])
2025-02-20 11:54:15 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [da8d7d2c, L:/127.0.0.1:57423 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0xda8d7d2c, L:/127.0.0.1:57423 - R:localhost/127.0.0.1:8082]}}, [disconnecting])
2025-02-20 11:54:15 [] DEBUG r.n.http.client.HttpClientConnect - [0698785e-4, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY, method=GET}
2025-02-20 11:54:15 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [0698785e-4, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x0698785e, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-20 11:54:15 [] DEBUG r.n.http.client.HttpClientOperations - [0698785e-4, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-20 11:54:15 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [0698785e-4, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x0698785e, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-20 11:54:15 [] DEBUG r.n.r.PooledConnectionProvider - [da8d7d2c, L:/127.0.0.1:57423 ! R:localhost/127.0.0.1:8082] Channel closed, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 11:54:15 [] DEBUG r.n.http.client.HttpClientOperations - [0698785e-4, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-20 11:54:15 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [0698785e-4, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x0698785e, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-20 11:54:15 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [da8d7d2c, L:/127.0.0.1:57423 ! R:localhost/127.0.0.1:8082] onStateChange(PooledConnection{channel=[id: 0xda8d7d2c, L:/127.0.0.1:57423 ! R:localhost/127.0.0.1:8082]}, [disconnecting])
2025-02-20 11:54:15 [] DEBUG reactor.netty.channel.FluxReceive - [0698785e-4, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 11:54:15 [] DEBUG r.n.http.client.HttpClientOperations - [0698785e-4, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-20 11:54:15 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [0698785e, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x0698785e, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-20 11:54:15 [] INFO  c.c.c.g.c.config.RouterConfiguration - Validation Response: true
2025-02-20 11:54:15 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [0698785e, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x0698785e, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-20 11:54:15 [] INFO  c.c.c.g.c.config.RouterConfiguration - Forwarding [GET] /error to User Microservice
2025-02-20 11:54:15 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [0698785e, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-20 11:54:15 [] DEBUG r.n.r.PooledConnectionProvider - [0698785e, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-20 11:54:15 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] threw exception
java.lang.IllegalStateException: Cannot start async: [ERROR]
	at org.springframework.util.Assert.state(Assert.java:79)
	at org.springframework.web.context.request.async.StandardServletAsyncWebRequest.startAsync(StandardServletAsyncWebRequest.java:157)
	at org.springframework.web.context.request.async.WebAsyncManager.startAsyncProcessing(WebAsyncManager.java:487)
	at org.springframework.web.context.request.async.WebAsyncManager.startDeferredResultProcessing(WebAsyncManager.java:462)
	at org.springframework.web.servlet.function.DefaultAsyncServerResponse.writeAsync(DefaultAsyncServerResponse.java:130)
	at org.springframework.web.servlet.function.DefaultEntityResponseBuilder$PublisherEntityResponse.writeToInternal(DefaultEntityResponseBuilder.java:429)
	at org.springframework.web.servlet.function.AbstractServerResponse.writeTo(AbstractServerResponse.java:101)
	at org.springframework.web.servlet.function.support.HandlerFunctionAdapter.handle(HandlerFunctionAdapter.java:112)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:633)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:511)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:454)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:361)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:208)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:285)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:149)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:239)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:243)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:57)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 11:54:15 [] ERROR o.a.c.c.C.[Tomcat].[localhost] - Exception Processing [ErrorPage[errorCode=0, location=/error]]
jakarta.servlet.ServletException: Async processing failed
	at org.springframework.web.servlet.function.DefaultAsyncServerResponse.writeAsync(DefaultAsyncServerResponse.java:136)
	at org.springframework.web.servlet.function.DefaultEntityResponseBuilder$PublisherEntityResponse.writeToInternal(DefaultEntityResponseBuilder.java:429)
	at org.springframework.web.servlet.function.AbstractServerResponse.writeTo(AbstractServerResponse.java:101)
	at org.springframework.web.servlet.function.support.HandlerFunctionAdapter.handle(HandlerFunctionAdapter.java:112)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:633)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:511)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:454)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:361)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:208)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:285)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:149)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:239)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:243)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:57)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: java.lang.IllegalStateException: Cannot start async: [ERROR]
	at org.springframework.util.Assert.state(Assert.java:79)
	at org.springframework.web.context.request.async.StandardServletAsyncWebRequest.startAsync(StandardServletAsyncWebRequest.java:157)
	at org.springframework.web.context.request.async.WebAsyncManager.startAsyncProcessing(WebAsyncManager.java:487)
	at org.springframework.web.context.request.async.WebAsyncManager.startDeferredResultProcessing(WebAsyncManager.java:462)
	at org.springframework.web.servlet.function.DefaultAsyncServerResponse.writeAsync(DefaultAsyncServerResponse.java:130)
	... 41 common frames omitted
2025-02-20 11:54:21 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-20 11:54:21 [4202a1f1-17eb-43ba-9e8c-2cb65d72f79d] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-20 11:54:21 [4202a1f1-17eb-43ba-9e8c-2cb65d72f79d] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: []
2025-02-20 11:54:21 [4202a1f1-17eb-43ba-9e8c-2cb65d72f79d] WARN  c.c.c.g.c.config.RouterConfiguration - Invalid Organization - Access Denied
2025-02-20 11:54:26 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-20 11:54:26 [1d7ade53-56f5-4345-a845-e57a985c4eb3] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-20 11:54:26 [1d7ade53-56f5-4345-a845-e57a985c4eb3] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-20 11:54:26 [1d7ade53-56f5-4345-a845-e57a985c4eb3] INFO  c.c.c.g.c.config.RouterConfiguration - Authorized Request!
2025-02-20 11:54:26 [1d7ade53-56f5-4345-a845-e57a985c4eb3] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [GET] /validate
2025-02-20 11:54:26 [1d7ade53-56f5-4345-a845-e57a985c4eb3] INFO  c.c.c.g.c.config.RouterConfiguration - method: GET
2025-02-20 11:54:26 [1d7ade53-56f5-4345-a845-e57a985c4eb3] INFO  c.c.c.g.c.config.RouterConfiguration - path: /validate
2025-02-20 11:54:26 [] DEBUG r.n.r.PooledConnectionProvider - [0698785e, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 11:54:26 [] DEBUG r.n.http.client.HttpClientConnect - [0698785e-5, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY, method=GET}
2025-02-20 11:54:26 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [0698785e-5, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x0698785e, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-20 11:54:26 [] DEBUG r.n.http.client.HttpClientOperations - [0698785e-5, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-20 11:54:26 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [0698785e-5, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x0698785e, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-20 11:54:26 [] DEBUG r.n.http.client.HttpClientOperations - [0698785e-5, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-20 11:54:26 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [0698785e-5, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x0698785e, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-20 11:54:26 [] DEBUG reactor.netty.channel.FluxReceive - [0698785e-5, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 11:54:26 [] DEBUG r.n.http.client.HttpClientOperations - [0698785e-5, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-20 11:54:26 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [0698785e, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x0698785e, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-20 11:54:26 [1d7ade53-56f5-4345-a845-e57a985c4eb3] INFO  c.c.c.g.c.config.RouterConfiguration - Validation Response: true
2025-02-20 11:54:26 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [0698785e, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x0698785e, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-20 11:54:26 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [0698785e, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-20 11:54:26 [1d7ade53-56f5-4345-a845-e57a985c4eb3] INFO  c.c.c.g.c.config.RouterConfiguration - Forwarding [GET] /validate to User Microservice
2025-02-20 11:54:26 [] DEBUG r.n.r.PooledConnectionProvider - [0698785e, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-20 11:54:26 [] DEBUG r.n.r.PooledConnectionProvider - [f69b4b91] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 11:54:26 [] DEBUG r.netty.transport.TransportConfig - [f69b4b91] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-20 11:54:26 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 11:54:26 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 11:54:26 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 11:54:26 [] DEBUG r.netty.transport.TransportConnector - [f69b4b91] Connecting to [localhost/127.0.0.1:8082].
2025-02-20 11:54:26 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f69b4b91, L:/127.0.0.1:57437 - R:localhost/127.0.0.1:8082] Registering pool release on close event for channel
2025-02-20 11:54:26 [] DEBUG r.n.r.PooledConnectionProvider - [f69b4b91, L:/127.0.0.1:57437 - R:localhost/127.0.0.1:8082] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 11:54:26 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f69b4b91, L:/127.0.0.1:57437 - R:localhost/127.0.0.1:8082] onStateChange(PooledConnection{channel=[id: 0xf69b4b91, L:/127.0.0.1:57437 - R:localhost/127.0.0.1:8082]}, [connected])
2025-02-20 11:54:26 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f69b4b91-1, L:/127.0.0.1:57437 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0xf69b4b91, L:/127.0.0.1:57437 - R:localhost/127.0.0.1:8082]}}, [configured])
2025-02-20 11:54:26 [] DEBUG r.n.http.client.HttpClientConnect - [f69b4b91-1, L:/127.0.0.1:57437 - R:localhost/127.0.0.1:8082] Handler is being applied: {uri=http://localhost:8082/validate, method=GET}
2025-02-20 11:54:26 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f69b4b91-1, L:/127.0.0.1:57437 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xf69b4b91, L:/127.0.0.1:57437 - R:localhost/127.0.0.1:8082]}}, [request_prepared])
2025-02-20 11:54:26 [] DEBUG r.n.http.client.HttpClientOperations - [f69b4b91-1, L:/127.0.0.1:57437 - R:localhost/127.0.0.1:8082] No sendHeaders() called before complete, sending zero-length header
2025-02-20 11:54:26 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f69b4b91-1, L:/127.0.0.1:57437 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xf69b4b91, L:/127.0.0.1:57437 - R:localhost/127.0.0.1:8082]}}, [request_sent])
2025-02-20 11:54:26 [] DEBUG r.n.http.client.HttpClientOperations - [f69b4b91-1, L:/127.0.0.1:57437 - R:localhost/127.0.0.1:8082] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 404 
Vary: <filtered>
Vary: <filtered>
Vary: <filtered>
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-20 11:54:26 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f69b4b91-1, L:/127.0.0.1:57437 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xf69b4b91, L:/127.0.0.1:57437 - R:localhost/127.0.0.1:8082]}}, [response_received])
2025-02-20 11:54:26 [] DEBUG reactor.netty.channel.FluxReceive - [f69b4b91-1, L:/127.0.0.1:57437 - R:localhost/127.0.0.1:8082] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 11:54:26 [] DEBUG r.n.http.client.HttpClientOperations - [f69b4b91-1, L:/127.0.0.1:57437 - R:localhost/127.0.0.1:8082] Received last HTTP packet
2025-02-20 11:54:26 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f69b4b91, L:/127.0.0.1:57437 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xf69b4b91, L:/127.0.0.1:57437 - R:localhost/127.0.0.1:8082]}}, [response_completed])
2025-02-20 11:54:26 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f69b4b91, L:/127.0.0.1:57437 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xf69b4b91, L:/127.0.0.1:57437 - R:localhost/127.0.0.1:8082]}}, [disconnecting])
2025-02-20 11:54:26 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f69b4b91, L:/127.0.0.1:57437 - R:localhost/127.0.0.1:8082] Releasing channel
2025-02-20 11:54:26 [] DEBUG r.n.r.PooledConnectionProvider - [f69b4b91, L:/127.0.0.1:57437 - R:localhost/127.0.0.1:8082] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-20 11:54:26 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] threw exception
org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 404 NOT_FOUND from GET http://localhost:8082/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 11:54:26 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate] with root cause
org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 404 NOT_FOUND from GET http://localhost:8082/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 11:54:26 [] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-20 11:54:26 [] INFO  c.c.c.g.c.config.RouterConfiguration - Authorized Request!
2025-02-20 11:54:26 [] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [GET] /error
2025-02-20 11:54:26 [] INFO  c.c.c.g.c.config.RouterConfiguration - method: GET
2025-02-20 11:54:26 [] INFO  c.c.c.g.c.config.RouterConfiguration - path: /error
2025-02-20 11:54:26 [] DEBUG r.n.r.PooledConnectionProvider - [0698785e, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 11:54:26 [] DEBUG r.n.http.client.HttpClientConnect - [0698785e-6, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY, method=GET}
2025-02-20 11:54:26 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [0698785e-6, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x0698785e, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-20 11:54:26 [] DEBUG r.n.http.client.HttpClientOperations - [0698785e-6, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-20 11:54:26 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [0698785e-6, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x0698785e, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-20 11:54:26 [] DEBUG r.n.http.client.HttpClientOperations - [0698785e-6, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-20 11:54:26 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [0698785e-6, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x0698785e, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-20 11:54:26 [] DEBUG reactor.netty.channel.FluxReceive - [0698785e-6, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 11:54:26 [] DEBUG r.n.http.client.HttpClientOperations - [0698785e-6, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-20 11:54:26 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [0698785e, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x0698785e, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-20 11:54:26 [] INFO  c.c.c.g.c.config.RouterConfiguration - Validation Response: true
2025-02-20 11:54:26 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [0698785e, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x0698785e, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-20 11:54:26 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [0698785e, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-20 11:54:26 [] INFO  c.c.c.g.c.config.RouterConfiguration - Forwarding [GET] /error to User Microservice
2025-02-20 11:54:26 [] DEBUG r.n.r.PooledConnectionProvider - [0698785e, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-20 11:54:26 [] DEBUG r.n.r.PooledConnectionProvider - [f69b4b91, L:/127.0.0.1:57437 - R:localhost/127.0.0.1:8082] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 11:54:26 [] DEBUG r.n.http.client.HttpClientConnect - [f69b4b91-2, L:/127.0.0.1:57437 - R:localhost/127.0.0.1:8082] Handler is being applied: {uri=http://localhost:8082/error, method=GET}
2025-02-20 11:54:26 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f69b4b91-2, L:/127.0.0.1:57437 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0xf69b4b91, L:/127.0.0.1:57437 - R:localhost/127.0.0.1:8082]}}, [request_prepared])
2025-02-20 11:54:26 [] DEBUG r.n.http.client.HttpClientOperations - [f69b4b91-2, L:/127.0.0.1:57437 - R:localhost/127.0.0.1:8082] No sendHeaders() called before complete, sending zero-length header
2025-02-20 11:54:26 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f69b4b91-2, L:/127.0.0.1:57437 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0xf69b4b91, L:/127.0.0.1:57437 - R:localhost/127.0.0.1:8082]}}, [request_sent])
2025-02-20 11:54:26 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] threw exception
org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 404 NOT_FOUND from GET http://localhost:8082/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 11:54:26 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate] with root cause
org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 404 NOT_FOUND from GET http://localhost:8082/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 11:54:26 [] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-20 11:54:26 [] INFO  c.c.c.g.c.config.RouterConfiguration - Authorized Request!
2025-02-20 11:54:26 [] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [GET] /error
2025-02-20 11:54:26 [] INFO  c.c.c.g.c.config.RouterConfiguration - method: GET
2025-02-20 11:54:26 [] INFO  c.c.c.g.c.config.RouterConfiguration - path: /error
2025-02-20 11:54:26 [] DEBUG r.n.r.PooledConnectionProvider - [0698785e, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 11:54:26 [] DEBUG r.n.http.client.HttpClientConnect - [0698785e-7, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY, method=GET}
2025-02-20 11:54:26 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [0698785e-7, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x0698785e, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-20 11:54:26 [] DEBUG r.n.http.client.HttpClientOperations - [0698785e-7, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-20 11:54:26 [] DEBUG r.n.http.client.HttpClientOperations - [f69b4b91-2, L:/127.0.0.1:57437 - R:localhost/127.0.0.1:8082] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 500 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
Connection: <filtered>
2025-02-20 11:54:26 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f69b4b91-2, L:/127.0.0.1:57437 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0xf69b4b91, L:/127.0.0.1:57437 - R:localhost/127.0.0.1:8082]}}, [response_received])
2025-02-20 11:54:26 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [0698785e-7, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x0698785e, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-20 11:54:26 [] DEBUG reactor.netty.channel.FluxReceive - [f69b4b91-2, L:/127.0.0.1:57437 - R:localhost/127.0.0.1:8082] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 11:54:26 [] DEBUG r.n.http.client.HttpClientOperations - [f69b4b91-2, L:/127.0.0.1:57437 - R:localhost/127.0.0.1:8082] Received last HTTP packet
2025-02-20 11:54:26 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f69b4b91, L:/127.0.0.1:57437 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0xf69b4b91, L:/127.0.0.1:57437 - R:localhost/127.0.0.1:8082]}}, [response_completed])
2025-02-20 11:54:26 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f69b4b91, L:/127.0.0.1:57437 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0xf69b4b91, L:/127.0.0.1:57437 - R:localhost/127.0.0.1:8082]}}, [disconnecting])
2025-02-20 11:54:26 [] DEBUG r.n.r.PooledConnectionProvider - [f69b4b91, L:/127.0.0.1:57437 ! R:localhost/127.0.0.1:8082] Channel closed, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 11:54:26 [] DEBUG r.n.http.client.HttpClientOperations - [0698785e-7, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-20 11:54:26 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [0698785e-7, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x0698785e, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-20 11:54:26 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [f69b4b91, L:/127.0.0.1:57437 ! R:localhost/127.0.0.1:8082] onStateChange(PooledConnection{channel=[id: 0xf69b4b91, L:/127.0.0.1:57437 ! R:localhost/127.0.0.1:8082]}, [disconnecting])
2025-02-20 11:54:26 [] DEBUG reactor.netty.channel.FluxReceive - [0698785e-7, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 11:54:26 [] DEBUG r.n.http.client.HttpClientOperations - [0698785e-7, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-20 11:54:26 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [0698785e, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x0698785e, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-20 11:54:26 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [0698785e, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x0698785e, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-20 11:54:26 [] INFO  c.c.c.g.c.config.RouterConfiguration - Validation Response: true
2025-02-20 11:54:26 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [0698785e, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-20 11:54:26 [] INFO  c.c.c.g.c.config.RouterConfiguration - Forwarding [GET] /error to User Microservice
2025-02-20 11:54:26 [] DEBUG r.n.r.PooledConnectionProvider - [0698785e, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-20 11:54:26 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] threw exception
java.lang.IllegalStateException: Cannot start async: [ERROR]
	at org.springframework.util.Assert.state(Assert.java:79)
	at org.springframework.web.context.request.async.StandardServletAsyncWebRequest.startAsync(StandardServletAsyncWebRequest.java:157)
	at org.springframework.web.context.request.async.WebAsyncManager.startAsyncProcessing(WebAsyncManager.java:487)
	at org.springframework.web.context.request.async.WebAsyncManager.startDeferredResultProcessing(WebAsyncManager.java:462)
	at org.springframework.web.servlet.function.DefaultAsyncServerResponse.writeAsync(DefaultAsyncServerResponse.java:130)
	at org.springframework.web.servlet.function.DefaultEntityResponseBuilder$PublisherEntityResponse.writeToInternal(DefaultEntityResponseBuilder.java:429)
	at org.springframework.web.servlet.function.AbstractServerResponse.writeTo(AbstractServerResponse.java:101)
	at org.springframework.web.servlet.function.support.HandlerFunctionAdapter.handle(HandlerFunctionAdapter.java:112)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:633)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:511)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:454)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:361)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:208)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:285)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:149)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:239)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:243)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:57)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 11:54:26 [] ERROR o.a.c.c.C.[Tomcat].[localhost] - Exception Processing [ErrorPage[errorCode=0, location=/error]]
jakarta.servlet.ServletException: Async processing failed
	at org.springframework.web.servlet.function.DefaultAsyncServerResponse.writeAsync(DefaultAsyncServerResponse.java:136)
	at org.springframework.web.servlet.function.DefaultEntityResponseBuilder$PublisherEntityResponse.writeToInternal(DefaultEntityResponseBuilder.java:429)
	at org.springframework.web.servlet.function.AbstractServerResponse.writeTo(AbstractServerResponse.java:101)
	at org.springframework.web.servlet.function.support.HandlerFunctionAdapter.handle(HandlerFunctionAdapter.java:112)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:633)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:511)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:454)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:361)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:208)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:285)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:149)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:239)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:243)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:57)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: java.lang.IllegalStateException: Cannot start async: [ERROR]
	at org.springframework.util.Assert.state(Assert.java:79)
	at org.springframework.web.context.request.async.StandardServletAsyncWebRequest.startAsync(StandardServletAsyncWebRequest.java:157)
	at org.springframework.web.context.request.async.WebAsyncManager.startAsyncProcessing(WebAsyncManager.java:487)
	at org.springframework.web.context.request.async.WebAsyncManager.startDeferredResultProcessing(WebAsyncManager.java:462)
	at org.springframework.web.servlet.function.DefaultAsyncServerResponse.writeAsync(DefaultAsyncServerResponse.java:130)
	... 41 common frames omitted
2025-02-20 11:55:19 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-20 11:55:19 [bf117973-bd34-4321-9da0-91746d901442] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-20 11:55:19 [bf117973-bd34-4321-9da0-91746d901442] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-20 11:55:19 [bf117973-bd34-4321-9da0-91746d901442] INFO  c.c.c.g.c.config.RouterConfiguration - Authorized Request!
2025-02-20 11:55:19 [bf117973-bd34-4321-9da0-91746d901442] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [GET] /validate
2025-02-20 11:55:19 [bf117973-bd34-4321-9da0-91746d901442] INFO  c.c.c.g.c.config.RouterConfiguration - method: GET
2025-02-20 11:55:19 [bf117973-bd34-4321-9da0-91746d901442] INFO  c.c.c.g.c.config.RouterConfiguration - path: /validate
2025-02-20 11:55:19 [] DEBUG r.n.r.PooledConnectionProvider - [0698785e, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 11:55:19 [] DEBUG r.n.http.client.HttpClientConnect - [0698785e-8, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY, method=GET}
2025-02-20 11:55:19 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [0698785e-8, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x0698785e, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-20 11:55:19 [] DEBUG r.n.http.client.HttpClientOperations - [0698785e-8, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-20 11:55:19 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [0698785e-8, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x0698785e, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-20 11:55:19 [] DEBUG r.n.http.client.HttpClientOperations - [0698785e-8, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-20 11:55:19 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [0698785e-8, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x0698785e, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-20 11:55:19 [] DEBUG reactor.netty.channel.FluxReceive - [0698785e-8, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 11:55:19 [] DEBUG r.n.http.client.HttpClientOperations - [0698785e-8, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-20 11:55:19 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [0698785e, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x0698785e, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-20 11:55:19 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [0698785e, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x0698785e, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-20 11:55:19 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [0698785e, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-20 11:55:19 [bf117973-bd34-4321-9da0-91746d901442] INFO  c.c.c.g.c.config.RouterConfiguration - Validation Response: true
2025-02-20 11:55:19 [] DEBUG r.n.r.PooledConnectionProvider - [0698785e, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-20 11:55:19 [bf117973-bd34-4321-9da0-91746d901442] INFO  c.c.c.g.c.config.RouterConfiguration - Forwarding [GET] /validate to User Microservice
2025-02-20 11:55:19 [] DEBUG r.n.r.PooledConnectionProvider - [e0c72980] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 11:55:19 [] DEBUG r.netty.transport.TransportConfig - [e0c72980] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-20 11:55:19 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 11:55:19 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 11:55:19 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 11:55:19 [] DEBUG r.netty.transport.TransportConnector - [e0c72980] Connecting to [localhost/127.0.0.1:8082].
2025-02-20 11:55:19 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [e0c72980, L:/127.0.0.1:57465 - R:localhost/127.0.0.1:8082] Registering pool release on close event for channel
2025-02-20 11:55:19 [] DEBUG r.n.r.PooledConnectionProvider - [e0c72980, L:/127.0.0.1:57465 - R:localhost/127.0.0.1:8082] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 11:55:19 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [e0c72980, L:/127.0.0.1:57465 - R:localhost/127.0.0.1:8082] onStateChange(PooledConnection{channel=[id: 0xe0c72980, L:/127.0.0.1:57465 - R:localhost/127.0.0.1:8082]}, [connected])
2025-02-20 11:55:19 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [e0c72980-1, L:/127.0.0.1:57465 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0xe0c72980, L:/127.0.0.1:57465 - R:localhost/127.0.0.1:8082]}}, [configured])
2025-02-20 11:55:19 [] DEBUG r.n.http.client.HttpClientConnect - [e0c72980-1, L:/127.0.0.1:57465 - R:localhost/127.0.0.1:8082] Handler is being applied: {uri=http://localhost:8082/validate, method=GET}
2025-02-20 11:55:19 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [e0c72980-1, L:/127.0.0.1:57465 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xe0c72980, L:/127.0.0.1:57465 - R:localhost/127.0.0.1:8082]}}, [request_prepared])
2025-02-20 11:55:19 [] DEBUG r.n.http.client.HttpClientOperations - [e0c72980-1, L:/127.0.0.1:57465 - R:localhost/127.0.0.1:8082] No sendHeaders() called before complete, sending zero-length header
2025-02-20 11:55:19 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [e0c72980-1, L:/127.0.0.1:57465 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xe0c72980, L:/127.0.0.1:57465 - R:localhost/127.0.0.1:8082]}}, [request_sent])
2025-02-20 11:55:19 [] DEBUG r.n.http.client.HttpClientOperations - [e0c72980-1, L:/127.0.0.1:57465 - R:localhost/127.0.0.1:8082] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 404 
Vary: <filtered>
Vary: <filtered>
Vary: <filtered>
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-20 11:55:19 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [e0c72980-1, L:/127.0.0.1:57465 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xe0c72980, L:/127.0.0.1:57465 - R:localhost/127.0.0.1:8082]}}, [response_received])
2025-02-20 11:55:19 [] DEBUG reactor.netty.channel.FluxReceive - [e0c72980-1, L:/127.0.0.1:57465 - R:localhost/127.0.0.1:8082] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 11:55:19 [] DEBUG r.n.http.client.HttpClientOperations - [e0c72980-1, L:/127.0.0.1:57465 - R:localhost/127.0.0.1:8082] Received last HTTP packet
2025-02-20 11:55:19 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [e0c72980, L:/127.0.0.1:57465 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xe0c72980, L:/127.0.0.1:57465 - R:localhost/127.0.0.1:8082]}}, [response_completed])
2025-02-20 11:55:19 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [e0c72980, L:/127.0.0.1:57465 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xe0c72980, L:/127.0.0.1:57465 - R:localhost/127.0.0.1:8082]}}, [disconnecting])
2025-02-20 11:55:19 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [e0c72980, L:/127.0.0.1:57465 - R:localhost/127.0.0.1:8082] Releasing channel
2025-02-20 11:55:19 [] DEBUG r.n.r.PooledConnectionProvider - [e0c72980, L:/127.0.0.1:57465 - R:localhost/127.0.0.1:8082] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-20 11:55:19 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] threw exception
org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 404 NOT_FOUND from GET http://localhost:8082/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 11:55:19 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate] with root cause
org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 404 NOT_FOUND from GET http://localhost:8082/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 11:55:19 [] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-20 11:55:19 [] INFO  c.c.c.g.c.config.RouterConfiguration - Authorized Request!
2025-02-20 11:55:19 [] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [GET] /error
2025-02-20 11:55:19 [] INFO  c.c.c.g.c.config.RouterConfiguration - method: GET
2025-02-20 11:55:19 [] INFO  c.c.c.g.c.config.RouterConfiguration - path: /error
2025-02-20 11:55:19 [] DEBUG r.n.r.PooledConnectionProvider - [0698785e, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 11:55:19 [] DEBUG r.n.http.client.HttpClientConnect - [0698785e-9, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY, method=GET}
2025-02-20 11:55:19 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [0698785e-9, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x0698785e, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-20 11:55:19 [] DEBUG r.n.http.client.HttpClientOperations - [0698785e-9, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-20 11:55:19 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [0698785e-9, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x0698785e, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-20 11:55:19 [] DEBUG r.n.http.client.HttpClientOperations - [0698785e-9, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-20 11:55:19 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [0698785e-9, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x0698785e, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-20 11:55:19 [] DEBUG reactor.netty.channel.FluxReceive - [0698785e-9, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 11:55:19 [] DEBUG r.n.http.client.HttpClientOperations - [0698785e-9, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-20 11:55:19 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [0698785e, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x0698785e, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-20 11:55:19 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [0698785e, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x0698785e, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-20 11:55:19 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [0698785e, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-20 11:55:19 [] DEBUG r.n.r.PooledConnectionProvider - [0698785e, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-20 11:55:19 [] INFO  c.c.c.g.c.config.RouterConfiguration - Validation Response: true
2025-02-20 11:55:19 [] INFO  c.c.c.g.c.config.RouterConfiguration - Forwarding [GET] /error to User Microservice
2025-02-20 11:55:19 [] DEBUG r.n.r.PooledConnectionProvider - [e0c72980, L:/127.0.0.1:57465 - R:localhost/127.0.0.1:8082] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 11:55:19 [] DEBUG r.n.http.client.HttpClientConnect - [e0c72980-2, L:/127.0.0.1:57465 - R:localhost/127.0.0.1:8082] Handler is being applied: {uri=http://localhost:8082/error, method=GET}
2025-02-20 11:55:19 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [e0c72980-2, L:/127.0.0.1:57465 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0xe0c72980, L:/127.0.0.1:57465 - R:localhost/127.0.0.1:8082]}}, [request_prepared])
2025-02-20 11:55:19 [] DEBUG r.n.http.client.HttpClientOperations - [e0c72980-2, L:/127.0.0.1:57465 - R:localhost/127.0.0.1:8082] No sendHeaders() called before complete, sending zero-length header
2025-02-20 11:55:19 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [e0c72980-2, L:/127.0.0.1:57465 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0xe0c72980, L:/127.0.0.1:57465 - R:localhost/127.0.0.1:8082]}}, [request_sent])
2025-02-20 11:55:19 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] threw exception
org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 404 NOT_FOUND from GET http://localhost:8082/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 11:55:19 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate] with root cause
org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 404 NOT_FOUND from GET http://localhost:8082/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 11:55:19 [] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-20 11:55:19 [] INFO  c.c.c.g.c.config.RouterConfiguration - Authorized Request!
2025-02-20 11:55:19 [] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [GET] /error
2025-02-20 11:55:19 [] INFO  c.c.c.g.c.config.RouterConfiguration - method: GET
2025-02-20 11:55:19 [] INFO  c.c.c.g.c.config.RouterConfiguration - path: /error
2025-02-20 11:55:19 [] DEBUG r.n.r.PooledConnectionProvider - [0698785e, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 11:55:19 [] DEBUG r.n.http.client.HttpClientConnect - [0698785e-10, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY, method=GET}
2025-02-20 11:55:19 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [0698785e-10, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x0698785e, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-20 11:55:19 [] DEBUG r.n.http.client.HttpClientOperations - [e0c72980-2, L:/127.0.0.1:57465 - R:localhost/127.0.0.1:8082] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 500 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
Connection: <filtered>
2025-02-20 11:55:19 [] DEBUG r.n.http.client.HttpClientOperations - [0698785e-10, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-20 11:55:19 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [e0c72980-2, L:/127.0.0.1:57465 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0xe0c72980, L:/127.0.0.1:57465 - R:localhost/127.0.0.1:8082]}}, [response_received])
2025-02-20 11:55:19 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [0698785e-10, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x0698785e, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-20 11:55:19 [] DEBUG reactor.netty.channel.FluxReceive - [e0c72980-2, L:/127.0.0.1:57465 - R:localhost/127.0.0.1:8082] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 11:55:19 [] DEBUG r.n.http.client.HttpClientOperations - [e0c72980-2, L:/127.0.0.1:57465 - R:localhost/127.0.0.1:8082] Received last HTTP packet
2025-02-20 11:55:19 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [e0c72980, L:/127.0.0.1:57465 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0xe0c72980, L:/127.0.0.1:57465 - R:localhost/127.0.0.1:8082]}}, [response_completed])
2025-02-20 11:55:19 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [e0c72980, L:/127.0.0.1:57465 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0xe0c72980, L:/127.0.0.1:57465 - R:localhost/127.0.0.1:8082]}}, [disconnecting])
2025-02-20 11:55:19 [] DEBUG r.n.r.PooledConnectionProvider - [e0c72980, L:/127.0.0.1:57465 ! R:localhost/127.0.0.1:8082] Channel closed, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 11:55:19 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [e0c72980, L:/127.0.0.1:57465 ! R:localhost/127.0.0.1:8082] onStateChange(PooledConnection{channel=[id: 0xe0c72980, L:/127.0.0.1:57465 ! R:localhost/127.0.0.1:8082]}, [disconnecting])
2025-02-20 11:55:19 [] DEBUG r.n.http.client.HttpClientOperations - [0698785e-10, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-20 11:55:19 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [0698785e-10, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x0698785e, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-20 11:55:19 [] DEBUG reactor.netty.channel.FluxReceive - [0698785e-10, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 11:55:19 [] DEBUG r.n.http.client.HttpClientOperations - [0698785e-10, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-20 11:55:19 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [0698785e, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x0698785e, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-20 11:55:19 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [0698785e, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x0698785e, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-20 11:55:19 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [0698785e, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-20 11:55:19 [] DEBUG r.n.r.PooledConnectionProvider - [0698785e, L:/127.0.0.1:57422 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-20 11:55:19 [] INFO  c.c.c.g.c.config.RouterConfiguration - Validation Response: true
2025-02-20 11:55:19 [] INFO  c.c.c.g.c.config.RouterConfiguration - Forwarding [GET] /error to User Microservice
2025-02-20 11:55:19 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] threw exception
java.lang.IllegalStateException: Cannot start async: [ERROR]
	at org.springframework.util.Assert.state(Assert.java:79)
	at org.springframework.web.context.request.async.StandardServletAsyncWebRequest.startAsync(StandardServletAsyncWebRequest.java:157)
	at org.springframework.web.context.request.async.WebAsyncManager.startAsyncProcessing(WebAsyncManager.java:487)
	at org.springframework.web.context.request.async.WebAsyncManager.startDeferredResultProcessing(WebAsyncManager.java:462)
	at org.springframework.web.servlet.function.DefaultAsyncServerResponse.writeAsync(DefaultAsyncServerResponse.java:130)
	at org.springframework.web.servlet.function.DefaultEntityResponseBuilder$PublisherEntityResponse.writeToInternal(DefaultEntityResponseBuilder.java:429)
	at org.springframework.web.servlet.function.AbstractServerResponse.writeTo(AbstractServerResponse.java:101)
	at org.springframework.web.servlet.function.support.HandlerFunctionAdapter.handle(HandlerFunctionAdapter.java:112)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:633)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:511)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:454)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:361)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:208)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:285)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:149)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:239)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:243)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:57)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 11:55:19 [] ERROR o.a.c.c.C.[Tomcat].[localhost] - Exception Processing [ErrorPage[errorCode=0, location=/error]]
jakarta.servlet.ServletException: Async processing failed
	at org.springframework.web.servlet.function.DefaultAsyncServerResponse.writeAsync(DefaultAsyncServerResponse.java:136)
	at org.springframework.web.servlet.function.DefaultEntityResponseBuilder$PublisherEntityResponse.writeToInternal(DefaultEntityResponseBuilder.java:429)
	at org.springframework.web.servlet.function.AbstractServerResponse.writeTo(AbstractServerResponse.java:101)
	at org.springframework.web.servlet.function.support.HandlerFunctionAdapter.handle(HandlerFunctionAdapter.java:112)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:633)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:511)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:454)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:361)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:208)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:285)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:149)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:239)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:243)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:57)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: java.lang.IllegalStateException: Cannot start async: [ERROR]
	at org.springframework.util.Assert.state(Assert.java:79)
	at org.springframework.web.context.request.async.StandardServletAsyncWebRequest.startAsync(StandardServletAsyncWebRequest.java:157)
	at org.springframework.web.context.request.async.WebAsyncManager.startAsyncProcessing(WebAsyncManager.java:487)
	at org.springframework.web.context.request.async.WebAsyncManager.startDeferredResultProcessing(WebAsyncManager.java:462)
	at org.springframework.web.servlet.function.DefaultAsyncServerResponse.writeAsync(DefaultAsyncServerResponse.java:130)
	... 41 common frames omitted
2025-02-20 11:56:20 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [0698785e, L:/127.0.0.1:57422 ! R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x0698785e, L:/127.0.0.1:57422 ! R:localhost/127.0.0.1:8081]}, [disconnecting])
2025-02-20 11:58:07 [] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-02-20 11:58:07 [] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-02-20 11:58:09 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 3 thread-local buffer(s) from thread: reactor-http-nio-4
2025-02-20 11:58:09 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 3 thread-local buffer(s) from thread: reactor-http-nio-5
2025-02-20 11:58:09 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 4 thread-local buffer(s) from thread: reactor-http-nio-3
2025-02-20 11:58:09 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 9 thread-local buffer(s) from thread: reactor-http-nio-2
2025-02-20 11:58:13 [] DEBUG org.jboss.logging - Logging Provider: org.jboss.logging.Slf4jLoggerProvider found via system property
2025-02-20 11:58:13 [] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final
2025-02-20 11:58:13 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-02-20 11:58:13 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-02-20 11:58:13 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-02-20 11:58:13 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-02-20 11:58:13 [] DEBUG o.h.v.i.e.r.TraversableResolvers - Cannot find jakarta.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2025-02-20 11:58:13 [] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-02-20 11:58:13 [] INFO  c.c.c.g.c.CommongatewayApplication - Starting CommongatewayApplication using Java 17.0.12 with PID 27584 (E:\API-GATEWAY\commongateway\target\classes started by CITPL in E:\API-GATEWAY)
2025-02-20 11:58:13 [] DEBUG c.c.c.g.c.CommongatewayApplication - Running with Spring Boot v3.4.2, Spring v6.2.2
2025-02-20 11:58:13 [] INFO  c.c.c.g.c.CommongatewayApplication - No active profile set, falling back to 1 default profile: "default"
2025-02-20 11:58:13 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-02-20 11:58:13 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-02-20 11:58:13 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-02-20 11:58:13 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-02-20 11:58:13 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-02-20 11:58:13 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-02-20 11:58:14 [] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=50299984-946b-3bba-87da-3c9a1df8a676
2025-02-20 11:58:14 [] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-02-20 11:58:14 [] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-02-20 11:58:14 [] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-02-20 11:58:14 [] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.34]
2025-02-20 11:58:14 [] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-02-20 11:58:14 [] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1552 ms
2025-02-20 11:58:15 [] DEBUG i.n.u.i.l.InternalLoggerFactory - Using SLF4J as the default logging framework
2025-02-20 11:58:15 [] DEBUG i.n.util.internal.PlatformDependent0 - -Dio.netty.noUnsafe: false
2025-02-20 11:58:15 [] DEBUG i.n.util.internal.PlatformDependent0 - Java version: 17
2025-02-20 11:58:15 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe.theUnsafe: available
2025-02-20 11:58:15 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe base methods: all available
2025-02-20 11:58:15 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe.storeFence: available
2025-02-20 11:58:15 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.Buffer.address: available
2025-02-20 11:58:15 [] DEBUG i.n.util.internal.PlatformDependent0 - direct buffer constructor: unavailable: Reflective setAccessible(true) disabled
2025-02-20 11:58:15 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.Bits.unaligned: available, true
2025-02-20 11:58:15 [] DEBUG i.n.util.internal.PlatformDependent0 - jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable: class io.netty.util.internal.PlatformDependent0$7 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @7dc222ae
2025-02-20 11:58:15 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.DirectByteBuffer.<init>(long, {int,long}): unavailable
2025-02-20 11:58:15 [] DEBUG i.n.util.internal.PlatformDependent - sun.misc.Unsafe: available
2025-02-20 11:58:15 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.tmpdir: C:\Users\CITPL\AppData\Local\Temp (java.io.tmpdir)
2025-02-20 11:58:15 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.bitMode: 64 (sun.arch.data.model)
2025-02-20 11:58:15 [] DEBUG i.n.util.internal.PlatformDependent - Platform: Windows
2025-02-20 11:58:15 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.maxDirectMemory: -1 bytes
2025-02-20 11:58:15 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.uninitializedArrayAllocationThreshold: -1
2025-02-20 11:58:15 [] DEBUG io.netty.util.internal.CleanerJava9 - java.nio.ByteBuffer.cleaner(): available
2025-02-20 11:58:15 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.noPreferDirect: false
2025-02-20 11:58:15 [] DEBUG reactor.util.Loggers - Using Slf4j logging framework
2025-02-20 11:58:15 [] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-02-20 11:58:15 [] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2025-02-20 11:58:15 [] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2025-02-20 11:58:15 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-02-20 11:58:15 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via user class loader
2025-02-20 11:58:15 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-02-20 11:58:15 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-02-20 11:58:15 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-02-20 11:58:15 [] DEBUG o.h.v.i.e.r.TraversableResolvers - Cannot find jakarta.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2025-02-20 11:58:15 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-02-20 11:58:15 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-02-20 11:58:15 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-02-20 11:58:15 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-02-20 11:58:15 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-02-20 11:58:15 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-02-20 11:58:15 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	c.c.c.g.c.c.HomeController:
	{GET [/home]}: get()
2025-02-20 11:58:15 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
	{ [/error]}: error(HttpServletRequest)
2025-02-20 11:58:15 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 'beanNameHandlerMapping' {}
2025-02-20 11:58:15 [] DEBUG _.s.w.s.HandlerMapping.Mappings - Mapped com.citpl.common.gateway.commongateway.config.RouterConfiguration$$Lambda$895/0x000001db3b50fb30@22a6d75c -> com.citpl.common.gateway.commongateway.config.RouterConfiguration$$Lambda$896/0x000001db3b50fd98@5a9840f3
2025-02-20 11:58:15 [] DEBUG _.s.w.s.HandlerMapping.Mappings - Mapped /validate/** -> ProxyExchangeHandlerFunction
/users/** -> ProxyExchangeHandlerFunction
2025-02-20 11:58:15 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2025-02-20 11:58:16 [] DEBUG i.n.u.i.InternalThreadLocalMap - -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2025-02-20 11:58:16 [] DEBUG i.n.u.i.InternalThreadLocalMap - -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2025-02-20 11:58:16 [] DEBUG io.netty.util.ResourceLeakDetector - -Dio.netty.leakDetection.level: simple
2025-02-20 11:58:16 [] DEBUG io.netty.util.ResourceLeakDetector - -Dio.netty.leakDetection.targetRecords: 4
2025-02-20 11:58:16 [] DEBUG i.n.handler.codec.compression.Brotli - brotli4j not in the classpath; Brotli support will be unavailable.
2025-02-20 11:58:16 [] DEBUG reactor.netty.tcp.TcpResources - [http] resources will use the default LoopResources: DefaultLoopResources {prefix=reactor-http, daemon=true, selectCount=12, workerCount=12}
2025-02-20 11:58:16 [] DEBUG reactor.netty.tcp.TcpResources - [http] resources will use the default ConnectionProvider: reactor.netty.resources.DefaultPooledConnectionProvider@3957d88b
2025-02-20 11:58:16 [] DEBUG r.netty.resources.DefaultLoopIOUring - Default io_uring support : false
2025-02-20 11:58:16 [] DEBUG r.netty.resources.DefaultLoopEpoll - Default Epoll support : false
2025-02-20 11:58:16 [] DEBUG r.netty.resources.DefaultLoopKQueue - Default KQueue support : false
2025-02-20 11:58:16 [] DEBUG i.n.c.MultithreadEventLoopGroup - -Dio.netty.eventLoopThreads: 24
2025-02-20 11:58:16 [] DEBUG i.n.u.concurrent.GlobalEventExecutor - -Dio.netty.globalEventExecutor.quietPeriodSeconds: 1
2025-02-20 11:58:16 [] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.noKeySetOptimization: false
2025-02-20 11:58:16 [] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.selectorAutoRebuildThreshold: 512
2025-02-20 11:58:16 [] DEBUG i.n.util.internal.PlatformDependent - org.jctools-core.MpscChunkedArrayQueue: available
2025-02-20 11:58:16 [] DEBUG io.netty.util.NetUtil - -Djava.net.preferIPv4Stack: false
2025-02-20 11:58:16 [] DEBUG io.netty.util.NetUtil - -Djava.net.preferIPv6Addresses: false
2025-02-20 11:58:16 [] DEBUG i.netty.util.NetUtilInitializations - Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2025-02-20 11:58:16 [] DEBUG io.netty.util.NetUtil - Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2025-02-20 11:58:16 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default ResolvedAddressTypes: IPV4_ONLY
2025-02-20 11:58:16 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Localhost address: localhost/127.0.0.1
2025-02-20 11:58:16 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Windows hostname: DESKTOP-P307093
2025-02-20 11:58:16 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default search domains: []
2025-02-20 11:58:16 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default UnixResolverOptions{ndots=1, timeout=5, attempts=16}
2025-02-20 11:58:16 [] DEBUG i.n.r.DefaultHostsFileEntriesResolver - -Dio.netty.hostsFileRefreshInterval: 0
2025-02-20 11:58:16 [] DEBUG i.n.r.d.DefaultDnsServerAddressStreamProvider - Default DNS servers: [/8.8.8.8:53, /4.2.2.2:53] (sun.net.dns.ResolverConfiguration)
2025-02-20 11:58:16 [] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-02-20 11:58:16 [] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-02-20 11:58:16 [] INFO  c.c.c.g.c.CommongatewayApplication - Started CommongatewayApplication in 3.687 seconds (process running for 4.471)
2025-02-20 11:58:24 [] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-02-20 11:58:24 [] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-02-20 11:58:24 [] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-02-20 11:58:24 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-20 11:58:24 [f949a088-a0f3-43f2-9671-fb375f0c799a] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-20 11:58:24 [f949a088-a0f3-43f2-9671-fb375f0c799a] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-20 11:58:24 [f949a088-a0f3-43f2-9671-fb375f0c799a] INFO  c.c.c.g.c.config.RouterConfiguration - Authorized Request!
2025-02-20 11:58:24 [f949a088-a0f3-43f2-9671-fb375f0c799a] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [GET] /validate
2025-02-20 11:58:24 [f949a088-a0f3-43f2-9671-fb375f0c799a] INFO  c.c.c.g.c.config.RouterConfiguration - method: GET
2025-02-20 11:58:24 [f949a088-a0f3-43f2-9671-fb375f0c799a] INFO  c.c.c.g.c.config.RouterConfiguration - path: /validate
2025-02-20 11:58:24 [f949a088-a0f3-43f2-9671-fb375f0c799a] INFO  c.c.c.g.c.config.RouterConfiguration - Forwarding [GET] /validate to User Microservice
2025-02-20 11:58:24 [f949a088-a0f3-43f2-9671-fb375f0c799a] DEBUG r.n.r.PooledConnectionProvider - Creating a new [http] client pool [PoolFactory{evictionInterval=PT0S, leasingStrategy=fifo, maxConnections=500, maxIdleTime=-1, maxLifeTime=-1, metricsEnabled=false, pendingAcquireMaxCount=1000, pendingAcquireTimeout=45000}] for [localhost/<unresolved>:8082]
2025-02-20 11:58:24 [f949a088-a0f3-43f2-9671-fb375f0c799a] DEBUG io.netty.channel.DefaultChannelId - -Dio.netty.processId: 27584 (auto-detected)
2025-02-20 11:58:24 [f949a088-a0f3-43f2-9671-fb375f0c799a] DEBUG io.netty.channel.DefaultChannelId - -Dio.netty.machineId: a0:d3:65:ff:fe:5e:b0:28 (auto-detected)
2025-02-20 11:58:24 [f949a088-a0f3-43f2-9671-fb375f0c799a] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.numHeapArenas: 24
2025-02-20 11:58:24 [f949a088-a0f3-43f2-9671-fb375f0c799a] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.numDirectArenas: 24
2025-02-20 11:58:24 [f949a088-a0f3-43f2-9671-fb375f0c799a] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.pageSize: 8192
2025-02-20 11:58:24 [f949a088-a0f3-43f2-9671-fb375f0c799a] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxOrder: 9
2025-02-20 11:58:24 [f949a088-a0f3-43f2-9671-fb375f0c799a] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.chunkSize: 4194304
2025-02-20 11:58:24 [f949a088-a0f3-43f2-9671-fb375f0c799a] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.smallCacheSize: 256
2025-02-20 11:58:24 [f949a088-a0f3-43f2-9671-fb375f0c799a] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.normalCacheSize: 64
2025-02-20 11:58:24 [f949a088-a0f3-43f2-9671-fb375f0c799a] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2025-02-20 11:58:24 [f949a088-a0f3-43f2-9671-fb375f0c799a] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.cacheTrimInterval: 8192
2025-02-20 11:58:24 [f949a088-a0f3-43f2-9671-fb375f0c799a] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.cacheTrimIntervalMillis: 0
2025-02-20 11:58:24 [f949a088-a0f3-43f2-9671-fb375f0c799a] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.useCacheForAllThreads: false
2025-02-20 11:58:24 [f949a088-a0f3-43f2-9671-fb375f0c799a] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
2025-02-20 11:58:24 [f949a088-a0f3-43f2-9671-fb375f0c799a] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.disableCacheFinalizersForFastThreadLocalThreads: false
2025-02-20 11:58:24 [f949a088-a0f3-43f2-9671-fb375f0c799a] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.allocator.type: pooled
2025-02-20 11:58:24 [f949a088-a0f3-43f2-9671-fb375f0c799a] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.threadLocalDirectBufferSize: 0
2025-02-20 11:58:24 [f949a088-a0f3-43f2-9671-fb375f0c799a] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.maxThreadLocalCharBufferSize: 16384
2025-02-20 11:58:24 [] DEBUG r.n.r.PooledConnectionProvider - [66050688] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 11:58:24 [] DEBUG io.netty.buffer.AbstractByteBuf - -Dio.netty.buffer.checkAccessible: true
2025-02-20 11:58:24 [] DEBUG io.netty.buffer.AbstractByteBuf - -Dio.netty.buffer.checkBounds: true
2025-02-20 11:58:24 [] DEBUG i.n.util.ResourceLeakDetectorFactory - Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@47ded3fa
2025-02-20 11:58:24 [] DEBUG r.netty.transport.TransportConfig - [66050688] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-20 11:58:24 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 11:58:24 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 11:58:24 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 11:58:24 [] DEBUG i.n.b.ChannelInitializerExtensions - -Dio.netty.bootstrap.extensions: null
2025-02-20 11:58:24 [] DEBUG r.netty.transport.TransportConnector - [66050688] Connecting to [localhost/127.0.0.1:8082].
2025-02-20 11:58:24 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [66050688, L:/127.0.0.1:57524 - R:localhost/127.0.0.1:8082] Registering pool release on close event for channel
2025-02-20 11:58:24 [] DEBUG r.n.r.PooledConnectionProvider - [66050688, L:/127.0.0.1:57524 - R:localhost/127.0.0.1:8082] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 11:58:24 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [66050688, L:/127.0.0.1:57524 - R:localhost/127.0.0.1:8082] onStateChange(PooledConnection{channel=[id: 0x66050688, L:/127.0.0.1:57524 - R:localhost/127.0.0.1:8082]}, [connected])
2025-02-20 11:58:24 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [66050688-1, L:/127.0.0.1:57524 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0x66050688, L:/127.0.0.1:57524 - R:localhost/127.0.0.1:8082]}}, [configured])
2025-02-20 11:58:24 [] DEBUG r.n.http.client.HttpClientConnect - [66050688-1, L:/127.0.0.1:57524 - R:localhost/127.0.0.1:8082] Handler is being applied: {uri=http://localhost:8082/validate, method=GET}
2025-02-20 11:58:24 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [66050688-1, L:/127.0.0.1:57524 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x66050688, L:/127.0.0.1:57524 - R:localhost/127.0.0.1:8082]}}, [request_prepared])
2025-02-20 11:58:24 [] DEBUG r.n.http.client.HttpClientOperations - [66050688-1, L:/127.0.0.1:57524 - R:localhost/127.0.0.1:8082] No sendHeaders() called before complete, sending zero-length header
2025-02-20 11:58:24 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.maxCapacityPerThread: 4096
2025-02-20 11:58:24 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.ratio: 8
2025-02-20 11:58:24 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.chunkSize: 32
2025-02-20 11:58:24 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.blocking: false
2025-02-20 11:58:24 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.batchFastThreadLocalOnly: true
2025-02-20 11:58:24 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [66050688-1, L:/127.0.0.1:57524 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x66050688, L:/127.0.0.1:57524 - R:localhost/127.0.0.1:8082]}}, [request_sent])
2025-02-20 11:58:24 [] DEBUG i.n.handler.codec.compression.Zstd - zstd-jni not in the classpath; Zstd support will be unavailable.
2025-02-20 11:58:24 [] DEBUG r.n.http.client.HttpClientOperations - [66050688-1, L:/127.0.0.1:57524 - R:localhost/127.0.0.1:8082] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 404 
Vary: <filtered>
Vary: <filtered>
Vary: <filtered>
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-20 11:58:24 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [66050688-1, L:/127.0.0.1:57524 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x66050688, L:/127.0.0.1:57524 - R:localhost/127.0.0.1:8082]}}, [response_received])
2025-02-20 11:58:24 [] DEBUG reactor.netty.channel.FluxReceive - [66050688-1, L:/127.0.0.1:57524 - R:localhost/127.0.0.1:8082] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 11:58:24 [] DEBUG r.n.http.client.HttpClientOperations - [66050688-1, L:/127.0.0.1:57524 - R:localhost/127.0.0.1:8082] Received last HTTP packet
2025-02-20 11:58:24 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [66050688, L:/127.0.0.1:57524 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x66050688, L:/127.0.0.1:57524 - R:localhost/127.0.0.1:8082]}}, [response_completed])
2025-02-20 11:58:24 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [66050688, L:/127.0.0.1:57524 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x66050688, L:/127.0.0.1:57524 - R:localhost/127.0.0.1:8082]}}, [disconnecting])
2025-02-20 11:58:24 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [66050688, L:/127.0.0.1:57524 - R:localhost/127.0.0.1:8082] Releasing channel
2025-02-20 11:58:24 [] DEBUG r.n.r.PooledConnectionProvider - [66050688, L:/127.0.0.1:57524 - R:localhost/127.0.0.1:8082] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-20 11:58:24 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] threw exception
org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 404 NOT_FOUND from GET http://localhost:8082/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 11:58:24 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate] with root cause
org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 404 NOT_FOUND from GET http://localhost:8082/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 11:58:24 [] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-20 11:58:24 [] INFO  c.c.c.g.c.config.RouterConfiguration - Authorized Request!
2025-02-20 11:58:24 [] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [GET] /error
2025-02-20 11:58:24 [] INFO  c.c.c.g.c.config.RouterConfiguration - method: GET
2025-02-20 11:58:24 [] INFO  c.c.c.g.c.config.RouterConfiguration - path: /error
2025-02-20 11:58:24 [] INFO  c.c.c.g.c.config.RouterConfiguration - Forwarding [GET] /error to User Microservice
2025-02-20 11:58:24 [] DEBUG r.n.r.PooledConnectionProvider - [66050688, L:/127.0.0.1:57524 - R:localhost/127.0.0.1:8082] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 11:58:24 [] DEBUG r.n.http.client.HttpClientConnect - [66050688-2, L:/127.0.0.1:57524 - R:localhost/127.0.0.1:8082] Handler is being applied: {uri=http://localhost:8082/error, method=GET}
2025-02-20 11:58:24 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [66050688-2, L:/127.0.0.1:57524 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0x66050688, L:/127.0.0.1:57524 - R:localhost/127.0.0.1:8082]}}, [request_prepared])
2025-02-20 11:58:24 [] DEBUG r.n.http.client.HttpClientOperations - [66050688-2, L:/127.0.0.1:57524 - R:localhost/127.0.0.1:8082] No sendHeaders() called before complete, sending zero-length header
2025-02-20 11:58:24 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [66050688-2, L:/127.0.0.1:57524 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0x66050688, L:/127.0.0.1:57524 - R:localhost/127.0.0.1:8082]}}, [request_sent])
2025-02-20 11:58:24 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] threw exception
org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 404 NOT_FOUND from GET http://localhost:8082/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 11:58:24 [] DEBUG r.n.http.client.HttpClientOperations - [66050688-2, L:/127.0.0.1:57524 - R:localhost/127.0.0.1:8082] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 500 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
Connection: <filtered>
2025-02-20 11:58:24 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [66050688-2, L:/127.0.0.1:57524 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0x66050688, L:/127.0.0.1:57524 - R:localhost/127.0.0.1:8082]}}, [response_received])
2025-02-20 11:58:24 [] DEBUG reactor.netty.channel.FluxReceive - [66050688-2, L:/127.0.0.1:57524 - R:localhost/127.0.0.1:8082] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 11:58:24 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate] with root cause
org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 404 NOT_FOUND from GET http://localhost:8082/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 11:58:24 [] DEBUG r.n.http.client.HttpClientOperations - [66050688-2, L:/127.0.0.1:57524 - R:localhost/127.0.0.1:8082] Received last HTTP packet
2025-02-20 11:58:24 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [66050688, L:/127.0.0.1:57524 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0x66050688, L:/127.0.0.1:57524 - R:localhost/127.0.0.1:8082]}}, [response_completed])
2025-02-20 11:58:24 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [66050688, L:/127.0.0.1:57524 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0x66050688, L:/127.0.0.1:57524 - R:localhost/127.0.0.1:8082]}}, [disconnecting])
2025-02-20 11:58:24 [] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-20 11:58:24 [] INFO  c.c.c.g.c.config.RouterConfiguration - Authorized Request!
2025-02-20 11:58:24 [] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [GET] /error
2025-02-20 11:58:24 [] INFO  c.c.c.g.c.config.RouterConfiguration - method: GET
2025-02-20 11:58:24 [] INFO  c.c.c.g.c.config.RouterConfiguration - path: /error
2025-02-20 11:58:24 [] INFO  c.c.c.g.c.config.RouterConfiguration - Forwarding [GET] /error to User Microservice
2025-02-20 11:58:24 [] DEBUG r.n.r.PooledConnectionProvider - [66050688, L:/127.0.0.1:57524 ! R:localhost/127.0.0.1:8082] Channel closed, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 11:58:24 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] threw exception
java.lang.IllegalStateException: Cannot start async: [ERROR]
	at org.springframework.util.Assert.state(Assert.java:79)
	at org.springframework.web.context.request.async.StandardServletAsyncWebRequest.startAsync(StandardServletAsyncWebRequest.java:157)
	at org.springframework.web.context.request.async.WebAsyncManager.startAsyncProcessing(WebAsyncManager.java:487)
	at org.springframework.web.context.request.async.WebAsyncManager.startDeferredResultProcessing(WebAsyncManager.java:462)
	at org.springframework.web.servlet.function.DefaultAsyncServerResponse.writeAsync(DefaultAsyncServerResponse.java:130)
	at org.springframework.web.servlet.function.DefaultEntityResponseBuilder$PublisherEntityResponse.writeToInternal(DefaultEntityResponseBuilder.java:429)
	at org.springframework.web.servlet.function.AbstractServerResponse.writeTo(AbstractServerResponse.java:101)
	at org.springframework.web.servlet.function.support.HandlerFunctionAdapter.handle(HandlerFunctionAdapter.java:112)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:633)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:511)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:454)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:361)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:208)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:285)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:149)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:239)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:243)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:57)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 11:58:24 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [66050688, L:/127.0.0.1:57524 ! R:localhost/127.0.0.1:8082] onStateChange(PooledConnection{channel=[id: 0x66050688, L:/127.0.0.1:57524 ! R:localhost/127.0.0.1:8082]}, [disconnecting])
2025-02-20 11:58:24 [] ERROR o.a.c.c.C.[Tomcat].[localhost] - Exception Processing [ErrorPage[errorCode=0, location=/error]]
jakarta.servlet.ServletException: Async processing failed
	at org.springframework.web.servlet.function.DefaultAsyncServerResponse.writeAsync(DefaultAsyncServerResponse.java:136)
	at org.springframework.web.servlet.function.DefaultEntityResponseBuilder$PublisherEntityResponse.writeToInternal(DefaultEntityResponseBuilder.java:429)
	at org.springframework.web.servlet.function.AbstractServerResponse.writeTo(AbstractServerResponse.java:101)
	at org.springframework.web.servlet.function.support.HandlerFunctionAdapter.handle(HandlerFunctionAdapter.java:112)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:633)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:511)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:454)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:361)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:208)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:285)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:149)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:239)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:243)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:57)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: java.lang.IllegalStateException: Cannot start async: [ERROR]
	at org.springframework.util.Assert.state(Assert.java:79)
	at org.springframework.web.context.request.async.StandardServletAsyncWebRequest.startAsync(StandardServletAsyncWebRequest.java:157)
	at org.springframework.web.context.request.async.WebAsyncManager.startAsyncProcessing(WebAsyncManager.java:487)
	at org.springframework.web.context.request.async.WebAsyncManager.startDeferredResultProcessing(WebAsyncManager.java:462)
	at org.springframework.web.servlet.function.DefaultAsyncServerResponse.writeAsync(DefaultAsyncServerResponse.java:130)
	... 41 common frames omitted
2025-02-20 11:59:10 [] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-02-20 11:59:10 [] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-02-20 11:59:13 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 3 thread-local buffer(s) from thread: reactor-http-nio-2
2025-02-20 11:59:17 [] DEBUG org.jboss.logging - Logging Provider: org.jboss.logging.Slf4jLoggerProvider found via system property
2025-02-20 11:59:17 [] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final
2025-02-20 11:59:17 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-02-20 11:59:17 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-02-20 11:59:17 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-02-20 11:59:17 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-02-20 11:59:17 [] DEBUG o.h.v.i.e.r.TraversableResolvers - Cannot find jakarta.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2025-02-20 11:59:17 [] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-02-20 11:59:17 [] INFO  c.c.c.g.c.CommongatewayApplication - Starting CommongatewayApplication using Java 17.0.12 with PID 27988 (E:\API-GATEWAY\commongateway\target\classes started by CITPL in E:\API-GATEWAY)
2025-02-20 11:59:17 [] DEBUG c.c.c.g.c.CommongatewayApplication - Running with Spring Boot v3.4.2, Spring v6.2.2
2025-02-20 11:59:17 [] INFO  c.c.c.g.c.CommongatewayApplication - No active profile set, falling back to 1 default profile: "default"
2025-02-20 11:59:17 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-02-20 11:59:17 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-02-20 11:59:17 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-02-20 11:59:17 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-02-20 11:59:17 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-02-20 11:59:17 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-02-20 11:59:18 [] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=50299984-946b-3bba-87da-3c9a1df8a676
2025-02-20 11:59:18 [] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-02-20 11:59:18 [] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-02-20 11:59:18 [] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-02-20 11:59:18 [] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.34]
2025-02-20 11:59:18 [] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-02-20 11:59:18 [] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1572 ms
2025-02-20 11:59:19 [] DEBUG i.n.u.i.l.InternalLoggerFactory - Using SLF4J as the default logging framework
2025-02-20 11:59:19 [] DEBUG i.n.util.internal.PlatformDependent0 - -Dio.netty.noUnsafe: false
2025-02-20 11:59:19 [] DEBUG i.n.util.internal.PlatformDependent0 - Java version: 17
2025-02-20 11:59:19 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe.theUnsafe: available
2025-02-20 11:59:19 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe base methods: all available
2025-02-20 11:59:19 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe.storeFence: available
2025-02-20 11:59:19 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.Buffer.address: available
2025-02-20 11:59:19 [] DEBUG i.n.util.internal.PlatformDependent0 - direct buffer constructor: unavailable: Reflective setAccessible(true) disabled
2025-02-20 11:59:19 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.Bits.unaligned: available, true
2025-02-20 11:59:19 [] DEBUG i.n.util.internal.PlatformDependent0 - jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable: class io.netty.util.internal.PlatformDependent0$7 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @7dc222ae
2025-02-20 11:59:19 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.DirectByteBuffer.<init>(long, {int,long}): unavailable
2025-02-20 11:59:19 [] DEBUG i.n.util.internal.PlatformDependent - sun.misc.Unsafe: available
2025-02-20 11:59:19 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.tmpdir: C:\Users\CITPL\AppData\Local\Temp (java.io.tmpdir)
2025-02-20 11:59:19 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.bitMode: 64 (sun.arch.data.model)
2025-02-20 11:59:19 [] DEBUG i.n.util.internal.PlatformDependent - Platform: Windows
2025-02-20 11:59:19 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.maxDirectMemory: -1 bytes
2025-02-20 11:59:19 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.uninitializedArrayAllocationThreshold: -1
2025-02-20 11:59:19 [] DEBUG io.netty.util.internal.CleanerJava9 - java.nio.ByteBuffer.cleaner(): available
2025-02-20 11:59:19 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.noPreferDirect: false
2025-02-20 11:59:19 [] DEBUG reactor.util.Loggers - Using Slf4j logging framework
2025-02-20 11:59:19 [] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-02-20 11:59:19 [] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2025-02-20 11:59:19 [] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2025-02-20 11:59:19 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-02-20 11:59:19 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via user class loader
2025-02-20 11:59:19 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-02-20 11:59:19 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-02-20 11:59:19 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-02-20 11:59:19 [] DEBUG o.h.v.i.e.r.TraversableResolvers - Cannot find jakarta.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2025-02-20 11:59:19 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-02-20 11:59:19 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-02-20 11:59:19 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-02-20 11:59:19 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-02-20 11:59:19 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-02-20 11:59:19 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-02-20 11:59:19 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	c.c.c.g.c.c.HomeController:
	{GET [/home]}: get()
2025-02-20 11:59:19 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2025-02-20 11:59:19 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 'beanNameHandlerMapping' {}
2025-02-20 11:59:19 [] DEBUG _.s.w.s.HandlerMapping.Mappings - Mapped com.citpl.common.gateway.commongateway.config.RouterConfiguration$$Lambda$895/0x000001798d50c1a0@38ac8968 -> com.citpl.common.gateway.commongateway.config.RouterConfiguration$$Lambda$896/0x000001798d50c408@17ff8810
2025-02-20 11:59:19 [] DEBUG _.s.w.s.HandlerMapping.Mappings - Mapped /validate/** -> ProxyExchangeHandlerFunction
/users/** -> ProxyExchangeHandlerFunction
2025-02-20 11:59:19 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2025-02-20 11:59:19 [] DEBUG i.n.u.i.InternalThreadLocalMap - -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2025-02-20 11:59:19 [] DEBUG i.n.u.i.InternalThreadLocalMap - -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2025-02-20 11:59:19 [] DEBUG io.netty.util.ResourceLeakDetector - -Dio.netty.leakDetection.level: simple
2025-02-20 11:59:19 [] DEBUG io.netty.util.ResourceLeakDetector - -Dio.netty.leakDetection.targetRecords: 4
2025-02-20 11:59:20 [] DEBUG i.n.handler.codec.compression.Brotli - brotli4j not in the classpath; Brotli support will be unavailable.
2025-02-20 11:59:20 [] DEBUG reactor.netty.tcp.TcpResources - [http] resources will use the default LoopResources: DefaultLoopResources {prefix=reactor-http, daemon=true, selectCount=12, workerCount=12}
2025-02-20 11:59:20 [] DEBUG reactor.netty.tcp.TcpResources - [http] resources will use the default ConnectionProvider: reactor.netty.resources.DefaultPooledConnectionProvider@1d283d1
2025-02-20 11:59:20 [] DEBUG r.netty.resources.DefaultLoopIOUring - Default io_uring support : false
2025-02-20 11:59:20 [] DEBUG r.netty.resources.DefaultLoopEpoll - Default Epoll support : false
2025-02-20 11:59:20 [] DEBUG r.netty.resources.DefaultLoopKQueue - Default KQueue support : false
2025-02-20 11:59:20 [] DEBUG i.n.c.MultithreadEventLoopGroup - -Dio.netty.eventLoopThreads: 24
2025-02-20 11:59:20 [] DEBUG i.n.u.concurrent.GlobalEventExecutor - -Dio.netty.globalEventExecutor.quietPeriodSeconds: 1
2025-02-20 11:59:20 [] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.noKeySetOptimization: false
2025-02-20 11:59:20 [] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.selectorAutoRebuildThreshold: 512
2025-02-20 11:59:20 [] DEBUG i.n.util.internal.PlatformDependent - org.jctools-core.MpscChunkedArrayQueue: available
2025-02-20 11:59:20 [] DEBUG io.netty.util.NetUtil - -Djava.net.preferIPv4Stack: false
2025-02-20 11:59:20 [] DEBUG io.netty.util.NetUtil - -Djava.net.preferIPv6Addresses: false
2025-02-20 11:59:20 [] DEBUG i.netty.util.NetUtilInitializations - Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2025-02-20 11:59:20 [] DEBUG io.netty.util.NetUtil - Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2025-02-20 11:59:20 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default ResolvedAddressTypes: IPV4_ONLY
2025-02-20 11:59:20 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Localhost address: localhost/127.0.0.1
2025-02-20 11:59:20 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Windows hostname: DESKTOP-P307093
2025-02-20 11:59:20 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default search domains: []
2025-02-20 11:59:20 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default UnixResolverOptions{ndots=1, timeout=5, attempts=16}
2025-02-20 11:59:20 [] DEBUG i.n.r.DefaultHostsFileEntriesResolver - -Dio.netty.hostsFileRefreshInterval: 0
2025-02-20 11:59:20 [] DEBUG i.n.r.d.DefaultDnsServerAddressStreamProvider - Default DNS servers: [/8.8.8.8:53, /4.2.2.2:53] (sun.net.dns.ResolverConfiguration)
2025-02-20 11:59:20 [] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-02-20 11:59:20 [] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-02-20 11:59:20 [] INFO  c.c.c.g.c.CommongatewayApplication - Started CommongatewayApplication in 3.768 seconds (process running for 4.555)
2025-02-20 11:59:21 [] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-02-20 11:59:21 [] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-02-20 11:59:21 [] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 0 ms
2025-02-20 11:59:21 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-20 11:59:21 [e12d67f1-1b2c-47fc-94a1-e3e3b6b82c56] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-20 11:59:21 [e12d67f1-1b2c-47fc-94a1-e3e3b6b82c56] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-20 11:59:21 [e12d67f1-1b2c-47fc-94a1-e3e3b6b82c56] INFO  c.c.c.g.c.config.RouterConfiguration - Authorized Request!
2025-02-20 11:59:21 [e12d67f1-1b2c-47fc-94a1-e3e3b6b82c56] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [GET] /validate
2025-02-20 11:59:21 [e12d67f1-1b2c-47fc-94a1-e3e3b6b82c56] INFO  c.c.c.g.c.config.RouterConfiguration - method: GET
2025-02-20 11:59:21 [e12d67f1-1b2c-47fc-94a1-e3e3b6b82c56] INFO  c.c.c.g.c.config.RouterConfiguration - path: /validate
2025-02-20 11:59:21 [e12d67f1-1b2c-47fc-94a1-e3e3b6b82c56] DEBUG r.n.r.PooledConnectionProvider - Creating a new [http] client pool [PoolFactory{evictionInterval=PT0S, leasingStrategy=fifo, maxConnections=500, maxIdleTime=-1, maxLifeTime=-1, metricsEnabled=false, pendingAcquireMaxCount=1000, pendingAcquireTimeout=45000}] for [localhost/<unresolved>:8081]
2025-02-20 11:59:21 [e12d67f1-1b2c-47fc-94a1-e3e3b6b82c56] DEBUG io.netty.channel.DefaultChannelId - -Dio.netty.processId: 27988 (auto-detected)
2025-02-20 11:59:21 [e12d67f1-1b2c-47fc-94a1-e3e3b6b82c56] DEBUG io.netty.channel.DefaultChannelId - -Dio.netty.machineId: a0:d3:65:ff:fe:5e:b0:28 (auto-detected)
2025-02-20 11:59:21 [e12d67f1-1b2c-47fc-94a1-e3e3b6b82c56] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.numHeapArenas: 24
2025-02-20 11:59:21 [e12d67f1-1b2c-47fc-94a1-e3e3b6b82c56] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.numDirectArenas: 24
2025-02-20 11:59:21 [e12d67f1-1b2c-47fc-94a1-e3e3b6b82c56] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.pageSize: 8192
2025-02-20 11:59:21 [e12d67f1-1b2c-47fc-94a1-e3e3b6b82c56] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxOrder: 9
2025-02-20 11:59:21 [e12d67f1-1b2c-47fc-94a1-e3e3b6b82c56] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.chunkSize: 4194304
2025-02-20 11:59:21 [e12d67f1-1b2c-47fc-94a1-e3e3b6b82c56] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.smallCacheSize: 256
2025-02-20 11:59:21 [e12d67f1-1b2c-47fc-94a1-e3e3b6b82c56] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.normalCacheSize: 64
2025-02-20 11:59:21 [e12d67f1-1b2c-47fc-94a1-e3e3b6b82c56] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2025-02-20 11:59:21 [e12d67f1-1b2c-47fc-94a1-e3e3b6b82c56] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.cacheTrimInterval: 8192
2025-02-20 11:59:21 [e12d67f1-1b2c-47fc-94a1-e3e3b6b82c56] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.cacheTrimIntervalMillis: 0
2025-02-20 11:59:21 [e12d67f1-1b2c-47fc-94a1-e3e3b6b82c56] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.useCacheForAllThreads: false
2025-02-20 11:59:21 [e12d67f1-1b2c-47fc-94a1-e3e3b6b82c56] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
2025-02-20 11:59:21 [e12d67f1-1b2c-47fc-94a1-e3e3b6b82c56] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.disableCacheFinalizersForFastThreadLocalThreads: false
2025-02-20 11:59:21 [e12d67f1-1b2c-47fc-94a1-e3e3b6b82c56] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.allocator.type: pooled
2025-02-20 11:59:21 [e12d67f1-1b2c-47fc-94a1-e3e3b6b82c56] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.threadLocalDirectBufferSize: 0
2025-02-20 11:59:21 [e12d67f1-1b2c-47fc-94a1-e3e3b6b82c56] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.maxThreadLocalCharBufferSize: 16384
2025-02-20 11:59:21 [] DEBUG r.n.r.PooledConnectionProvider - [8689a198] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 11:59:21 [] DEBUG io.netty.buffer.AbstractByteBuf - -Dio.netty.buffer.checkAccessible: true
2025-02-20 11:59:21 [] DEBUG io.netty.buffer.AbstractByteBuf - -Dio.netty.buffer.checkBounds: true
2025-02-20 11:59:21 [] DEBUG i.n.util.ResourceLeakDetectorFactory - Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@47ded3fa
2025-02-20 11:59:21 [] DEBUG r.netty.transport.TransportConfig - [8689a198] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-20 11:59:21 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 11:59:21 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 11:59:21 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 11:59:21 [] DEBUG i.n.b.ChannelInitializerExtensions - -Dio.netty.bootstrap.extensions: null
2025-02-20 11:59:21 [] DEBUG r.netty.transport.TransportConnector - [8689a198] Connecting to [localhost/127.0.0.1:8081].
2025-02-20 11:59:21 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [8689a198, L:/127.0.0.1:57549 - R:localhost/127.0.0.1:8081] Registering pool release on close event for channel
2025-02-20 11:59:21 [] DEBUG r.n.r.PooledConnectionProvider - [8689a198, L:/127.0.0.1:57549 - R:localhost/127.0.0.1:8081] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 11:59:21 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [8689a198, L:/127.0.0.1:57549 - R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x8689a198, L:/127.0.0.1:57549 - R:localhost/127.0.0.1:8081]}, [connected])
2025-02-20 11:59:21 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [8689a198-1, L:/127.0.0.1:57549 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0x8689a198, L:/127.0.0.1:57549 - R:localhost/127.0.0.1:8081]}}, [configured])
2025-02-20 11:59:21 [] DEBUG r.n.http.client.HttpClientConnect - [8689a198-1, L:/127.0.0.1:57549 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY, method=GET}
2025-02-20 11:59:21 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [8689a198-1, L:/127.0.0.1:57549 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x8689a198, L:/127.0.0.1:57549 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-20 11:59:21 [] DEBUG r.n.http.client.HttpClientOperations - [8689a198-1, L:/127.0.0.1:57549 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-20 11:59:21 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.maxCapacityPerThread: 4096
2025-02-20 11:59:21 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.ratio: 8
2025-02-20 11:59:21 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.chunkSize: 32
2025-02-20 11:59:21 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.blocking: false
2025-02-20 11:59:21 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.batchFastThreadLocalOnly: true
2025-02-20 11:59:21 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [8689a198-1, L:/127.0.0.1:57549 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x8689a198, L:/127.0.0.1:57549 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-20 11:59:21 [] DEBUG i.n.handler.codec.compression.Zstd - zstd-jni not in the classpath; Zstd support will be unavailable.
2025-02-20 11:59:21 [] DEBUG r.n.http.client.HttpClientOperations - [8689a198-1, L:/127.0.0.1:57549 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-20 11:59:21 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [8689a198-1, L:/127.0.0.1:57549 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x8689a198, L:/127.0.0.1:57549 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-20 11:59:21 [] DEBUG reactor.netty.channel.FluxReceive - [8689a198-1, L:/127.0.0.1:57549 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 11:59:21 [] DEBUG r.n.http.client.HttpClientOperations - [8689a198-1, L:/127.0.0.1:57549 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-20 11:59:21 [e12d67f1-1b2c-47fc-94a1-e3e3b6b82c56] INFO  c.c.c.g.c.config.RouterConfiguration - Validation Response: true
2025-02-20 11:59:21 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [8689a198, L:/127.0.0.1:57549 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x8689a198, L:/127.0.0.1:57549 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-20 11:59:21 [e12d67f1-1b2c-47fc-94a1-e3e3b6b82c56] INFO  c.c.c.g.c.config.RouterConfiguration - Forwarding [GET] /validate to User Microservice
2025-02-20 11:59:21 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [8689a198, L:/127.0.0.1:57549 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x8689a198, L:/127.0.0.1:57549 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-20 11:59:21 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [8689a198, L:/127.0.0.1:57549 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-20 11:59:21 [] DEBUG r.n.r.PooledConnectionProvider - [8689a198, L:/127.0.0.1:57549 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-20 11:59:21 [e12d67f1-1b2c-47fc-94a1-e3e3b6b82c56] DEBUG r.n.r.PooledConnectionProvider - Creating a new [http] client pool [PoolFactory{evictionInterval=PT0S, leasingStrategy=fifo, maxConnections=500, maxIdleTime=-1, maxLifeTime=-1, metricsEnabled=false, pendingAcquireMaxCount=1000, pendingAcquireTimeout=45000}] for [localhost/<unresolved>:8082]
2025-02-20 11:59:21 [] DEBUG r.n.r.PooledConnectionProvider - [caa8e01a] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 11:59:21 [] DEBUG r.netty.transport.TransportConfig - [caa8e01a] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-20 11:59:21 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 11:59:21 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 11:59:21 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 11:59:21 [] DEBUG r.netty.transport.TransportConnector - [caa8e01a] Connecting to [localhost/127.0.0.1:8082].
2025-02-20 11:59:21 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [caa8e01a, L:/127.0.0.1:57550 - R:localhost/127.0.0.1:8082] Registering pool release on close event for channel
2025-02-20 11:59:21 [] DEBUG r.n.r.PooledConnectionProvider - [caa8e01a, L:/127.0.0.1:57550 - R:localhost/127.0.0.1:8082] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 11:59:21 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [caa8e01a, L:/127.0.0.1:57550 - R:localhost/127.0.0.1:8082] onStateChange(PooledConnection{channel=[id: 0xcaa8e01a, L:/127.0.0.1:57550 - R:localhost/127.0.0.1:8082]}, [connected])
2025-02-20 11:59:21 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [caa8e01a-1, L:/127.0.0.1:57550 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0xcaa8e01a, L:/127.0.0.1:57550 - R:localhost/127.0.0.1:8082]}}, [configured])
2025-02-20 11:59:21 [] DEBUG r.n.http.client.HttpClientConnect - [caa8e01a-1, L:/127.0.0.1:57550 - R:localhost/127.0.0.1:8082] Handler is being applied: {uri=http://localhost:8082/validate, method=GET}
2025-02-20 11:59:21 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [caa8e01a-1, L:/127.0.0.1:57550 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xcaa8e01a, L:/127.0.0.1:57550 - R:localhost/127.0.0.1:8082]}}, [request_prepared])
2025-02-20 11:59:21 [] DEBUG r.n.http.client.HttpClientOperations - [caa8e01a-1, L:/127.0.0.1:57550 - R:localhost/127.0.0.1:8082] No sendHeaders() called before complete, sending zero-length header
2025-02-20 11:59:21 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [caa8e01a-1, L:/127.0.0.1:57550 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xcaa8e01a, L:/127.0.0.1:57550 - R:localhost/127.0.0.1:8082]}}, [request_sent])
2025-02-20 11:59:21 [] DEBUG r.n.http.client.HttpClientOperations - [caa8e01a-1, L:/127.0.0.1:57550 - R:localhost/127.0.0.1:8082] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 404 
Vary: <filtered>
Vary: <filtered>
Vary: <filtered>
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-20 11:59:21 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [caa8e01a-1, L:/127.0.0.1:57550 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xcaa8e01a, L:/127.0.0.1:57550 - R:localhost/127.0.0.1:8082]}}, [response_received])
2025-02-20 11:59:21 [] DEBUG reactor.netty.channel.FluxReceive - [caa8e01a-1, L:/127.0.0.1:57550 - R:localhost/127.0.0.1:8082] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 11:59:21 [] DEBUG r.n.http.client.HttpClientOperations - [caa8e01a-1, L:/127.0.0.1:57550 - R:localhost/127.0.0.1:8082] Received last HTTP packet
2025-02-20 11:59:21 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [caa8e01a, L:/127.0.0.1:57550 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xcaa8e01a, L:/127.0.0.1:57550 - R:localhost/127.0.0.1:8082]}}, [response_completed])
2025-02-20 11:59:21 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [caa8e01a, L:/127.0.0.1:57550 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xcaa8e01a, L:/127.0.0.1:57550 - R:localhost/127.0.0.1:8082]}}, [disconnecting])
2025-02-20 11:59:21 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [caa8e01a, L:/127.0.0.1:57550 - R:localhost/127.0.0.1:8082] Releasing channel
2025-02-20 11:59:21 [] DEBUG r.n.r.PooledConnectionProvider - [caa8e01a, L:/127.0.0.1:57550 - R:localhost/127.0.0.1:8082] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-20 11:59:21 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] threw exception
org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 404 NOT_FOUND from GET http://localhost:8082/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 11:59:21 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate] with root cause
org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 404 NOT_FOUND from GET http://localhost:8082/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 11:59:21 [] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-20 11:59:21 [] INFO  c.c.c.g.c.config.RouterConfiguration - Authorized Request!
2025-02-20 11:59:21 [] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [GET] /error
2025-02-20 11:59:21 [] INFO  c.c.c.g.c.config.RouterConfiguration - method: GET
2025-02-20 11:59:21 [] INFO  c.c.c.g.c.config.RouterConfiguration - path: /error
2025-02-20 11:59:21 [] DEBUG r.n.r.PooledConnectionProvider - [8689a198, L:/127.0.0.1:57549 - R:localhost/127.0.0.1:8081] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 11:59:21 [] DEBUG r.n.http.client.HttpClientConnect - [8689a198-2, L:/127.0.0.1:57549 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY, method=GET}
2025-02-20 11:59:21 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [8689a198-2, L:/127.0.0.1:57549 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x8689a198, L:/127.0.0.1:57549 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-20 11:59:21 [] DEBUG r.n.http.client.HttpClientOperations - [8689a198-2, L:/127.0.0.1:57549 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-20 11:59:21 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [8689a198-2, L:/127.0.0.1:57549 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x8689a198, L:/127.0.0.1:57549 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-20 11:59:21 [] DEBUG r.n.http.client.HttpClientOperations - [8689a198-2, L:/127.0.0.1:57549 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-20 11:59:21 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [8689a198-2, L:/127.0.0.1:57549 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x8689a198, L:/127.0.0.1:57549 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-20 11:59:21 [] DEBUG reactor.netty.channel.FluxReceive - [8689a198-2, L:/127.0.0.1:57549 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 11:59:21 [] DEBUG r.n.http.client.HttpClientOperations - [8689a198-2, L:/127.0.0.1:57549 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-20 11:59:21 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [8689a198, L:/127.0.0.1:57549 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x8689a198, L:/127.0.0.1:57549 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-20 11:59:21 [] INFO  c.c.c.g.c.config.RouterConfiguration - Validation Response: true
2025-02-20 11:59:21 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [8689a198, L:/127.0.0.1:57549 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x8689a198, L:/127.0.0.1:57549 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-20 11:59:21 [] INFO  c.c.c.g.c.config.RouterConfiguration - Forwarding [GET] /error to User Microservice
2025-02-20 11:59:21 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [8689a198, L:/127.0.0.1:57549 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-20 11:59:21 [] DEBUG r.n.r.PooledConnectionProvider - [8689a198, L:/127.0.0.1:57549 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-20 11:59:21 [] DEBUG r.n.r.PooledConnectionProvider - [caa8e01a, L:/127.0.0.1:57550 - R:localhost/127.0.0.1:8082] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 11:59:21 [] DEBUG r.n.http.client.HttpClientConnect - [caa8e01a-2, L:/127.0.0.1:57550 - R:localhost/127.0.0.1:8082] Handler is being applied: {uri=http://localhost:8082/error, method=GET}
2025-02-20 11:59:21 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [caa8e01a-2, L:/127.0.0.1:57550 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0xcaa8e01a, L:/127.0.0.1:57550 - R:localhost/127.0.0.1:8082]}}, [request_prepared])
2025-02-20 11:59:21 [] DEBUG r.n.http.client.HttpClientOperations - [caa8e01a-2, L:/127.0.0.1:57550 - R:localhost/127.0.0.1:8082] No sendHeaders() called before complete, sending zero-length header
2025-02-20 11:59:21 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [caa8e01a-2, L:/127.0.0.1:57550 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0xcaa8e01a, L:/127.0.0.1:57550 - R:localhost/127.0.0.1:8082]}}, [request_sent])
2025-02-20 11:59:21 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] threw exception
org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 404 NOT_FOUND from GET http://localhost:8082/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 11:59:21 [] DEBUG r.n.http.client.HttpClientOperations - [caa8e01a-2, L:/127.0.0.1:57550 - R:localhost/127.0.0.1:8082] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 500 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
Connection: <filtered>
2025-02-20 11:59:21 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [caa8e01a-2, L:/127.0.0.1:57550 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0xcaa8e01a, L:/127.0.0.1:57550 - R:localhost/127.0.0.1:8082]}}, [response_received])
2025-02-20 11:59:21 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate] with root cause
org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 404 NOT_FOUND from GET http://localhost:8082/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 11:59:21 [] DEBUG reactor.netty.channel.FluxReceive - [caa8e01a-2, L:/127.0.0.1:57550 - R:localhost/127.0.0.1:8082] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 11:59:21 [] DEBUG r.n.http.client.HttpClientOperations - [caa8e01a-2, L:/127.0.0.1:57550 - R:localhost/127.0.0.1:8082] Received last HTTP packet
2025-02-20 11:59:21 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [caa8e01a, L:/127.0.0.1:57550 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0xcaa8e01a, L:/127.0.0.1:57550 - R:localhost/127.0.0.1:8082]}}, [response_completed])
2025-02-20 11:59:21 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [caa8e01a, L:/127.0.0.1:57550 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0xcaa8e01a, L:/127.0.0.1:57550 - R:localhost/127.0.0.1:8082]}}, [disconnecting])
2025-02-20 11:59:21 [] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-20 11:59:21 [] INFO  c.c.c.g.c.config.RouterConfiguration - Authorized Request!
2025-02-20 11:59:21 [] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [GET] /error
2025-02-20 11:59:21 [] INFO  c.c.c.g.c.config.RouterConfiguration - method: GET
2025-02-20 11:59:21 [] INFO  c.c.c.g.c.config.RouterConfiguration - path: /error
2025-02-20 11:59:21 [] DEBUG r.n.r.PooledConnectionProvider - [caa8e01a, L:/127.0.0.1:57550 ! R:localhost/127.0.0.1:8082] Channel closed, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 11:59:21 [] DEBUG r.n.r.PooledConnectionProvider - [8689a198, L:/127.0.0.1:57549 - R:localhost/127.0.0.1:8081] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 11:59:21 [] DEBUG r.n.http.client.HttpClientConnect - [8689a198-3, L:/127.0.0.1:57549 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY, method=GET}
2025-02-20 11:59:21 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [8689a198-3, L:/127.0.0.1:57549 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x8689a198, L:/127.0.0.1:57549 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-20 11:59:21 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [caa8e01a, L:/127.0.0.1:57550 ! R:localhost/127.0.0.1:8082] onStateChange(PooledConnection{channel=[id: 0xcaa8e01a, L:/127.0.0.1:57550 ! R:localhost/127.0.0.1:8082]}, [disconnecting])
2025-02-20 11:59:21 [] DEBUG r.n.http.client.HttpClientOperations - [8689a198-3, L:/127.0.0.1:57549 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-20 11:59:21 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [8689a198-3, L:/127.0.0.1:57549 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x8689a198, L:/127.0.0.1:57549 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-20 11:59:21 [] DEBUG r.n.http.client.HttpClientOperations - [8689a198-3, L:/127.0.0.1:57549 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-20 11:59:21 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [8689a198-3, L:/127.0.0.1:57549 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x8689a198, L:/127.0.0.1:57549 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-20 11:59:21 [] DEBUG reactor.netty.channel.FluxReceive - [8689a198-3, L:/127.0.0.1:57549 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 11:59:21 [] DEBUG r.n.http.client.HttpClientOperations - [8689a198-3, L:/127.0.0.1:57549 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-20 11:59:21 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [8689a198, L:/127.0.0.1:57549 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x8689a198, L:/127.0.0.1:57549 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-20 11:59:21 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [8689a198, L:/127.0.0.1:57549 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x8689a198, L:/127.0.0.1:57549 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-20 11:59:21 [] INFO  c.c.c.g.c.config.RouterConfiguration - Validation Response: true
2025-02-20 11:59:21 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [8689a198, L:/127.0.0.1:57549 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-20 11:59:21 [] INFO  c.c.c.g.c.config.RouterConfiguration - Forwarding [GET] /error to User Microservice
2025-02-20 11:59:21 [] DEBUG r.n.r.PooledConnectionProvider - [8689a198, L:/127.0.0.1:57549 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-20 11:59:21 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] threw exception
java.lang.IllegalStateException: Cannot start async: [ERROR]
	at org.springframework.util.Assert.state(Assert.java:79)
	at org.springframework.web.context.request.async.StandardServletAsyncWebRequest.startAsync(StandardServletAsyncWebRequest.java:157)
	at org.springframework.web.context.request.async.WebAsyncManager.startAsyncProcessing(WebAsyncManager.java:487)
	at org.springframework.web.context.request.async.WebAsyncManager.startDeferredResultProcessing(WebAsyncManager.java:462)
	at org.springframework.web.servlet.function.DefaultAsyncServerResponse.writeAsync(DefaultAsyncServerResponse.java:130)
	at org.springframework.web.servlet.function.DefaultEntityResponseBuilder$PublisherEntityResponse.writeToInternal(DefaultEntityResponseBuilder.java:429)
	at org.springframework.web.servlet.function.AbstractServerResponse.writeTo(AbstractServerResponse.java:101)
	at org.springframework.web.servlet.function.support.HandlerFunctionAdapter.handle(HandlerFunctionAdapter.java:112)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:633)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:511)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:454)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:361)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:208)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:285)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:149)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:239)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:243)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:57)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 11:59:21 [] ERROR o.a.c.c.C.[Tomcat].[localhost] - Exception Processing [ErrorPage[errorCode=0, location=/error]]
jakarta.servlet.ServletException: Async processing failed
	at org.springframework.web.servlet.function.DefaultAsyncServerResponse.writeAsync(DefaultAsyncServerResponse.java:136)
	at org.springframework.web.servlet.function.DefaultEntityResponseBuilder$PublisherEntityResponse.writeToInternal(DefaultEntityResponseBuilder.java:429)
	at org.springframework.web.servlet.function.AbstractServerResponse.writeTo(AbstractServerResponse.java:101)
	at org.springframework.web.servlet.function.support.HandlerFunctionAdapter.handle(HandlerFunctionAdapter.java:112)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:633)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:511)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:454)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:361)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:208)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:285)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:149)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:239)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:243)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:57)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: java.lang.IllegalStateException: Cannot start async: [ERROR]
	at org.springframework.util.Assert.state(Assert.java:79)
	at org.springframework.web.context.request.async.StandardServletAsyncWebRequest.startAsync(StandardServletAsyncWebRequest.java:157)
	at org.springframework.web.context.request.async.WebAsyncManager.startAsyncProcessing(WebAsyncManager.java:487)
	at org.springframework.web.context.request.async.WebAsyncManager.startDeferredResultProcessing(WebAsyncManager.java:462)
	at org.springframework.web.servlet.function.DefaultAsyncServerResponse.writeAsync(DefaultAsyncServerResponse.java:130)
	... 41 common frames omitted
2025-02-20 11:59:39 [] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-02-20 11:59:39 [] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-02-20 11:59:39 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [8689a198, L:/127.0.0.1:57549 ! R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x8689a198, L:/127.0.0.1:57549 ! R:localhost/127.0.0.1:8081]}, [disconnecting])
2025-02-20 11:59:41 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 5 thread-local buffer(s) from thread: reactor-http-nio-2
2025-02-20 11:59:41 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 3 thread-local buffer(s) from thread: reactor-http-nio-3
2025-02-20 11:59:43 [] DEBUG org.jboss.logging - Logging Provider: org.jboss.logging.Slf4jLoggerProvider found via system property
2025-02-20 11:59:43 [] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final
2025-02-20 11:59:43 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-02-20 11:59:43 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-02-20 11:59:43 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-02-20 11:59:43 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-02-20 11:59:43 [] DEBUG o.h.v.i.e.r.TraversableResolvers - Cannot find jakarta.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2025-02-20 11:59:43 [] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-02-20 11:59:43 [] INFO  c.c.c.g.c.CommongatewayApplication - Starting CommongatewayApplication using Java 17.0.12 with PID 29056 (E:\API-GATEWAY\commongateway\target\classes started by CITPL in E:\API-GATEWAY)
2025-02-20 11:59:43 [] DEBUG c.c.c.g.c.CommongatewayApplication - Running with Spring Boot v3.4.2, Spring v6.2.2
2025-02-20 11:59:43 [] INFO  c.c.c.g.c.CommongatewayApplication - No active profile set, falling back to 1 default profile: "default"
2025-02-20 11:59:44 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-02-20 11:59:44 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-02-20 11:59:44 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-02-20 11:59:44 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-02-20 11:59:44 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-02-20 11:59:44 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-02-20 11:59:45 [] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=50299984-946b-3bba-87da-3c9a1df8a676
2025-02-20 11:59:45 [] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-02-20 11:59:45 [] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-02-20 11:59:45 [] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-02-20 11:59:45 [] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.34]
2025-02-20 11:59:45 [] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-02-20 11:59:45 [] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1638 ms
2025-02-20 11:59:45 [] DEBUG i.n.u.i.l.InternalLoggerFactory - Using SLF4J as the default logging framework
2025-02-20 11:59:45 [] DEBUG i.n.util.internal.PlatformDependent0 - -Dio.netty.noUnsafe: false
2025-02-20 11:59:45 [] DEBUG i.n.util.internal.PlatformDependent0 - Java version: 17
2025-02-20 11:59:45 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe.theUnsafe: available
2025-02-20 11:59:45 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe base methods: all available
2025-02-20 11:59:45 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe.storeFence: available
2025-02-20 11:59:45 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.Buffer.address: available
2025-02-20 11:59:45 [] DEBUG i.n.util.internal.PlatformDependent0 - direct buffer constructor: unavailable: Reflective setAccessible(true) disabled
2025-02-20 11:59:45 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.Bits.unaligned: available, true
2025-02-20 11:59:45 [] DEBUG i.n.util.internal.PlatformDependent0 - jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable: class io.netty.util.internal.PlatformDependent0$7 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @7dc222ae
2025-02-20 11:59:45 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.DirectByteBuffer.<init>(long, {int,long}): unavailable
2025-02-20 11:59:45 [] DEBUG i.n.util.internal.PlatformDependent - sun.misc.Unsafe: available
2025-02-20 11:59:45 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.tmpdir: C:\Users\CITPL\AppData\Local\Temp (java.io.tmpdir)
2025-02-20 11:59:45 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.bitMode: 64 (sun.arch.data.model)
2025-02-20 11:59:45 [] DEBUG i.n.util.internal.PlatformDependent - Platform: Windows
2025-02-20 11:59:45 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.maxDirectMemory: -1 bytes
2025-02-20 11:59:45 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.uninitializedArrayAllocationThreshold: -1
2025-02-20 11:59:45 [] DEBUG io.netty.util.internal.CleanerJava9 - java.nio.ByteBuffer.cleaner(): available
2025-02-20 11:59:45 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.noPreferDirect: false
2025-02-20 11:59:45 [] DEBUG reactor.util.Loggers - Using Slf4j logging framework
2025-02-20 11:59:46 [] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-02-20 11:59:46 [] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2025-02-20 11:59:46 [] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2025-02-20 11:59:46 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-02-20 11:59:46 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via user class loader
2025-02-20 11:59:46 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-02-20 11:59:46 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-02-20 11:59:46 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-02-20 11:59:46 [] DEBUG o.h.v.i.e.r.TraversableResolvers - Cannot find jakarta.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2025-02-20 11:59:46 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-02-20 11:59:46 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-02-20 11:59:46 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-02-20 11:59:46 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-02-20 11:59:46 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-02-20 11:59:46 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-02-20 11:59:46 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	c.c.c.g.c.c.HomeController:
	{GET [/home]}: get()
2025-02-20 11:59:46 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2025-02-20 11:59:46 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 'beanNameHandlerMapping' {}
2025-02-20 11:59:46 [] DEBUG _.s.w.s.HandlerMapping.Mappings - Mapped com.citpl.common.gateway.commongateway.config.RouterConfiguration$$Lambda$895/0x000002903950e330@50598a1a -> com.citpl.common.gateway.commongateway.config.RouterConfiguration$$Lambda$896/0x000002903950e598@14de1901
2025-02-20 11:59:46 [] DEBUG _.s.w.s.HandlerMapping.Mappings - Mapped /validate/** -> ProxyExchangeHandlerFunction
/users/** -> ProxyExchangeHandlerFunction
2025-02-20 11:59:46 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2025-02-20 11:59:46 [] DEBUG i.n.u.i.InternalThreadLocalMap - -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2025-02-20 11:59:46 [] DEBUG i.n.u.i.InternalThreadLocalMap - -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2025-02-20 11:59:46 [] DEBUG io.netty.util.ResourceLeakDetector - -Dio.netty.leakDetection.level: simple
2025-02-20 11:59:46 [] DEBUG io.netty.util.ResourceLeakDetector - -Dio.netty.leakDetection.targetRecords: 4
2025-02-20 11:59:46 [] DEBUG i.n.handler.codec.compression.Brotli - brotli4j not in the classpath; Brotli support will be unavailable.
2025-02-20 11:59:46 [] DEBUG reactor.netty.tcp.TcpResources - [http] resources will use the default LoopResources: DefaultLoopResources {prefix=reactor-http, daemon=true, selectCount=12, workerCount=12}
2025-02-20 11:59:46 [] DEBUG reactor.netty.tcp.TcpResources - [http] resources will use the default ConnectionProvider: reactor.netty.resources.DefaultPooledConnectionProvider@b5c902
2025-02-20 11:59:46 [] DEBUG r.netty.resources.DefaultLoopIOUring - Default io_uring support : false
2025-02-20 11:59:46 [] DEBUG r.netty.resources.DefaultLoopEpoll - Default Epoll support : false
2025-02-20 11:59:46 [] DEBUG r.netty.resources.DefaultLoopKQueue - Default KQueue support : false
2025-02-20 11:59:47 [] DEBUG i.n.c.MultithreadEventLoopGroup - -Dio.netty.eventLoopThreads: 24
2025-02-20 11:59:47 [] DEBUG i.n.u.concurrent.GlobalEventExecutor - -Dio.netty.globalEventExecutor.quietPeriodSeconds: 1
2025-02-20 11:59:47 [] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.noKeySetOptimization: false
2025-02-20 11:59:47 [] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.selectorAutoRebuildThreshold: 512
2025-02-20 11:59:47 [] DEBUG i.n.util.internal.PlatformDependent - org.jctools-core.MpscChunkedArrayQueue: available
2025-02-20 11:59:47 [] DEBUG io.netty.util.NetUtil - -Djava.net.preferIPv4Stack: false
2025-02-20 11:59:47 [] DEBUG io.netty.util.NetUtil - -Djava.net.preferIPv6Addresses: false
2025-02-20 11:59:47 [] DEBUG i.netty.util.NetUtilInitializations - Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2025-02-20 11:59:47 [] DEBUG io.netty.util.NetUtil - Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2025-02-20 11:59:47 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default ResolvedAddressTypes: IPV4_ONLY
2025-02-20 11:59:47 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Localhost address: localhost/127.0.0.1
2025-02-20 11:59:47 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Windows hostname: DESKTOP-P307093
2025-02-20 11:59:47 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default search domains: []
2025-02-20 11:59:47 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default UnixResolverOptions{ndots=1, timeout=5, attempts=16}
2025-02-20 11:59:47 [] DEBUG i.n.r.DefaultHostsFileEntriesResolver - -Dio.netty.hostsFileRefreshInterval: 0
2025-02-20 11:59:47 [] DEBUG i.n.r.d.DefaultDnsServerAddressStreamProvider - Default DNS servers: [/8.8.8.8:53, /4.2.2.2:53] (sun.net.dns.ResolverConfiguration)
2025-02-20 11:59:47 [] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-02-20 11:59:47 [] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-02-20 11:59:47 [] INFO  c.c.c.g.c.CommongatewayApplication - Started CommongatewayApplication in 3.973 seconds (process running for 4.778)
2025-02-20 11:59:59 [] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-02-20 11:59:59 [] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-02-20 12:00:05 [] DEBUG org.jboss.logging - Logging Provider: org.jboss.logging.Slf4jLoggerProvider found via system property
2025-02-20 12:00:05 [] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final
2025-02-20 12:00:05 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-02-20 12:00:05 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-02-20 12:00:05 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-02-20 12:00:05 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-02-20 12:00:05 [] DEBUG o.h.v.i.e.r.TraversableResolvers - Cannot find jakarta.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2025-02-20 12:00:05 [] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-02-20 12:00:05 [] INFO  c.c.c.g.c.CommongatewayApplication - Starting CommongatewayApplication using Java 17.0.12 with PID 7728 (E:\API-GATEWAY\commongateway\target\classes started by CITPL in E:\API-GATEWAY)
2025-02-20 12:00:05 [] DEBUG c.c.c.g.c.CommongatewayApplication - Running with Spring Boot v3.4.2, Spring v6.2.2
2025-02-20 12:00:05 [] INFO  c.c.c.g.c.CommongatewayApplication - No active profile set, falling back to 1 default profile: "default"
2025-02-20 12:00:05 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-02-20 12:00:05 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-02-20 12:00:05 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-02-20 12:00:05 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-02-20 12:00:05 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-02-20 12:00:05 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-02-20 12:00:06 [] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=50299984-946b-3bba-87da-3c9a1df8a676
2025-02-20 12:00:06 [] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-02-20 12:00:06 [] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-02-20 12:00:06 [] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-02-20 12:00:06 [] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.34]
2025-02-20 12:00:06 [] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-02-20 12:00:06 [] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1417 ms
2025-02-20 12:00:06 [] DEBUG i.n.u.i.l.InternalLoggerFactory - Using SLF4J as the default logging framework
2025-02-20 12:00:06 [] DEBUG i.n.util.internal.PlatformDependent0 - -Dio.netty.noUnsafe: false
2025-02-20 12:00:06 [] DEBUG i.n.util.internal.PlatformDependent0 - Java version: 17
2025-02-20 12:00:06 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe.theUnsafe: available
2025-02-20 12:00:06 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe base methods: all available
2025-02-20 12:00:06 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe.storeFence: available
2025-02-20 12:00:06 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.Buffer.address: available
2025-02-20 12:00:06 [] DEBUG i.n.util.internal.PlatformDependent0 - direct buffer constructor: unavailable: Reflective setAccessible(true) disabled
2025-02-20 12:00:06 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.Bits.unaligned: available, true
2025-02-20 12:00:06 [] DEBUG i.n.util.internal.PlatformDependent0 - jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable: class io.netty.util.internal.PlatformDependent0$7 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @7dc222ae
2025-02-20 12:00:06 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.DirectByteBuffer.<init>(long, {int,long}): unavailable
2025-02-20 12:00:06 [] DEBUG i.n.util.internal.PlatformDependent - sun.misc.Unsafe: available
2025-02-20 12:00:06 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.tmpdir: C:\Users\CITPL\AppData\Local\Temp (java.io.tmpdir)
2025-02-20 12:00:06 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.bitMode: 64 (sun.arch.data.model)
2025-02-20 12:00:06 [] DEBUG i.n.util.internal.PlatformDependent - Platform: Windows
2025-02-20 12:00:06 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.maxDirectMemory: -1 bytes
2025-02-20 12:00:06 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.uninitializedArrayAllocationThreshold: -1
2025-02-20 12:00:06 [] DEBUG io.netty.util.internal.CleanerJava9 - java.nio.ByteBuffer.cleaner(): available
2025-02-20 12:00:06 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.noPreferDirect: false
2025-02-20 12:00:06 [] DEBUG reactor.util.Loggers - Using Slf4j logging framework
2025-02-20 12:00:06 [] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-02-20 12:00:06 [] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2025-02-20 12:00:06 [] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2025-02-20 12:00:06 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-02-20 12:00:06 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via user class loader
2025-02-20 12:00:06 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-02-20 12:00:06 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-02-20 12:00:06 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-02-20 12:00:06 [] DEBUG o.h.v.i.e.r.TraversableResolvers - Cannot find jakarta.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2025-02-20 12:00:06 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-02-20 12:00:06 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-02-20 12:00:06 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-02-20 12:00:06 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-02-20 12:00:06 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-02-20 12:00:06 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-02-20 12:00:07 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	c.c.c.g.c.c.HomeController:
	{GET [/home]}: get()
2025-02-20 12:00:07 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2025-02-20 12:00:07 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 'beanNameHandlerMapping' {}
2025-02-20 12:00:07 [] DEBUG _.s.w.s.HandlerMapping.Mappings - Mapped com.citpl.common.gateway.commongateway.config.RouterConfiguration$$Lambda$895/0x000002851c50fd78@7d30007d -> com.citpl.common.gateway.commongateway.config.RouterConfiguration$$Lambda$896/0x000002851c510000@382d71c7
2025-02-20 12:00:07 [] DEBUG _.s.w.s.HandlerMapping.Mappings - Mapped /validate/** -> ProxyExchangeHandlerFunction
/users/** -> ProxyExchangeHandlerFunction
2025-02-20 12:00:07 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2025-02-20 12:00:07 [] DEBUG i.n.u.i.InternalThreadLocalMap - -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2025-02-20 12:00:07 [] DEBUG i.n.u.i.InternalThreadLocalMap - -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2025-02-20 12:00:07 [] DEBUG io.netty.util.ResourceLeakDetector - -Dio.netty.leakDetection.level: simple
2025-02-20 12:00:07 [] DEBUG io.netty.util.ResourceLeakDetector - -Dio.netty.leakDetection.targetRecords: 4
2025-02-20 12:00:07 [] DEBUG i.n.handler.codec.compression.Brotli - brotli4j not in the classpath; Brotli support will be unavailable.
2025-02-20 12:00:07 [] DEBUG reactor.netty.tcp.TcpResources - [http] resources will use the default LoopResources: DefaultLoopResources {prefix=reactor-http, daemon=true, selectCount=12, workerCount=12}
2025-02-20 12:00:07 [] DEBUG reactor.netty.tcp.TcpResources - [http] resources will use the default ConnectionProvider: reactor.netty.resources.DefaultPooledConnectionProvider@2fba0dac
2025-02-20 12:00:07 [] DEBUG r.netty.resources.DefaultLoopIOUring - Default io_uring support : false
2025-02-20 12:00:07 [] DEBUG r.netty.resources.DefaultLoopEpoll - Default Epoll support : false
2025-02-20 12:00:07 [] DEBUG r.netty.resources.DefaultLoopKQueue - Default KQueue support : false
2025-02-20 12:00:07 [] DEBUG i.n.c.MultithreadEventLoopGroup - -Dio.netty.eventLoopThreads: 24
2025-02-20 12:00:07 [] DEBUG i.n.u.concurrent.GlobalEventExecutor - -Dio.netty.globalEventExecutor.quietPeriodSeconds: 1
2025-02-20 12:00:07 [] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.noKeySetOptimization: false
2025-02-20 12:00:07 [] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.selectorAutoRebuildThreshold: 512
2025-02-20 12:00:07 [] DEBUG i.n.util.internal.PlatformDependent - org.jctools-core.MpscChunkedArrayQueue: available
2025-02-20 12:00:07 [] DEBUG io.netty.util.NetUtil - -Djava.net.preferIPv4Stack: false
2025-02-20 12:00:07 [] DEBUG io.netty.util.NetUtil - -Djava.net.preferIPv6Addresses: false
2025-02-20 12:00:07 [] DEBUG i.netty.util.NetUtilInitializations - Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2025-02-20 12:00:07 [] DEBUG io.netty.util.NetUtil - Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2025-02-20 12:00:07 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default ResolvedAddressTypes: IPV4_ONLY
2025-02-20 12:00:07 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Localhost address: localhost/127.0.0.1
2025-02-20 12:00:07 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Windows hostname: DESKTOP-P307093
2025-02-20 12:00:07 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default search domains: []
2025-02-20 12:00:07 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default UnixResolverOptions{ndots=1, timeout=5, attempts=16}
2025-02-20 12:00:07 [] DEBUG i.n.r.DefaultHostsFileEntriesResolver - -Dio.netty.hostsFileRefreshInterval: 0
2025-02-20 12:00:07 [] DEBUG i.n.r.d.DefaultDnsServerAddressStreamProvider - Default DNS servers: [/8.8.8.8:53, /4.2.2.2:53] (sun.net.dns.ResolverConfiguration)
2025-02-20 12:00:07 [] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-02-20 12:00:07 [] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-02-20 12:00:08 [] INFO  c.c.c.g.c.CommongatewayApplication - Started CommongatewayApplication in 3.564 seconds (process running for 4.359)
2025-02-20 12:00:15 [] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-02-20 12:00:15 [] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-02-20 12:00:15 [] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-02-20 12:00:15 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-20 12:00:15 [ee6cbd26-880a-40d6-a992-6b80eeee11e9] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-20 12:00:15 [ee6cbd26-880a-40d6-a992-6b80eeee11e9] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-20 12:00:15 [ee6cbd26-880a-40d6-a992-6b80eeee11e9] INFO  c.c.c.g.c.config.RouterConfiguration - Authorized Request!
2025-02-20 12:00:15 [ee6cbd26-880a-40d6-a992-6b80eeee11e9] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [GET] /validate
2025-02-20 12:00:15 [ee6cbd26-880a-40d6-a992-6b80eeee11e9] DEBUG r.n.r.PooledConnectionProvider - Creating a new [http] client pool [PoolFactory{evictionInterval=PT0S, leasingStrategy=fifo, maxConnections=500, maxIdleTime=-1, maxLifeTime=-1, metricsEnabled=false, pendingAcquireMaxCount=1000, pendingAcquireTimeout=45000}] for [localhost/<unresolved>:8081]
2025-02-20 12:00:15 [ee6cbd26-880a-40d6-a992-6b80eeee11e9] DEBUG io.netty.channel.DefaultChannelId - -Dio.netty.processId: 7728 (auto-detected)
2025-02-20 12:00:15 [ee6cbd26-880a-40d6-a992-6b80eeee11e9] DEBUG io.netty.channel.DefaultChannelId - -Dio.netty.machineId: a0:d3:65:ff:fe:5e:b0:28 (auto-detected)
2025-02-20 12:00:15 [ee6cbd26-880a-40d6-a992-6b80eeee11e9] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.numHeapArenas: 24
2025-02-20 12:00:15 [ee6cbd26-880a-40d6-a992-6b80eeee11e9] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.numDirectArenas: 24
2025-02-20 12:00:15 [ee6cbd26-880a-40d6-a992-6b80eeee11e9] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.pageSize: 8192
2025-02-20 12:00:15 [ee6cbd26-880a-40d6-a992-6b80eeee11e9] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxOrder: 9
2025-02-20 12:00:15 [ee6cbd26-880a-40d6-a992-6b80eeee11e9] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.chunkSize: 4194304
2025-02-20 12:00:15 [ee6cbd26-880a-40d6-a992-6b80eeee11e9] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.smallCacheSize: 256
2025-02-20 12:00:15 [ee6cbd26-880a-40d6-a992-6b80eeee11e9] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.normalCacheSize: 64
2025-02-20 12:00:15 [ee6cbd26-880a-40d6-a992-6b80eeee11e9] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2025-02-20 12:00:15 [ee6cbd26-880a-40d6-a992-6b80eeee11e9] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.cacheTrimInterval: 8192
2025-02-20 12:00:15 [ee6cbd26-880a-40d6-a992-6b80eeee11e9] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.cacheTrimIntervalMillis: 0
2025-02-20 12:00:15 [ee6cbd26-880a-40d6-a992-6b80eeee11e9] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.useCacheForAllThreads: false
2025-02-20 12:00:15 [ee6cbd26-880a-40d6-a992-6b80eeee11e9] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
2025-02-20 12:00:15 [ee6cbd26-880a-40d6-a992-6b80eeee11e9] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.disableCacheFinalizersForFastThreadLocalThreads: false
2025-02-20 12:00:15 [ee6cbd26-880a-40d6-a992-6b80eeee11e9] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.allocator.type: pooled
2025-02-20 12:00:15 [ee6cbd26-880a-40d6-a992-6b80eeee11e9] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.threadLocalDirectBufferSize: 0
2025-02-20 12:00:15 [ee6cbd26-880a-40d6-a992-6b80eeee11e9] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.maxThreadLocalCharBufferSize: 16384
2025-02-20 12:00:15 [] DEBUG r.n.r.PooledConnectionProvider - [ae617030] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 12:00:15 [] DEBUG io.netty.buffer.AbstractByteBuf - -Dio.netty.buffer.checkAccessible: true
2025-02-20 12:00:15 [] DEBUG io.netty.buffer.AbstractByteBuf - -Dio.netty.buffer.checkBounds: true
2025-02-20 12:00:15 [] DEBUG i.n.util.ResourceLeakDetectorFactory - Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@5c61a454
2025-02-20 12:00:15 [] DEBUG r.netty.transport.TransportConfig - [ae617030] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-20 12:00:15 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 12:00:15 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 12:00:15 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 12:00:15 [] DEBUG i.n.b.ChannelInitializerExtensions - -Dio.netty.bootstrap.extensions: null
2025-02-20 12:00:15 [] DEBUG r.netty.transport.TransportConnector - [ae617030] Connecting to [localhost/127.0.0.1:8081].
2025-02-20 12:00:15 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [ae617030, L:/127.0.0.1:57578 - R:localhost/127.0.0.1:8081] Registering pool release on close event for channel
2025-02-20 12:00:15 [] DEBUG r.n.r.PooledConnectionProvider - [ae617030, L:/127.0.0.1:57578 - R:localhost/127.0.0.1:8081] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 12:00:15 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [ae617030, L:/127.0.0.1:57578 - R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0xae617030, L:/127.0.0.1:57578 - R:localhost/127.0.0.1:8081]}, [connected])
2025-02-20 12:00:15 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [ae617030-1, L:/127.0.0.1:57578 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0xae617030, L:/127.0.0.1:57578 - R:localhost/127.0.0.1:8081]}}, [configured])
2025-02-20 12:00:15 [] DEBUG r.n.http.client.HttpClientConnect - [ae617030-1, L:/127.0.0.1:57578 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY, method=GET}
2025-02-20 12:00:15 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [ae617030-1, L:/127.0.0.1:57578 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xae617030, L:/127.0.0.1:57578 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-20 12:00:15 [] DEBUG r.n.http.client.HttpClientOperations - [ae617030-1, L:/127.0.0.1:57578 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-20 12:00:15 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.maxCapacityPerThread: 4096
2025-02-20 12:00:15 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.ratio: 8
2025-02-20 12:00:15 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.chunkSize: 32
2025-02-20 12:00:15 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.blocking: false
2025-02-20 12:00:15 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.batchFastThreadLocalOnly: true
2025-02-20 12:00:15 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [ae617030-1, L:/127.0.0.1:57578 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xae617030, L:/127.0.0.1:57578 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-20 12:00:15 [] DEBUG i.n.handler.codec.compression.Zstd - zstd-jni not in the classpath; Zstd support will be unavailable.
2025-02-20 12:00:15 [] DEBUG r.n.http.client.HttpClientOperations - [ae617030-1, L:/127.0.0.1:57578 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-20 12:00:15 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [ae617030-1, L:/127.0.0.1:57578 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xae617030, L:/127.0.0.1:57578 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-20 12:00:15 [] DEBUG reactor.netty.channel.FluxReceive - [ae617030-1, L:/127.0.0.1:57578 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 12:00:15 [] DEBUG r.n.http.client.HttpClientOperations - [ae617030-1, L:/127.0.0.1:57578 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-20 12:00:15 [ee6cbd26-880a-40d6-a992-6b80eeee11e9] INFO  c.c.c.g.c.config.RouterConfiguration - Validation Response: true
2025-02-20 12:00:15 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [ae617030, L:/127.0.0.1:57578 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xae617030, L:/127.0.0.1:57578 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-20 12:00:15 [ee6cbd26-880a-40d6-a992-6b80eeee11e9] INFO  c.c.c.g.c.config.RouterConfiguration - Forwarding [GET] /validate to User Microservice
2025-02-20 12:00:15 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [ae617030, L:/127.0.0.1:57578 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xae617030, L:/127.0.0.1:57578 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-20 12:00:15 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [ae617030, L:/127.0.0.1:57578 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-20 12:00:15 [] DEBUG r.n.r.PooledConnectionProvider - [ae617030, L:/127.0.0.1:57578 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-20 12:00:15 [ee6cbd26-880a-40d6-a992-6b80eeee11e9] DEBUG r.n.r.PooledConnectionProvider - Creating a new [http] client pool [PoolFactory{evictionInterval=PT0S, leasingStrategy=fifo, maxConnections=500, maxIdleTime=-1, maxLifeTime=-1, metricsEnabled=false, pendingAcquireMaxCount=1000, pendingAcquireTimeout=45000}] for [localhost/<unresolved>:8082]
2025-02-20 12:00:15 [] DEBUG r.n.r.PooledConnectionProvider - [954f5640] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 12:00:15 [] DEBUG r.netty.transport.TransportConfig - [954f5640] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-20 12:00:15 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 12:00:15 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 12:00:15 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 12:00:15 [] DEBUG r.netty.transport.TransportConnector - [954f5640] Connecting to [localhost/127.0.0.1:8082].
2025-02-20 12:00:15 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [954f5640, L:/127.0.0.1:57579 - R:localhost/127.0.0.1:8082] Registering pool release on close event for channel
2025-02-20 12:00:15 [] DEBUG r.n.r.PooledConnectionProvider - [954f5640, L:/127.0.0.1:57579 - R:localhost/127.0.0.1:8082] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 12:00:15 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [954f5640, L:/127.0.0.1:57579 - R:localhost/127.0.0.1:8082] onStateChange(PooledConnection{channel=[id: 0x954f5640, L:/127.0.0.1:57579 - R:localhost/127.0.0.1:8082]}, [connected])
2025-02-20 12:00:15 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [954f5640-1, L:/127.0.0.1:57579 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0x954f5640, L:/127.0.0.1:57579 - R:localhost/127.0.0.1:8082]}}, [configured])
2025-02-20 12:00:15 [] DEBUG r.n.http.client.HttpClientConnect - [954f5640-1, L:/127.0.0.1:57579 - R:localhost/127.0.0.1:8082] Handler is being applied: {uri=http://localhost:8082/validate, method=GET}
2025-02-20 12:00:15 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [954f5640-1, L:/127.0.0.1:57579 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x954f5640, L:/127.0.0.1:57579 - R:localhost/127.0.0.1:8082]}}, [request_prepared])
2025-02-20 12:00:15 [] DEBUG r.n.http.client.HttpClientOperations - [954f5640-1, L:/127.0.0.1:57579 - R:localhost/127.0.0.1:8082] No sendHeaders() called before complete, sending zero-length header
2025-02-20 12:00:15 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [954f5640-1, L:/127.0.0.1:57579 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x954f5640, L:/127.0.0.1:57579 - R:localhost/127.0.0.1:8082]}}, [request_sent])
2025-02-20 12:00:15 [] DEBUG r.n.http.client.HttpClientOperations - [954f5640-1, L:/127.0.0.1:57579 - R:localhost/127.0.0.1:8082] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 404 
Vary: <filtered>
Vary: <filtered>
Vary: <filtered>
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-20 12:00:15 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [954f5640-1, L:/127.0.0.1:57579 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x954f5640, L:/127.0.0.1:57579 - R:localhost/127.0.0.1:8082]}}, [response_received])
2025-02-20 12:00:15 [] DEBUG reactor.netty.channel.FluxReceive - [954f5640-1, L:/127.0.0.1:57579 - R:localhost/127.0.0.1:8082] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 12:00:15 [] DEBUG r.n.http.client.HttpClientOperations - [954f5640-1, L:/127.0.0.1:57579 - R:localhost/127.0.0.1:8082] Received last HTTP packet
2025-02-20 12:00:15 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [954f5640, L:/127.0.0.1:57579 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x954f5640, L:/127.0.0.1:57579 - R:localhost/127.0.0.1:8082]}}, [response_completed])
2025-02-20 12:00:15 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [954f5640, L:/127.0.0.1:57579 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x954f5640, L:/127.0.0.1:57579 - R:localhost/127.0.0.1:8082]}}, [disconnecting])
2025-02-20 12:00:15 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [954f5640, L:/127.0.0.1:57579 - R:localhost/127.0.0.1:8082] Releasing channel
2025-02-20 12:00:15 [] DEBUG r.n.r.PooledConnectionProvider - [954f5640, L:/127.0.0.1:57579 - R:localhost/127.0.0.1:8082] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-20 12:00:15 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] threw exception
org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 404 NOT_FOUND from GET http://localhost:8082/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 12:00:15 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate] with root cause
org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 404 NOT_FOUND from GET http://localhost:8082/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 12:00:15 [] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-20 12:00:15 [] INFO  c.c.c.g.c.config.RouterConfiguration - Authorized Request!
2025-02-20 12:00:15 [] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [GET] /error
2025-02-20 12:00:15 [] DEBUG r.n.r.PooledConnectionProvider - [ae617030, L:/127.0.0.1:57578 - R:localhost/127.0.0.1:8081] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 12:00:15 [] DEBUG r.n.http.client.HttpClientConnect - [ae617030-2, L:/127.0.0.1:57578 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY, method=GET}
2025-02-20 12:00:15 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [ae617030-2, L:/127.0.0.1:57578 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xae617030, L:/127.0.0.1:57578 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-20 12:00:15 [] DEBUG r.n.http.client.HttpClientOperations - [ae617030-2, L:/127.0.0.1:57578 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-20 12:00:15 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [ae617030-2, L:/127.0.0.1:57578 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xae617030, L:/127.0.0.1:57578 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-20 12:00:15 [] DEBUG r.n.http.client.HttpClientOperations - [ae617030-2, L:/127.0.0.1:57578 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-20 12:00:15 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [ae617030-2, L:/127.0.0.1:57578 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xae617030, L:/127.0.0.1:57578 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-20 12:00:15 [] DEBUG reactor.netty.channel.FluxReceive - [ae617030-2, L:/127.0.0.1:57578 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 12:00:15 [] DEBUG r.n.http.client.HttpClientOperations - [ae617030-2, L:/127.0.0.1:57578 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-20 12:00:15 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [ae617030, L:/127.0.0.1:57578 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xae617030, L:/127.0.0.1:57578 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-20 12:00:15 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [ae617030, L:/127.0.0.1:57578 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xae617030, L:/127.0.0.1:57578 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-20 12:00:15 [] INFO  c.c.c.g.c.config.RouterConfiguration - Validation Response: true
2025-02-20 12:00:15 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [ae617030, L:/127.0.0.1:57578 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-20 12:00:15 [] INFO  c.c.c.g.c.config.RouterConfiguration - Forwarding [GET] /error to User Microservice
2025-02-20 12:00:15 [] DEBUG r.n.r.PooledConnectionProvider - [ae617030, L:/127.0.0.1:57578 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-20 12:00:15 [] DEBUG r.n.r.PooledConnectionProvider - [954f5640, L:/127.0.0.1:57579 - R:localhost/127.0.0.1:8082] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 12:00:15 [] DEBUG r.n.http.client.HttpClientConnect - [954f5640-2, L:/127.0.0.1:57579 - R:localhost/127.0.0.1:8082] Handler is being applied: {uri=http://localhost:8082/error, method=GET}
2025-02-20 12:00:15 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [954f5640-2, L:/127.0.0.1:57579 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0x954f5640, L:/127.0.0.1:57579 - R:localhost/127.0.0.1:8082]}}, [request_prepared])
2025-02-20 12:00:15 [] DEBUG r.n.http.client.HttpClientOperations - [954f5640-2, L:/127.0.0.1:57579 - R:localhost/127.0.0.1:8082] No sendHeaders() called before complete, sending zero-length header
2025-02-20 12:00:15 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [954f5640-2, L:/127.0.0.1:57579 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0x954f5640, L:/127.0.0.1:57579 - R:localhost/127.0.0.1:8082]}}, [request_sent])
2025-02-20 12:00:15 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] threw exception
org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 404 NOT_FOUND from GET http://localhost:8082/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 12:00:15 [] DEBUG r.n.http.client.HttpClientOperations - [954f5640-2, L:/127.0.0.1:57579 - R:localhost/127.0.0.1:8082] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 500 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
Connection: <filtered>
2025-02-20 12:00:15 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [954f5640-2, L:/127.0.0.1:57579 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0x954f5640, L:/127.0.0.1:57579 - R:localhost/127.0.0.1:8082]}}, [response_received])
2025-02-20 12:00:15 [] DEBUG reactor.netty.channel.FluxReceive - [954f5640-2, L:/127.0.0.1:57579 - R:localhost/127.0.0.1:8082] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 12:00:15 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate] with root cause
org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 404 NOT_FOUND from GET http://localhost:8082/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 12:00:15 [] DEBUG r.n.http.client.HttpClientOperations - [954f5640-2, L:/127.0.0.1:57579 - R:localhost/127.0.0.1:8082] Received last HTTP packet
2025-02-20 12:00:15 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [954f5640, L:/127.0.0.1:57579 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0x954f5640, L:/127.0.0.1:57579 - R:localhost/127.0.0.1:8082]}}, [response_completed])
2025-02-20 12:00:15 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [954f5640, L:/127.0.0.1:57579 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0x954f5640, L:/127.0.0.1:57579 - R:localhost/127.0.0.1:8082]}}, [disconnecting])
2025-02-20 12:00:15 [] DEBUG r.n.r.PooledConnectionProvider - [954f5640, L:/127.0.0.1:57579 ! R:localhost/127.0.0.1:8082] Channel closed, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 12:00:15 [] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-20 12:00:15 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [954f5640, L:/127.0.0.1:57579 ! R:localhost/127.0.0.1:8082] onStateChange(PooledConnection{channel=[id: 0x954f5640, L:/127.0.0.1:57579 ! R:localhost/127.0.0.1:8082]}, [disconnecting])
2025-02-20 12:00:15 [] INFO  c.c.c.g.c.config.RouterConfiguration - Authorized Request!
2025-02-20 12:00:15 [] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [GET] /error
2025-02-20 12:00:15 [] DEBUG r.n.r.PooledConnectionProvider - [ae617030, L:/127.0.0.1:57578 - R:localhost/127.0.0.1:8081] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 12:00:15 [] DEBUG r.n.http.client.HttpClientConnect - [ae617030-3, L:/127.0.0.1:57578 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY, method=GET}
2025-02-20 12:00:15 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [ae617030-3, L:/127.0.0.1:57578 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xae617030, L:/127.0.0.1:57578 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-20 12:00:15 [] DEBUG r.n.http.client.HttpClientOperations - [ae617030-3, L:/127.0.0.1:57578 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-20 12:00:15 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [ae617030-3, L:/127.0.0.1:57578 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xae617030, L:/127.0.0.1:57578 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-20 12:00:15 [] DEBUG r.n.http.client.HttpClientOperations - [ae617030-3, L:/127.0.0.1:57578 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-20 12:00:15 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [ae617030-3, L:/127.0.0.1:57578 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xae617030, L:/127.0.0.1:57578 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-20 12:00:15 [] DEBUG reactor.netty.channel.FluxReceive - [ae617030-3, L:/127.0.0.1:57578 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 12:00:15 [] DEBUG r.n.http.client.HttpClientOperations - [ae617030-3, L:/127.0.0.1:57578 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-20 12:00:15 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [ae617030, L:/127.0.0.1:57578 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xae617030, L:/127.0.0.1:57578 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-20 12:00:15 [] INFO  c.c.c.g.c.config.RouterConfiguration - Validation Response: true
2025-02-20 12:00:15 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [ae617030, L:/127.0.0.1:57578 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xae617030, L:/127.0.0.1:57578 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-20 12:00:15 [] INFO  c.c.c.g.c.config.RouterConfiguration - Forwarding [GET] /error to User Microservice
2025-02-20 12:00:15 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [ae617030, L:/127.0.0.1:57578 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-20 12:00:15 [] DEBUG r.n.r.PooledConnectionProvider - [ae617030, L:/127.0.0.1:57578 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-20 12:00:15 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] threw exception
java.lang.IllegalStateException: Cannot start async: [ERROR]
	at org.springframework.util.Assert.state(Assert.java:79)
	at org.springframework.web.context.request.async.StandardServletAsyncWebRequest.startAsync(StandardServletAsyncWebRequest.java:157)
	at org.springframework.web.context.request.async.WebAsyncManager.startAsyncProcessing(WebAsyncManager.java:487)
	at org.springframework.web.context.request.async.WebAsyncManager.startDeferredResultProcessing(WebAsyncManager.java:462)
	at org.springframework.web.servlet.function.DefaultAsyncServerResponse.writeAsync(DefaultAsyncServerResponse.java:130)
	at org.springframework.web.servlet.function.DefaultEntityResponseBuilder$PublisherEntityResponse.writeToInternal(DefaultEntityResponseBuilder.java:429)
	at org.springframework.web.servlet.function.AbstractServerResponse.writeTo(AbstractServerResponse.java:101)
	at org.springframework.web.servlet.function.support.HandlerFunctionAdapter.handle(HandlerFunctionAdapter.java:112)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:633)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:511)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:454)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:361)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:208)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:285)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:149)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:239)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:243)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:57)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 12:00:15 [] ERROR o.a.c.c.C.[Tomcat].[localhost] - Exception Processing [ErrorPage[errorCode=0, location=/error]]
jakarta.servlet.ServletException: Async processing failed
	at org.springframework.web.servlet.function.DefaultAsyncServerResponse.writeAsync(DefaultAsyncServerResponse.java:136)
	at org.springframework.web.servlet.function.DefaultEntityResponseBuilder$PublisherEntityResponse.writeToInternal(DefaultEntityResponseBuilder.java:429)
	at org.springframework.web.servlet.function.AbstractServerResponse.writeTo(AbstractServerResponse.java:101)
	at org.springframework.web.servlet.function.support.HandlerFunctionAdapter.handle(HandlerFunctionAdapter.java:112)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:633)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:511)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:454)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:361)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:208)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:285)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:149)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:239)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:243)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:57)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: java.lang.IllegalStateException: Cannot start async: [ERROR]
	at org.springframework.util.Assert.state(Assert.java:79)
	at org.springframework.web.context.request.async.StandardServletAsyncWebRequest.startAsync(StandardServletAsyncWebRequest.java:157)
	at org.springframework.web.context.request.async.WebAsyncManager.startAsyncProcessing(WebAsyncManager.java:487)
	at org.springframework.web.context.request.async.WebAsyncManager.startDeferredResultProcessing(WebAsyncManager.java:462)
	at org.springframework.web.servlet.function.DefaultAsyncServerResponse.writeAsync(DefaultAsyncServerResponse.java:130)
	... 41 common frames omitted
2025-02-20 12:01:16 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [ae617030, L:/127.0.0.1:57578 ! R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0xae617030, L:/127.0.0.1:57578 ! R:localhost/127.0.0.1:8081]}, [disconnecting])
2025-02-20 12:02:36 [] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-02-20 12:02:36 [] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-02-20 12:02:38 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 3 thread-local buffer(s) from thread: reactor-http-nio-3
2025-02-20 12:02:38 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 5 thread-local buffer(s) from thread: reactor-http-nio-2
2025-02-20 12:02:42 [] DEBUG org.jboss.logging - Logging Provider: org.jboss.logging.Slf4jLoggerProvider found via system property
2025-02-20 12:02:42 [] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final
2025-02-20 12:02:42 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-02-20 12:02:42 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-02-20 12:02:42 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-02-20 12:02:42 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-02-20 12:02:42 [] DEBUG o.h.v.i.e.r.TraversableResolvers - Cannot find jakarta.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2025-02-20 12:02:42 [] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-02-20 12:02:42 [] INFO  c.c.c.g.c.CommongatewayApplication - Starting CommongatewayApplication using Java 17.0.12 with PID 23744 (E:\API-GATEWAY\commongateway\target\classes started by CITPL in E:\API-GATEWAY)
2025-02-20 12:02:42 [] DEBUG c.c.c.g.c.CommongatewayApplication - Running with Spring Boot v3.4.2, Spring v6.2.2
2025-02-20 12:02:42 [] INFO  c.c.c.g.c.CommongatewayApplication - No active profile set, falling back to 1 default profile: "default"
2025-02-20 12:02:42 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-02-20 12:02:42 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-02-20 12:02:42 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-02-20 12:02:42 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-02-20 12:02:42 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-02-20 12:02:42 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-02-20 12:02:43 [] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=50299984-946b-3bba-87da-3c9a1df8a676
2025-02-20 12:02:43 [] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-02-20 12:02:43 [] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-02-20 12:02:43 [] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-02-20 12:02:43 [] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.34]
2025-02-20 12:02:43 [] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-02-20 12:02:43 [] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1451 ms
2025-02-20 12:02:44 [] DEBUG i.n.u.i.l.InternalLoggerFactory - Using SLF4J as the default logging framework
2025-02-20 12:02:44 [] DEBUG i.n.util.internal.PlatformDependent0 - -Dio.netty.noUnsafe: false
2025-02-20 12:02:44 [] DEBUG i.n.util.internal.PlatformDependent0 - Java version: 17
2025-02-20 12:02:44 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe.theUnsafe: available
2025-02-20 12:02:44 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe base methods: all available
2025-02-20 12:02:44 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe.storeFence: available
2025-02-20 12:02:44 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.Buffer.address: available
2025-02-20 12:02:44 [] DEBUG i.n.util.internal.PlatformDependent0 - direct buffer constructor: unavailable: Reflective setAccessible(true) disabled
2025-02-20 12:02:44 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.Bits.unaligned: available, true
2025-02-20 12:02:44 [] DEBUG i.n.util.internal.PlatformDependent0 - jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable: class io.netty.util.internal.PlatformDependent0$7 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @7dc222ae
2025-02-20 12:02:44 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.DirectByteBuffer.<init>(long, {int,long}): unavailable
2025-02-20 12:02:44 [] DEBUG i.n.util.internal.PlatformDependent - sun.misc.Unsafe: available
2025-02-20 12:02:44 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.tmpdir: C:\Users\CITPL\AppData\Local\Temp (java.io.tmpdir)
2025-02-20 12:02:44 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.bitMode: 64 (sun.arch.data.model)
2025-02-20 12:02:44 [] DEBUG i.n.util.internal.PlatformDependent - Platform: Windows
2025-02-20 12:02:44 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.maxDirectMemory: -1 bytes
2025-02-20 12:02:44 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.uninitializedArrayAllocationThreshold: -1
2025-02-20 12:02:44 [] DEBUG io.netty.util.internal.CleanerJava9 - java.nio.ByteBuffer.cleaner(): available
2025-02-20 12:02:44 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.noPreferDirect: false
2025-02-20 12:02:44 [] DEBUG reactor.util.Loggers - Using Slf4j logging framework
2025-02-20 12:02:44 [] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-02-20 12:02:44 [] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2025-02-20 12:02:44 [] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2025-02-20 12:02:44 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-02-20 12:02:44 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via user class loader
2025-02-20 12:02:44 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-02-20 12:02:44 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-02-20 12:02:44 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-02-20 12:02:44 [] DEBUG o.h.v.i.e.r.TraversableResolvers - Cannot find jakarta.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2025-02-20 12:02:44 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-02-20 12:02:44 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-02-20 12:02:44 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-02-20 12:02:44 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-02-20 12:02:44 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-02-20 12:02:44 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-02-20 12:02:44 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	c.c.c.g.c.c.HomeController:
	{GET [/home]}: get()
2025-02-20 12:02:44 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2025-02-20 12:02:44 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 'beanNameHandlerMapping' {}
2025-02-20 12:02:44 [] DEBUG _.s.w.s.HandlerMapping.Mappings - Mapped com.citpl.common.gateway.commongateway.config.RouterConfiguration$$Lambda$895/0x000001bb9d4eda30@437ed416 -> com.citpl.common.gateway.commongateway.config.RouterConfiguration$$Lambda$896/0x000001bb9d4edc98@11f23038
2025-02-20 12:02:44 [] DEBUG _.s.w.s.HandlerMapping.Mappings - Mapped /validate/** -> ProxyExchangeHandlerFunction
/users/** -> ProxyExchangeHandlerFunction
2025-02-20 12:02:44 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2025-02-20 12:02:44 [] DEBUG i.n.u.i.InternalThreadLocalMap - -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2025-02-20 12:02:44 [] DEBUG i.n.u.i.InternalThreadLocalMap - -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2025-02-20 12:02:45 [] DEBUG io.netty.util.ResourceLeakDetector - -Dio.netty.leakDetection.level: simple
2025-02-20 12:02:45 [] DEBUG io.netty.util.ResourceLeakDetector - -Dio.netty.leakDetection.targetRecords: 4
2025-02-20 12:02:45 [] DEBUG i.n.handler.codec.compression.Brotli - brotli4j not in the classpath; Brotli support will be unavailable.
2025-02-20 12:02:45 [] DEBUG reactor.netty.tcp.TcpResources - [http] resources will use the default LoopResources: DefaultLoopResources {prefix=reactor-http, daemon=true, selectCount=12, workerCount=12}
2025-02-20 12:02:45 [] DEBUG reactor.netty.tcp.TcpResources - [http] resources will use the default ConnectionProvider: reactor.netty.resources.DefaultPooledConnectionProvider@4d0e1a9a
2025-02-20 12:02:45 [] DEBUG r.netty.resources.DefaultLoopIOUring - Default io_uring support : false
2025-02-20 12:02:45 [] DEBUG r.netty.resources.DefaultLoopEpoll - Default Epoll support : false
2025-02-20 12:02:45 [] DEBUG r.netty.resources.DefaultLoopKQueue - Default KQueue support : false
2025-02-20 12:02:45 [] DEBUG i.n.c.MultithreadEventLoopGroup - -Dio.netty.eventLoopThreads: 24
2025-02-20 12:02:45 [] DEBUG i.n.u.concurrent.GlobalEventExecutor - -Dio.netty.globalEventExecutor.quietPeriodSeconds: 1
2025-02-20 12:02:45 [] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.noKeySetOptimization: false
2025-02-20 12:02:45 [] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.selectorAutoRebuildThreshold: 512
2025-02-20 12:02:45 [] DEBUG i.n.util.internal.PlatformDependent - org.jctools-core.MpscChunkedArrayQueue: available
2025-02-20 12:02:45 [] DEBUG io.netty.util.NetUtil - -Djava.net.preferIPv4Stack: false
2025-02-20 12:02:45 [] DEBUG io.netty.util.NetUtil - -Djava.net.preferIPv6Addresses: false
2025-02-20 12:02:45 [] DEBUG i.netty.util.NetUtilInitializations - Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2025-02-20 12:02:45 [] DEBUG io.netty.util.NetUtil - Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2025-02-20 12:02:45 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default ResolvedAddressTypes: IPV4_ONLY
2025-02-20 12:02:45 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Localhost address: localhost/127.0.0.1
2025-02-20 12:02:45 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Windows hostname: DESKTOP-P307093
2025-02-20 12:02:45 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default search domains: []
2025-02-20 12:02:45 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default UnixResolverOptions{ndots=1, timeout=5, attempts=16}
2025-02-20 12:02:45 [] DEBUG i.n.r.DefaultHostsFileEntriesResolver - -Dio.netty.hostsFileRefreshInterval: 0
2025-02-20 12:02:45 [] DEBUG i.n.r.d.DefaultDnsServerAddressStreamProvider - Default DNS servers: [/8.8.8.8:53, /4.2.2.2:53] (sun.net.dns.ResolverConfiguration)
2025-02-20 12:02:45 [] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-02-20 12:02:45 [] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-02-20 12:02:45 [] INFO  c.c.c.g.c.CommongatewayApplication - Started CommongatewayApplication in 3.541 seconds (process running for 4.287)
2025-02-20 12:06:09 [] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-02-20 12:06:09 [] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-02-20 12:06:09 [] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-02-20 12:06:09 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-20 12:06:09 [8d3edfc0-5afe-46b8-b04b-17b6dbe74618] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-20 12:06:09 [8d3edfc0-5afe-46b8-b04b-17b6dbe74618] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-20 12:06:09 [8d3edfc0-5afe-46b8-b04b-17b6dbe74618] INFO  c.c.c.g.c.config.RouterConfiguration - Authorized Request!
2025-02-20 12:06:09 [8d3edfc0-5afe-46b8-b04b-17b6dbe74618] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [GET] /validate
2025-02-20 12:06:09 [8d3edfc0-5afe-46b8-b04b-17b6dbe74618] INFO  c.c.c.g.c.config.RouterConfiguration - Forwarding [GET] /validate to User Microservice
2025-02-20 12:06:09 [8d3edfc0-5afe-46b8-b04b-17b6dbe74618] DEBUG r.n.r.PooledConnectionProvider - Creating a new [http] client pool [PoolFactory{evictionInterval=PT0S, leasingStrategy=fifo, maxConnections=500, maxIdleTime=-1, maxLifeTime=-1, metricsEnabled=false, pendingAcquireMaxCount=1000, pendingAcquireTimeout=45000}] for [localhost/<unresolved>:8082]
2025-02-20 12:06:09 [8d3edfc0-5afe-46b8-b04b-17b6dbe74618] DEBUG io.netty.channel.DefaultChannelId - -Dio.netty.processId: 23744 (auto-detected)
2025-02-20 12:06:10 [8d3edfc0-5afe-46b8-b04b-17b6dbe74618] DEBUG io.netty.channel.DefaultChannelId - -Dio.netty.machineId: a0:d3:65:ff:fe:5e:b0:28 (auto-detected)
2025-02-20 12:06:10 [8d3edfc0-5afe-46b8-b04b-17b6dbe74618] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.numHeapArenas: 24
2025-02-20 12:06:10 [8d3edfc0-5afe-46b8-b04b-17b6dbe74618] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.numDirectArenas: 24
2025-02-20 12:06:10 [8d3edfc0-5afe-46b8-b04b-17b6dbe74618] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.pageSize: 8192
2025-02-20 12:06:10 [8d3edfc0-5afe-46b8-b04b-17b6dbe74618] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxOrder: 9
2025-02-20 12:06:10 [8d3edfc0-5afe-46b8-b04b-17b6dbe74618] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.chunkSize: 4194304
2025-02-20 12:06:10 [8d3edfc0-5afe-46b8-b04b-17b6dbe74618] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.smallCacheSize: 256
2025-02-20 12:06:10 [8d3edfc0-5afe-46b8-b04b-17b6dbe74618] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.normalCacheSize: 64
2025-02-20 12:06:10 [8d3edfc0-5afe-46b8-b04b-17b6dbe74618] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2025-02-20 12:06:10 [8d3edfc0-5afe-46b8-b04b-17b6dbe74618] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.cacheTrimInterval: 8192
2025-02-20 12:06:10 [8d3edfc0-5afe-46b8-b04b-17b6dbe74618] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.cacheTrimIntervalMillis: 0
2025-02-20 12:06:10 [8d3edfc0-5afe-46b8-b04b-17b6dbe74618] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.useCacheForAllThreads: false
2025-02-20 12:06:10 [8d3edfc0-5afe-46b8-b04b-17b6dbe74618] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
2025-02-20 12:06:10 [8d3edfc0-5afe-46b8-b04b-17b6dbe74618] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.disableCacheFinalizersForFastThreadLocalThreads: false
2025-02-20 12:06:10 [8d3edfc0-5afe-46b8-b04b-17b6dbe74618] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.allocator.type: pooled
2025-02-20 12:06:10 [8d3edfc0-5afe-46b8-b04b-17b6dbe74618] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.threadLocalDirectBufferSize: 0
2025-02-20 12:06:10 [8d3edfc0-5afe-46b8-b04b-17b6dbe74618] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.maxThreadLocalCharBufferSize: 16384
2025-02-20 12:06:10 [] DEBUG r.n.r.PooledConnectionProvider - [65c0513a] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 12:06:10 [] DEBUG io.netty.buffer.AbstractByteBuf - -Dio.netty.buffer.checkAccessible: true
2025-02-20 12:06:10 [] DEBUG io.netty.buffer.AbstractByteBuf - -Dio.netty.buffer.checkBounds: true
2025-02-20 12:06:10 [] DEBUG i.n.util.ResourceLeakDetectorFactory - Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@5bc05377
2025-02-20 12:06:10 [] DEBUG r.netty.transport.TransportConfig - [65c0513a] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-20 12:06:10 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 12:06:10 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 12:06:10 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 12:06:10 [] DEBUG i.n.b.ChannelInitializerExtensions - -Dio.netty.bootstrap.extensions: null
2025-02-20 12:06:10 [] DEBUG r.netty.transport.TransportConnector - [65c0513a] Connecting to [localhost/127.0.0.1:8082].
2025-02-20 12:06:10 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [65c0513a, L:/127.0.0.1:57698 - R:localhost/127.0.0.1:8082] Registering pool release on close event for channel
2025-02-20 12:06:10 [] DEBUG r.n.r.PooledConnectionProvider - [65c0513a, L:/127.0.0.1:57698 - R:localhost/127.0.0.1:8082] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 12:06:10 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [65c0513a, L:/127.0.0.1:57698 - R:localhost/127.0.0.1:8082] onStateChange(PooledConnection{channel=[id: 0x65c0513a, L:/127.0.0.1:57698 - R:localhost/127.0.0.1:8082]}, [connected])
2025-02-20 12:06:10 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [65c0513a-1, L:/127.0.0.1:57698 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0x65c0513a, L:/127.0.0.1:57698 - R:localhost/127.0.0.1:8082]}}, [configured])
2025-02-20 12:06:10 [] DEBUG r.n.http.client.HttpClientConnect - [65c0513a-1, L:/127.0.0.1:57698 - R:localhost/127.0.0.1:8082] Handler is being applied: {uri=http://localhost:8082/validate, method=GET}
2025-02-20 12:06:10 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [65c0513a-1, L:/127.0.0.1:57698 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x65c0513a, L:/127.0.0.1:57698 - R:localhost/127.0.0.1:8082]}}, [request_prepared])
2025-02-20 12:06:10 [] DEBUG r.n.http.client.HttpClientOperations - [65c0513a-1, L:/127.0.0.1:57698 - R:localhost/127.0.0.1:8082] No sendHeaders() called before complete, sending zero-length header
2025-02-20 12:06:10 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.maxCapacityPerThread: 4096
2025-02-20 12:06:10 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.ratio: 8
2025-02-20 12:06:10 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.chunkSize: 32
2025-02-20 12:06:10 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.blocking: false
2025-02-20 12:06:10 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.batchFastThreadLocalOnly: true
2025-02-20 12:06:10 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [65c0513a-1, L:/127.0.0.1:57698 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x65c0513a, L:/127.0.0.1:57698 - R:localhost/127.0.0.1:8082]}}, [request_sent])
2025-02-20 12:06:10 [] DEBUG i.n.handler.codec.compression.Zstd - zstd-jni not in the classpath; Zstd support will be unavailable.
2025-02-20 12:06:10 [] DEBUG r.n.http.client.HttpClientOperations - [65c0513a-1, L:/127.0.0.1:57698 - R:localhost/127.0.0.1:8082] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 404 
Vary: <filtered>
Vary: <filtered>
Vary: <filtered>
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-20 12:06:10 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [65c0513a-1, L:/127.0.0.1:57698 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x65c0513a, L:/127.0.0.1:57698 - R:localhost/127.0.0.1:8082]}}, [response_received])
2025-02-20 12:06:10 [] DEBUG reactor.netty.channel.FluxReceive - [65c0513a-1, L:/127.0.0.1:57698 - R:localhost/127.0.0.1:8082] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 12:06:10 [] DEBUG r.n.http.client.HttpClientOperations - [65c0513a-1, L:/127.0.0.1:57698 - R:localhost/127.0.0.1:8082] Received last HTTP packet
2025-02-20 12:06:10 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [65c0513a, L:/127.0.0.1:57698 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x65c0513a, L:/127.0.0.1:57698 - R:localhost/127.0.0.1:8082]}}, [response_completed])
2025-02-20 12:06:10 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [65c0513a, L:/127.0.0.1:57698 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x65c0513a, L:/127.0.0.1:57698 - R:localhost/127.0.0.1:8082]}}, [disconnecting])
2025-02-20 12:06:10 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [65c0513a, L:/127.0.0.1:57698 - R:localhost/127.0.0.1:8082] Releasing channel
2025-02-20 12:06:10 [] DEBUG r.n.r.PooledConnectionProvider - [65c0513a, L:/127.0.0.1:57698 - R:localhost/127.0.0.1:8082] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-20 12:06:10 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] threw exception
org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 404 NOT_FOUND from GET http://localhost:8082/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 12:06:10 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate] with root cause
org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 404 NOT_FOUND from GET http://localhost:8082/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 12:06:10 [] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-20 12:06:10 [] INFO  c.c.c.g.c.config.RouterConfiguration - Authorized Request!
2025-02-20 12:06:10 [] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [GET] /error
2025-02-20 12:06:10 [] INFO  c.c.c.g.c.config.RouterConfiguration - Forwarding [GET] /error to User Microservice
2025-02-20 12:06:10 [] DEBUG r.n.r.PooledConnectionProvider - [65c0513a, L:/127.0.0.1:57698 - R:localhost/127.0.0.1:8082] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 12:06:10 [] DEBUG r.n.http.client.HttpClientConnect - [65c0513a-2, L:/127.0.0.1:57698 - R:localhost/127.0.0.1:8082] Handler is being applied: {uri=http://localhost:8082/error, method=GET}
2025-02-20 12:06:10 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [65c0513a-2, L:/127.0.0.1:57698 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0x65c0513a, L:/127.0.0.1:57698 - R:localhost/127.0.0.1:8082]}}, [request_prepared])
2025-02-20 12:06:10 [] DEBUG r.n.http.client.HttpClientOperations - [65c0513a-2, L:/127.0.0.1:57698 - R:localhost/127.0.0.1:8082] No sendHeaders() called before complete, sending zero-length header
2025-02-20 12:06:10 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [65c0513a-2, L:/127.0.0.1:57698 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0x65c0513a, L:/127.0.0.1:57698 - R:localhost/127.0.0.1:8082]}}, [request_sent])
2025-02-20 12:06:10 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] threw exception
org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 404 NOT_FOUND from GET http://localhost:8082/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 12:06:10 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate] with root cause
org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 404 NOT_FOUND from GET http://localhost:8082/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 12:06:10 [] DEBUG r.n.http.client.HttpClientOperations - [65c0513a-2, L:/127.0.0.1:57698 - R:localhost/127.0.0.1:8082] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 500 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
Connection: <filtered>
2025-02-20 12:06:10 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [65c0513a-2, L:/127.0.0.1:57698 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0x65c0513a, L:/127.0.0.1:57698 - R:localhost/127.0.0.1:8082]}}, [response_received])
2025-02-20 12:06:10 [] DEBUG reactor.netty.channel.FluxReceive - [65c0513a-2, L:/127.0.0.1:57698 - R:localhost/127.0.0.1:8082] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 12:06:10 [] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-20 12:06:10 [] DEBUG r.n.http.client.HttpClientOperations - [65c0513a-2, L:/127.0.0.1:57698 - R:localhost/127.0.0.1:8082] Received last HTTP packet
2025-02-20 12:06:10 [] INFO  c.c.c.g.c.config.RouterConfiguration - Authorized Request!
2025-02-20 12:06:10 [] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [GET] /error
2025-02-20 12:06:10 [] INFO  c.c.c.g.c.config.RouterConfiguration - Forwarding [GET] /error to User Microservice
2025-02-20 12:06:10 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [65c0513a, L:/127.0.0.1:57698 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0x65c0513a, L:/127.0.0.1:57698 - R:localhost/127.0.0.1:8082]}}, [response_completed])
2025-02-20 12:06:10 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [65c0513a, L:/127.0.0.1:57698 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0x65c0513a, L:/127.0.0.1:57698 - R:localhost/127.0.0.1:8082]}}, [disconnecting])
2025-02-20 12:06:10 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] threw exception
java.lang.IllegalStateException: Cannot start async: [ERROR]
	at org.springframework.util.Assert.state(Assert.java:79)
	at org.springframework.web.context.request.async.StandardServletAsyncWebRequest.startAsync(StandardServletAsyncWebRequest.java:157)
	at org.springframework.web.context.request.async.WebAsyncManager.startAsyncProcessing(WebAsyncManager.java:487)
	at org.springframework.web.context.request.async.WebAsyncManager.startDeferredResultProcessing(WebAsyncManager.java:462)
	at org.springframework.web.servlet.function.DefaultAsyncServerResponse.writeAsync(DefaultAsyncServerResponse.java:130)
	at org.springframework.web.servlet.function.DefaultEntityResponseBuilder$PublisherEntityResponse.writeToInternal(DefaultEntityResponseBuilder.java:429)
	at org.springframework.web.servlet.function.AbstractServerResponse.writeTo(AbstractServerResponse.java:101)
	at org.springframework.web.servlet.function.support.HandlerFunctionAdapter.handle(HandlerFunctionAdapter.java:112)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:633)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:511)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:454)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:361)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:208)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:285)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:149)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:239)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:243)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:57)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 12:06:10 [] ERROR o.a.c.c.C.[Tomcat].[localhost] - Exception Processing [ErrorPage[errorCode=0, location=/error]]
jakarta.servlet.ServletException: Async processing failed
	at org.springframework.web.servlet.function.DefaultAsyncServerResponse.writeAsync(DefaultAsyncServerResponse.java:136)
	at org.springframework.web.servlet.function.DefaultEntityResponseBuilder$PublisherEntityResponse.writeToInternal(DefaultEntityResponseBuilder.java:429)
	at org.springframework.web.servlet.function.AbstractServerResponse.writeTo(AbstractServerResponse.java:101)
	at org.springframework.web.servlet.function.support.HandlerFunctionAdapter.handle(HandlerFunctionAdapter.java:112)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:633)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:511)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:454)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:361)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:208)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:285)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:149)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:239)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:243)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:57)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: java.lang.IllegalStateException: Cannot start async: [ERROR]
	at org.springframework.util.Assert.state(Assert.java:79)
	at org.springframework.web.context.request.async.StandardServletAsyncWebRequest.startAsync(StandardServletAsyncWebRequest.java:157)
	at org.springframework.web.context.request.async.WebAsyncManager.startAsyncProcessing(WebAsyncManager.java:487)
	at org.springframework.web.context.request.async.WebAsyncManager.startDeferredResultProcessing(WebAsyncManager.java:462)
	at org.springframework.web.servlet.function.DefaultAsyncServerResponse.writeAsync(DefaultAsyncServerResponse.java:130)
	... 41 common frames omitted
2025-02-20 12:06:10 [] DEBUG r.n.r.PooledConnectionProvider - [65c0513a, L:/127.0.0.1:57698 ! R:localhost/127.0.0.1:8082] Channel closed, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 12:06:10 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [65c0513a, L:/127.0.0.1:57698 ! R:localhost/127.0.0.1:8082] onStateChange(PooledConnection{channel=[id: 0x65c0513a, L:/127.0.0.1:57698 ! R:localhost/127.0.0.1:8082]}, [disconnecting])
2025-02-20 12:09:51 [] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-02-20 12:09:51 [] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-02-20 12:09:53 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 3 thread-local buffer(s) from thread: reactor-http-nio-2
2025-02-20 12:09:57 [] DEBUG org.jboss.logging - Logging Provider: org.jboss.logging.Slf4jLoggerProvider found via system property
2025-02-20 12:09:57 [] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final
2025-02-20 12:09:58 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-02-20 12:09:58 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-02-20 12:09:58 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-02-20 12:09:58 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-02-20 12:09:58 [] DEBUG o.h.v.i.e.r.TraversableResolvers - Cannot find jakarta.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2025-02-20 12:09:58 [] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-02-20 12:09:58 [] INFO  c.c.c.g.c.CommongatewayApplication - Starting CommongatewayApplication using Java 17.0.12 with PID 4616 (E:\API-GATEWAY\commongateway\target\classes started by CITPL in E:\API-GATEWAY)
2025-02-20 12:09:58 [] DEBUG c.c.c.g.c.CommongatewayApplication - Running with Spring Boot v3.4.2, Spring v6.2.2
2025-02-20 12:09:58 [] INFO  c.c.c.g.c.CommongatewayApplication - No active profile set, falling back to 1 default profile: "default"
2025-02-20 12:09:58 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-02-20 12:09:58 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-02-20 12:09:58 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-02-20 12:09:58 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-02-20 12:09:58 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-02-20 12:09:58 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-02-20 12:09:59 [] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=50299984-946b-3bba-87da-3c9a1df8a676
2025-02-20 12:09:59 [] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-02-20 12:09:59 [] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-02-20 12:09:59 [] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-02-20 12:09:59 [] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.34]
2025-02-20 12:09:59 [] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-02-20 12:09:59 [] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1466 ms
2025-02-20 12:09:59 [] DEBUG i.n.u.i.l.InternalLoggerFactory - Using SLF4J as the default logging framework
2025-02-20 12:09:59 [] DEBUG i.n.util.internal.PlatformDependent0 - -Dio.netty.noUnsafe: false
2025-02-20 12:09:59 [] DEBUG i.n.util.internal.PlatformDependent0 - Java version: 17
2025-02-20 12:09:59 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe.theUnsafe: available
2025-02-20 12:09:59 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe base methods: all available
2025-02-20 12:09:59 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe.storeFence: available
2025-02-20 12:09:59 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.Buffer.address: available
2025-02-20 12:09:59 [] DEBUG i.n.util.internal.PlatformDependent0 - direct buffer constructor: unavailable: Reflective setAccessible(true) disabled
2025-02-20 12:09:59 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.Bits.unaligned: available, true
2025-02-20 12:09:59 [] DEBUG i.n.util.internal.PlatformDependent0 - jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable: class io.netty.util.internal.PlatformDependent0$7 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @7dc222ae
2025-02-20 12:09:59 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.DirectByteBuffer.<init>(long, {int,long}): unavailable
2025-02-20 12:09:59 [] DEBUG i.n.util.internal.PlatformDependent - sun.misc.Unsafe: available
2025-02-20 12:09:59 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.tmpdir: C:\Users\CITPL\AppData\Local\Temp (java.io.tmpdir)
2025-02-20 12:09:59 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.bitMode: 64 (sun.arch.data.model)
2025-02-20 12:09:59 [] DEBUG i.n.util.internal.PlatformDependent - Platform: Windows
2025-02-20 12:09:59 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.maxDirectMemory: -1 bytes
2025-02-20 12:09:59 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.uninitializedArrayAllocationThreshold: -1
2025-02-20 12:09:59 [] DEBUG io.netty.util.internal.CleanerJava9 - java.nio.ByteBuffer.cleaner(): available
2025-02-20 12:09:59 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.noPreferDirect: false
2025-02-20 12:09:59 [] DEBUG reactor.util.Loggers - Using Slf4j logging framework
2025-02-20 12:09:59 [] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-02-20 12:09:59 [] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2025-02-20 12:09:59 [] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2025-02-20 12:09:59 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-02-20 12:09:59 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via user class loader
2025-02-20 12:09:59 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-02-20 12:09:59 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-02-20 12:09:59 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-02-20 12:09:59 [] DEBUG o.h.v.i.e.r.TraversableResolvers - Cannot find jakarta.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2025-02-20 12:09:59 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-02-20 12:09:59 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-02-20 12:09:59 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-02-20 12:09:59 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-02-20 12:09:59 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-02-20 12:09:59 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-02-20 12:10:00 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	c.c.c.g.c.c.HomeController:
	{GET [/home]}: get()
2025-02-20 12:10:00 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2025-02-20 12:10:00 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 'beanNameHandlerMapping' {}
2025-02-20 12:10:00 [] DEBUG _.s.w.s.HandlerMapping.Mappings - Mapped com.citpl.common.gateway.commongateway.config.RouterConfiguration$$Lambda$895/0x000002c9e64efd78@50598a1a -> com.citpl.common.gateway.commongateway.config.RouterConfiguration$$Lambda$896/0x000002c9e64f0000@14de1901
2025-02-20 12:10:00 [] DEBUG _.s.w.s.HandlerMapping.Mappings - Mapped /validate/** -> ProxyExchangeHandlerFunction
/users/** -> ProxyExchangeHandlerFunction
2025-02-20 12:10:00 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2025-02-20 12:10:00 [] DEBUG i.n.u.i.InternalThreadLocalMap - -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2025-02-20 12:10:00 [] DEBUG i.n.u.i.InternalThreadLocalMap - -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2025-02-20 12:10:00 [] DEBUG io.netty.util.ResourceLeakDetector - -Dio.netty.leakDetection.level: simple
2025-02-20 12:10:00 [] DEBUG io.netty.util.ResourceLeakDetector - -Dio.netty.leakDetection.targetRecords: 4
2025-02-20 12:10:00 [] DEBUG i.n.handler.codec.compression.Brotli - brotli4j not in the classpath; Brotli support will be unavailable.
2025-02-20 12:10:00 [] DEBUG reactor.netty.tcp.TcpResources - [http] resources will use the default LoopResources: DefaultLoopResources {prefix=reactor-http, daemon=true, selectCount=12, workerCount=12}
2025-02-20 12:10:00 [] DEBUG reactor.netty.tcp.TcpResources - [http] resources will use the default ConnectionProvider: reactor.netty.resources.DefaultPooledConnectionProvider@b5c902
2025-02-20 12:10:00 [] DEBUG r.netty.resources.DefaultLoopIOUring - Default io_uring support : false
2025-02-20 12:10:00 [] DEBUG r.netty.resources.DefaultLoopEpoll - Default Epoll support : false
2025-02-20 12:10:00 [] DEBUG r.netty.resources.DefaultLoopKQueue - Default KQueue support : false
2025-02-20 12:10:00 [] DEBUG i.n.c.MultithreadEventLoopGroup - -Dio.netty.eventLoopThreads: 24
2025-02-20 12:10:00 [] DEBUG i.n.u.concurrent.GlobalEventExecutor - -Dio.netty.globalEventExecutor.quietPeriodSeconds: 1
2025-02-20 12:10:00 [] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.noKeySetOptimization: false
2025-02-20 12:10:00 [] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.selectorAutoRebuildThreshold: 512
2025-02-20 12:10:00 [] DEBUG i.n.util.internal.PlatformDependent - org.jctools-core.MpscChunkedArrayQueue: available
2025-02-20 12:10:00 [] DEBUG io.netty.util.NetUtil - -Djava.net.preferIPv4Stack: false
2025-02-20 12:10:00 [] DEBUG io.netty.util.NetUtil - -Djava.net.preferIPv6Addresses: false
2025-02-20 12:10:00 [] DEBUG i.netty.util.NetUtilInitializations - Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2025-02-20 12:10:00 [] DEBUG io.netty.util.NetUtil - Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2025-02-20 12:10:00 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default ResolvedAddressTypes: IPV4_ONLY
2025-02-20 12:10:00 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Localhost address: localhost/127.0.0.1
2025-02-20 12:10:00 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Windows hostname: DESKTOP-P307093
2025-02-20 12:10:00 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default search domains: []
2025-02-20 12:10:00 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default UnixResolverOptions{ndots=1, timeout=5, attempts=16}
2025-02-20 12:10:00 [] DEBUG i.n.r.DefaultHostsFileEntriesResolver - -Dio.netty.hostsFileRefreshInterval: 0
2025-02-20 12:10:00 [] DEBUG i.n.r.d.DefaultDnsServerAddressStreamProvider - Default DNS servers: [/8.8.8.8:53, /4.2.2.2:53] (sun.net.dns.ResolverConfiguration)
2025-02-20 12:10:00 [] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-02-20 12:10:00 [] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-02-20 12:10:01 [] INFO  c.c.c.g.c.CommongatewayApplication - Started CommongatewayApplication in 3.644 seconds (process running for 4.41)
2025-02-20 12:10:07 [] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-02-20 12:10:07 [] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-02-20 12:10:07 [] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-02-20 12:10:07 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-20 12:10:07 [1a642cca-6122-4815-ad35-84b38414d738] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-20 12:10:07 [1a642cca-6122-4815-ad35-84b38414d738] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-20 12:10:07 [1a642cca-6122-4815-ad35-84b38414d738] INFO  c.c.c.g.c.config.RouterConfiguration - Authorized Request!
2025-02-20 12:10:07 [1a642cca-6122-4815-ad35-84b38414d738] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [GET] /validate
2025-02-20 12:10:07 [1a642cca-6122-4815-ad35-84b38414d738] DEBUG r.n.r.PooledConnectionProvider - Creating a new [http] client pool [PoolFactory{evictionInterval=PT0S, leasingStrategy=fifo, maxConnections=500, maxIdleTime=-1, maxLifeTime=-1, metricsEnabled=false, pendingAcquireMaxCount=1000, pendingAcquireTimeout=45000}] for [localhost/<unresolved>:8081]
2025-02-20 12:10:07 [1a642cca-6122-4815-ad35-84b38414d738] DEBUG io.netty.channel.DefaultChannelId - -Dio.netty.processId: 4616 (auto-detected)
2025-02-20 12:10:07 [1a642cca-6122-4815-ad35-84b38414d738] DEBUG io.netty.channel.DefaultChannelId - -Dio.netty.machineId: a0:d3:65:ff:fe:5e:b0:28 (auto-detected)
2025-02-20 12:10:07 [1a642cca-6122-4815-ad35-84b38414d738] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.numHeapArenas: 24
2025-02-20 12:10:07 [1a642cca-6122-4815-ad35-84b38414d738] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.numDirectArenas: 24
2025-02-20 12:10:07 [1a642cca-6122-4815-ad35-84b38414d738] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.pageSize: 8192
2025-02-20 12:10:07 [1a642cca-6122-4815-ad35-84b38414d738] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxOrder: 9
2025-02-20 12:10:07 [1a642cca-6122-4815-ad35-84b38414d738] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.chunkSize: 4194304
2025-02-20 12:10:07 [1a642cca-6122-4815-ad35-84b38414d738] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.smallCacheSize: 256
2025-02-20 12:10:07 [1a642cca-6122-4815-ad35-84b38414d738] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.normalCacheSize: 64
2025-02-20 12:10:07 [1a642cca-6122-4815-ad35-84b38414d738] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2025-02-20 12:10:07 [1a642cca-6122-4815-ad35-84b38414d738] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.cacheTrimInterval: 8192
2025-02-20 12:10:07 [1a642cca-6122-4815-ad35-84b38414d738] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.cacheTrimIntervalMillis: 0
2025-02-20 12:10:07 [1a642cca-6122-4815-ad35-84b38414d738] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.useCacheForAllThreads: false
2025-02-20 12:10:07 [1a642cca-6122-4815-ad35-84b38414d738] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
2025-02-20 12:10:07 [1a642cca-6122-4815-ad35-84b38414d738] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.disableCacheFinalizersForFastThreadLocalThreads: false
2025-02-20 12:10:07 [1a642cca-6122-4815-ad35-84b38414d738] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.allocator.type: pooled
2025-02-20 12:10:07 [1a642cca-6122-4815-ad35-84b38414d738] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.threadLocalDirectBufferSize: 0
2025-02-20 12:10:07 [1a642cca-6122-4815-ad35-84b38414d738] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.maxThreadLocalCharBufferSize: 16384
2025-02-20 12:10:07 [] DEBUG r.n.r.PooledConnectionProvider - [d029a10e] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 12:10:07 [] DEBUG io.netty.buffer.AbstractByteBuf - -Dio.netty.buffer.checkAccessible: true
2025-02-20 12:10:07 [] DEBUG io.netty.buffer.AbstractByteBuf - -Dio.netty.buffer.checkBounds: true
2025-02-20 12:10:07 [] DEBUG i.n.util.ResourceLeakDetectorFactory - Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@2e34893
2025-02-20 12:10:07 [] DEBUG r.netty.transport.TransportConfig - [d029a10e] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-20 12:10:07 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 12:10:07 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 12:10:07 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 12:10:07 [] DEBUG i.n.b.ChannelInitializerExtensions - -Dio.netty.bootstrap.extensions: null
2025-02-20 12:10:07 [] DEBUG r.netty.transport.TransportConnector - [d029a10e] Connecting to [localhost/127.0.0.1:8081].
2025-02-20 12:10:07 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [d029a10e, L:/127.0.0.1:57777 - R:localhost/127.0.0.1:8081] Registering pool release on close event for channel
2025-02-20 12:10:07 [] DEBUG r.n.r.PooledConnectionProvider - [d029a10e, L:/127.0.0.1:57777 - R:localhost/127.0.0.1:8081] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 12:10:07 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [d029a10e, L:/127.0.0.1:57777 - R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0xd029a10e, L:/127.0.0.1:57777 - R:localhost/127.0.0.1:8081]}, [connected])
2025-02-20 12:10:07 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [d029a10e-1, L:/127.0.0.1:57777 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0xd029a10e, L:/127.0.0.1:57777 - R:localhost/127.0.0.1:8081]}}, [configured])
2025-02-20 12:10:07 [] DEBUG r.n.http.client.HttpClientConnect - [d029a10e-1, L:/127.0.0.1:57777 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate, method=GET}
2025-02-20 12:10:07 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [d029a10e-1, L:/127.0.0.1:57777 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xd029a10e, L:/127.0.0.1:57777 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-20 12:10:07 [] DEBUG r.n.http.client.HttpClientOperations - [d029a10e-1, L:/127.0.0.1:57777 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-20 12:10:07 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.maxCapacityPerThread: 4096
2025-02-20 12:10:07 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.ratio: 8
2025-02-20 12:10:07 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.chunkSize: 32
2025-02-20 12:10:07 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.blocking: false
2025-02-20 12:10:07 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.batchFastThreadLocalOnly: true
2025-02-20 12:10:07 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [d029a10e-1, L:/127.0.0.1:57777 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xd029a10e, L:/127.0.0.1:57777 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-20 12:10:07 [] DEBUG i.n.handler.codec.compression.Zstd - zstd-jni not in the classpath; Zstd support will be unavailable.
2025-02-20 12:10:07 [] DEBUG r.n.http.client.HttpClientOperations - [d029a10e-1, L:/127.0.0.1:57777 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-20 12:10:07 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [d029a10e-1, L:/127.0.0.1:57777 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xd029a10e, L:/127.0.0.1:57777 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-20 12:10:07 [] DEBUG reactor.netty.channel.FluxReceive - [d029a10e-1, L:/127.0.0.1:57777 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 12:10:07 [] DEBUG r.n.http.client.HttpClientOperations - [d029a10e-1, L:/127.0.0.1:57777 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-20 12:10:07 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [d029a10e, L:/127.0.0.1:57777 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xd029a10e, L:/127.0.0.1:57777 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-20 12:10:07 [1a642cca-6122-4815-ad35-84b38414d738] INFO  c.c.c.g.c.config.RouterConfiguration - Validation Response: true
2025-02-20 12:10:07 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [d029a10e, L:/127.0.0.1:57777 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xd029a10e, L:/127.0.0.1:57777 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-20 12:10:07 [1a642cca-6122-4815-ad35-84b38414d738] INFO  c.c.c.g.c.config.RouterConfiguration - Forwarding [GET] /validate to User Microservice
2025-02-20 12:10:07 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [d029a10e, L:/127.0.0.1:57777 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-20 12:10:07 [] DEBUG r.n.r.PooledConnectionProvider - [d029a10e, L:/127.0.0.1:57777 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-20 12:10:07 [1a642cca-6122-4815-ad35-84b38414d738] DEBUG r.n.r.PooledConnectionProvider - Creating a new [http] client pool [PoolFactory{evictionInterval=PT0S, leasingStrategy=fifo, maxConnections=500, maxIdleTime=-1, maxLifeTime=-1, metricsEnabled=false, pendingAcquireMaxCount=1000, pendingAcquireTimeout=45000}] for [localhost/<unresolved>:8082]
2025-02-20 12:10:07 [] DEBUG r.n.r.PooledConnectionProvider - [67fcf8d9] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 12:10:07 [] DEBUG r.netty.transport.TransportConfig - [67fcf8d9] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-20 12:10:07 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 12:10:07 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 12:10:07 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 12:10:07 [] DEBUG r.netty.transport.TransportConnector - [67fcf8d9] Connecting to [localhost/127.0.0.1:8082].
2025-02-20 12:10:07 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [67fcf8d9, L:/127.0.0.1:57778 - R:localhost/127.0.0.1:8082] Registering pool release on close event for channel
2025-02-20 12:10:07 [] DEBUG r.n.r.PooledConnectionProvider - [67fcf8d9, L:/127.0.0.1:57778 - R:localhost/127.0.0.1:8082] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 12:10:07 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [67fcf8d9, L:/127.0.0.1:57778 - R:localhost/127.0.0.1:8082] onStateChange(PooledConnection{channel=[id: 0x67fcf8d9, L:/127.0.0.1:57778 - R:localhost/127.0.0.1:8082]}, [connected])
2025-02-20 12:10:07 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [67fcf8d9-1, L:/127.0.0.1:57778 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0x67fcf8d9, L:/127.0.0.1:57778 - R:localhost/127.0.0.1:8082]}}, [configured])
2025-02-20 12:10:07 [] DEBUG r.n.http.client.HttpClientConnect - [67fcf8d9-1, L:/127.0.0.1:57778 - R:localhost/127.0.0.1:8082] Handler is being applied: {uri=http://localhost:8082/validate, method=GET}
2025-02-20 12:10:07 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [67fcf8d9-1, L:/127.0.0.1:57778 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x67fcf8d9, L:/127.0.0.1:57778 - R:localhost/127.0.0.1:8082]}}, [request_prepared])
2025-02-20 12:10:07 [] DEBUG r.n.http.client.HttpClientOperations - [67fcf8d9-1, L:/127.0.0.1:57778 - R:localhost/127.0.0.1:8082] No sendHeaders() called before complete, sending zero-length header
2025-02-20 12:10:07 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [67fcf8d9-1, L:/127.0.0.1:57778 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x67fcf8d9, L:/127.0.0.1:57778 - R:localhost/127.0.0.1:8082]}}, [request_sent])
2025-02-20 12:10:07 [] DEBUG r.n.http.client.HttpClientOperations - [67fcf8d9-1, L:/127.0.0.1:57778 - R:localhost/127.0.0.1:8082] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 404 
Vary: <filtered>
Vary: <filtered>
Vary: <filtered>
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-20 12:10:07 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [67fcf8d9-1, L:/127.0.0.1:57778 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x67fcf8d9, L:/127.0.0.1:57778 - R:localhost/127.0.0.1:8082]}}, [response_received])
2025-02-20 12:10:07 [] DEBUG reactor.netty.channel.FluxReceive - [67fcf8d9-1, L:/127.0.0.1:57778 - R:localhost/127.0.0.1:8082] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 12:10:07 [] DEBUG r.n.http.client.HttpClientOperations - [67fcf8d9-1, L:/127.0.0.1:57778 - R:localhost/127.0.0.1:8082] Received last HTTP packet
2025-02-20 12:10:07 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [67fcf8d9, L:/127.0.0.1:57778 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x67fcf8d9, L:/127.0.0.1:57778 - R:localhost/127.0.0.1:8082]}}, [response_completed])
2025-02-20 12:10:07 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [67fcf8d9, L:/127.0.0.1:57778 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x67fcf8d9, L:/127.0.0.1:57778 - R:localhost/127.0.0.1:8082]}}, [disconnecting])
2025-02-20 12:10:07 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [67fcf8d9, L:/127.0.0.1:57778 - R:localhost/127.0.0.1:8082] Releasing channel
2025-02-20 12:10:07 [] DEBUG r.n.r.PooledConnectionProvider - [67fcf8d9, L:/127.0.0.1:57778 - R:localhost/127.0.0.1:8082] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-20 12:10:07 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] threw exception
org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 404 NOT_FOUND from GET http://localhost:8082/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 12:10:07 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate] with root cause
org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 404 NOT_FOUND from GET http://localhost:8082/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 12:10:07 [] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-20 12:10:07 [] INFO  c.c.c.g.c.config.RouterConfiguration - Authorized Request!
2025-02-20 12:10:07 [] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [GET] /error
2025-02-20 12:10:07 [] DEBUG r.n.r.PooledConnectionProvider - [d029a10e, L:/127.0.0.1:57777 - R:localhost/127.0.0.1:8081] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 12:10:07 [] DEBUG r.n.http.client.HttpClientConnect - [d029a10e-2, L:/127.0.0.1:57777 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate, method=GET}
2025-02-20 12:10:07 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [d029a10e-2, L:/127.0.0.1:57777 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xd029a10e, L:/127.0.0.1:57777 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-20 12:10:07 [] DEBUG r.n.http.client.HttpClientOperations - [d029a10e-2, L:/127.0.0.1:57777 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-20 12:10:07 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [d029a10e-2, L:/127.0.0.1:57777 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xd029a10e, L:/127.0.0.1:57777 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-20 12:10:07 [] DEBUG r.n.http.client.HttpClientOperations - [d029a10e-2, L:/127.0.0.1:57777 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-20 12:10:07 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [d029a10e-2, L:/127.0.0.1:57777 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xd029a10e, L:/127.0.0.1:57777 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-20 12:10:07 [] DEBUG reactor.netty.channel.FluxReceive - [d029a10e-2, L:/127.0.0.1:57777 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 12:10:07 [] DEBUG r.n.http.client.HttpClientOperations - [d029a10e-2, L:/127.0.0.1:57777 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-20 12:10:07 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [d029a10e, L:/127.0.0.1:57777 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xd029a10e, L:/127.0.0.1:57777 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-20 12:10:07 [] INFO  c.c.c.g.c.config.RouterConfiguration - Validation Response: true
2025-02-20 12:10:07 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [d029a10e, L:/127.0.0.1:57777 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xd029a10e, L:/127.0.0.1:57777 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-20 12:10:07 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [d029a10e, L:/127.0.0.1:57777 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-20 12:10:07 [] INFO  c.c.c.g.c.config.RouterConfiguration - Forwarding [GET] /error to User Microservice
2025-02-20 12:10:07 [] DEBUG r.n.r.PooledConnectionProvider - [d029a10e, L:/127.0.0.1:57777 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-20 12:10:07 [] DEBUG r.n.r.PooledConnectionProvider - [67fcf8d9, L:/127.0.0.1:57778 - R:localhost/127.0.0.1:8082] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 12:10:07 [] DEBUG r.n.http.client.HttpClientConnect - [67fcf8d9-2, L:/127.0.0.1:57778 - R:localhost/127.0.0.1:8082] Handler is being applied: {uri=http://localhost:8082/error, method=GET}
2025-02-20 12:10:07 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [67fcf8d9-2, L:/127.0.0.1:57778 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0x67fcf8d9, L:/127.0.0.1:57778 - R:localhost/127.0.0.1:8082]}}, [request_prepared])
2025-02-20 12:10:07 [] DEBUG r.n.http.client.HttpClientOperations - [67fcf8d9-2, L:/127.0.0.1:57778 - R:localhost/127.0.0.1:8082] No sendHeaders() called before complete, sending zero-length header
2025-02-20 12:10:07 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [67fcf8d9-2, L:/127.0.0.1:57778 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0x67fcf8d9, L:/127.0.0.1:57778 - R:localhost/127.0.0.1:8082]}}, [request_sent])
2025-02-20 12:10:07 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] threw exception
org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 404 NOT_FOUND from GET http://localhost:8082/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 12:10:07 [] DEBUG r.n.http.client.HttpClientOperations - [67fcf8d9-2, L:/127.0.0.1:57778 - R:localhost/127.0.0.1:8082] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 500 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
Connection: <filtered>
2025-02-20 12:10:07 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [67fcf8d9-2, L:/127.0.0.1:57778 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0x67fcf8d9, L:/127.0.0.1:57778 - R:localhost/127.0.0.1:8082]}}, [response_received])
2025-02-20 12:10:07 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate] with root cause
org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 404 NOT_FOUND from GET http://localhost:8082/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 12:10:07 [] DEBUG reactor.netty.channel.FluxReceive - [67fcf8d9-2, L:/127.0.0.1:57778 - R:localhost/127.0.0.1:8082] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 12:10:07 [] DEBUG r.n.http.client.HttpClientOperations - [67fcf8d9-2, L:/127.0.0.1:57778 - R:localhost/127.0.0.1:8082] Received last HTTP packet
2025-02-20 12:10:07 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [67fcf8d9, L:/127.0.0.1:57778 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0x67fcf8d9, L:/127.0.0.1:57778 - R:localhost/127.0.0.1:8082]}}, [response_completed])
2025-02-20 12:10:07 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [67fcf8d9, L:/127.0.0.1:57778 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0x67fcf8d9, L:/127.0.0.1:57778 - R:localhost/127.0.0.1:8082]}}, [disconnecting])
2025-02-20 12:10:07 [] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-20 12:10:07 [] INFO  c.c.c.g.c.config.RouterConfiguration - Authorized Request!
2025-02-20 12:10:07 [] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [GET] /error
2025-02-20 12:10:07 [] DEBUG r.n.r.PooledConnectionProvider - [67fcf8d9, L:/127.0.0.1:57778 ! R:localhost/127.0.0.1:8082] Channel closed, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 12:10:07 [] DEBUG r.n.r.PooledConnectionProvider - [d029a10e, L:/127.0.0.1:57777 - R:localhost/127.0.0.1:8081] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 12:10:07 [] DEBUG r.n.http.client.HttpClientConnect - [d029a10e-3, L:/127.0.0.1:57777 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate, method=GET}
2025-02-20 12:10:07 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [d029a10e-3, L:/127.0.0.1:57777 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xd029a10e, L:/127.0.0.1:57777 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-20 12:10:07 [] DEBUG r.n.http.client.HttpClientOperations - [d029a10e-3, L:/127.0.0.1:57777 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-20 12:10:07 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [67fcf8d9, L:/127.0.0.1:57778 ! R:localhost/127.0.0.1:8082] onStateChange(PooledConnection{channel=[id: 0x67fcf8d9, L:/127.0.0.1:57778 ! R:localhost/127.0.0.1:8082]}, [disconnecting])
2025-02-20 12:10:07 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [d029a10e-3, L:/127.0.0.1:57777 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xd029a10e, L:/127.0.0.1:57777 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-20 12:10:07 [] DEBUG r.n.http.client.HttpClientOperations - [d029a10e-3, L:/127.0.0.1:57777 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-20 12:10:07 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [d029a10e-3, L:/127.0.0.1:57777 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xd029a10e, L:/127.0.0.1:57777 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-20 12:10:07 [] DEBUG reactor.netty.channel.FluxReceive - [d029a10e-3, L:/127.0.0.1:57777 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 12:10:07 [] DEBUG r.n.http.client.HttpClientOperations - [d029a10e-3, L:/127.0.0.1:57777 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-20 12:10:07 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [d029a10e, L:/127.0.0.1:57777 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xd029a10e, L:/127.0.0.1:57777 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-20 12:10:07 [] INFO  c.c.c.g.c.config.RouterConfiguration - Validation Response: true
2025-02-20 12:10:07 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [d029a10e, L:/127.0.0.1:57777 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xd029a10e, L:/127.0.0.1:57777 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-20 12:10:07 [] INFO  c.c.c.g.c.config.RouterConfiguration - Forwarding [GET] /error to User Microservice
2025-02-20 12:10:07 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [d029a10e, L:/127.0.0.1:57777 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-20 12:10:07 [] DEBUG r.n.r.PooledConnectionProvider - [d029a10e, L:/127.0.0.1:57777 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-20 12:10:07 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] threw exception
java.lang.IllegalStateException: Cannot start async: [ERROR]
	at org.springframework.util.Assert.state(Assert.java:79)
	at org.springframework.web.context.request.async.StandardServletAsyncWebRequest.startAsync(StandardServletAsyncWebRequest.java:157)
	at org.springframework.web.context.request.async.WebAsyncManager.startAsyncProcessing(WebAsyncManager.java:487)
	at org.springframework.web.context.request.async.WebAsyncManager.startDeferredResultProcessing(WebAsyncManager.java:462)
	at org.springframework.web.servlet.function.DefaultAsyncServerResponse.writeAsync(DefaultAsyncServerResponse.java:130)
	at org.springframework.web.servlet.function.DefaultEntityResponseBuilder$PublisherEntityResponse.writeToInternal(DefaultEntityResponseBuilder.java:429)
	at org.springframework.web.servlet.function.AbstractServerResponse.writeTo(AbstractServerResponse.java:101)
	at org.springframework.web.servlet.function.support.HandlerFunctionAdapter.handle(HandlerFunctionAdapter.java:112)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:633)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:511)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:454)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:361)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:208)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:285)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:149)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:239)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:243)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:57)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 12:10:07 [] ERROR o.a.c.c.C.[Tomcat].[localhost] - Exception Processing [ErrorPage[errorCode=0, location=/error]]
jakarta.servlet.ServletException: Async processing failed
	at org.springframework.web.servlet.function.DefaultAsyncServerResponse.writeAsync(DefaultAsyncServerResponse.java:136)
	at org.springframework.web.servlet.function.DefaultEntityResponseBuilder$PublisherEntityResponse.writeToInternal(DefaultEntityResponseBuilder.java:429)
	at org.springframework.web.servlet.function.AbstractServerResponse.writeTo(AbstractServerResponse.java:101)
	at org.springframework.web.servlet.function.support.HandlerFunctionAdapter.handle(HandlerFunctionAdapter.java:112)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:633)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:511)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:454)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:361)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:208)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:285)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:149)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:239)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:243)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:57)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: java.lang.IllegalStateException: Cannot start async: [ERROR]
	at org.springframework.util.Assert.state(Assert.java:79)
	at org.springframework.web.context.request.async.StandardServletAsyncWebRequest.startAsync(StandardServletAsyncWebRequest.java:157)
	at org.springframework.web.context.request.async.WebAsyncManager.startAsyncProcessing(WebAsyncManager.java:487)
	at org.springframework.web.context.request.async.WebAsyncManager.startDeferredResultProcessing(WebAsyncManager.java:462)
	at org.springframework.web.servlet.function.DefaultAsyncServerResponse.writeAsync(DefaultAsyncServerResponse.java:130)
	... 41 common frames omitted
2025-02-20 12:11:08 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [d029a10e, L:/127.0.0.1:57777 ! R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0xd029a10e, L:/127.0.0.1:57777 ! R:localhost/127.0.0.1:8081]}, [disconnecting])
2025-02-20 12:12:30 [] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-02-20 12:12:31 [] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-02-20 12:12:33 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 5 thread-local buffer(s) from thread: reactor-http-nio-3
2025-02-20 12:12:33 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 4 thread-local buffer(s) from thread: reactor-http-nio-2
2025-02-20 12:12:37 [] DEBUG org.jboss.logging - Logging Provider: org.jboss.logging.Slf4jLoggerProvider found via system property
2025-02-20 12:12:37 [] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final
2025-02-20 12:12:37 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-02-20 12:12:37 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-02-20 12:12:37 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-02-20 12:12:37 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-02-20 12:12:37 [] DEBUG o.h.v.i.e.r.TraversableResolvers - Cannot find jakarta.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2025-02-20 12:12:37 [] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-02-20 12:12:37 [] INFO  c.c.c.g.c.CommongatewayApplication - Starting CommongatewayApplication using Java 17.0.12 with PID 15020 (E:\API-GATEWAY\commongateway\target\classes started by CITPL in E:\API-GATEWAY)
2025-02-20 12:12:37 [] DEBUG c.c.c.g.c.CommongatewayApplication - Running with Spring Boot v3.4.2, Spring v6.2.2
2025-02-20 12:12:37 [] INFO  c.c.c.g.c.CommongatewayApplication - No active profile set, falling back to 1 default profile: "default"
2025-02-20 12:12:37 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-02-20 12:12:37 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-02-20 12:12:37 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-02-20 12:12:37 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-02-20 12:12:37 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-02-20 12:12:37 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-02-20 12:12:38 [] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=50299984-946b-3bba-87da-3c9a1df8a676
2025-02-20 12:12:38 [] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-02-20 12:12:39 [] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-02-20 12:12:39 [] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-02-20 12:12:39 [] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.34]
2025-02-20 12:12:39 [] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-02-20 12:12:39 [] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1492 ms
2025-02-20 12:12:39 [] DEBUG i.n.u.i.l.InternalLoggerFactory - Using SLF4J as the default logging framework
2025-02-20 12:12:39 [] DEBUG i.n.util.internal.PlatformDependent0 - -Dio.netty.noUnsafe: false
2025-02-20 12:12:39 [] DEBUG i.n.util.internal.PlatformDependent0 - Java version: 17
2025-02-20 12:12:39 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe.theUnsafe: available
2025-02-20 12:12:39 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe base methods: all available
2025-02-20 12:12:39 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe.storeFence: available
2025-02-20 12:12:39 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.Buffer.address: available
2025-02-20 12:12:39 [] DEBUG i.n.util.internal.PlatformDependent0 - direct buffer constructor: unavailable: Reflective setAccessible(true) disabled
2025-02-20 12:12:39 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.Bits.unaligned: available, true
2025-02-20 12:12:39 [] DEBUG i.n.util.internal.PlatformDependent0 - jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable: class io.netty.util.internal.PlatformDependent0$7 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @7dc222ae
2025-02-20 12:12:39 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.DirectByteBuffer.<init>(long, {int,long}): unavailable
2025-02-20 12:12:39 [] DEBUG i.n.util.internal.PlatformDependent - sun.misc.Unsafe: available
2025-02-20 12:12:39 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.tmpdir: C:\Users\CITPL\AppData\Local\Temp (java.io.tmpdir)
2025-02-20 12:12:39 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.bitMode: 64 (sun.arch.data.model)
2025-02-20 12:12:39 [] DEBUG i.n.util.internal.PlatformDependent - Platform: Windows
2025-02-20 12:12:39 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.maxDirectMemory: -1 bytes
2025-02-20 12:12:39 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.uninitializedArrayAllocationThreshold: -1
2025-02-20 12:12:39 [] DEBUG io.netty.util.internal.CleanerJava9 - java.nio.ByteBuffer.cleaner(): available
2025-02-20 12:12:39 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.noPreferDirect: false
2025-02-20 12:12:39 [] DEBUG reactor.util.Loggers - Using Slf4j logging framework
2025-02-20 12:12:39 [] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-02-20 12:12:39 [] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2025-02-20 12:12:39 [] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2025-02-20 12:12:39 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-02-20 12:12:39 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via user class loader
2025-02-20 12:12:39 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-02-20 12:12:39 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-02-20 12:12:39 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-02-20 12:12:39 [] DEBUG o.h.v.i.e.r.TraversableResolvers - Cannot find jakarta.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2025-02-20 12:12:39 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-02-20 12:12:39 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-02-20 12:12:39 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-02-20 12:12:39 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-02-20 12:12:39 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-02-20 12:12:39 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-02-20 12:12:39 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	c.c.c.g.c.c.HomeController:
	{GET [/home]}: get()
2025-02-20 12:12:39 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2025-02-20 12:12:39 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 'beanNameHandlerMapping' {}
2025-02-20 12:12:39 [] DEBUG _.s.w.s.HandlerMapping.Mappings - Mapped com.citpl.common.gateway.commongateway.config.RouterConfiguration$$Lambda$895/0x000001ce9a50c1a0@1a1c21b4 -> com.citpl.common.gateway.commongateway.config.RouterConfiguration$$Lambda$896/0x000001ce9a50c408@1cd2ff5b
2025-02-20 12:12:39 [] DEBUG _.s.w.s.HandlerMapping.Mappings - Mapped /validate/** -> ProxyExchangeHandlerFunction
/users/** -> ProxyExchangeHandlerFunction
2025-02-20 12:12:39 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2025-02-20 12:12:40 [] DEBUG i.n.u.i.InternalThreadLocalMap - -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2025-02-20 12:12:40 [] DEBUG i.n.u.i.InternalThreadLocalMap - -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2025-02-20 12:12:40 [] DEBUG io.netty.util.ResourceLeakDetector - -Dio.netty.leakDetection.level: simple
2025-02-20 12:12:40 [] DEBUG io.netty.util.ResourceLeakDetector - -Dio.netty.leakDetection.targetRecords: 4
2025-02-20 12:12:40 [] DEBUG i.n.handler.codec.compression.Brotli - brotli4j not in the classpath; Brotli support will be unavailable.
2025-02-20 12:12:40 [] DEBUG reactor.netty.tcp.TcpResources - [http] resources will use the default LoopResources: DefaultLoopResources {prefix=reactor-http, daemon=true, selectCount=12, workerCount=12}
2025-02-20 12:12:40 [] DEBUG reactor.netty.tcp.TcpResources - [http] resources will use the default ConnectionProvider: reactor.netty.resources.DefaultPooledConnectionProvider@2296127
2025-02-20 12:12:40 [] DEBUG r.netty.resources.DefaultLoopIOUring - Default io_uring support : false
2025-02-20 12:12:40 [] DEBUG r.netty.resources.DefaultLoopEpoll - Default Epoll support : false
2025-02-20 12:12:40 [] DEBUG r.netty.resources.DefaultLoopKQueue - Default KQueue support : false
2025-02-20 12:12:40 [] DEBUG i.n.c.MultithreadEventLoopGroup - -Dio.netty.eventLoopThreads: 24
2025-02-20 12:12:40 [] DEBUG i.n.u.concurrent.GlobalEventExecutor - -Dio.netty.globalEventExecutor.quietPeriodSeconds: 1
2025-02-20 12:12:40 [] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.noKeySetOptimization: false
2025-02-20 12:12:40 [] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.selectorAutoRebuildThreshold: 512
2025-02-20 12:12:40 [] DEBUG i.n.util.internal.PlatformDependent - org.jctools-core.MpscChunkedArrayQueue: available
2025-02-20 12:12:40 [] DEBUG io.netty.util.NetUtil - -Djava.net.preferIPv4Stack: false
2025-02-20 12:12:40 [] DEBUG io.netty.util.NetUtil - -Djava.net.preferIPv6Addresses: false
2025-02-20 12:12:40 [] DEBUG i.netty.util.NetUtilInitializations - Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2025-02-20 12:12:40 [] DEBUG io.netty.util.NetUtil - Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2025-02-20 12:12:40 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default ResolvedAddressTypes: IPV4_ONLY
2025-02-20 12:12:40 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Localhost address: localhost/127.0.0.1
2025-02-20 12:12:40 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Windows hostname: DESKTOP-P307093
2025-02-20 12:12:40 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default search domains: []
2025-02-20 12:12:40 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default UnixResolverOptions{ndots=1, timeout=5, attempts=16}
2025-02-20 12:12:40 [] DEBUG i.n.r.DefaultHostsFileEntriesResolver - -Dio.netty.hostsFileRefreshInterval: 0
2025-02-20 12:12:40 [] DEBUG i.n.r.d.DefaultDnsServerAddressStreamProvider - Default DNS servers: [/8.8.8.8:53, /4.2.2.2:53] (sun.net.dns.ResolverConfiguration)
2025-02-20 12:12:40 [] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-02-20 12:12:40 [] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-02-20 12:12:40 [] INFO  c.c.c.g.c.CommongatewayApplication - Started CommongatewayApplication in 3.731 seconds (process running for 4.543)
2025-02-20 12:13:00 [] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-02-20 12:13:00 [] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-02-20 12:13:00 [] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 0 ms
2025-02-20 12:13:00 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-20 12:13:00 [e12fcc00-bc14-4c23-a54a-52eb009b4d14] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-20 12:13:00 [e12fcc00-bc14-4c23-a54a-52eb009b4d14] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-20 12:13:00 [e12fcc00-bc14-4c23-a54a-52eb009b4d14] INFO  c.c.c.g.c.config.RouterConfiguration - Authorized Request!
2025-02-20 12:13:00 [e12fcc00-bc14-4c23-a54a-52eb009b4d14] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [GET] /validate
2025-02-20 12:13:00 [e12fcc00-bc14-4c23-a54a-52eb009b4d14] DEBUG r.n.r.PooledConnectionProvider - Creating a new [http] client pool [PoolFactory{evictionInterval=PT0S, leasingStrategy=fifo, maxConnections=500, maxIdleTime=-1, maxLifeTime=-1, metricsEnabled=false, pendingAcquireMaxCount=1000, pendingAcquireTimeout=45000}] for [localhost/<unresolved>:8081]
2025-02-20 12:13:00 [e12fcc00-bc14-4c23-a54a-52eb009b4d14] DEBUG io.netty.channel.DefaultChannelId - -Dio.netty.processId: 15020 (auto-detected)
2025-02-20 12:13:00 [e12fcc00-bc14-4c23-a54a-52eb009b4d14] DEBUG io.netty.channel.DefaultChannelId - -Dio.netty.machineId: a0:d3:65:ff:fe:5e:b0:28 (auto-detected)
2025-02-20 12:13:00 [e12fcc00-bc14-4c23-a54a-52eb009b4d14] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.numHeapArenas: 24
2025-02-20 12:13:00 [e12fcc00-bc14-4c23-a54a-52eb009b4d14] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.numDirectArenas: 24
2025-02-20 12:13:00 [e12fcc00-bc14-4c23-a54a-52eb009b4d14] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.pageSize: 8192
2025-02-20 12:13:00 [e12fcc00-bc14-4c23-a54a-52eb009b4d14] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxOrder: 9
2025-02-20 12:13:00 [e12fcc00-bc14-4c23-a54a-52eb009b4d14] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.chunkSize: 4194304
2025-02-20 12:13:00 [e12fcc00-bc14-4c23-a54a-52eb009b4d14] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.smallCacheSize: 256
2025-02-20 12:13:00 [e12fcc00-bc14-4c23-a54a-52eb009b4d14] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.normalCacheSize: 64
2025-02-20 12:13:00 [e12fcc00-bc14-4c23-a54a-52eb009b4d14] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2025-02-20 12:13:00 [e12fcc00-bc14-4c23-a54a-52eb009b4d14] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.cacheTrimInterval: 8192
2025-02-20 12:13:00 [e12fcc00-bc14-4c23-a54a-52eb009b4d14] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.cacheTrimIntervalMillis: 0
2025-02-20 12:13:00 [e12fcc00-bc14-4c23-a54a-52eb009b4d14] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.useCacheForAllThreads: false
2025-02-20 12:13:00 [e12fcc00-bc14-4c23-a54a-52eb009b4d14] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
2025-02-20 12:13:00 [e12fcc00-bc14-4c23-a54a-52eb009b4d14] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.disableCacheFinalizersForFastThreadLocalThreads: false
2025-02-20 12:13:00 [e12fcc00-bc14-4c23-a54a-52eb009b4d14] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.allocator.type: pooled
2025-02-20 12:13:00 [e12fcc00-bc14-4c23-a54a-52eb009b4d14] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.threadLocalDirectBufferSize: 0
2025-02-20 12:13:00 [e12fcc00-bc14-4c23-a54a-52eb009b4d14] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.maxThreadLocalCharBufferSize: 16384
2025-02-20 12:13:00 [] DEBUG r.n.r.PooledConnectionProvider - [cd5b74dc] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 12:13:00 [] DEBUG io.netty.buffer.AbstractByteBuf - -Dio.netty.buffer.checkAccessible: true
2025-02-20 12:13:00 [] DEBUG io.netty.buffer.AbstractByteBuf - -Dio.netty.buffer.checkBounds: true
2025-02-20 12:13:00 [] DEBUG i.n.util.ResourceLeakDetectorFactory - Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@5c61a454
2025-02-20 12:13:00 [] DEBUG r.netty.transport.TransportConfig - [cd5b74dc] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-20 12:13:00 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 12:13:00 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 12:13:00 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 12:13:00 [] DEBUG i.n.b.ChannelInitializerExtensions - -Dio.netty.bootstrap.extensions: null
2025-02-20 12:13:00 [] DEBUG r.netty.transport.TransportConnector - [cd5b74dc] Connecting to [localhost/127.0.0.1:8081].
2025-02-20 12:13:00 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [cd5b74dc, L:/127.0.0.1:57844 - R:localhost/127.0.0.1:8081] Registering pool release on close event for channel
2025-02-20 12:13:00 [] DEBUG r.n.r.PooledConnectionProvider - [cd5b74dc, L:/127.0.0.1:57844 - R:localhost/127.0.0.1:8081] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 12:13:00 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [cd5b74dc, L:/127.0.0.1:57844 - R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0xcd5b74dc, L:/127.0.0.1:57844 - R:localhost/127.0.0.1:8081]}, [connected])
2025-02-20 12:13:00 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [cd5b74dc-1, L:/127.0.0.1:57844 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0xcd5b74dc, L:/127.0.0.1:57844 - R:localhost/127.0.0.1:8081]}}, [configured])
2025-02-20 12:13:00 [] DEBUG r.n.http.client.HttpClientConnect - [cd5b74dc-1, L:/127.0.0.1:57844 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY, method=GET}
2025-02-20 12:13:00 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [cd5b74dc-1, L:/127.0.0.1:57844 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xcd5b74dc, L:/127.0.0.1:57844 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-20 12:13:00 [] DEBUG r.n.http.client.HttpClientOperations - [cd5b74dc-1, L:/127.0.0.1:57844 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-20 12:13:00 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.maxCapacityPerThread: 4096
2025-02-20 12:13:00 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.ratio: 8
2025-02-20 12:13:00 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.chunkSize: 32
2025-02-20 12:13:00 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.blocking: false
2025-02-20 12:13:00 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.batchFastThreadLocalOnly: true
2025-02-20 12:13:00 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [cd5b74dc-1, L:/127.0.0.1:57844 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xcd5b74dc, L:/127.0.0.1:57844 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-20 12:13:00 [] DEBUG i.n.handler.codec.compression.Zstd - zstd-jni not in the classpath; Zstd support will be unavailable.
2025-02-20 12:13:00 [] DEBUG r.n.http.client.HttpClientOperations - [cd5b74dc-1, L:/127.0.0.1:57844 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-20 12:13:00 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [cd5b74dc-1, L:/127.0.0.1:57844 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xcd5b74dc, L:/127.0.0.1:57844 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-20 12:13:00 [] DEBUG reactor.netty.channel.FluxReceive - [cd5b74dc-1, L:/127.0.0.1:57844 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 12:13:00 [] DEBUG r.n.http.client.HttpClientOperations - [cd5b74dc-1, L:/127.0.0.1:57844 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-20 12:13:00 [e12fcc00-bc14-4c23-a54a-52eb009b4d14] INFO  c.c.c.g.c.config.RouterConfiguration - Validation Response: true
2025-02-20 12:13:00 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [cd5b74dc, L:/127.0.0.1:57844 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xcd5b74dc, L:/127.0.0.1:57844 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-20 12:13:00 [e12fcc00-bc14-4c23-a54a-52eb009b4d14] INFO  c.c.c.g.c.config.RouterConfiguration - Forwarding [GET] /validate to User Microservice
2025-02-20 12:13:00 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [cd5b74dc, L:/127.0.0.1:57844 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xcd5b74dc, L:/127.0.0.1:57844 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-20 12:13:00 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [cd5b74dc, L:/127.0.0.1:57844 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-20 12:13:00 [] DEBUG r.n.r.PooledConnectionProvider - [cd5b74dc, L:/127.0.0.1:57844 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-20 12:13:00 [e12fcc00-bc14-4c23-a54a-52eb009b4d14] DEBUG r.n.r.PooledConnectionProvider - Creating a new [http] client pool [PoolFactory{evictionInterval=PT0S, leasingStrategy=fifo, maxConnections=500, maxIdleTime=-1, maxLifeTime=-1, metricsEnabled=false, pendingAcquireMaxCount=1000, pendingAcquireTimeout=45000}] for [localhost/<unresolved>:8082]
2025-02-20 12:13:00 [] DEBUG r.n.r.PooledConnectionProvider - [b5971fc7] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 12:13:00 [] DEBUG r.netty.transport.TransportConfig - [b5971fc7] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-20 12:13:00 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 12:13:00 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 12:13:00 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 12:13:00 [] DEBUG r.netty.transport.TransportConnector - [b5971fc7] Connecting to [localhost/127.0.0.1:8082].
2025-02-20 12:13:00 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b5971fc7, L:/127.0.0.1:57845 - R:localhost/127.0.0.1:8082] Registering pool release on close event for channel
2025-02-20 12:13:00 [] DEBUG r.n.r.PooledConnectionProvider - [b5971fc7, L:/127.0.0.1:57845 - R:localhost/127.0.0.1:8082] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 12:13:00 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b5971fc7, L:/127.0.0.1:57845 - R:localhost/127.0.0.1:8082] onStateChange(PooledConnection{channel=[id: 0xb5971fc7, L:/127.0.0.1:57845 - R:localhost/127.0.0.1:8082]}, [connected])
2025-02-20 12:13:00 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b5971fc7-1, L:/127.0.0.1:57845 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0xb5971fc7, L:/127.0.0.1:57845 - R:localhost/127.0.0.1:8082]}}, [configured])
2025-02-20 12:13:00 [] DEBUG r.n.http.client.HttpClientConnect - [b5971fc7-1, L:/127.0.0.1:57845 - R:localhost/127.0.0.1:8082] Handler is being applied: {uri=http://localhost:8082/validate, method=GET}
2025-02-20 12:13:00 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b5971fc7-1, L:/127.0.0.1:57845 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xb5971fc7, L:/127.0.0.1:57845 - R:localhost/127.0.0.1:8082]}}, [request_prepared])
2025-02-20 12:13:00 [] DEBUG r.n.http.client.HttpClientOperations - [b5971fc7-1, L:/127.0.0.1:57845 - R:localhost/127.0.0.1:8082] No sendHeaders() called before complete, sending zero-length header
2025-02-20 12:13:00 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b5971fc7-1, L:/127.0.0.1:57845 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xb5971fc7, L:/127.0.0.1:57845 - R:localhost/127.0.0.1:8082]}}, [request_sent])
2025-02-20 12:13:00 [] DEBUG r.n.http.client.HttpClientOperations - [b5971fc7-1, L:/127.0.0.1:57845 - R:localhost/127.0.0.1:8082] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 404 
Vary: <filtered>
Vary: <filtered>
Vary: <filtered>
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-20 12:13:00 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b5971fc7-1, L:/127.0.0.1:57845 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xb5971fc7, L:/127.0.0.1:57845 - R:localhost/127.0.0.1:8082]}}, [response_received])
2025-02-20 12:13:00 [] DEBUG reactor.netty.channel.FluxReceive - [b5971fc7-1, L:/127.0.0.1:57845 - R:localhost/127.0.0.1:8082] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 12:13:00 [] DEBUG r.n.http.client.HttpClientOperations - [b5971fc7-1, L:/127.0.0.1:57845 - R:localhost/127.0.0.1:8082] Received last HTTP packet
2025-02-20 12:13:00 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b5971fc7, L:/127.0.0.1:57845 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xb5971fc7, L:/127.0.0.1:57845 - R:localhost/127.0.0.1:8082]}}, [response_completed])
2025-02-20 12:13:00 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b5971fc7, L:/127.0.0.1:57845 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xb5971fc7, L:/127.0.0.1:57845 - R:localhost/127.0.0.1:8082]}}, [disconnecting])
2025-02-20 12:13:00 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b5971fc7, L:/127.0.0.1:57845 - R:localhost/127.0.0.1:8082] Releasing channel
2025-02-20 12:13:00 [] DEBUG r.n.r.PooledConnectionProvider - [b5971fc7, L:/127.0.0.1:57845 - R:localhost/127.0.0.1:8082] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-20 12:13:00 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] threw exception
org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 404 NOT_FOUND from GET http://localhost:8082/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 12:13:00 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate] with root cause
org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 404 NOT_FOUND from GET http://localhost:8082/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 12:13:00 [] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-20 12:13:00 [] INFO  c.c.c.g.c.config.RouterConfiguration - Authorized Request!
2025-02-20 12:13:00 [] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [GET] /error
2025-02-20 12:13:00 [] DEBUG r.n.r.PooledConnectionProvider - [cd5b74dc, L:/127.0.0.1:57844 - R:localhost/127.0.0.1:8081] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 12:13:00 [] DEBUG r.n.http.client.HttpClientConnect - [cd5b74dc-2, L:/127.0.0.1:57844 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY, method=GET}
2025-02-20 12:13:00 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [cd5b74dc-2, L:/127.0.0.1:57844 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xcd5b74dc, L:/127.0.0.1:57844 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-20 12:13:00 [] DEBUG r.n.http.client.HttpClientOperations - [cd5b74dc-2, L:/127.0.0.1:57844 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-20 12:13:00 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [cd5b74dc-2, L:/127.0.0.1:57844 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xcd5b74dc, L:/127.0.0.1:57844 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-20 12:13:00 [] DEBUG r.n.http.client.HttpClientOperations - [cd5b74dc-2, L:/127.0.0.1:57844 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-20 12:13:00 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [cd5b74dc-2, L:/127.0.0.1:57844 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xcd5b74dc, L:/127.0.0.1:57844 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-20 12:13:00 [] DEBUG reactor.netty.channel.FluxReceive - [cd5b74dc-2, L:/127.0.0.1:57844 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 12:13:00 [] DEBUG r.n.http.client.HttpClientOperations - [cd5b74dc-2, L:/127.0.0.1:57844 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-20 12:13:00 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [cd5b74dc, L:/127.0.0.1:57844 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xcd5b74dc, L:/127.0.0.1:57844 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-20 12:13:00 [] INFO  c.c.c.g.c.config.RouterConfiguration - Validation Response: true
2025-02-20 12:13:00 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [cd5b74dc, L:/127.0.0.1:57844 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xcd5b74dc, L:/127.0.0.1:57844 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-20 12:13:00 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [cd5b74dc, L:/127.0.0.1:57844 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-20 12:13:00 [] INFO  c.c.c.g.c.config.RouterConfiguration - Forwarding [GET] /error to User Microservice
2025-02-20 12:13:00 [] DEBUG r.n.r.PooledConnectionProvider - [cd5b74dc, L:/127.0.0.1:57844 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-20 12:13:00 [] DEBUG r.n.r.PooledConnectionProvider - [b5971fc7, L:/127.0.0.1:57845 - R:localhost/127.0.0.1:8082] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 12:13:00 [] DEBUG r.n.http.client.HttpClientConnect - [b5971fc7-2, L:/127.0.0.1:57845 - R:localhost/127.0.0.1:8082] Handler is being applied: {uri=http://localhost:8082/error, method=GET}
2025-02-20 12:13:00 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b5971fc7-2, L:/127.0.0.1:57845 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0xb5971fc7, L:/127.0.0.1:57845 - R:localhost/127.0.0.1:8082]}}, [request_prepared])
2025-02-20 12:13:00 [] DEBUG r.n.http.client.HttpClientOperations - [b5971fc7-2, L:/127.0.0.1:57845 - R:localhost/127.0.0.1:8082] No sendHeaders() called before complete, sending zero-length header
2025-02-20 12:13:00 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b5971fc7-2, L:/127.0.0.1:57845 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0xb5971fc7, L:/127.0.0.1:57845 - R:localhost/127.0.0.1:8082]}}, [request_sent])
2025-02-20 12:13:00 [] DEBUG r.n.http.client.HttpClientOperations - [b5971fc7-2, L:/127.0.0.1:57845 - R:localhost/127.0.0.1:8082] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 500 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
Connection: <filtered>
2025-02-20 12:13:00 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b5971fc7-2, L:/127.0.0.1:57845 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0xb5971fc7, L:/127.0.0.1:57845 - R:localhost/127.0.0.1:8082]}}, [response_received])
2025-02-20 12:13:00 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] threw exception
org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 404 NOT_FOUND from GET http://localhost:8082/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 12:13:00 [] DEBUG reactor.netty.channel.FluxReceive - [b5971fc7-2, L:/127.0.0.1:57845 - R:localhost/127.0.0.1:8082] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 12:13:00 [] DEBUG r.n.http.client.HttpClientOperations - [b5971fc7-2, L:/127.0.0.1:57845 - R:localhost/127.0.0.1:8082] Received last HTTP packet
2025-02-20 12:13:00 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate] with root cause
org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 404 NOT_FOUND from GET http://localhost:8082/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 12:13:00 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b5971fc7, L:/127.0.0.1:57845 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0xb5971fc7, L:/127.0.0.1:57845 - R:localhost/127.0.0.1:8082]}}, [response_completed])
2025-02-20 12:13:00 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b5971fc7, L:/127.0.0.1:57845 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0xb5971fc7, L:/127.0.0.1:57845 - R:localhost/127.0.0.1:8082]}}, [disconnecting])
2025-02-20 12:13:00 [] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-20 12:13:00 [] INFO  c.c.c.g.c.config.RouterConfiguration - Authorized Request!
2025-02-20 12:13:00 [] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [GET] /error
2025-02-20 12:13:00 [] DEBUG r.n.r.PooledConnectionProvider - [cd5b74dc, L:/127.0.0.1:57844 - R:localhost/127.0.0.1:8081] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 12:13:00 [] DEBUG r.n.http.client.HttpClientConnect - [cd5b74dc-3, L:/127.0.0.1:57844 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY, method=GET}
2025-02-20 12:13:00 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [cd5b74dc-3, L:/127.0.0.1:57844 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xcd5b74dc, L:/127.0.0.1:57844 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-20 12:13:00 [] DEBUG r.n.http.client.HttpClientOperations - [cd5b74dc-3, L:/127.0.0.1:57844 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-20 12:13:00 [] DEBUG r.n.r.PooledConnectionProvider - [b5971fc7, L:/127.0.0.1:57845 ! R:localhost/127.0.0.1:8082] Channel closed, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 12:13:00 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [cd5b74dc-3, L:/127.0.0.1:57844 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xcd5b74dc, L:/127.0.0.1:57844 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-20 12:13:00 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b5971fc7, L:/127.0.0.1:57845 ! R:localhost/127.0.0.1:8082] onStateChange(PooledConnection{channel=[id: 0xb5971fc7, L:/127.0.0.1:57845 ! R:localhost/127.0.0.1:8082]}, [disconnecting])
2025-02-20 12:13:00 [] DEBUG r.n.http.client.HttpClientOperations - [cd5b74dc-3, L:/127.0.0.1:57844 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-20 12:13:00 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [cd5b74dc-3, L:/127.0.0.1:57844 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xcd5b74dc, L:/127.0.0.1:57844 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-20 12:13:00 [] DEBUG reactor.netty.channel.FluxReceive - [cd5b74dc-3, L:/127.0.0.1:57844 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 12:13:00 [] DEBUG r.n.http.client.HttpClientOperations - [cd5b74dc-3, L:/127.0.0.1:57844 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-20 12:13:00 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [cd5b74dc, L:/127.0.0.1:57844 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xcd5b74dc, L:/127.0.0.1:57844 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-20 12:13:00 [] INFO  c.c.c.g.c.config.RouterConfiguration - Validation Response: true
2025-02-20 12:13:00 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [cd5b74dc, L:/127.0.0.1:57844 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xcd5b74dc, L:/127.0.0.1:57844 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-20 12:13:00 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [cd5b74dc, L:/127.0.0.1:57844 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-20 12:13:00 [] INFO  c.c.c.g.c.config.RouterConfiguration - Forwarding [GET] /error to User Microservice
2025-02-20 12:13:00 [] DEBUG r.n.r.PooledConnectionProvider - [cd5b74dc, L:/127.0.0.1:57844 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-20 12:13:00 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] threw exception
java.lang.IllegalStateException: Cannot start async: [ERROR]
	at org.springframework.util.Assert.state(Assert.java:79)
	at org.springframework.web.context.request.async.StandardServletAsyncWebRequest.startAsync(StandardServletAsyncWebRequest.java:157)
	at org.springframework.web.context.request.async.WebAsyncManager.startAsyncProcessing(WebAsyncManager.java:487)
	at org.springframework.web.context.request.async.WebAsyncManager.startDeferredResultProcessing(WebAsyncManager.java:462)
	at org.springframework.web.servlet.function.DefaultAsyncServerResponse.writeAsync(DefaultAsyncServerResponse.java:130)
	at org.springframework.web.servlet.function.DefaultEntityResponseBuilder$PublisherEntityResponse.writeToInternal(DefaultEntityResponseBuilder.java:429)
	at org.springframework.web.servlet.function.AbstractServerResponse.writeTo(AbstractServerResponse.java:101)
	at org.springframework.web.servlet.function.support.HandlerFunctionAdapter.handle(HandlerFunctionAdapter.java:112)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:633)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:511)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:454)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:361)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:208)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:285)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:149)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:239)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:243)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:57)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 12:13:00 [] ERROR o.a.c.c.C.[Tomcat].[localhost] - Exception Processing [ErrorPage[errorCode=0, location=/error]]
jakarta.servlet.ServletException: Async processing failed
	at org.springframework.web.servlet.function.DefaultAsyncServerResponse.writeAsync(DefaultAsyncServerResponse.java:136)
	at org.springframework.web.servlet.function.DefaultEntityResponseBuilder$PublisherEntityResponse.writeToInternal(DefaultEntityResponseBuilder.java:429)
	at org.springframework.web.servlet.function.AbstractServerResponse.writeTo(AbstractServerResponse.java:101)
	at org.springframework.web.servlet.function.support.HandlerFunctionAdapter.handle(HandlerFunctionAdapter.java:112)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:633)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:511)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:454)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:361)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:208)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:285)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:149)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:239)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:243)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:57)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: java.lang.IllegalStateException: Cannot start async: [ERROR]
	at org.springframework.util.Assert.state(Assert.java:79)
	at org.springframework.web.context.request.async.StandardServletAsyncWebRequest.startAsync(StandardServletAsyncWebRequest.java:157)
	at org.springframework.web.context.request.async.WebAsyncManager.startAsyncProcessing(WebAsyncManager.java:487)
	at org.springframework.web.context.request.async.WebAsyncManager.startDeferredResultProcessing(WebAsyncManager.java:462)
	at org.springframework.web.servlet.function.DefaultAsyncServerResponse.writeAsync(DefaultAsyncServerResponse.java:130)
	... 41 common frames omitted
2025-02-20 12:13:07 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-20 12:13:07 [611dfff4-a571-4e10-95dd-fbb2ccb2dcdf] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-20 12:13:07 [611dfff4-a571-4e10-95dd-fbb2ccb2dcdf] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-20 12:13:07 [611dfff4-a571-4e10-95dd-fbb2ccb2dcdf] INFO  c.c.c.g.c.config.RouterConfiguration - Authorized Request!
2025-02-20 12:13:07 [611dfff4-a571-4e10-95dd-fbb2ccb2dcdf] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [GET] /validate
2025-02-20 12:13:07 [] DEBUG r.n.r.PooledConnectionProvider - [cd5b74dc, L:/127.0.0.1:57844 - R:localhost/127.0.0.1:8081] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 12:13:07 [] DEBUG r.n.http.client.HttpClientConnect - [cd5b74dc-4, L:/127.0.0.1:57844 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY, method=GET}
2025-02-20 12:13:07 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [cd5b74dc-4, L:/127.0.0.1:57844 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xcd5b74dc, L:/127.0.0.1:57844 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-20 12:13:07 [] DEBUG r.n.http.client.HttpClientOperations - [cd5b74dc-4, L:/127.0.0.1:57844 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-20 12:13:07 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [cd5b74dc-4, L:/127.0.0.1:57844 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xcd5b74dc, L:/127.0.0.1:57844 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-20 12:13:07 [] DEBUG r.n.http.client.HttpClientOperations - [cd5b74dc-4, L:/127.0.0.1:57844 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-20 12:13:07 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [cd5b74dc-4, L:/127.0.0.1:57844 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xcd5b74dc, L:/127.0.0.1:57844 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-20 12:13:07 [] DEBUG reactor.netty.channel.FluxReceive - [cd5b74dc-4, L:/127.0.0.1:57844 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 12:13:07 [] DEBUG r.n.http.client.HttpClientOperations - [cd5b74dc-4, L:/127.0.0.1:57844 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-20 12:13:07 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [cd5b74dc, L:/127.0.0.1:57844 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xcd5b74dc, L:/127.0.0.1:57844 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-20 12:13:07 [611dfff4-a571-4e10-95dd-fbb2ccb2dcdf] INFO  c.c.c.g.c.config.RouterConfiguration - Validation Response: true
2025-02-20 12:13:07 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [cd5b74dc, L:/127.0.0.1:57844 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xcd5b74dc, L:/127.0.0.1:57844 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-20 12:13:07 [611dfff4-a571-4e10-95dd-fbb2ccb2dcdf] INFO  c.c.c.g.c.config.RouterConfiguration - Forwarding [GET] /validate to User Microservice
2025-02-20 12:13:07 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [cd5b74dc, L:/127.0.0.1:57844 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-20 12:13:07 [] DEBUG r.n.r.PooledConnectionProvider - [cd5b74dc, L:/127.0.0.1:57844 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-20 12:13:07 [] DEBUG r.n.r.PooledConnectionProvider - [179bf57e] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 12:13:07 [] DEBUG r.netty.transport.TransportConfig - [179bf57e] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-20 12:13:07 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 12:13:07 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 12:13:07 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 12:13:07 [] DEBUG r.netty.transport.TransportConnector - [179bf57e] Connecting to [localhost/127.0.0.1:8082].
2025-02-20 12:13:07 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [179bf57e, L:/127.0.0.1:57853 - R:localhost/127.0.0.1:8082] Registering pool release on close event for channel
2025-02-20 12:13:07 [] DEBUG r.n.r.PooledConnectionProvider - [179bf57e, L:/127.0.0.1:57853 - R:localhost/127.0.0.1:8082] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 12:13:07 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [179bf57e, L:/127.0.0.1:57853 - R:localhost/127.0.0.1:8082] onStateChange(PooledConnection{channel=[id: 0x179bf57e, L:/127.0.0.1:57853 - R:localhost/127.0.0.1:8082]}, [connected])
2025-02-20 12:13:07 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [179bf57e-1, L:/127.0.0.1:57853 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0x179bf57e, L:/127.0.0.1:57853 - R:localhost/127.0.0.1:8082]}}, [configured])
2025-02-20 12:13:07 [] DEBUG r.n.http.client.HttpClientConnect - [179bf57e-1, L:/127.0.0.1:57853 - R:localhost/127.0.0.1:8082] Handler is being applied: {uri=http://localhost:8082/validate, method=GET}
2025-02-20 12:13:07 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [179bf57e-1, L:/127.0.0.1:57853 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x179bf57e, L:/127.0.0.1:57853 - R:localhost/127.0.0.1:8082]}}, [request_prepared])
2025-02-20 12:13:07 [] DEBUG r.n.http.client.HttpClientOperations - [179bf57e-1, L:/127.0.0.1:57853 - R:localhost/127.0.0.1:8082] No sendHeaders() called before complete, sending zero-length header
2025-02-20 12:13:07 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [179bf57e-1, L:/127.0.0.1:57853 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x179bf57e, L:/127.0.0.1:57853 - R:localhost/127.0.0.1:8082]}}, [request_sent])
2025-02-20 12:13:07 [] DEBUG r.n.http.client.HttpClientOperations - [179bf57e-1, L:/127.0.0.1:57853 - R:localhost/127.0.0.1:8082] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 404 
Vary: <filtered>
Vary: <filtered>
Vary: <filtered>
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-20 12:13:07 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [179bf57e-1, L:/127.0.0.1:57853 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x179bf57e, L:/127.0.0.1:57853 - R:localhost/127.0.0.1:8082]}}, [response_received])
2025-02-20 12:13:07 [] DEBUG reactor.netty.channel.FluxReceive - [179bf57e-1, L:/127.0.0.1:57853 - R:localhost/127.0.0.1:8082] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 12:13:07 [] DEBUG r.n.http.client.HttpClientOperations - [179bf57e-1, L:/127.0.0.1:57853 - R:localhost/127.0.0.1:8082] Received last HTTP packet
2025-02-20 12:13:07 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [179bf57e, L:/127.0.0.1:57853 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x179bf57e, L:/127.0.0.1:57853 - R:localhost/127.0.0.1:8082]}}, [response_completed])
2025-02-20 12:13:07 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [179bf57e, L:/127.0.0.1:57853 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x179bf57e, L:/127.0.0.1:57853 - R:localhost/127.0.0.1:8082]}}, [disconnecting])
2025-02-20 12:13:07 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [179bf57e, L:/127.0.0.1:57853 - R:localhost/127.0.0.1:8082] Releasing channel
2025-02-20 12:13:07 [] DEBUG r.n.r.PooledConnectionProvider - [179bf57e, L:/127.0.0.1:57853 - R:localhost/127.0.0.1:8082] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-20 12:13:07 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] threw exception
org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 404 NOT_FOUND from GET http://localhost:8082/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 12:13:07 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate] with root cause
org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 404 NOT_FOUND from GET http://localhost:8082/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 12:13:07 [] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-20 12:13:07 [] INFO  c.c.c.g.c.config.RouterConfiguration - Authorized Request!
2025-02-20 12:13:07 [] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [GET] /error
2025-02-20 12:13:07 [] DEBUG r.n.r.PooledConnectionProvider - [cd5b74dc, L:/127.0.0.1:57844 - R:localhost/127.0.0.1:8081] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 12:13:07 [] DEBUG r.n.http.client.HttpClientConnect - [cd5b74dc-5, L:/127.0.0.1:57844 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY, method=GET}
2025-02-20 12:13:07 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [cd5b74dc-5, L:/127.0.0.1:57844 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xcd5b74dc, L:/127.0.0.1:57844 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-20 12:13:07 [] DEBUG r.n.http.client.HttpClientOperations - [cd5b74dc-5, L:/127.0.0.1:57844 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-20 12:13:07 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [cd5b74dc-5, L:/127.0.0.1:57844 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xcd5b74dc, L:/127.0.0.1:57844 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-20 12:13:07 [] DEBUG r.n.http.client.HttpClientOperations - [cd5b74dc-5, L:/127.0.0.1:57844 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-20 12:13:07 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [cd5b74dc-5, L:/127.0.0.1:57844 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xcd5b74dc, L:/127.0.0.1:57844 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-20 12:13:07 [] DEBUG reactor.netty.channel.FluxReceive - [cd5b74dc-5, L:/127.0.0.1:57844 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 12:13:07 [] DEBUG r.n.http.client.HttpClientOperations - [cd5b74dc-5, L:/127.0.0.1:57844 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-20 12:13:07 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [cd5b74dc, L:/127.0.0.1:57844 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xcd5b74dc, L:/127.0.0.1:57844 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-20 12:13:07 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [cd5b74dc, L:/127.0.0.1:57844 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xcd5b74dc, L:/127.0.0.1:57844 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-20 12:13:07 [] INFO  c.c.c.g.c.config.RouterConfiguration - Validation Response: true
2025-02-20 12:13:07 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [cd5b74dc, L:/127.0.0.1:57844 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-20 12:13:07 [] INFO  c.c.c.g.c.config.RouterConfiguration - Forwarding [GET] /error to User Microservice
2025-02-20 12:13:07 [] DEBUG r.n.r.PooledConnectionProvider - [cd5b74dc, L:/127.0.0.1:57844 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-20 12:13:07 [] DEBUG r.n.r.PooledConnectionProvider - [179bf57e, L:/127.0.0.1:57853 - R:localhost/127.0.0.1:8082] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 12:13:07 [] DEBUG r.n.http.client.HttpClientConnect - [179bf57e-2, L:/127.0.0.1:57853 - R:localhost/127.0.0.1:8082] Handler is being applied: {uri=http://localhost:8082/error, method=GET}
2025-02-20 12:13:07 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [179bf57e-2, L:/127.0.0.1:57853 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0x179bf57e, L:/127.0.0.1:57853 - R:localhost/127.0.0.1:8082]}}, [request_prepared])
2025-02-20 12:13:07 [] DEBUG r.n.http.client.HttpClientOperations - [179bf57e-2, L:/127.0.0.1:57853 - R:localhost/127.0.0.1:8082] No sendHeaders() called before complete, sending zero-length header
2025-02-20 12:13:07 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [179bf57e-2, L:/127.0.0.1:57853 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0x179bf57e, L:/127.0.0.1:57853 - R:localhost/127.0.0.1:8082]}}, [request_sent])
2025-02-20 12:13:07 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] threw exception
org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 404 NOT_FOUND from GET http://localhost:8082/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 12:13:07 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate] with root cause
org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 404 NOT_FOUND from GET http://localhost:8082/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 12:13:07 [] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-20 12:13:07 [] INFO  c.c.c.g.c.config.RouterConfiguration - Authorized Request!
2025-02-20 12:13:07 [] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [GET] /error
2025-02-20 12:13:07 [] DEBUG r.n.http.client.HttpClientOperations - [179bf57e-2, L:/127.0.0.1:57853 - R:localhost/127.0.0.1:8082] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 500 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
Connection: <filtered>
2025-02-20 12:13:07 [] DEBUG r.n.r.PooledConnectionProvider - [cd5b74dc, L:/127.0.0.1:57844 - R:localhost/127.0.0.1:8081] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 12:13:07 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [179bf57e-2, L:/127.0.0.1:57853 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0x179bf57e, L:/127.0.0.1:57853 - R:localhost/127.0.0.1:8082]}}, [response_received])
2025-02-20 12:13:07 [] DEBUG r.n.http.client.HttpClientConnect - [cd5b74dc-6, L:/127.0.0.1:57844 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY, method=GET}
2025-02-20 12:13:07 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [cd5b74dc-6, L:/127.0.0.1:57844 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xcd5b74dc, L:/127.0.0.1:57844 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-20 12:13:07 [] DEBUG reactor.netty.channel.FluxReceive - [179bf57e-2, L:/127.0.0.1:57853 - R:localhost/127.0.0.1:8082] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 12:13:07 [] DEBUG r.n.http.client.HttpClientOperations - [cd5b74dc-6, L:/127.0.0.1:57844 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-20 12:13:07 [] DEBUG r.n.http.client.HttpClientOperations - [179bf57e-2, L:/127.0.0.1:57853 - R:localhost/127.0.0.1:8082] Received last HTTP packet
2025-02-20 12:13:07 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [cd5b74dc-6, L:/127.0.0.1:57844 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xcd5b74dc, L:/127.0.0.1:57844 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-20 12:13:07 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [179bf57e, L:/127.0.0.1:57853 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0x179bf57e, L:/127.0.0.1:57853 - R:localhost/127.0.0.1:8082]}}, [response_completed])
2025-02-20 12:13:07 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [179bf57e, L:/127.0.0.1:57853 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0x179bf57e, L:/127.0.0.1:57853 - R:localhost/127.0.0.1:8082]}}, [disconnecting])
2025-02-20 12:13:07 [] DEBUG r.n.r.PooledConnectionProvider - [179bf57e, L:/127.0.0.1:57853 ! R:localhost/127.0.0.1:8082] Channel closed, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 12:13:07 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [179bf57e, L:/127.0.0.1:57853 ! R:localhost/127.0.0.1:8082] onStateChange(PooledConnection{channel=[id: 0x179bf57e, L:/127.0.0.1:57853 ! R:localhost/127.0.0.1:8082]}, [disconnecting])
2025-02-20 12:13:07 [] DEBUG r.n.http.client.HttpClientOperations - [cd5b74dc-6, L:/127.0.0.1:57844 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-20 12:13:07 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [cd5b74dc-6, L:/127.0.0.1:57844 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xcd5b74dc, L:/127.0.0.1:57844 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-20 12:13:07 [] DEBUG reactor.netty.channel.FluxReceive - [cd5b74dc-6, L:/127.0.0.1:57844 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 12:13:07 [] DEBUG r.n.http.client.HttpClientOperations - [cd5b74dc-6, L:/127.0.0.1:57844 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-20 12:13:07 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [cd5b74dc, L:/127.0.0.1:57844 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xcd5b74dc, L:/127.0.0.1:57844 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-20 12:13:07 [] INFO  c.c.c.g.c.config.RouterConfiguration - Validation Response: true
2025-02-20 12:13:07 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [cd5b74dc, L:/127.0.0.1:57844 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xcd5b74dc, L:/127.0.0.1:57844 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-20 12:13:07 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [cd5b74dc, L:/127.0.0.1:57844 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-20 12:13:07 [] INFO  c.c.c.g.c.config.RouterConfiguration - Forwarding [GET] /error to User Microservice
2025-02-20 12:13:07 [] DEBUG r.n.r.PooledConnectionProvider - [cd5b74dc, L:/127.0.0.1:57844 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-20 12:13:07 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] threw exception
java.lang.IllegalStateException: Cannot start async: [ERROR]
	at org.springframework.util.Assert.state(Assert.java:79)
	at org.springframework.web.context.request.async.StandardServletAsyncWebRequest.startAsync(StandardServletAsyncWebRequest.java:157)
	at org.springframework.web.context.request.async.WebAsyncManager.startAsyncProcessing(WebAsyncManager.java:487)
	at org.springframework.web.context.request.async.WebAsyncManager.startDeferredResultProcessing(WebAsyncManager.java:462)
	at org.springframework.web.servlet.function.DefaultAsyncServerResponse.writeAsync(DefaultAsyncServerResponse.java:130)
	at org.springframework.web.servlet.function.DefaultEntityResponseBuilder$PublisherEntityResponse.writeToInternal(DefaultEntityResponseBuilder.java:429)
	at org.springframework.web.servlet.function.AbstractServerResponse.writeTo(AbstractServerResponse.java:101)
	at org.springframework.web.servlet.function.support.HandlerFunctionAdapter.handle(HandlerFunctionAdapter.java:112)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:633)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:511)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:454)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:361)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:208)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:285)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:149)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:239)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:243)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:57)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 12:13:07 [] ERROR o.a.c.c.C.[Tomcat].[localhost] - Exception Processing [ErrorPage[errorCode=0, location=/error]]
jakarta.servlet.ServletException: Async processing failed
	at org.springframework.web.servlet.function.DefaultAsyncServerResponse.writeAsync(DefaultAsyncServerResponse.java:136)
	at org.springframework.web.servlet.function.DefaultEntityResponseBuilder$PublisherEntityResponse.writeToInternal(DefaultEntityResponseBuilder.java:429)
	at org.springframework.web.servlet.function.AbstractServerResponse.writeTo(AbstractServerResponse.java:101)
	at org.springframework.web.servlet.function.support.HandlerFunctionAdapter.handle(HandlerFunctionAdapter.java:112)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:633)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:511)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:454)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:361)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:208)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:285)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:149)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:239)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:243)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:57)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: java.lang.IllegalStateException: Cannot start async: [ERROR]
	at org.springframework.util.Assert.state(Assert.java:79)
	at org.springframework.web.context.request.async.StandardServletAsyncWebRequest.startAsync(StandardServletAsyncWebRequest.java:157)
	at org.springframework.web.context.request.async.WebAsyncManager.startAsyncProcessing(WebAsyncManager.java:487)
	at org.springframework.web.context.request.async.WebAsyncManager.startDeferredResultProcessing(WebAsyncManager.java:462)
	at org.springframework.web.servlet.function.DefaultAsyncServerResponse.writeAsync(DefaultAsyncServerResponse.java:130)
	... 41 common frames omitted
2025-02-20 12:13:17 [] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-02-20 12:13:18 [] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-02-20 12:13:18 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [cd5b74dc, L:/127.0.0.1:57844 ! R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0xcd5b74dc, L:/127.0.0.1:57844 ! R:localhost/127.0.0.1:8081]}, [disconnecting])
2025-02-20 12:13:20 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 5 thread-local buffer(s) from thread: reactor-http-nio-3
2025-02-20 12:13:20 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 3 thread-local buffer(s) from thread: reactor-http-nio-4
2025-02-20 12:13:20 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 7 thread-local buffer(s) from thread: reactor-http-nio-2
2025-02-20 12:15:06 [] DEBUG org.jboss.logging - Logging Provider: org.jboss.logging.Slf4jLoggerProvider found via system property
2025-02-20 12:15:06 [] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final
2025-02-20 12:15:06 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-02-20 12:15:06 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-02-20 12:15:06 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-02-20 12:15:06 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-02-20 12:15:06 [] DEBUG o.h.v.i.e.r.TraversableResolvers - Cannot find jakarta.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2025-02-20 12:15:06 [] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-02-20 12:15:06 [] INFO  c.c.c.g.c.CommongatewayApplication - Starting CommongatewayApplication using Java 17.0.12 with PID 19732 (E:\API-GATEWAY\commongateway\target\classes started by CITPL in E:\API-GATEWAY)
2025-02-20 12:15:06 [] DEBUG c.c.c.g.c.CommongatewayApplication - Running with Spring Boot v3.4.2, Spring v6.2.2
2025-02-20 12:15:06 [] INFO  c.c.c.g.c.CommongatewayApplication - No active profile set, falling back to 1 default profile: "default"
2025-02-20 12:15:06 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-02-20 12:15:06 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-02-20 12:15:06 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-02-20 12:15:06 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-02-20 12:15:06 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-02-20 12:15:06 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-02-20 12:15:07 [] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=50299984-946b-3bba-87da-3c9a1df8a676
2025-02-20 12:15:07 [] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-02-20 12:15:07 [] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-02-20 12:15:07 [] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-02-20 12:15:07 [] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.34]
2025-02-20 12:15:08 [] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-02-20 12:15:08 [] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1660 ms
2025-02-20 12:15:08 [] DEBUG i.n.u.i.l.InternalLoggerFactory - Using SLF4J as the default logging framework
2025-02-20 12:15:08 [] DEBUG i.n.util.internal.PlatformDependent0 - -Dio.netty.noUnsafe: false
2025-02-20 12:15:08 [] DEBUG i.n.util.internal.PlatformDependent0 - Java version: 17
2025-02-20 12:15:08 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe.theUnsafe: available
2025-02-20 12:15:08 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe base methods: all available
2025-02-20 12:15:08 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe.storeFence: available
2025-02-20 12:15:08 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.Buffer.address: available
2025-02-20 12:15:08 [] DEBUG i.n.util.internal.PlatformDependent0 - direct buffer constructor: unavailable: Reflective setAccessible(true) disabled
2025-02-20 12:15:08 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.Bits.unaligned: available, true
2025-02-20 12:15:08 [] DEBUG i.n.util.internal.PlatformDependent0 - jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable: class io.netty.util.internal.PlatformDependent0$7 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @7dc222ae
2025-02-20 12:15:08 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.DirectByteBuffer.<init>(long, {int,long}): unavailable
2025-02-20 12:15:08 [] DEBUG i.n.util.internal.PlatformDependent - sun.misc.Unsafe: available
2025-02-20 12:15:08 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.tmpdir: C:\Users\CITPL\AppData\Local\Temp (java.io.tmpdir)
2025-02-20 12:15:08 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.bitMode: 64 (sun.arch.data.model)
2025-02-20 12:15:08 [] DEBUG i.n.util.internal.PlatformDependent - Platform: Windows
2025-02-20 12:15:08 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.maxDirectMemory: -1 bytes
2025-02-20 12:15:08 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.uninitializedArrayAllocationThreshold: -1
2025-02-20 12:15:08 [] DEBUG io.netty.util.internal.CleanerJava9 - java.nio.ByteBuffer.cleaner(): available
2025-02-20 12:15:08 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.noPreferDirect: false
2025-02-20 12:15:08 [] DEBUG reactor.util.Loggers - Using Slf4j logging framework
2025-02-20 12:15:08 [] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-02-20 12:15:08 [] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2025-02-20 12:15:08 [] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2025-02-20 12:15:08 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-02-20 12:15:08 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via user class loader
2025-02-20 12:15:08 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-02-20 12:15:08 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-02-20 12:15:08 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-02-20 12:15:08 [] DEBUG o.h.v.i.e.r.TraversableResolvers - Cannot find jakarta.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2025-02-20 12:15:08 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-02-20 12:15:08 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-02-20 12:15:08 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-02-20 12:15:08 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-02-20 12:15:08 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-02-20 12:15:08 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-02-20 12:15:08 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	c.c.c.g.c.c.HomeController:
	{GET [/home]}: get()
2025-02-20 12:15:08 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2025-02-20 12:15:08 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 'beanNameHandlerMapping' {}
2025-02-20 12:15:08 [] DEBUG _.s.w.s.HandlerMapping.Mappings - Mapped com.citpl.common.gateway.commongateway.config.RouterConfiguration$$Lambda$895/0x000002703750fd78@496cc217 -> com.citpl.common.gateway.commongateway.config.RouterConfiguration$$Lambda$896/0x0000027037510000@1a1c21b4
2025-02-20 12:15:08 [] DEBUG _.s.w.s.HandlerMapping.Mappings - Mapped /validate/** -> ProxyExchangeHandlerFunction
/users/** -> ProxyExchangeHandlerFunction
2025-02-20 12:15:08 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2025-02-20 12:15:09 [] DEBUG i.n.u.i.InternalThreadLocalMap - -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2025-02-20 12:15:09 [] DEBUG i.n.u.i.InternalThreadLocalMap - -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2025-02-20 12:15:09 [] DEBUG io.netty.util.ResourceLeakDetector - -Dio.netty.leakDetection.level: simple
2025-02-20 12:15:09 [] DEBUG io.netty.util.ResourceLeakDetector - -Dio.netty.leakDetection.targetRecords: 4
2025-02-20 12:15:09 [] DEBUG i.n.handler.codec.compression.Brotli - brotli4j not in the classpath; Brotli support will be unavailable.
2025-02-20 12:15:09 [] DEBUG reactor.netty.tcp.TcpResources - [http] resources will use the default LoopResources: DefaultLoopResources {prefix=reactor-http, daemon=true, selectCount=12, workerCount=12}
2025-02-20 12:15:09 [] DEBUG reactor.netty.tcp.TcpResources - [http] resources will use the default ConnectionProvider: reactor.netty.resources.DefaultPooledConnectionProvider@7be38eba
2025-02-20 12:15:09 [] DEBUG r.netty.resources.DefaultLoopIOUring - Default io_uring support : false
2025-02-20 12:15:09 [] DEBUG r.netty.resources.DefaultLoopEpoll - Default Epoll support : false
2025-02-20 12:15:09 [] DEBUG r.netty.resources.DefaultLoopKQueue - Default KQueue support : false
2025-02-20 12:15:09 [] DEBUG i.n.c.MultithreadEventLoopGroup - -Dio.netty.eventLoopThreads: 24
2025-02-20 12:15:09 [] DEBUG i.n.u.concurrent.GlobalEventExecutor - -Dio.netty.globalEventExecutor.quietPeriodSeconds: 1
2025-02-20 12:15:09 [] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.noKeySetOptimization: false
2025-02-20 12:15:09 [] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.selectorAutoRebuildThreshold: 512
2025-02-20 12:15:09 [] DEBUG i.n.util.internal.PlatformDependent - org.jctools-core.MpscChunkedArrayQueue: available
2025-02-20 12:15:09 [] DEBUG io.netty.util.NetUtil - -Djava.net.preferIPv4Stack: false
2025-02-20 12:15:09 [] DEBUG io.netty.util.NetUtil - -Djava.net.preferIPv6Addresses: false
2025-02-20 12:15:09 [] DEBUG i.netty.util.NetUtilInitializations - Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2025-02-20 12:15:09 [] DEBUG io.netty.util.NetUtil - Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2025-02-20 12:15:09 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default ResolvedAddressTypes: IPV4_ONLY
2025-02-20 12:15:09 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Localhost address: localhost/127.0.0.1
2025-02-20 12:15:09 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Windows hostname: DESKTOP-P307093
2025-02-20 12:15:09 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default search domains: []
2025-02-20 12:15:09 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default UnixResolverOptions{ndots=1, timeout=5, attempts=16}
2025-02-20 12:15:09 [] DEBUG i.n.r.DefaultHostsFileEntriesResolver - -Dio.netty.hostsFileRefreshInterval: 0
2025-02-20 12:15:09 [] DEBUG i.n.r.d.DefaultDnsServerAddressStreamProvider - Default DNS servers: [/8.8.8.8:53, /4.2.2.2:53] (sun.net.dns.ResolverConfiguration)
2025-02-20 12:15:09 [] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-02-20 12:15:09 [] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-02-20 12:15:09 [] INFO  c.c.c.g.c.CommongatewayApplication - Started CommongatewayApplication in 4.063 seconds (process running for 4.949)
2025-02-20 12:15:25 [] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-02-20 12:15:25 [] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-02-20 12:15:25 [] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-02-20 12:15:25 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-20 12:15:25 [a632ab94-3394-4651-a347-588d1982bc49] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-20 12:15:25 [a632ab94-3394-4651-a347-588d1982bc49] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-20 12:15:25 [a632ab94-3394-4651-a347-588d1982bc49] INFO  c.c.c.g.c.config.RouterConfiguration - Authorized Request!
2025-02-20 12:15:25 [a632ab94-3394-4651-a347-588d1982bc49] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [GET] /validate
2025-02-20 12:15:25 [a632ab94-3394-4651-a347-588d1982bc49] DEBUG r.n.r.PooledConnectionProvider - Creating a new [http] client pool [PoolFactory{evictionInterval=PT0S, leasingStrategy=fifo, maxConnections=500, maxIdleTime=-1, maxLifeTime=-1, metricsEnabled=false, pendingAcquireMaxCount=1000, pendingAcquireTimeout=45000}] for [localhost/<unresolved>:8081]
2025-02-20 12:15:25 [a632ab94-3394-4651-a347-588d1982bc49] DEBUG io.netty.channel.DefaultChannelId - -Dio.netty.processId: 19732 (auto-detected)
2025-02-20 12:15:25 [a632ab94-3394-4651-a347-588d1982bc49] DEBUG io.netty.channel.DefaultChannelId - -Dio.netty.machineId: a0:d3:65:ff:fe:5e:b0:28 (auto-detected)
2025-02-20 12:15:25 [a632ab94-3394-4651-a347-588d1982bc49] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.numHeapArenas: 24
2025-02-20 12:15:25 [a632ab94-3394-4651-a347-588d1982bc49] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.numDirectArenas: 24
2025-02-20 12:15:25 [a632ab94-3394-4651-a347-588d1982bc49] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.pageSize: 8192
2025-02-20 12:15:25 [a632ab94-3394-4651-a347-588d1982bc49] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxOrder: 9
2025-02-20 12:15:25 [a632ab94-3394-4651-a347-588d1982bc49] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.chunkSize: 4194304
2025-02-20 12:15:25 [a632ab94-3394-4651-a347-588d1982bc49] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.smallCacheSize: 256
2025-02-20 12:15:25 [a632ab94-3394-4651-a347-588d1982bc49] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.normalCacheSize: 64
2025-02-20 12:15:25 [a632ab94-3394-4651-a347-588d1982bc49] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2025-02-20 12:15:25 [a632ab94-3394-4651-a347-588d1982bc49] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.cacheTrimInterval: 8192
2025-02-20 12:15:25 [a632ab94-3394-4651-a347-588d1982bc49] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.cacheTrimIntervalMillis: 0
2025-02-20 12:15:25 [a632ab94-3394-4651-a347-588d1982bc49] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.useCacheForAllThreads: false
2025-02-20 12:15:25 [a632ab94-3394-4651-a347-588d1982bc49] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
2025-02-20 12:15:25 [a632ab94-3394-4651-a347-588d1982bc49] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.disableCacheFinalizersForFastThreadLocalThreads: false
2025-02-20 12:15:25 [a632ab94-3394-4651-a347-588d1982bc49] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.allocator.type: pooled
2025-02-20 12:15:25 [a632ab94-3394-4651-a347-588d1982bc49] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.threadLocalDirectBufferSize: 0
2025-02-20 12:15:25 [a632ab94-3394-4651-a347-588d1982bc49] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.maxThreadLocalCharBufferSize: 16384
2025-02-20 12:15:25 [] DEBUG r.n.r.PooledConnectionProvider - [5ec11eb8] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 12:15:25 [] DEBUG io.netty.buffer.AbstractByteBuf - -Dio.netty.buffer.checkAccessible: true
2025-02-20 12:15:25 [] DEBUG io.netty.buffer.AbstractByteBuf - -Dio.netty.buffer.checkBounds: true
2025-02-20 12:15:25 [] DEBUG i.n.util.ResourceLeakDetectorFactory - Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@30f8186a
2025-02-20 12:15:25 [] DEBUG r.netty.transport.TransportConfig - [5ec11eb8] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-20 12:15:25 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 12:15:25 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 12:15:25 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 12:15:25 [] DEBUG i.n.b.ChannelInitializerExtensions - -Dio.netty.bootstrap.extensions: null
2025-02-20 12:15:25 [] DEBUG r.netty.transport.TransportConnector - [5ec11eb8] Connecting to [localhost/127.0.0.1:8081].
2025-02-20 12:15:25 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [5ec11eb8, L:/127.0.0.1:57959 - R:localhost/127.0.0.1:8081] Registering pool release on close event for channel
2025-02-20 12:15:25 [] DEBUG r.n.r.PooledConnectionProvider - [5ec11eb8, L:/127.0.0.1:57959 - R:localhost/127.0.0.1:8081] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 12:15:25 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [5ec11eb8, L:/127.0.0.1:57959 - R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x5ec11eb8, L:/127.0.0.1:57959 - R:localhost/127.0.0.1:8081]}, [connected])
2025-02-20 12:15:25 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [5ec11eb8-1, L:/127.0.0.1:57959 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0x5ec11eb8, L:/127.0.0.1:57959 - R:localhost/127.0.0.1:8081]}}, [configured])
2025-02-20 12:15:25 [] DEBUG r.n.http.client.HttpClientConnect - [5ec11eb8-1, L:/127.0.0.1:57959 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY, method=GET}
2025-02-20 12:15:25 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [5ec11eb8-1, L:/127.0.0.1:57959 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x5ec11eb8, L:/127.0.0.1:57959 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-20 12:15:26 [] DEBUG r.n.http.client.HttpClientOperations - [5ec11eb8-1, L:/127.0.0.1:57959 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-20 12:15:26 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.maxCapacityPerThread: 4096
2025-02-20 12:15:26 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.ratio: 8
2025-02-20 12:15:26 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.chunkSize: 32
2025-02-20 12:15:26 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.blocking: false
2025-02-20 12:15:26 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.batchFastThreadLocalOnly: true
2025-02-20 12:15:26 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [5ec11eb8-1, L:/127.0.0.1:57959 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x5ec11eb8, L:/127.0.0.1:57959 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-20 12:15:26 [] DEBUG i.n.handler.codec.compression.Zstd - zstd-jni not in the classpath; Zstd support will be unavailable.
2025-02-20 12:15:26 [] DEBUG r.n.http.client.HttpClientOperations - [5ec11eb8-1, L:/127.0.0.1:57959 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-20 12:15:26 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [5ec11eb8-1, L:/127.0.0.1:57959 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x5ec11eb8, L:/127.0.0.1:57959 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-20 12:15:26 [] DEBUG reactor.netty.channel.FluxReceive - [5ec11eb8-1, L:/127.0.0.1:57959 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 12:15:26 [] DEBUG r.n.http.client.HttpClientOperations - [5ec11eb8-1, L:/127.0.0.1:57959 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-20 12:15:26 [a632ab94-3394-4651-a347-588d1982bc49] INFO  c.c.c.g.c.config.RouterConfiguration - Validation Response: true
2025-02-20 12:15:26 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [5ec11eb8, L:/127.0.0.1:57959 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x5ec11eb8, L:/127.0.0.1:57959 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-20 12:15:26 [a632ab94-3394-4651-a347-588d1982bc49] INFO  c.c.c.g.c.config.RouterConfiguration - Forwarding [GET] /validate to User Microservice
2025-02-20 12:15:26 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [5ec11eb8, L:/127.0.0.1:57959 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x5ec11eb8, L:/127.0.0.1:57959 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-20 12:15:26 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [5ec11eb8, L:/127.0.0.1:57959 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-20 12:15:26 [] DEBUG r.n.r.PooledConnectionProvider - [5ec11eb8, L:/127.0.0.1:57959 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-20 12:15:26 [a632ab94-3394-4651-a347-588d1982bc49] DEBUG r.n.r.PooledConnectionProvider - Creating a new [http] client pool [PoolFactory{evictionInterval=PT0S, leasingStrategy=fifo, maxConnections=500, maxIdleTime=-1, maxLifeTime=-1, metricsEnabled=false, pendingAcquireMaxCount=1000, pendingAcquireTimeout=45000}] for [localhost/<unresolved>:8082]
2025-02-20 12:15:26 [] DEBUG r.n.r.PooledConnectionProvider - [dbbec1ae] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 12:15:26 [] DEBUG r.netty.transport.TransportConfig - [dbbec1ae] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-20 12:15:26 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 12:15:26 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 12:15:26 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 12:15:26 [] DEBUG r.netty.transport.TransportConnector - [dbbec1ae] Connecting to [localhost/127.0.0.1:8082].
2025-02-20 12:15:26 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [dbbec1ae, L:/127.0.0.1:57960 - R:localhost/127.0.0.1:8082] Registering pool release on close event for channel
2025-02-20 12:15:26 [] DEBUG r.n.r.PooledConnectionProvider - [dbbec1ae, L:/127.0.0.1:57960 - R:localhost/127.0.0.1:8082] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 12:15:26 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [dbbec1ae, L:/127.0.0.1:57960 - R:localhost/127.0.0.1:8082] onStateChange(PooledConnection{channel=[id: 0xdbbec1ae, L:/127.0.0.1:57960 - R:localhost/127.0.0.1:8082]}, [connected])
2025-02-20 12:15:26 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [dbbec1ae-1, L:/127.0.0.1:57960 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0xdbbec1ae, L:/127.0.0.1:57960 - R:localhost/127.0.0.1:8082]}}, [configured])
2025-02-20 12:15:26 [] DEBUG r.n.http.client.HttpClientConnect - [dbbec1ae-1, L:/127.0.0.1:57960 - R:localhost/127.0.0.1:8082] Handler is being applied: {uri=http://localhost:8082/validate, method=GET}
2025-02-20 12:15:26 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [dbbec1ae-1, L:/127.0.0.1:57960 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xdbbec1ae, L:/127.0.0.1:57960 - R:localhost/127.0.0.1:8082]}}, [request_prepared])
2025-02-20 12:15:26 [] DEBUG r.n.http.client.HttpClientOperations - [dbbec1ae-1, L:/127.0.0.1:57960 - R:localhost/127.0.0.1:8082] No sendHeaders() called before complete, sending zero-length header
2025-02-20 12:15:26 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [dbbec1ae-1, L:/127.0.0.1:57960 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xdbbec1ae, L:/127.0.0.1:57960 - R:localhost/127.0.0.1:8082]}}, [request_sent])
2025-02-20 12:15:26 [] DEBUG r.n.http.client.HttpClientOperations - [dbbec1ae-1, L:/127.0.0.1:57960 - R:localhost/127.0.0.1:8082] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 404 
Vary: <filtered>
Vary: <filtered>
Vary: <filtered>
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-20 12:15:26 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [dbbec1ae-1, L:/127.0.0.1:57960 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xdbbec1ae, L:/127.0.0.1:57960 - R:localhost/127.0.0.1:8082]}}, [response_received])
2025-02-20 12:15:26 [] DEBUG reactor.netty.channel.FluxReceive - [dbbec1ae-1, L:/127.0.0.1:57960 - R:localhost/127.0.0.1:8082] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 12:15:26 [] DEBUG r.n.http.client.HttpClientOperations - [dbbec1ae-1, L:/127.0.0.1:57960 - R:localhost/127.0.0.1:8082] Received last HTTP packet
2025-02-20 12:15:26 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [dbbec1ae, L:/127.0.0.1:57960 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xdbbec1ae, L:/127.0.0.1:57960 - R:localhost/127.0.0.1:8082]}}, [response_completed])
2025-02-20 12:15:26 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [dbbec1ae, L:/127.0.0.1:57960 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xdbbec1ae, L:/127.0.0.1:57960 - R:localhost/127.0.0.1:8082]}}, [disconnecting])
2025-02-20 12:15:26 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [dbbec1ae, L:/127.0.0.1:57960 - R:localhost/127.0.0.1:8082] Releasing channel
2025-02-20 12:15:26 [] DEBUG r.n.r.PooledConnectionProvider - [dbbec1ae, L:/127.0.0.1:57960 - R:localhost/127.0.0.1:8082] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-20 12:15:26 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] threw exception
org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 404 NOT_FOUND from GET http://localhost:8082/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 12:15:26 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate] with root cause
org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 404 NOT_FOUND from GET http://localhost:8082/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 12:15:26 [] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-20 12:15:26 [] INFO  c.c.c.g.c.config.RouterConfiguration - Authorized Request!
2025-02-20 12:15:26 [] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [GET] /error
2025-02-20 12:15:26 [] DEBUG r.n.r.PooledConnectionProvider - [5ec11eb8, L:/127.0.0.1:57959 - R:localhost/127.0.0.1:8081] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 12:15:26 [] DEBUG r.n.http.client.HttpClientConnect - [5ec11eb8-2, L:/127.0.0.1:57959 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY, method=GET}
2025-02-20 12:15:26 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [5ec11eb8-2, L:/127.0.0.1:57959 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x5ec11eb8, L:/127.0.0.1:57959 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-20 12:15:26 [] DEBUG r.n.http.client.HttpClientOperations - [5ec11eb8-2, L:/127.0.0.1:57959 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-20 12:15:26 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [5ec11eb8-2, L:/127.0.0.1:57959 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x5ec11eb8, L:/127.0.0.1:57959 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-20 12:15:26 [] DEBUG r.n.http.client.HttpClientOperations - [5ec11eb8-2, L:/127.0.0.1:57959 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-20 12:15:26 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [5ec11eb8-2, L:/127.0.0.1:57959 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x5ec11eb8, L:/127.0.0.1:57959 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-20 12:15:26 [] DEBUG reactor.netty.channel.FluxReceive - [5ec11eb8-2, L:/127.0.0.1:57959 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 12:15:26 [] DEBUG r.n.http.client.HttpClientOperations - [5ec11eb8-2, L:/127.0.0.1:57959 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-20 12:15:26 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [5ec11eb8, L:/127.0.0.1:57959 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x5ec11eb8, L:/127.0.0.1:57959 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-20 12:15:26 [] INFO  c.c.c.g.c.config.RouterConfiguration - Validation Response: true
2025-02-20 12:15:26 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [5ec11eb8, L:/127.0.0.1:57959 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x5ec11eb8, L:/127.0.0.1:57959 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-20 12:15:26 [] INFO  c.c.c.g.c.config.RouterConfiguration - Forwarding [GET] /error to User Microservice
2025-02-20 12:15:26 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [5ec11eb8, L:/127.0.0.1:57959 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-20 12:15:26 [] DEBUG r.n.r.PooledConnectionProvider - [5ec11eb8, L:/127.0.0.1:57959 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-20 12:15:26 [] DEBUG r.n.r.PooledConnectionProvider - [dbbec1ae, L:/127.0.0.1:57960 - R:localhost/127.0.0.1:8082] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 12:15:26 [] DEBUG r.n.http.client.HttpClientConnect - [dbbec1ae-2, L:/127.0.0.1:57960 - R:localhost/127.0.0.1:8082] Handler is being applied: {uri=http://localhost:8082/error, method=GET}
2025-02-20 12:15:26 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [dbbec1ae-2, L:/127.0.0.1:57960 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0xdbbec1ae, L:/127.0.0.1:57960 - R:localhost/127.0.0.1:8082]}}, [request_prepared])
2025-02-20 12:15:26 [] DEBUG r.n.http.client.HttpClientOperations - [dbbec1ae-2, L:/127.0.0.1:57960 - R:localhost/127.0.0.1:8082] No sendHeaders() called before complete, sending zero-length header
2025-02-20 12:15:26 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [dbbec1ae-2, L:/127.0.0.1:57960 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0xdbbec1ae, L:/127.0.0.1:57960 - R:localhost/127.0.0.1:8082]}}, [request_sent])
2025-02-20 12:15:26 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] threw exception
org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 404 NOT_FOUND from GET http://localhost:8082/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 12:15:26 [] DEBUG r.n.http.client.HttpClientOperations - [dbbec1ae-2, L:/127.0.0.1:57960 - R:localhost/127.0.0.1:8082] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 500 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
Connection: <filtered>
2025-02-20 12:15:26 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [dbbec1ae-2, L:/127.0.0.1:57960 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0xdbbec1ae, L:/127.0.0.1:57960 - R:localhost/127.0.0.1:8082]}}, [response_received])
2025-02-20 12:15:26 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate] with root cause
org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 404 NOT_FOUND from GET http://localhost:8082/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 12:15:26 [] DEBUG reactor.netty.channel.FluxReceive - [dbbec1ae-2, L:/127.0.0.1:57960 - R:localhost/127.0.0.1:8082] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 12:15:26 [] DEBUG r.n.http.client.HttpClientOperations - [dbbec1ae-2, L:/127.0.0.1:57960 - R:localhost/127.0.0.1:8082] Received last HTTP packet
2025-02-20 12:15:26 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [dbbec1ae, L:/127.0.0.1:57960 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0xdbbec1ae, L:/127.0.0.1:57960 - R:localhost/127.0.0.1:8082]}}, [response_completed])
2025-02-20 12:15:26 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [dbbec1ae, L:/127.0.0.1:57960 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0xdbbec1ae, L:/127.0.0.1:57960 - R:localhost/127.0.0.1:8082]}}, [disconnecting])
2025-02-20 12:15:26 [] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-20 12:15:26 [] INFO  c.c.c.g.c.config.RouterConfiguration - Authorized Request!
2025-02-20 12:15:26 [] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [GET] /error
2025-02-20 12:15:26 [] DEBUG r.n.r.PooledConnectionProvider - [dbbec1ae, L:/127.0.0.1:57960 ! R:localhost/127.0.0.1:8082] Channel closed, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 12:15:26 [] DEBUG r.n.r.PooledConnectionProvider - [5ec11eb8, L:/127.0.0.1:57959 - R:localhost/127.0.0.1:8081] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 12:15:26 [] DEBUG r.n.http.client.HttpClientConnect - [5ec11eb8-3, L:/127.0.0.1:57959 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY, method=GET}
2025-02-20 12:15:26 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [5ec11eb8-3, L:/127.0.0.1:57959 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x5ec11eb8, L:/127.0.0.1:57959 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-20 12:15:26 [] DEBUG r.n.http.client.HttpClientOperations - [5ec11eb8-3, L:/127.0.0.1:57959 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-20 12:15:26 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [dbbec1ae, L:/127.0.0.1:57960 ! R:localhost/127.0.0.1:8082] onStateChange(PooledConnection{channel=[id: 0xdbbec1ae, L:/127.0.0.1:57960 ! R:localhost/127.0.0.1:8082]}, [disconnecting])
2025-02-20 12:15:26 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [5ec11eb8-3, L:/127.0.0.1:57959 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x5ec11eb8, L:/127.0.0.1:57959 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-20 12:15:26 [] DEBUG r.n.http.client.HttpClientOperations - [5ec11eb8-3, L:/127.0.0.1:57959 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-20 12:15:26 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [5ec11eb8-3, L:/127.0.0.1:57959 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x5ec11eb8, L:/127.0.0.1:57959 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-20 12:15:26 [] DEBUG reactor.netty.channel.FluxReceive - [5ec11eb8-3, L:/127.0.0.1:57959 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 12:15:26 [] DEBUG r.n.http.client.HttpClientOperations - [5ec11eb8-3, L:/127.0.0.1:57959 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-20 12:15:26 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [5ec11eb8, L:/127.0.0.1:57959 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x5ec11eb8, L:/127.0.0.1:57959 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-20 12:15:26 [] INFO  c.c.c.g.c.config.RouterConfiguration - Validation Response: true
2025-02-20 12:15:26 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [5ec11eb8, L:/127.0.0.1:57959 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x5ec11eb8, L:/127.0.0.1:57959 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-20 12:15:26 [] INFO  c.c.c.g.c.config.RouterConfiguration - Forwarding [GET] /error to User Microservice
2025-02-20 12:15:26 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [5ec11eb8, L:/127.0.0.1:57959 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-20 12:15:26 [] DEBUG r.n.r.PooledConnectionProvider - [5ec11eb8, L:/127.0.0.1:57959 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-20 12:15:26 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] threw exception
java.lang.IllegalStateException: Cannot start async: [ERROR]
	at org.springframework.util.Assert.state(Assert.java:79)
	at org.springframework.web.context.request.async.StandardServletAsyncWebRequest.startAsync(StandardServletAsyncWebRequest.java:157)
	at org.springframework.web.context.request.async.WebAsyncManager.startAsyncProcessing(WebAsyncManager.java:487)
	at org.springframework.web.context.request.async.WebAsyncManager.startDeferredResultProcessing(WebAsyncManager.java:462)
	at org.springframework.web.servlet.function.DefaultAsyncServerResponse.writeAsync(DefaultAsyncServerResponse.java:130)
	at org.springframework.web.servlet.function.DefaultEntityResponseBuilder$PublisherEntityResponse.writeToInternal(DefaultEntityResponseBuilder.java:429)
	at org.springframework.web.servlet.function.AbstractServerResponse.writeTo(AbstractServerResponse.java:101)
	at org.springframework.web.servlet.function.support.HandlerFunctionAdapter.handle(HandlerFunctionAdapter.java:112)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:633)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:511)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:454)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:361)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:208)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:285)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:149)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:239)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:243)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:57)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 12:15:26 [] ERROR o.a.c.c.C.[Tomcat].[localhost] - Exception Processing [ErrorPage[errorCode=0, location=/error]]
jakarta.servlet.ServletException: Async processing failed
	at org.springframework.web.servlet.function.DefaultAsyncServerResponse.writeAsync(DefaultAsyncServerResponse.java:136)
	at org.springframework.web.servlet.function.DefaultEntityResponseBuilder$PublisherEntityResponse.writeToInternal(DefaultEntityResponseBuilder.java:429)
	at org.springframework.web.servlet.function.AbstractServerResponse.writeTo(AbstractServerResponse.java:101)
	at org.springframework.web.servlet.function.support.HandlerFunctionAdapter.handle(HandlerFunctionAdapter.java:112)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:633)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:511)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:454)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:361)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:208)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:285)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:149)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:239)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:243)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:57)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: java.lang.IllegalStateException: Cannot start async: [ERROR]
	at org.springframework.util.Assert.state(Assert.java:79)
	at org.springframework.web.context.request.async.StandardServletAsyncWebRequest.startAsync(StandardServletAsyncWebRequest.java:157)
	at org.springframework.web.context.request.async.WebAsyncManager.startAsyncProcessing(WebAsyncManager.java:487)
	at org.springframework.web.context.request.async.WebAsyncManager.startDeferredResultProcessing(WebAsyncManager.java:462)
	at org.springframework.web.servlet.function.DefaultAsyncServerResponse.writeAsync(DefaultAsyncServerResponse.java:130)
	... 41 common frames omitted
2025-02-20 12:16:26 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [5ec11eb8, L:/127.0.0.1:57959 ! R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x5ec11eb8, L:/127.0.0.1:57959 ! R:localhost/127.0.0.1:8081]}, [disconnecting])
2025-02-20 12:22:18 [] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-02-20 12:22:19 [] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-02-20 12:22:21 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 5 thread-local buffer(s) from thread: reactor-http-nio-2
2025-02-20 12:22:21 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 5 thread-local buffer(s) from thread: reactor-http-nio-3
2025-02-20 12:22:25 [] DEBUG org.jboss.logging - Logging Provider: org.jboss.logging.Slf4jLoggerProvider found via system property
2025-02-20 12:22:25 [] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final
2025-02-20 12:22:25 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-02-20 12:22:25 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-02-20 12:22:25 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-02-20 12:22:25 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-02-20 12:22:25 [] DEBUG o.h.v.i.e.r.TraversableResolvers - Cannot find jakarta.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2025-02-20 12:22:25 [] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-02-20 12:22:25 [] INFO  c.c.c.g.c.CommongatewayApplication - Starting CommongatewayApplication using Java 17.0.12 with PID 13224 (E:\API-GATEWAY\commongateway\target\classes started by CITPL in E:\API-GATEWAY)
2025-02-20 12:22:25 [] DEBUG c.c.c.g.c.CommongatewayApplication - Running with Spring Boot v3.4.2, Spring v6.2.2
2025-02-20 12:22:25 [] INFO  c.c.c.g.c.CommongatewayApplication - No active profile set, falling back to 1 default profile: "default"
2025-02-20 12:22:25 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-02-20 12:22:25 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-02-20 12:22:25 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-02-20 12:22:25 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-02-20 12:22:25 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-02-20 12:22:25 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-02-20 12:22:26 [] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=50299984-946b-3bba-87da-3c9a1df8a676
2025-02-20 12:22:26 [] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-02-20 12:22:26 [] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-02-20 12:22:26 [] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-02-20 12:22:26 [] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.34]
2025-02-20 12:22:27 [] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-02-20 12:22:27 [] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1440 ms
2025-02-20 12:22:27 [] DEBUG i.n.u.i.l.InternalLoggerFactory - Using SLF4J as the default logging framework
2025-02-20 12:22:27 [] DEBUG i.n.util.internal.PlatformDependent0 - -Dio.netty.noUnsafe: false
2025-02-20 12:22:27 [] DEBUG i.n.util.internal.PlatformDependent0 - Java version: 17
2025-02-20 12:22:27 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe.theUnsafe: available
2025-02-20 12:22:27 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe base methods: all available
2025-02-20 12:22:27 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe.storeFence: available
2025-02-20 12:22:27 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.Buffer.address: available
2025-02-20 12:22:27 [] DEBUG i.n.util.internal.PlatformDependent0 - direct buffer constructor: unavailable: Reflective setAccessible(true) disabled
2025-02-20 12:22:27 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.Bits.unaligned: available, true
2025-02-20 12:22:27 [] DEBUG i.n.util.internal.PlatformDependent0 - jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable: class io.netty.util.internal.PlatformDependent0$7 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @7dc222ae
2025-02-20 12:22:27 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.DirectByteBuffer.<init>(long, {int,long}): unavailable
2025-02-20 12:22:27 [] DEBUG i.n.util.internal.PlatformDependent - sun.misc.Unsafe: available
2025-02-20 12:22:27 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.tmpdir: C:\Users\CITPL\AppData\Local\Temp (java.io.tmpdir)
2025-02-20 12:22:27 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.bitMode: 64 (sun.arch.data.model)
2025-02-20 12:22:27 [] DEBUG i.n.util.internal.PlatformDependent - Platform: Windows
2025-02-20 12:22:27 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.maxDirectMemory: -1 bytes
2025-02-20 12:22:27 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.uninitializedArrayAllocationThreshold: -1
2025-02-20 12:22:27 [] DEBUG io.netty.util.internal.CleanerJava9 - java.nio.ByteBuffer.cleaner(): available
2025-02-20 12:22:27 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.noPreferDirect: false
2025-02-20 12:22:27 [] DEBUG reactor.util.Loggers - Using Slf4j logging framework
2025-02-20 12:22:27 [] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-02-20 12:22:27 [] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2025-02-20 12:22:27 [] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2025-02-20 12:22:27 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-02-20 12:22:27 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via user class loader
2025-02-20 12:22:27 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-02-20 12:22:27 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-02-20 12:22:27 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-02-20 12:22:27 [] DEBUG o.h.v.i.e.r.TraversableResolvers - Cannot find jakarta.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2025-02-20 12:22:27 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-02-20 12:22:27 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-02-20 12:22:27 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-02-20 12:22:27 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-02-20 12:22:27 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-02-20 12:22:27 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-02-20 12:22:27 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	c.c.c.g.c.c.HomeController:
	{GET [/home]}: get()
2025-02-20 12:22:27 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2025-02-20 12:22:27 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 'beanNameHandlerMapping' {}
2025-02-20 12:22:27 [] DEBUG _.s.w.s.HandlerMapping.Mappings - Mapped com.citpl.common.gateway.commongateway.config.RouterConfiguration$$Lambda$895/0x00000220c750fb30@691567ea -> com.citpl.common.gateway.commongateway.config.RouterConfiguration$$Lambda$896/0x00000220c750fd98@5cfed0ba
2025-02-20 12:22:27 [] DEBUG _.s.w.s.HandlerMapping.Mappings - Mapped /validate/** -> ProxyExchangeHandlerFunction
/users/** -> ProxyExchangeHandlerFunction
2025-02-20 12:22:27 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2025-02-20 12:22:28 [] DEBUG i.n.u.i.InternalThreadLocalMap - -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2025-02-20 12:22:28 [] DEBUG i.n.u.i.InternalThreadLocalMap - -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2025-02-20 12:22:28 [] DEBUG io.netty.util.ResourceLeakDetector - -Dio.netty.leakDetection.level: simple
2025-02-20 12:22:28 [] DEBUG io.netty.util.ResourceLeakDetector - -Dio.netty.leakDetection.targetRecords: 4
2025-02-20 12:22:28 [] DEBUG i.n.handler.codec.compression.Brotli - brotli4j not in the classpath; Brotli support will be unavailable.
2025-02-20 12:22:28 [] DEBUG reactor.netty.tcp.TcpResources - [http] resources will use the default LoopResources: DefaultLoopResources {prefix=reactor-http, daemon=true, selectCount=12, workerCount=12}
2025-02-20 12:22:28 [] DEBUG reactor.netty.tcp.TcpResources - [http] resources will use the default ConnectionProvider: reactor.netty.resources.DefaultPooledConnectionProvider@56da96b3
2025-02-20 12:22:28 [] DEBUG r.netty.resources.DefaultLoopIOUring - Default io_uring support : false
2025-02-20 12:22:28 [] DEBUG r.netty.resources.DefaultLoopEpoll - Default Epoll support : false
2025-02-20 12:22:28 [] DEBUG r.netty.resources.DefaultLoopKQueue - Default KQueue support : false
2025-02-20 12:22:28 [] DEBUG i.n.c.MultithreadEventLoopGroup - -Dio.netty.eventLoopThreads: 24
2025-02-20 12:22:28 [] DEBUG i.n.u.concurrent.GlobalEventExecutor - -Dio.netty.globalEventExecutor.quietPeriodSeconds: 1
2025-02-20 12:22:28 [] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.noKeySetOptimization: false
2025-02-20 12:22:28 [] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.selectorAutoRebuildThreshold: 512
2025-02-20 12:22:28 [] DEBUG i.n.util.internal.PlatformDependent - org.jctools-core.MpscChunkedArrayQueue: available
2025-02-20 12:22:28 [] DEBUG io.netty.util.NetUtil - -Djava.net.preferIPv4Stack: false
2025-02-20 12:22:28 [] DEBUG io.netty.util.NetUtil - -Djava.net.preferIPv6Addresses: false
2025-02-20 12:22:28 [] DEBUG i.netty.util.NetUtilInitializations - Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2025-02-20 12:22:28 [] DEBUG io.netty.util.NetUtil - Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2025-02-20 12:22:28 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default ResolvedAddressTypes: IPV4_ONLY
2025-02-20 12:22:28 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Localhost address: localhost/127.0.0.1
2025-02-20 12:22:28 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Windows hostname: DESKTOP-P307093
2025-02-20 12:22:28 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default search domains: []
2025-02-20 12:22:28 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default UnixResolverOptions{ndots=1, timeout=5, attempts=16}
2025-02-20 12:22:28 [] DEBUG i.n.r.DefaultHostsFileEntriesResolver - -Dio.netty.hostsFileRefreshInterval: 0
2025-02-20 12:22:28 [] DEBUG i.n.r.d.DefaultDnsServerAddressStreamProvider - Default DNS servers: [/8.8.8.8:53, /4.2.2.2:53] (sun.net.dns.ResolverConfiguration)
2025-02-20 12:22:28 [] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-02-20 12:22:28 [] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-02-20 12:22:28 [] INFO  c.c.c.g.c.CommongatewayApplication - Started CommongatewayApplication in 3.621 seconds (process running for 4.454)
2025-02-20 12:22:51 [] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-02-20 12:22:51 [] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-02-20 12:22:51 [] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-02-20 12:22:51 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-20 12:22:51 [7293649f-9732-47f5-a71a-a1e8bef82895] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-20 12:22:51 [7293649f-9732-47f5-a71a-a1e8bef82895] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-20 12:22:51 [7293649f-9732-47f5-a71a-a1e8bef82895] INFO  c.c.c.g.c.config.RouterConfiguration - Authorized Request!
2025-02-20 12:22:51 [7293649f-9732-47f5-a71a-a1e8bef82895] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [GET] /validate
2025-02-20 12:22:51 [7293649f-9732-47f5-a71a-a1e8bef82895] INFO  c.c.c.g.c.config.RouterConfiguration - method: GET
2025-02-20 12:22:51 [7293649f-9732-47f5-a71a-a1e8bef82895] INFO  c.c.c.g.c.config.RouterConfiguration - path: /validate
2025-02-20 12:22:51 [7293649f-9732-47f5-a71a-a1e8bef82895] DEBUG r.n.r.PooledConnectionProvider - Creating a new [http] client pool [PoolFactory{evictionInterval=PT0S, leasingStrategy=fifo, maxConnections=500, maxIdleTime=-1, maxLifeTime=-1, metricsEnabled=false, pendingAcquireMaxCount=1000, pendingAcquireTimeout=45000}] for [localhost/<unresolved>:8081]
2025-02-20 12:22:51 [7293649f-9732-47f5-a71a-a1e8bef82895] DEBUG io.netty.channel.DefaultChannelId - -Dio.netty.processId: 13224 (auto-detected)
2025-02-20 12:22:51 [7293649f-9732-47f5-a71a-a1e8bef82895] DEBUG io.netty.channel.DefaultChannelId - -Dio.netty.machineId: a0:d3:65:ff:fe:5e:b0:28 (auto-detected)
2025-02-20 12:22:51 [7293649f-9732-47f5-a71a-a1e8bef82895] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.numHeapArenas: 24
2025-02-20 12:22:51 [7293649f-9732-47f5-a71a-a1e8bef82895] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.numDirectArenas: 24
2025-02-20 12:22:51 [7293649f-9732-47f5-a71a-a1e8bef82895] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.pageSize: 8192
2025-02-20 12:22:51 [7293649f-9732-47f5-a71a-a1e8bef82895] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxOrder: 9
2025-02-20 12:22:51 [7293649f-9732-47f5-a71a-a1e8bef82895] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.chunkSize: 4194304
2025-02-20 12:22:51 [7293649f-9732-47f5-a71a-a1e8bef82895] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.smallCacheSize: 256
2025-02-20 12:22:51 [7293649f-9732-47f5-a71a-a1e8bef82895] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.normalCacheSize: 64
2025-02-20 12:22:51 [7293649f-9732-47f5-a71a-a1e8bef82895] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2025-02-20 12:22:51 [7293649f-9732-47f5-a71a-a1e8bef82895] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.cacheTrimInterval: 8192
2025-02-20 12:22:51 [7293649f-9732-47f5-a71a-a1e8bef82895] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.cacheTrimIntervalMillis: 0
2025-02-20 12:22:51 [7293649f-9732-47f5-a71a-a1e8bef82895] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.useCacheForAllThreads: false
2025-02-20 12:22:51 [7293649f-9732-47f5-a71a-a1e8bef82895] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
2025-02-20 12:22:51 [7293649f-9732-47f5-a71a-a1e8bef82895] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.disableCacheFinalizersForFastThreadLocalThreads: false
2025-02-20 12:22:51 [7293649f-9732-47f5-a71a-a1e8bef82895] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.allocator.type: pooled
2025-02-20 12:22:51 [7293649f-9732-47f5-a71a-a1e8bef82895] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.threadLocalDirectBufferSize: 0
2025-02-20 12:22:51 [7293649f-9732-47f5-a71a-a1e8bef82895] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.maxThreadLocalCharBufferSize: 16384
2025-02-20 12:22:51 [] DEBUG r.n.r.PooledConnectionProvider - [933fcb4e] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 12:22:51 [] DEBUG io.netty.buffer.AbstractByteBuf - -Dio.netty.buffer.checkAccessible: true
2025-02-20 12:22:51 [] DEBUG io.netty.buffer.AbstractByteBuf - -Dio.netty.buffer.checkBounds: true
2025-02-20 12:22:51 [] DEBUG i.n.util.ResourceLeakDetectorFactory - Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@5f3c3eb1
2025-02-20 12:22:51 [] DEBUG r.netty.transport.TransportConfig - [933fcb4e] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-20 12:22:51 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 12:22:51 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 12:22:51 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 12:22:51 [] DEBUG i.n.b.ChannelInitializerExtensions - -Dio.netty.bootstrap.extensions: null
2025-02-20 12:22:51 [] DEBUG r.netty.transport.TransportConnector - [933fcb4e] Connecting to [localhost/127.0.0.1:8081].
2025-02-20 12:22:51 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [933fcb4e, L:/127.0.0.1:58422 - R:localhost/127.0.0.1:8081] Registering pool release on close event for channel
2025-02-20 12:22:51 [] DEBUG r.n.r.PooledConnectionProvider - [933fcb4e, L:/127.0.0.1:58422 - R:localhost/127.0.0.1:8081] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 12:22:51 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [933fcb4e, L:/127.0.0.1:58422 - R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x933fcb4e, L:/127.0.0.1:58422 - R:localhost/127.0.0.1:8081]}, [connected])
2025-02-20 12:22:51 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [933fcb4e-1, L:/127.0.0.1:58422 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0x933fcb4e, L:/127.0.0.1:58422 - R:localhost/127.0.0.1:8081]}}, [configured])
2025-02-20 12:22:51 [] DEBUG r.n.http.client.HttpClientConnect - [933fcb4e-1, L:/127.0.0.1:58422 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate, method=GET}
2025-02-20 12:22:51 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [933fcb4e-1, L:/127.0.0.1:58422 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x933fcb4e, L:/127.0.0.1:58422 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-20 12:22:51 [] DEBUG r.n.http.client.HttpClientOperations - [933fcb4e-1, L:/127.0.0.1:58422 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-20 12:22:51 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.maxCapacityPerThread: 4096
2025-02-20 12:22:51 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.ratio: 8
2025-02-20 12:22:51 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.chunkSize: 32
2025-02-20 12:22:51 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.blocking: false
2025-02-20 12:22:51 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.batchFastThreadLocalOnly: true
2025-02-20 12:22:51 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [933fcb4e-1, L:/127.0.0.1:58422 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x933fcb4e, L:/127.0.0.1:58422 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-20 12:22:52 [] DEBUG i.n.handler.codec.compression.Zstd - zstd-jni not in the classpath; Zstd support will be unavailable.
2025-02-20 12:22:52 [] DEBUG r.n.http.client.HttpClientOperations - [933fcb4e-1, L:/127.0.0.1:58422 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 500 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
Connection: <filtered>
2025-02-20 12:22:52 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [933fcb4e-1, L:/127.0.0.1:58422 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x933fcb4e, L:/127.0.0.1:58422 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-20 12:22:52 [] DEBUG reactor.netty.channel.FluxReceive - [933fcb4e-1, L:/127.0.0.1:58422 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 12:22:52 [] DEBUG r.n.http.client.HttpClientOperations - [933fcb4e-1, L:/127.0.0.1:58422 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-20 12:22:52 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [933fcb4e, L:/127.0.0.1:58422 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x933fcb4e, L:/127.0.0.1:58422 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-20 12:22:52 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [933fcb4e, L:/127.0.0.1:58422 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x933fcb4e, L:/127.0.0.1:58422 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-20 12:22:52 [] DEBUG r.n.r.PooledConnectionProvider - [933fcb4e, L:/127.0.0.1:58422 ! R:localhost/127.0.0.1:8081] Channel closed, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 12:22:52 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [933fcb4e, L:/127.0.0.1:58422 ! R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x933fcb4e, L:/127.0.0.1:58422 ! R:localhost/127.0.0.1:8081]}, [disconnecting])
2025-02-20 12:22:52 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.web.reactive.function.client.WebClientResponseException$InternalServerError: 500 Internal Server Error from GET http://localhost:8081/validate] with root cause
org.springframework.web.reactive.function.client.WebClientResponseException$InternalServerError: 500 Internal Server Error from GET http://localhost:8081/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 500 INTERNAL_SERVER_ERROR from GET http://localhost:8081/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104)
		at reactor.core.publisher.Mono.block(Mono.java:1779)
		at com.citpl.common.gateway.commongateway.config.RouterConfiguration.lambda$dynamicRouting$2(RouterConfiguration.java:56)
		at org.springframework.web.servlet.function.HandlerFilterFunction.lambda$ofErrorHandler$5(HandlerFilterFunction.java:114)
		at org.springframework.web.servlet.function.HandlerFilterFunction.lambda$andThen$0(HandlerFilterFunction.java:58)
		at org.springframework.web.servlet.function.HandlerFilterFunction.lambda$ofRequestProcessor$3(HandlerFilterFunction.java:83)
		at org.springframework.web.servlet.function.HandlerFilterFunction.lambda$andThen$1(HandlerFilterFunction.java:59)
		at org.springframework.web.servlet.function.HandlerFilterFunction.lambda$apply$2(HandlerFilterFunction.java:70)
		at org.springframework.web.servlet.function.support.HandlerFunctionAdapter.handle(HandlerFunctionAdapter.java:108)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
		at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at com.citpl.common.gateway.commongateway.filter.MDCFilter.doFilter(MDCFilter.java:37)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.cloud.gateway.server.mvc.filter.WeightCalculatorFilter.doFilter(WeightCalculatorFilter.java:229)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.cloud.gateway.server.mvc.filter.FormFilter.doFilter(FormFilter.java:93)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 12:22:52 [] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-20 12:22:52 [] INFO  c.c.c.g.c.config.RouterConfiguration - Authorized Request!
2025-02-20 12:22:52 [] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [GET] /error
2025-02-20 12:22:52 [] INFO  c.c.c.g.c.config.RouterConfiguration - method: GET
2025-02-20 12:22:52 [] INFO  c.c.c.g.c.config.RouterConfiguration - path: /error
2025-02-20 12:22:52 [] DEBUG r.n.r.PooledConnectionProvider - [c3cae8b3] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 12:22:52 [] DEBUG r.netty.transport.TransportConfig - [c3cae8b3] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-20 12:22:52 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 12:22:52 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 12:22:52 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 12:22:52 [] DEBUG r.netty.transport.TransportConnector - [c3cae8b3] Connecting to [localhost/127.0.0.1:8081].
2025-02-20 12:22:52 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [c3cae8b3, L:/127.0.0.1:58424 - R:localhost/127.0.0.1:8081] Registering pool release on close event for channel
2025-02-20 12:22:52 [] DEBUG r.n.r.PooledConnectionProvider - [c3cae8b3, L:/127.0.0.1:58424 - R:localhost/127.0.0.1:8081] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 12:22:52 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [c3cae8b3, L:/127.0.0.1:58424 - R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0xc3cae8b3, L:/127.0.0.1:58424 - R:localhost/127.0.0.1:8081]}, [connected])
2025-02-20 12:22:52 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [c3cae8b3-1, L:/127.0.0.1:58424 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0xc3cae8b3, L:/127.0.0.1:58424 - R:localhost/127.0.0.1:8081]}}, [configured])
2025-02-20 12:22:52 [] DEBUG r.n.http.client.HttpClientConnect - [c3cae8b3-1, L:/127.0.0.1:58424 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/error, method=GET}
2025-02-20 12:22:52 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [c3cae8b3-1, L:/127.0.0.1:58424 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0xc3cae8b3, L:/127.0.0.1:58424 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-20 12:22:52 [] DEBUG r.n.http.client.HttpClientOperations - [c3cae8b3-1, L:/127.0.0.1:58424 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-20 12:22:52 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [c3cae8b3-1, L:/127.0.0.1:58424 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0xc3cae8b3, L:/127.0.0.1:58424 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-20 12:22:52 [] DEBUG r.n.http.client.HttpClientOperations - [c3cae8b3-1, L:/127.0.0.1:58424 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 500 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
Connection: <filtered>
2025-02-20 12:22:52 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [c3cae8b3-1, L:/127.0.0.1:58424 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0xc3cae8b3, L:/127.0.0.1:58424 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-20 12:22:52 [] DEBUG reactor.netty.channel.FluxReceive - [c3cae8b3-1, L:/127.0.0.1:58424 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 12:22:52 [] DEBUG r.n.http.client.HttpClientOperations - [c3cae8b3-1, L:/127.0.0.1:58424 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-20 12:22:52 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [c3cae8b3, L:/127.0.0.1:58424 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0xc3cae8b3, L:/127.0.0.1:58424 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-20 12:22:52 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [c3cae8b3, L:/127.0.0.1:58424 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0xc3cae8b3, L:/127.0.0.1:58424 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-20 12:22:52 [] DEBUG r.n.r.PooledConnectionProvider - [c3cae8b3, L:/127.0.0.1:58424 ! R:localhost/127.0.0.1:8081] Channel closed, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 12:22:52 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [c3cae8b3, L:/127.0.0.1:58424 ! R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0xc3cae8b3, L:/127.0.0.1:58424 ! R:localhost/127.0.0.1:8081]}, [disconnecting])
2025-02-20 12:22:52 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] threw exception
org.springframework.web.reactive.function.client.WebClientResponseException$InternalServerError: 500 Internal Server Error from GET http://localhost:8081/error
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 500 INTERNAL_SERVER_ERROR from GET http://localhost:8081/error [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104)
		at reactor.core.publisher.Mono.block(Mono.java:1779)
		at com.citpl.common.gateway.commongateway.config.RouterConfiguration.lambda$dynamicRouting$2(RouterConfiguration.java:56)
		at org.springframework.web.servlet.function.HandlerFilterFunction.lambda$ofErrorHandler$5(HandlerFilterFunction.java:114)
		at org.springframework.web.servlet.function.HandlerFilterFunction.lambda$andThen$0(HandlerFilterFunction.java:58)
		at org.springframework.web.servlet.function.HandlerFilterFunction.lambda$ofRequestProcessor$3(HandlerFilterFunction.java:83)
		at org.springframework.web.servlet.function.HandlerFilterFunction.lambda$andThen$1(HandlerFilterFunction.java:59)
		at org.springframework.web.servlet.function.HandlerFilterFunction.lambda$apply$2(HandlerFilterFunction.java:70)
		at org.springframework.web.servlet.function.support.HandlerFunctionAdapter.handle(HandlerFunctionAdapter.java:108)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
		at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:633)
		at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:411)
		at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:331)
		at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:268)
		at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:380)
		at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:208)
		at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:285)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:149)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 12:22:52 [] ERROR o.a.c.c.C.[Tomcat].[localhost] - Exception Processing [ErrorPage[errorCode=0, location=/error]]
jakarta.servlet.ServletException: Request processing failed: org.springframework.web.reactive.function.client.WebClientResponseException$InternalServerError: 500 Internal Server Error from GET http://localhost:8081/error
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1022)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:633)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:411)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:331)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:268)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:380)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:208)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:285)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:149)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.web.reactive.function.client.WebClientResponseException$InternalServerError: 500 Internal Server Error from GET http://localhost:8081/error
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 500 INTERNAL_SERVER_ERROR from GET http://localhost:8081/error [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104)
		at reactor.core.publisher.Mono.block(Mono.java:1779)
		at com.citpl.common.gateway.commongateway.config.RouterConfiguration.lambda$dynamicRouting$2(RouterConfiguration.java:56)
		at org.springframework.web.servlet.function.HandlerFilterFunction.lambda$ofErrorHandler$5(HandlerFilterFunction.java:114)
		at org.springframework.web.servlet.function.HandlerFilterFunction.lambda$andThen$0(HandlerFilterFunction.java:58)
		at org.springframework.web.servlet.function.HandlerFilterFunction.lambda$ofRequestProcessor$3(HandlerFilterFunction.java:83)
		at org.springframework.web.servlet.function.HandlerFilterFunction.lambda$andThen$1(HandlerFilterFunction.java:59)
		at org.springframework.web.servlet.function.HandlerFilterFunction.lambda$apply$2(HandlerFilterFunction.java:70)
		at org.springframework.web.servlet.function.support.HandlerFunctionAdapter.handle(HandlerFunctionAdapter.java:108)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
		at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:633)
		at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:411)
		at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:331)
		at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:268)
		at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:380)
		at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:208)
		at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:285)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:149)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 12:22:58 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-20 12:22:58 [ec76800c-e115-47d7-aa24-abc1efcb48dd] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-20 12:22:58 [ec76800c-e115-47d7-aa24-abc1efcb48dd] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-20 12:22:58 [ec76800c-e115-47d7-aa24-abc1efcb48dd] INFO  c.c.c.g.c.config.RouterConfiguration - Authorized Request!
2025-02-20 12:22:58 [ec76800c-e115-47d7-aa24-abc1efcb48dd] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [GET] /validate
2025-02-20 12:22:58 [ec76800c-e115-47d7-aa24-abc1efcb48dd] INFO  c.c.c.g.c.config.RouterConfiguration - method: GET
2025-02-20 12:22:58 [ec76800c-e115-47d7-aa24-abc1efcb48dd] INFO  c.c.c.g.c.config.RouterConfiguration - path: /validate
2025-02-20 12:22:58 [] DEBUG r.n.r.PooledConnectionProvider - [a2cadcc9] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 12:22:58 [] DEBUG r.netty.transport.TransportConfig - [a2cadcc9] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-20 12:22:58 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 12:22:58 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 12:22:58 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 12:22:58 [] DEBUG r.netty.transport.TransportConnector - [a2cadcc9] Connecting to [localhost/127.0.0.1:8081].
2025-02-20 12:22:58 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [a2cadcc9, L:/127.0.0.1:58429 - R:localhost/127.0.0.1:8081] Registering pool release on close event for channel
2025-02-20 12:22:58 [] DEBUG r.n.r.PooledConnectionProvider - [a2cadcc9, L:/127.0.0.1:58429 - R:localhost/127.0.0.1:8081] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 12:22:58 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [a2cadcc9, L:/127.0.0.1:58429 - R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0xa2cadcc9, L:/127.0.0.1:58429 - R:localhost/127.0.0.1:8081]}, [connected])
2025-02-20 12:22:58 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [a2cadcc9-1, L:/127.0.0.1:58429 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0xa2cadcc9, L:/127.0.0.1:58429 - R:localhost/127.0.0.1:8081]}}, [configured])
2025-02-20 12:22:58 [] DEBUG r.n.http.client.HttpClientConnect - [a2cadcc9-1, L:/127.0.0.1:58429 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate, method=GET}
2025-02-20 12:22:58 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [a2cadcc9-1, L:/127.0.0.1:58429 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xa2cadcc9, L:/127.0.0.1:58429 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-20 12:22:58 [] DEBUG r.n.http.client.HttpClientOperations - [a2cadcc9-1, L:/127.0.0.1:58429 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-20 12:22:58 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [a2cadcc9-1, L:/127.0.0.1:58429 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xa2cadcc9, L:/127.0.0.1:58429 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-20 12:22:58 [] DEBUG r.n.http.client.HttpClientOperations - [a2cadcc9-1, L:/127.0.0.1:58429 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 500 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
Connection: <filtered>
2025-02-20 12:22:58 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [a2cadcc9-1, L:/127.0.0.1:58429 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xa2cadcc9, L:/127.0.0.1:58429 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-20 12:22:58 [] DEBUG reactor.netty.channel.FluxReceive - [a2cadcc9-1, L:/127.0.0.1:58429 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 12:22:58 [] DEBUG r.n.http.client.HttpClientOperations - [a2cadcc9-1, L:/127.0.0.1:58429 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-20 12:22:58 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [a2cadcc9, L:/127.0.0.1:58429 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xa2cadcc9, L:/127.0.0.1:58429 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-20 12:22:58 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [a2cadcc9, L:/127.0.0.1:58429 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xa2cadcc9, L:/127.0.0.1:58429 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-20 12:22:58 [] DEBUG r.n.r.PooledConnectionProvider - [a2cadcc9, L:/127.0.0.1:58429 ! R:localhost/127.0.0.1:8081] Channel closed, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 12:22:58 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [a2cadcc9, L:/127.0.0.1:58429 ! R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0xa2cadcc9, L:/127.0.0.1:58429 ! R:localhost/127.0.0.1:8081]}, [disconnecting])
2025-02-20 12:22:58 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.web.reactive.function.client.WebClientResponseException$InternalServerError: 500 Internal Server Error from GET http://localhost:8081/validate] with root cause
org.springframework.web.reactive.function.client.WebClientResponseException$InternalServerError: 500 Internal Server Error from GET http://localhost:8081/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 500 INTERNAL_SERVER_ERROR from GET http://localhost:8081/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104)
		at reactor.core.publisher.Mono.block(Mono.java:1779)
		at com.citpl.common.gateway.commongateway.config.RouterConfiguration.lambda$dynamicRouting$2(RouterConfiguration.java:56)
		at org.springframework.web.servlet.function.HandlerFilterFunction.lambda$ofErrorHandler$5(HandlerFilterFunction.java:114)
		at org.springframework.web.servlet.function.HandlerFilterFunction.lambda$andThen$0(HandlerFilterFunction.java:58)
		at org.springframework.web.servlet.function.HandlerFilterFunction.lambda$ofRequestProcessor$3(HandlerFilterFunction.java:83)
		at org.springframework.web.servlet.function.HandlerFilterFunction.lambda$andThen$1(HandlerFilterFunction.java:59)
		at org.springframework.web.servlet.function.HandlerFilterFunction.lambda$apply$2(HandlerFilterFunction.java:70)
		at org.springframework.web.servlet.function.support.HandlerFunctionAdapter.handle(HandlerFunctionAdapter.java:108)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
		at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at com.citpl.common.gateway.commongateway.filter.MDCFilter.doFilter(MDCFilter.java:37)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.cloud.gateway.server.mvc.filter.WeightCalculatorFilter.doFilter(WeightCalculatorFilter.java:229)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.cloud.gateway.server.mvc.filter.FormFilter.doFilter(FormFilter.java:93)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 12:22:58 [] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-20 12:22:58 [] INFO  c.c.c.g.c.config.RouterConfiguration - Authorized Request!
2025-02-20 12:22:58 [] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [GET] /error
2025-02-20 12:22:58 [] INFO  c.c.c.g.c.config.RouterConfiguration - method: GET
2025-02-20 12:22:58 [] INFO  c.c.c.g.c.config.RouterConfiguration - path: /error
2025-02-20 12:22:58 [] DEBUG r.n.r.PooledConnectionProvider - [8edd1857] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 12:22:58 [] DEBUG r.netty.transport.TransportConfig - [8edd1857] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-20 12:22:58 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 12:22:58 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 12:22:58 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 12:22:58 [] DEBUG r.netty.transport.TransportConnector - [8edd1857] Connecting to [localhost/127.0.0.1:8081].
2025-02-20 12:22:58 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [8edd1857, L:/127.0.0.1:58430 - R:localhost/127.0.0.1:8081] Registering pool release on close event for channel
2025-02-20 12:22:58 [] DEBUG r.n.r.PooledConnectionProvider - [8edd1857, L:/127.0.0.1:58430 - R:localhost/127.0.0.1:8081] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 12:22:58 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [8edd1857, L:/127.0.0.1:58430 - R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x8edd1857, L:/127.0.0.1:58430 - R:localhost/127.0.0.1:8081]}, [connected])
2025-02-20 12:22:58 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [8edd1857-1, L:/127.0.0.1:58430 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0x8edd1857, L:/127.0.0.1:58430 - R:localhost/127.0.0.1:8081]}}, [configured])
2025-02-20 12:22:58 [] DEBUG r.n.http.client.HttpClientConnect - [8edd1857-1, L:/127.0.0.1:58430 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/error, method=GET}
2025-02-20 12:22:58 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [8edd1857-1, L:/127.0.0.1:58430 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0x8edd1857, L:/127.0.0.1:58430 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-20 12:22:58 [] DEBUG r.n.http.client.HttpClientOperations - [8edd1857-1, L:/127.0.0.1:58430 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-20 12:22:58 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [8edd1857-1, L:/127.0.0.1:58430 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0x8edd1857, L:/127.0.0.1:58430 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-20 12:22:58 [] DEBUG r.n.http.client.HttpClientOperations - [8edd1857-1, L:/127.0.0.1:58430 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 500 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
Connection: <filtered>
2025-02-20 12:22:58 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [8edd1857-1, L:/127.0.0.1:58430 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0x8edd1857, L:/127.0.0.1:58430 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-20 12:22:58 [] DEBUG reactor.netty.channel.FluxReceive - [8edd1857-1, L:/127.0.0.1:58430 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 12:22:58 [] DEBUG r.n.http.client.HttpClientOperations - [8edd1857-1, L:/127.0.0.1:58430 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-20 12:22:58 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [8edd1857, L:/127.0.0.1:58430 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0x8edd1857, L:/127.0.0.1:58430 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-20 12:22:58 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [8edd1857, L:/127.0.0.1:58430 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0x8edd1857, L:/127.0.0.1:58430 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-20 12:22:58 [] DEBUG r.n.r.PooledConnectionProvider - [8edd1857, L:/127.0.0.1:58430 ! R:localhost/127.0.0.1:8081] Channel closed, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 12:22:58 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [8edd1857, L:/127.0.0.1:58430 ! R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x8edd1857, L:/127.0.0.1:58430 ! R:localhost/127.0.0.1:8081]}, [disconnecting])
2025-02-20 12:22:58 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] threw exception
org.springframework.web.reactive.function.client.WebClientResponseException$InternalServerError: 500 Internal Server Error from GET http://localhost:8081/error
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 500 INTERNAL_SERVER_ERROR from GET http://localhost:8081/error [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104)
		at reactor.core.publisher.Mono.block(Mono.java:1779)
		at com.citpl.common.gateway.commongateway.config.RouterConfiguration.lambda$dynamicRouting$2(RouterConfiguration.java:56)
		at org.springframework.web.servlet.function.HandlerFilterFunction.lambda$ofErrorHandler$5(HandlerFilterFunction.java:114)
		at org.springframework.web.servlet.function.HandlerFilterFunction.lambda$andThen$0(HandlerFilterFunction.java:58)
		at org.springframework.web.servlet.function.HandlerFilterFunction.lambda$ofRequestProcessor$3(HandlerFilterFunction.java:83)
		at org.springframework.web.servlet.function.HandlerFilterFunction.lambda$andThen$1(HandlerFilterFunction.java:59)
		at org.springframework.web.servlet.function.HandlerFilterFunction.lambda$apply$2(HandlerFilterFunction.java:70)
		at org.springframework.web.servlet.function.support.HandlerFunctionAdapter.handle(HandlerFunctionAdapter.java:108)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
		at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:633)
		at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:411)
		at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:331)
		at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:268)
		at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:380)
		at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:208)
		at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:285)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:149)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 12:22:58 [] ERROR o.a.c.c.C.[Tomcat].[localhost] - Exception Processing [ErrorPage[errorCode=0, location=/error]]
jakarta.servlet.ServletException: Request processing failed: org.springframework.web.reactive.function.client.WebClientResponseException$InternalServerError: 500 Internal Server Error from GET http://localhost:8081/error
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1022)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:633)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:411)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:331)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:268)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:380)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:208)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:285)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:149)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.web.reactive.function.client.WebClientResponseException$InternalServerError: 500 Internal Server Error from GET http://localhost:8081/error
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 500 INTERNAL_SERVER_ERROR from GET http://localhost:8081/error [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104)
		at reactor.core.publisher.Mono.block(Mono.java:1779)
		at com.citpl.common.gateway.commongateway.config.RouterConfiguration.lambda$dynamicRouting$2(RouterConfiguration.java:56)
		at org.springframework.web.servlet.function.HandlerFilterFunction.lambda$ofErrorHandler$5(HandlerFilterFunction.java:114)
		at org.springframework.web.servlet.function.HandlerFilterFunction.lambda$andThen$0(HandlerFilterFunction.java:58)
		at org.springframework.web.servlet.function.HandlerFilterFunction.lambda$ofRequestProcessor$3(HandlerFilterFunction.java:83)
		at org.springframework.web.servlet.function.HandlerFilterFunction.lambda$andThen$1(HandlerFilterFunction.java:59)
		at org.springframework.web.servlet.function.HandlerFilterFunction.lambda$apply$2(HandlerFilterFunction.java:70)
		at org.springframework.web.servlet.function.support.HandlerFunctionAdapter.handle(HandlerFunctionAdapter.java:108)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
		at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:633)
		at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:411)
		at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:331)
		at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:268)
		at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:380)
		at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:208)
		at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:285)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:149)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 12:23:08 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-20 12:23:08 [42b961b8-6619-47b4-b0bd-0481f94c529c] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-20 12:23:08 [42b961b8-6619-47b4-b0bd-0481f94c529c] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-20 12:23:08 [42b961b8-6619-47b4-b0bd-0481f94c529c] INFO  c.c.c.g.c.config.RouterConfiguration - Authorized Request!
2025-02-20 12:23:08 [42b961b8-6619-47b4-b0bd-0481f94c529c] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [GET] /users
2025-02-20 12:23:08 [42b961b8-6619-47b4-b0bd-0481f94c529c] INFO  c.c.c.g.c.config.RouterConfiguration - method: GET
2025-02-20 12:23:08 [42b961b8-6619-47b4-b0bd-0481f94c529c] INFO  c.c.c.g.c.config.RouterConfiguration - path: /users
2025-02-20 12:23:08 [] DEBUG r.n.r.PooledConnectionProvider - [17d8a944] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 12:23:08 [] DEBUG r.netty.transport.TransportConfig - [17d8a944] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-20 12:23:08 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 12:23:08 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 12:23:08 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 12:23:08 [] DEBUG r.netty.transport.TransportConnector - [17d8a944] Connecting to [localhost/127.0.0.1:8081].
2025-02-20 12:23:08 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [17d8a944, L:/127.0.0.1:58442 - R:localhost/127.0.0.1:8081] Registering pool release on close event for channel
2025-02-20 12:23:08 [] DEBUG r.n.r.PooledConnectionProvider - [17d8a944, L:/127.0.0.1:58442 - R:localhost/127.0.0.1:8081] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 12:23:08 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [17d8a944, L:/127.0.0.1:58442 - R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x17d8a944, L:/127.0.0.1:58442 - R:localhost/127.0.0.1:8081]}, [connected])
2025-02-20 12:23:08 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [17d8a944-1, L:/127.0.0.1:58442 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0x17d8a944, L:/127.0.0.1:58442 - R:localhost/127.0.0.1:8081]}}, [configured])
2025-02-20 12:23:08 [] DEBUG r.n.http.client.HttpClientConnect - [17d8a944-1, L:/127.0.0.1:58442 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/users, method=GET}
2025-02-20 12:23:08 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [17d8a944-1, L:/127.0.0.1:58442 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0x17d8a944, L:/127.0.0.1:58442 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-20 12:23:08 [] DEBUG r.n.http.client.HttpClientOperations - [17d8a944-1, L:/127.0.0.1:58442 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-20 12:23:08 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [17d8a944-1, L:/127.0.0.1:58442 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0x17d8a944, L:/127.0.0.1:58442 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-20 12:23:08 [] DEBUG r.n.http.client.HttpClientOperations - [17d8a944-1, L:/127.0.0.1:58442 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 500 
Vary: <filtered>
Vary: <filtered>
Vary: <filtered>
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
Connection: <filtered>
2025-02-20 12:23:08 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [17d8a944-1, L:/127.0.0.1:58442 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0x17d8a944, L:/127.0.0.1:58442 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-20 12:23:08 [] DEBUG reactor.netty.channel.FluxReceive - [17d8a944-1, L:/127.0.0.1:58442 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 12:23:08 [] DEBUG r.n.http.client.HttpClientOperations - [17d8a944-1, L:/127.0.0.1:58442 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-20 12:23:08 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [17d8a944, L:/127.0.0.1:58442 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0x17d8a944, L:/127.0.0.1:58442 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-20 12:23:08 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [17d8a944, L:/127.0.0.1:58442 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0x17d8a944, L:/127.0.0.1:58442 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-20 12:23:08 [] DEBUG r.n.r.PooledConnectionProvider - [17d8a944, L:/127.0.0.1:58442 ! R:localhost/127.0.0.1:8081] Channel closed, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 12:23:08 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [17d8a944, L:/127.0.0.1:58442 ! R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x17d8a944, L:/127.0.0.1:58442 ! R:localhost/127.0.0.1:8081]}, [disconnecting])
2025-02-20 12:23:08 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.web.reactive.function.client.WebClientResponseException$InternalServerError: 500 Internal Server Error from GET http://localhost:8081/users] with root cause
org.springframework.web.reactive.function.client.WebClientResponseException$InternalServerError: 500 Internal Server Error from GET http://localhost:8081/users
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 500 INTERNAL_SERVER_ERROR from GET http://localhost:8081/users [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104)
		at reactor.core.publisher.Mono.block(Mono.java:1779)
		at com.citpl.common.gateway.commongateway.config.RouterConfiguration.lambda$dynamicRouting$2(RouterConfiguration.java:56)
		at org.springframework.web.servlet.function.HandlerFilterFunction.lambda$ofErrorHandler$5(HandlerFilterFunction.java:114)
		at org.springframework.web.servlet.function.HandlerFilterFunction.lambda$andThen$0(HandlerFilterFunction.java:58)
		at org.springframework.web.servlet.function.HandlerFilterFunction.lambda$ofRequestProcessor$3(HandlerFilterFunction.java:83)
		at org.springframework.web.servlet.function.HandlerFilterFunction.lambda$andThen$1(HandlerFilterFunction.java:59)
		at org.springframework.web.servlet.function.HandlerFilterFunction.lambda$apply$2(HandlerFilterFunction.java:70)
		at org.springframework.web.servlet.function.support.HandlerFunctionAdapter.handle(HandlerFunctionAdapter.java:108)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
		at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at com.citpl.common.gateway.commongateway.filter.MDCFilter.doFilter(MDCFilter.java:37)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.cloud.gateway.server.mvc.filter.WeightCalculatorFilter.doFilter(WeightCalculatorFilter.java:229)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.cloud.gateway.server.mvc.filter.FormFilter.doFilter(FormFilter.java:93)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 12:23:08 [] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-20 12:23:08 [] INFO  c.c.c.g.c.config.RouterConfiguration - Authorized Request!
2025-02-20 12:23:08 [] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [GET] /error
2025-02-20 12:23:08 [] INFO  c.c.c.g.c.config.RouterConfiguration - method: GET
2025-02-20 12:23:08 [] INFO  c.c.c.g.c.config.RouterConfiguration - path: /error
2025-02-20 12:23:08 [] DEBUG r.n.r.PooledConnectionProvider - [d8b49f14] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 12:23:08 [] DEBUG r.netty.transport.TransportConfig - [d8b49f14] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-20 12:23:08 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 12:23:08 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 12:23:08 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 12:23:08 [] DEBUG r.netty.transport.TransportConnector - [d8b49f14] Connecting to [localhost/127.0.0.1:8081].
2025-02-20 12:23:08 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [d8b49f14, L:/127.0.0.1:58443 - R:localhost/127.0.0.1:8081] Registering pool release on close event for channel
2025-02-20 12:23:08 [] DEBUG r.n.r.PooledConnectionProvider - [d8b49f14, L:/127.0.0.1:58443 - R:localhost/127.0.0.1:8081] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 12:23:08 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [d8b49f14, L:/127.0.0.1:58443 - R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0xd8b49f14, L:/127.0.0.1:58443 - R:localhost/127.0.0.1:8081]}, [connected])
2025-02-20 12:23:08 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [d8b49f14-1, L:/127.0.0.1:58443 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0xd8b49f14, L:/127.0.0.1:58443 - R:localhost/127.0.0.1:8081]}}, [configured])
2025-02-20 12:23:08 [] DEBUG r.n.http.client.HttpClientConnect - [d8b49f14-1, L:/127.0.0.1:58443 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/error, method=GET}
2025-02-20 12:23:08 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [d8b49f14-1, L:/127.0.0.1:58443 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0xd8b49f14, L:/127.0.0.1:58443 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-20 12:23:08 [] DEBUG r.n.http.client.HttpClientOperations - [d8b49f14-1, L:/127.0.0.1:58443 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-20 12:23:08 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [d8b49f14-1, L:/127.0.0.1:58443 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0xd8b49f14, L:/127.0.0.1:58443 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-20 12:23:08 [] DEBUG r.n.http.client.HttpClientOperations - [d8b49f14-1, L:/127.0.0.1:58443 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 500 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
Connection: <filtered>
2025-02-20 12:23:08 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [d8b49f14-1, L:/127.0.0.1:58443 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0xd8b49f14, L:/127.0.0.1:58443 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-20 12:23:08 [] DEBUG reactor.netty.channel.FluxReceive - [d8b49f14-1, L:/127.0.0.1:58443 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 12:23:08 [] DEBUG r.n.http.client.HttpClientOperations - [d8b49f14-1, L:/127.0.0.1:58443 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-20 12:23:08 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [d8b49f14, L:/127.0.0.1:58443 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0xd8b49f14, L:/127.0.0.1:58443 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-20 12:23:08 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [d8b49f14, L:/127.0.0.1:58443 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0xd8b49f14, L:/127.0.0.1:58443 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-20 12:23:08 [] DEBUG r.n.r.PooledConnectionProvider - [d8b49f14, L:/127.0.0.1:58443 ! R:localhost/127.0.0.1:8081] Channel closed, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 12:23:08 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [d8b49f14, L:/127.0.0.1:58443 ! R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0xd8b49f14, L:/127.0.0.1:58443 ! R:localhost/127.0.0.1:8081]}, [disconnecting])
2025-02-20 12:23:08 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] threw exception
org.springframework.web.reactive.function.client.WebClientResponseException$InternalServerError: 500 Internal Server Error from GET http://localhost:8081/error
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 500 INTERNAL_SERVER_ERROR from GET http://localhost:8081/error [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104)
		at reactor.core.publisher.Mono.block(Mono.java:1779)
		at com.citpl.common.gateway.commongateway.config.RouterConfiguration.lambda$dynamicRouting$2(RouterConfiguration.java:56)
		at org.springframework.web.servlet.function.HandlerFilterFunction.lambda$ofErrorHandler$5(HandlerFilterFunction.java:114)
		at org.springframework.web.servlet.function.HandlerFilterFunction.lambda$andThen$0(HandlerFilterFunction.java:58)
		at org.springframework.web.servlet.function.HandlerFilterFunction.lambda$ofRequestProcessor$3(HandlerFilterFunction.java:83)
		at org.springframework.web.servlet.function.HandlerFilterFunction.lambda$andThen$1(HandlerFilterFunction.java:59)
		at org.springframework.web.servlet.function.HandlerFilterFunction.lambda$apply$2(HandlerFilterFunction.java:70)
		at org.springframework.web.servlet.function.support.HandlerFunctionAdapter.handle(HandlerFunctionAdapter.java:108)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
		at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:633)
		at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:411)
		at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:331)
		at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:268)
		at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:380)
		at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:208)
		at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:285)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:149)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 12:23:08 [] ERROR o.a.c.c.C.[Tomcat].[localhost] - Exception Processing [ErrorPage[errorCode=0, location=/error]]
jakarta.servlet.ServletException: Request processing failed: org.springframework.web.reactive.function.client.WebClientResponseException$InternalServerError: 500 Internal Server Error from GET http://localhost:8081/error
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1022)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:633)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:411)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:331)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:268)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:380)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:208)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:285)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:149)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.web.reactive.function.client.WebClientResponseException$InternalServerError: 500 Internal Server Error from GET http://localhost:8081/error
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 500 INTERNAL_SERVER_ERROR from GET http://localhost:8081/error [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104)
		at reactor.core.publisher.Mono.block(Mono.java:1779)
		at com.citpl.common.gateway.commongateway.config.RouterConfiguration.lambda$dynamicRouting$2(RouterConfiguration.java:56)
		at org.springframework.web.servlet.function.HandlerFilterFunction.lambda$ofErrorHandler$5(HandlerFilterFunction.java:114)
		at org.springframework.web.servlet.function.HandlerFilterFunction.lambda$andThen$0(HandlerFilterFunction.java:58)
		at org.springframework.web.servlet.function.HandlerFilterFunction.lambda$ofRequestProcessor$3(HandlerFilterFunction.java:83)
		at org.springframework.web.servlet.function.HandlerFilterFunction.lambda$andThen$1(HandlerFilterFunction.java:59)
		at org.springframework.web.servlet.function.HandlerFilterFunction.lambda$apply$2(HandlerFilterFunction.java:70)
		at org.springframework.web.servlet.function.support.HandlerFunctionAdapter.handle(HandlerFunctionAdapter.java:108)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
		at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:633)
		at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:411)
		at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:331)
		at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:268)
		at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:380)
		at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:208)
		at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:285)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:149)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 12:24:20 [] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-02-20 12:24:20 [] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-02-20 12:24:22 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 2 thread-local buffer(s) from thread: reactor-http-nio-6
2025-02-20 12:24:22 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 2 thread-local buffer(s) from thread: reactor-http-nio-2
2025-02-20 12:24:22 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 3 thread-local buffer(s) from thread: reactor-http-nio-7
2025-02-20 12:24:22 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 3 thread-local buffer(s) from thread: reactor-http-nio-3
2025-02-20 12:24:22 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 3 thread-local buffer(s) from thread: reactor-http-nio-4
2025-02-20 12:24:22 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 3 thread-local buffer(s) from thread: reactor-http-nio-5
2025-02-20 12:24:26 [] DEBUG org.jboss.logging - Logging Provider: org.jboss.logging.Slf4jLoggerProvider found via system property
2025-02-20 12:24:26 [] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final
2025-02-20 12:24:26 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-02-20 12:24:26 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-02-20 12:24:26 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-02-20 12:24:26 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-02-20 12:24:26 [] DEBUG o.h.v.i.e.r.TraversableResolvers - Cannot find jakarta.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2025-02-20 12:24:26 [] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-02-20 12:24:26 [] INFO  c.c.c.g.c.CommongatewayApplication - Starting CommongatewayApplication using Java 17.0.12 with PID 23656 (E:\API-GATEWAY\commongateway\target\classes started by CITPL in E:\API-GATEWAY)
2025-02-20 12:24:26 [] DEBUG c.c.c.g.c.CommongatewayApplication - Running with Spring Boot v3.4.2, Spring v6.2.2
2025-02-20 12:24:26 [] INFO  c.c.c.g.c.CommongatewayApplication - No active profile set, falling back to 1 default profile: "default"
2025-02-20 12:24:26 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-02-20 12:24:26 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-02-20 12:24:26 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-02-20 12:24:26 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-02-20 12:24:26 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-02-20 12:24:26 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-02-20 12:24:27 [] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=50299984-946b-3bba-87da-3c9a1df8a676
2025-02-20 12:24:28 [] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-02-20 12:24:28 [] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-02-20 12:24:28 [] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-02-20 12:24:28 [] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.34]
2025-02-20 12:24:28 [] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-02-20 12:24:28 [] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1440 ms
2025-02-20 12:24:28 [] DEBUG i.n.u.i.l.InternalLoggerFactory - Using SLF4J as the default logging framework
2025-02-20 12:24:28 [] DEBUG i.n.util.internal.PlatformDependent0 - -Dio.netty.noUnsafe: false
2025-02-20 12:24:28 [] DEBUG i.n.util.internal.PlatformDependent0 - Java version: 17
2025-02-20 12:24:28 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe.theUnsafe: available
2025-02-20 12:24:28 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe base methods: all available
2025-02-20 12:24:28 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe.storeFence: available
2025-02-20 12:24:28 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.Buffer.address: available
2025-02-20 12:24:28 [] DEBUG i.n.util.internal.PlatformDependent0 - direct buffer constructor: unavailable: Reflective setAccessible(true) disabled
2025-02-20 12:24:28 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.Bits.unaligned: available, true
2025-02-20 12:24:28 [] DEBUG i.n.util.internal.PlatformDependent0 - jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable: class io.netty.util.internal.PlatformDependent0$7 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @7dc222ae
2025-02-20 12:24:28 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.DirectByteBuffer.<init>(long, {int,long}): unavailable
2025-02-20 12:24:28 [] DEBUG i.n.util.internal.PlatformDependent - sun.misc.Unsafe: available
2025-02-20 12:24:28 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.tmpdir: C:\Users\CITPL\AppData\Local\Temp (java.io.tmpdir)
2025-02-20 12:24:28 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.bitMode: 64 (sun.arch.data.model)
2025-02-20 12:24:28 [] DEBUG i.n.util.internal.PlatformDependent - Platform: Windows
2025-02-20 12:24:28 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.maxDirectMemory: -1 bytes
2025-02-20 12:24:28 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.uninitializedArrayAllocationThreshold: -1
2025-02-20 12:24:28 [] DEBUG io.netty.util.internal.CleanerJava9 - java.nio.ByteBuffer.cleaner(): available
2025-02-20 12:24:28 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.noPreferDirect: false
2025-02-20 12:24:28 [] DEBUG reactor.util.Loggers - Using Slf4j logging framework
2025-02-20 12:24:28 [] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-02-20 12:24:28 [] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2025-02-20 12:24:28 [] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2025-02-20 12:24:28 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-02-20 12:24:28 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via user class loader
2025-02-20 12:24:28 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-02-20 12:24:28 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-02-20 12:24:28 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-02-20 12:24:28 [] DEBUG o.h.v.i.e.r.TraversableResolvers - Cannot find jakarta.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2025-02-20 12:24:28 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-02-20 12:24:28 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-02-20 12:24:28 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-02-20 12:24:28 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-02-20 12:24:28 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-02-20 12:24:28 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-02-20 12:24:28 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	c.c.c.g.c.c.HomeController:
	{GET [/home]}: get()
2025-02-20 12:24:28 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2025-02-20 12:24:28 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 'beanNameHandlerMapping' {}
2025-02-20 12:24:28 [] DEBUG _.s.w.s.HandlerMapping.Mappings - Mapped com.citpl.common.gateway.commongateway.config.RouterConfiguration$$Lambda$895/0x0000021f2750e138@17ff8810 -> com.citpl.common.gateway.commongateway.config.RouterConfiguration$$Lambda$896/0x0000021f2750e3a0@6c951ada
2025-02-20 12:24:28 [] DEBUG _.s.w.s.HandlerMapping.Mappings - Mapped /validate/** -> ProxyExchangeHandlerFunction
/users/** -> ProxyExchangeHandlerFunction
2025-02-20 12:24:28 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2025-02-20 12:24:29 [] DEBUG i.n.u.i.InternalThreadLocalMap - -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2025-02-20 12:24:29 [] DEBUG i.n.u.i.InternalThreadLocalMap - -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2025-02-20 12:24:29 [] DEBUG io.netty.util.ResourceLeakDetector - -Dio.netty.leakDetection.level: simple
2025-02-20 12:24:29 [] DEBUG io.netty.util.ResourceLeakDetector - -Dio.netty.leakDetection.targetRecords: 4
2025-02-20 12:24:29 [] DEBUG i.n.handler.codec.compression.Brotli - brotli4j not in the classpath; Brotli support will be unavailable.
2025-02-20 12:24:29 [] DEBUG reactor.netty.tcp.TcpResources - [http] resources will use the default LoopResources: DefaultLoopResources {prefix=reactor-http, daemon=true, selectCount=12, workerCount=12}
2025-02-20 12:24:29 [] DEBUG reactor.netty.tcp.TcpResources - [http] resources will use the default ConnectionProvider: reactor.netty.resources.DefaultPooledConnectionProvider@66234b0f
2025-02-20 12:24:29 [] DEBUG r.netty.resources.DefaultLoopIOUring - Default io_uring support : false
2025-02-20 12:24:29 [] DEBUG r.netty.resources.DefaultLoopEpoll - Default Epoll support : false
2025-02-20 12:24:29 [] DEBUG r.netty.resources.DefaultLoopKQueue - Default KQueue support : false
2025-02-20 12:24:29 [] DEBUG i.n.c.MultithreadEventLoopGroup - -Dio.netty.eventLoopThreads: 24
2025-02-20 12:24:29 [] DEBUG i.n.u.concurrent.GlobalEventExecutor - -Dio.netty.globalEventExecutor.quietPeriodSeconds: 1
2025-02-20 12:24:29 [] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.noKeySetOptimization: false
2025-02-20 12:24:29 [] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.selectorAutoRebuildThreshold: 512
2025-02-20 12:24:29 [] DEBUG i.n.util.internal.PlatformDependent - org.jctools-core.MpscChunkedArrayQueue: available
2025-02-20 12:24:29 [] DEBUG io.netty.util.NetUtil - -Djava.net.preferIPv4Stack: false
2025-02-20 12:24:29 [] DEBUG io.netty.util.NetUtil - -Djava.net.preferIPv6Addresses: false
2025-02-20 12:24:29 [] DEBUG i.netty.util.NetUtilInitializations - Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2025-02-20 12:24:29 [] DEBUG io.netty.util.NetUtil - Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2025-02-20 12:24:29 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default ResolvedAddressTypes: IPV4_ONLY
2025-02-20 12:24:29 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Localhost address: localhost/127.0.0.1
2025-02-20 12:24:29 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Windows hostname: DESKTOP-P307093
2025-02-20 12:24:29 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default search domains: []
2025-02-20 12:24:29 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default UnixResolverOptions{ndots=1, timeout=5, attempts=16}
2025-02-20 12:24:29 [] DEBUG i.n.r.DefaultHostsFileEntriesResolver - -Dio.netty.hostsFileRefreshInterval: 0
2025-02-20 12:24:29 [] DEBUG i.n.r.d.DefaultDnsServerAddressStreamProvider - Default DNS servers: [/8.8.8.8:53, /4.2.2.2:53] (sun.net.dns.ResolverConfiguration)
2025-02-20 12:24:29 [] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-02-20 12:24:29 [] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-02-20 12:24:29 [] INFO  c.c.c.g.c.CommongatewayApplication - Started CommongatewayApplication in 3.566 seconds (process running for 4.344)
2025-02-20 12:25:49 [] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-02-20 12:25:50 [] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-02-20 12:25:54 [] DEBUG org.jboss.logging - Logging Provider: org.jboss.logging.Slf4jLoggerProvider found via system property
2025-02-20 12:25:54 [] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final
2025-02-20 12:25:54 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-02-20 12:25:54 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-02-20 12:25:54 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-02-20 12:25:54 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-02-20 12:25:54 [] DEBUG o.h.v.i.e.r.TraversableResolvers - Cannot find jakarta.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2025-02-20 12:25:54 [] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-02-20 12:25:54 [] INFO  c.c.c.g.c.CommongatewayApplication - Starting CommongatewayApplication using Java 17.0.12 with PID 8824 (E:\API-GATEWAY\commongateway\target\classes started by CITPL in E:\API-GATEWAY)
2025-02-20 12:25:54 [] DEBUG c.c.c.g.c.CommongatewayApplication - Running with Spring Boot v3.4.2, Spring v6.2.2
2025-02-20 12:25:54 [] INFO  c.c.c.g.c.CommongatewayApplication - No active profile set, falling back to 1 default profile: "default"
2025-02-20 12:25:54 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-02-20 12:25:54 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-02-20 12:25:54 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-02-20 12:25:54 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-02-20 12:25:54 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-02-20 12:25:54 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-02-20 12:25:55 [] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=50299984-946b-3bba-87da-3c9a1df8a676
2025-02-20 12:25:56 [] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-02-20 12:25:56 [] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-02-20 12:25:56 [] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-02-20 12:25:56 [] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.34]
2025-02-20 12:25:56 [] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-02-20 12:25:56 [] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1730 ms
2025-02-20 12:25:56 [] DEBUG i.n.u.i.l.InternalLoggerFactory - Using SLF4J as the default logging framework
2025-02-20 12:25:56 [] DEBUG i.n.util.internal.PlatformDependent0 - -Dio.netty.noUnsafe: false
2025-02-20 12:25:56 [] DEBUG i.n.util.internal.PlatformDependent0 - Java version: 17
2025-02-20 12:25:56 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe.theUnsafe: available
2025-02-20 12:25:56 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe base methods: all available
2025-02-20 12:25:56 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe.storeFence: available
2025-02-20 12:25:56 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.Buffer.address: available
2025-02-20 12:25:56 [] DEBUG i.n.util.internal.PlatformDependent0 - direct buffer constructor: unavailable: Reflective setAccessible(true) disabled
2025-02-20 12:25:56 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.Bits.unaligned: available, true
2025-02-20 12:25:56 [] DEBUG i.n.util.internal.PlatformDependent0 - jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable: class io.netty.util.internal.PlatformDependent0$7 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @7dc222ae
2025-02-20 12:25:56 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.DirectByteBuffer.<init>(long, {int,long}): unavailable
2025-02-20 12:25:56 [] DEBUG i.n.util.internal.PlatformDependent - sun.misc.Unsafe: available
2025-02-20 12:25:56 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.tmpdir: C:\Users\CITPL\AppData\Local\Temp (java.io.tmpdir)
2025-02-20 12:25:56 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.bitMode: 64 (sun.arch.data.model)
2025-02-20 12:25:56 [] DEBUG i.n.util.internal.PlatformDependent - Platform: Windows
2025-02-20 12:25:56 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.maxDirectMemory: -1 bytes
2025-02-20 12:25:56 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.uninitializedArrayAllocationThreshold: -1
2025-02-20 12:25:56 [] DEBUG io.netty.util.internal.CleanerJava9 - java.nio.ByteBuffer.cleaner(): available
2025-02-20 12:25:56 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.noPreferDirect: false
2025-02-20 12:25:56 [] DEBUG reactor.util.Loggers - Using Slf4j logging framework
2025-02-20 12:25:56 [] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-02-20 12:25:56 [] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2025-02-20 12:25:56 [] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2025-02-20 12:25:56 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-02-20 12:25:56 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via user class loader
2025-02-20 12:25:56 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-02-20 12:25:56 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-02-20 12:25:56 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-02-20 12:25:56 [] DEBUG o.h.v.i.e.r.TraversableResolvers - Cannot find jakarta.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2025-02-20 12:25:56 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-02-20 12:25:56 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-02-20 12:25:56 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-02-20 12:25:56 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-02-20 12:25:56 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-02-20 12:25:56 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-02-20 12:25:57 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	c.c.c.g.c.c.HomeController:
	{GET [/home]}: get()
2025-02-20 12:25:57 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2025-02-20 12:25:57 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 'beanNameHandlerMapping' {}
2025-02-20 12:25:57 [] DEBUG _.s.w.s.HandlerMapping.Mappings - Mapped com.citpl.common.gateway.commongateway.config.RouterConfiguration$$Lambda$895/0x0000019b8d50fb88@367d34c0 -> com.citpl.common.gateway.commongateway.config.RouterConfiguration$$Lambda$896/0x0000019b8d510000@4ce25e47
2025-02-20 12:25:57 [] DEBUG _.s.w.s.HandlerMapping.Mappings - Mapped /validate/** -> ProxyExchangeHandlerFunction
/users/** -> ProxyExchangeHandlerFunction
2025-02-20 12:25:57 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2025-02-20 12:25:57 [] DEBUG i.n.u.i.InternalThreadLocalMap - -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2025-02-20 12:25:57 [] DEBUG i.n.u.i.InternalThreadLocalMap - -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2025-02-20 12:25:57 [] DEBUG io.netty.util.ResourceLeakDetector - -Dio.netty.leakDetection.level: simple
2025-02-20 12:25:57 [] DEBUG io.netty.util.ResourceLeakDetector - -Dio.netty.leakDetection.targetRecords: 4
2025-02-20 12:25:57 [] DEBUG i.n.handler.codec.compression.Brotli - brotli4j not in the classpath; Brotli support will be unavailable.
2025-02-20 12:25:57 [] DEBUG reactor.netty.tcp.TcpResources - [http] resources will use the default LoopResources: DefaultLoopResources {prefix=reactor-http, daemon=true, selectCount=12, workerCount=12}
2025-02-20 12:25:57 [] DEBUG reactor.netty.tcp.TcpResources - [http] resources will use the default ConnectionProvider: reactor.netty.resources.DefaultPooledConnectionProvider@4aa3fc9a
2025-02-20 12:25:57 [] DEBUG r.netty.resources.DefaultLoopIOUring - Default io_uring support : false
2025-02-20 12:25:57 [] DEBUG r.netty.resources.DefaultLoopEpoll - Default Epoll support : false
2025-02-20 12:25:57 [] DEBUG r.netty.resources.DefaultLoopKQueue - Default KQueue support : false
2025-02-20 12:25:57 [] DEBUG i.n.c.MultithreadEventLoopGroup - -Dio.netty.eventLoopThreads: 24
2025-02-20 12:25:57 [] DEBUG i.n.u.concurrent.GlobalEventExecutor - -Dio.netty.globalEventExecutor.quietPeriodSeconds: 1
2025-02-20 12:25:57 [] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.noKeySetOptimization: false
2025-02-20 12:25:57 [] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.selectorAutoRebuildThreshold: 512
2025-02-20 12:25:57 [] DEBUG i.n.util.internal.PlatformDependent - org.jctools-core.MpscChunkedArrayQueue: available
2025-02-20 12:25:57 [] DEBUG io.netty.util.NetUtil - -Djava.net.preferIPv4Stack: false
2025-02-20 12:25:57 [] DEBUG io.netty.util.NetUtil - -Djava.net.preferIPv6Addresses: false
2025-02-20 12:25:57 [] DEBUG i.netty.util.NetUtilInitializations - Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2025-02-20 12:25:57 [] DEBUG io.netty.util.NetUtil - Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2025-02-20 12:25:57 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default ResolvedAddressTypes: IPV4_ONLY
2025-02-20 12:25:57 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Localhost address: localhost/127.0.0.1
2025-02-20 12:25:57 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Windows hostname: DESKTOP-P307093
2025-02-20 12:25:57 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default search domains: []
2025-02-20 12:25:57 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default UnixResolverOptions{ndots=1, timeout=5, attempts=16}
2025-02-20 12:25:57 [] DEBUG i.n.r.DefaultHostsFileEntriesResolver - -Dio.netty.hostsFileRefreshInterval: 0
2025-02-20 12:25:57 [] DEBUG i.n.r.d.DefaultDnsServerAddressStreamProvider - Default DNS servers: [/8.8.8.8:53, /4.2.2.2:53] (sun.net.dns.ResolverConfiguration)
2025-02-20 12:25:57 [] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-02-20 12:25:57 [] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-02-20 12:25:58 [] INFO  c.c.c.g.c.CommongatewayApplication - Started CommongatewayApplication in 4.014 seconds (process running for 4.812)
2025-02-20 12:26:03 [] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-02-20 12:26:03 [] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-02-20 12:26:03 [] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-02-20 12:26:03 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-20 12:26:03 [78908742-31b5-496c-93bf-1d10f9e491a3] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-20 12:26:03 [78908742-31b5-496c-93bf-1d10f9e491a3] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-20 12:26:03 [78908742-31b5-496c-93bf-1d10f9e491a3] INFO  c.c.c.g.c.config.RouterConfiguration - Authorized Request!
2025-02-20 12:26:03 [78908742-31b5-496c-93bf-1d10f9e491a3] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [GET] /validate
2025-02-20 12:26:03 [78908742-31b5-496c-93bf-1d10f9e491a3] INFO  c.c.c.g.c.config.RouterConfiguration - method: GET
2025-02-20 12:26:03 [78908742-31b5-496c-93bf-1d10f9e491a3] INFO  c.c.c.g.c.config.RouterConfiguration - path: /validate
2025-02-20 12:26:03 [78908742-31b5-496c-93bf-1d10f9e491a3] DEBUG r.n.r.PooledConnectionProvider - Creating a new [http] client pool [PoolFactory{evictionInterval=PT0S, leasingStrategy=fifo, maxConnections=500, maxIdleTime=-1, maxLifeTime=-1, metricsEnabled=false, pendingAcquireMaxCount=1000, pendingAcquireTimeout=45000}] for [localhost/<unresolved>:8081]
2025-02-20 12:26:03 [78908742-31b5-496c-93bf-1d10f9e491a3] DEBUG io.netty.channel.DefaultChannelId - -Dio.netty.processId: 8824 (auto-detected)
2025-02-20 12:26:03 [78908742-31b5-496c-93bf-1d10f9e491a3] DEBUG io.netty.channel.DefaultChannelId - -Dio.netty.machineId: a0:d3:65:ff:fe:5e:b0:28 (auto-detected)
2025-02-20 12:26:03 [78908742-31b5-496c-93bf-1d10f9e491a3] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.numHeapArenas: 24
2025-02-20 12:26:03 [78908742-31b5-496c-93bf-1d10f9e491a3] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.numDirectArenas: 24
2025-02-20 12:26:03 [78908742-31b5-496c-93bf-1d10f9e491a3] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.pageSize: 8192
2025-02-20 12:26:03 [78908742-31b5-496c-93bf-1d10f9e491a3] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxOrder: 9
2025-02-20 12:26:03 [78908742-31b5-496c-93bf-1d10f9e491a3] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.chunkSize: 4194304
2025-02-20 12:26:03 [78908742-31b5-496c-93bf-1d10f9e491a3] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.smallCacheSize: 256
2025-02-20 12:26:03 [78908742-31b5-496c-93bf-1d10f9e491a3] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.normalCacheSize: 64
2025-02-20 12:26:03 [78908742-31b5-496c-93bf-1d10f9e491a3] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2025-02-20 12:26:03 [78908742-31b5-496c-93bf-1d10f9e491a3] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.cacheTrimInterval: 8192
2025-02-20 12:26:03 [78908742-31b5-496c-93bf-1d10f9e491a3] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.cacheTrimIntervalMillis: 0
2025-02-20 12:26:03 [78908742-31b5-496c-93bf-1d10f9e491a3] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.useCacheForAllThreads: false
2025-02-20 12:26:03 [78908742-31b5-496c-93bf-1d10f9e491a3] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
2025-02-20 12:26:03 [78908742-31b5-496c-93bf-1d10f9e491a3] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.disableCacheFinalizersForFastThreadLocalThreads: false
2025-02-20 12:26:03 [78908742-31b5-496c-93bf-1d10f9e491a3] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.allocator.type: pooled
2025-02-20 12:26:03 [78908742-31b5-496c-93bf-1d10f9e491a3] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.threadLocalDirectBufferSize: 0
2025-02-20 12:26:03 [78908742-31b5-496c-93bf-1d10f9e491a3] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.maxThreadLocalCharBufferSize: 16384
2025-02-20 12:26:03 [] DEBUG r.n.r.PooledConnectionProvider - [cd0f1347] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 12:26:03 [] DEBUG io.netty.buffer.AbstractByteBuf - -Dio.netty.buffer.checkAccessible: true
2025-02-20 12:26:03 [] DEBUG io.netty.buffer.AbstractByteBuf - -Dio.netty.buffer.checkBounds: true
2025-02-20 12:26:03 [] DEBUG i.n.util.ResourceLeakDetectorFactory - Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@10a49781
2025-02-20 12:26:03 [] DEBUG r.netty.transport.TransportConfig - [cd0f1347] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-20 12:26:03 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 12:26:03 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 12:26:03 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 12:26:03 [] DEBUG i.n.b.ChannelInitializerExtensions - -Dio.netty.bootstrap.extensions: null
2025-02-20 12:26:03 [] DEBUG r.netty.transport.TransportConnector - [cd0f1347] Connecting to [localhost/127.0.0.1:8081].
2025-02-20 12:26:03 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [cd0f1347, L:/127.0.0.1:58616 - R:localhost/127.0.0.1:8081] Registering pool release on close event for channel
2025-02-20 12:26:03 [] DEBUG r.n.r.PooledConnectionProvider - [cd0f1347, L:/127.0.0.1:58616 - R:localhost/127.0.0.1:8081] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 12:26:03 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [cd0f1347, L:/127.0.0.1:58616 - R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0xcd0f1347, L:/127.0.0.1:58616 - R:localhost/127.0.0.1:8081]}, [connected])
2025-02-20 12:26:03 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [cd0f1347-1, L:/127.0.0.1:58616 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0xcd0f1347, L:/127.0.0.1:58616 - R:localhost/127.0.0.1:8081]}}, [configured])
2025-02-20 12:26:03 [] DEBUG r.n.http.client.HttpClientConnect - [cd0f1347-1, L:/127.0.0.1:58616 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate, method=GET}
2025-02-20 12:26:03 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [cd0f1347-1, L:/127.0.0.1:58616 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xcd0f1347, L:/127.0.0.1:58616 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-20 12:26:03 [] DEBUG r.n.http.client.HttpClientOperations - [cd0f1347-1, L:/127.0.0.1:58616 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-20 12:26:03 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.maxCapacityPerThread: 4096
2025-02-20 12:26:03 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.ratio: 8
2025-02-20 12:26:03 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.chunkSize: 32
2025-02-20 12:26:03 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.blocking: false
2025-02-20 12:26:03 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.batchFastThreadLocalOnly: true
2025-02-20 12:26:03 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [cd0f1347-1, L:/127.0.0.1:58616 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xcd0f1347, L:/127.0.0.1:58616 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-20 12:26:03 [] DEBUG i.n.handler.codec.compression.Zstd - zstd-jni not in the classpath; Zstd support will be unavailable.
2025-02-20 12:26:03 [] DEBUG r.n.http.client.HttpClientOperations - [cd0f1347-1, L:/127.0.0.1:58616 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-20 12:26:03 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [cd0f1347-1, L:/127.0.0.1:58616 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xcd0f1347, L:/127.0.0.1:58616 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-20 12:26:03 [] DEBUG reactor.netty.channel.FluxReceive - [cd0f1347-1, L:/127.0.0.1:58616 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 12:26:03 [] DEBUG r.n.http.client.HttpClientOperations - [cd0f1347-1, L:/127.0.0.1:58616 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-20 12:26:03 [78908742-31b5-496c-93bf-1d10f9e491a3] INFO  c.c.c.g.c.config.RouterConfiguration - Validation Response: true
2025-02-20 12:26:03 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [cd0f1347, L:/127.0.0.1:58616 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xcd0f1347, L:/127.0.0.1:58616 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-20 12:26:03 [78908742-31b5-496c-93bf-1d10f9e491a3] INFO  c.c.c.g.c.config.RouterConfiguration - Forwarding [GET] /validate to User Microservice
2025-02-20 12:26:03 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [cd0f1347, L:/127.0.0.1:58616 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xcd0f1347, L:/127.0.0.1:58616 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-20 12:26:03 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [cd0f1347, L:/127.0.0.1:58616 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-20 12:26:03 [] DEBUG r.n.r.PooledConnectionProvider - [cd0f1347, L:/127.0.0.1:58616 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-20 12:26:03 [78908742-31b5-496c-93bf-1d10f9e491a3] DEBUG r.n.r.PooledConnectionProvider - Creating a new [http] client pool [PoolFactory{evictionInterval=PT0S, leasingStrategy=fifo, maxConnections=500, maxIdleTime=-1, maxLifeTime=-1, metricsEnabled=false, pendingAcquireMaxCount=1000, pendingAcquireTimeout=45000}] for [localhost/<unresolved>:8082]
2025-02-20 12:26:03 [] DEBUG r.n.r.PooledConnectionProvider - [568817ef] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 12:26:03 [] DEBUG r.netty.transport.TransportConfig - [568817ef] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-20 12:26:03 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 12:26:03 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 12:26:03 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 12:26:03 [] DEBUG r.netty.transport.TransportConnector - [568817ef] Connecting to [localhost/127.0.0.1:8082].
2025-02-20 12:26:03 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [568817ef, L:/127.0.0.1:58617 - R:localhost/127.0.0.1:8082] Registering pool release on close event for channel
2025-02-20 12:26:03 [] DEBUG r.n.r.PooledConnectionProvider - [568817ef, L:/127.0.0.1:58617 - R:localhost/127.0.0.1:8082] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 12:26:03 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [568817ef, L:/127.0.0.1:58617 - R:localhost/127.0.0.1:8082] onStateChange(PooledConnection{channel=[id: 0x568817ef, L:/127.0.0.1:58617 - R:localhost/127.0.0.1:8082]}, [connected])
2025-02-20 12:26:03 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [568817ef-1, L:/127.0.0.1:58617 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0x568817ef, L:/127.0.0.1:58617 - R:localhost/127.0.0.1:8082]}}, [configured])
2025-02-20 12:26:03 [] DEBUG r.n.http.client.HttpClientConnect - [568817ef-1, L:/127.0.0.1:58617 - R:localhost/127.0.0.1:8082] Handler is being applied: {uri=http://localhost:8082/validate, method=GET}
2025-02-20 12:26:03 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [568817ef-1, L:/127.0.0.1:58617 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x568817ef, L:/127.0.0.1:58617 - R:localhost/127.0.0.1:8082]}}, [request_prepared])
2025-02-20 12:26:03 [] DEBUG r.n.http.client.HttpClientOperations - [568817ef-1, L:/127.0.0.1:58617 - R:localhost/127.0.0.1:8082] No sendHeaders() called before complete, sending zero-length header
2025-02-20 12:26:03 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [568817ef-1, L:/127.0.0.1:58617 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x568817ef, L:/127.0.0.1:58617 - R:localhost/127.0.0.1:8082]}}, [request_sent])
2025-02-20 12:26:03 [] DEBUG r.n.http.client.HttpClientOperations - [568817ef-1, L:/127.0.0.1:58617 - R:localhost/127.0.0.1:8082] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 404 
Vary: <filtered>
Vary: <filtered>
Vary: <filtered>
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-20 12:26:03 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [568817ef-1, L:/127.0.0.1:58617 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x568817ef, L:/127.0.0.1:58617 - R:localhost/127.0.0.1:8082]}}, [response_received])
2025-02-20 12:26:03 [] DEBUG reactor.netty.channel.FluxReceive - [568817ef-1, L:/127.0.0.1:58617 - R:localhost/127.0.0.1:8082] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 12:26:03 [] DEBUG r.n.http.client.HttpClientOperations - [568817ef-1, L:/127.0.0.1:58617 - R:localhost/127.0.0.1:8082] Received last HTTP packet
2025-02-20 12:26:03 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [568817ef, L:/127.0.0.1:58617 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x568817ef, L:/127.0.0.1:58617 - R:localhost/127.0.0.1:8082]}}, [response_completed])
2025-02-20 12:26:03 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [568817ef, L:/127.0.0.1:58617 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x568817ef, L:/127.0.0.1:58617 - R:localhost/127.0.0.1:8082]}}, [disconnecting])
2025-02-20 12:26:03 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [568817ef, L:/127.0.0.1:58617 - R:localhost/127.0.0.1:8082] Releasing channel
2025-02-20 12:26:03 [] DEBUG r.n.r.PooledConnectionProvider - [568817ef, L:/127.0.0.1:58617 - R:localhost/127.0.0.1:8082] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-20 12:26:03 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] threw exception
org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 404 NOT_FOUND from GET http://localhost:8082/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 12:26:03 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate] with root cause
org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 404 NOT_FOUND from GET http://localhost:8082/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 12:26:03 [] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-20 12:26:03 [] INFO  c.c.c.g.c.config.RouterConfiguration - Authorized Request!
2025-02-20 12:26:03 [] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [GET] /error
2025-02-20 12:26:03 [] INFO  c.c.c.g.c.config.RouterConfiguration - method: GET
2025-02-20 12:26:03 [] INFO  c.c.c.g.c.config.RouterConfiguration - path: /error
2025-02-20 12:26:03 [] DEBUG r.n.r.PooledConnectionProvider - [cd0f1347, L:/127.0.0.1:58616 - R:localhost/127.0.0.1:8081] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 12:26:03 [] DEBUG r.n.http.client.HttpClientConnect - [cd0f1347-2, L:/127.0.0.1:58616 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/error, method=GET}
2025-02-20 12:26:03 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [cd0f1347-2, L:/127.0.0.1:58616 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0xcd0f1347, L:/127.0.0.1:58616 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-20 12:26:03 [] DEBUG r.n.http.client.HttpClientOperations - [cd0f1347-2, L:/127.0.0.1:58616 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-20 12:26:03 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [cd0f1347-2, L:/127.0.0.1:58616 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0xcd0f1347, L:/127.0.0.1:58616 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-20 12:26:03 [] DEBUG r.n.http.client.HttpClientOperations - [cd0f1347-2, L:/127.0.0.1:58616 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 500 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
Connection: <filtered>
2025-02-20 12:26:03 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [cd0f1347-2, L:/127.0.0.1:58616 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0xcd0f1347, L:/127.0.0.1:58616 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-20 12:26:03 [] DEBUG reactor.netty.channel.FluxReceive - [cd0f1347-2, L:/127.0.0.1:58616 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 12:26:03 [] DEBUG r.n.http.client.HttpClientOperations - [cd0f1347-2, L:/127.0.0.1:58616 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-20 12:26:03 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [cd0f1347, L:/127.0.0.1:58616 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0xcd0f1347, L:/127.0.0.1:58616 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-20 12:26:03 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [cd0f1347, L:/127.0.0.1:58616 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0xcd0f1347, L:/127.0.0.1:58616 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-20 12:26:03 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] threw exception
org.springframework.web.reactive.function.client.WebClientResponseException$InternalServerError: 500 Internal Server Error from GET http://localhost:8081/error
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 500 INTERNAL_SERVER_ERROR from GET http://localhost:8081/error [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104)
		at reactor.core.publisher.Mono.block(Mono.java:1779)
		at com.citpl.common.gateway.commongateway.config.RouterConfiguration.lambda$dynamicRouting$2(RouterConfiguration.java:56)
		at org.springframework.web.servlet.function.HandlerFilterFunction.lambda$ofErrorHandler$5(HandlerFilterFunction.java:114)
		at org.springframework.web.servlet.function.HandlerFilterFunction.lambda$andThen$0(HandlerFilterFunction.java:58)
		at org.springframework.web.servlet.function.HandlerFilterFunction.lambda$ofRequestProcessor$3(HandlerFilterFunction.java:83)
		at org.springframework.web.servlet.function.HandlerFilterFunction.lambda$andThen$1(HandlerFilterFunction.java:59)
		at org.springframework.web.servlet.function.HandlerFilterFunction.lambda$apply$2(HandlerFilterFunction.java:70)
		at org.springframework.web.servlet.function.support.HandlerFunctionAdapter.handle(HandlerFunctionAdapter.java:108)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
		at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:633)
		at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:411)
		at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:331)
		at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:268)
		at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:380)
		at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:208)
		at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:285)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:149)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:239)
		at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:243)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:57)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 12:26:03 [] DEBUG r.n.r.PooledConnectionProvider - [cd0f1347, L:/127.0.0.1:58616 ! R:localhost/127.0.0.1:8081] Channel closed, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 12:26:03 [] ERROR o.a.c.c.C.[Tomcat].[localhost] - Exception Processing [ErrorPage[errorCode=0, location=/error]]
jakarta.servlet.ServletException: Request processing failed: org.springframework.web.reactive.function.client.WebClientResponseException$InternalServerError: 500 Internal Server Error from GET http://localhost:8081/error
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1022)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:633)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:411)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:331)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:268)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:380)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:208)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:285)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:149)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:239)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:243)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:57)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.web.reactive.function.client.WebClientResponseException$InternalServerError: 500 Internal Server Error from GET http://localhost:8081/error
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 500 INTERNAL_SERVER_ERROR from GET http://localhost:8081/error [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104)
		at reactor.core.publisher.Mono.block(Mono.java:1779)
		at com.citpl.common.gateway.commongateway.config.RouterConfiguration.lambda$dynamicRouting$2(RouterConfiguration.java:56)
		at org.springframework.web.servlet.function.HandlerFilterFunction.lambda$ofErrorHandler$5(HandlerFilterFunction.java:114)
		at org.springframework.web.servlet.function.HandlerFilterFunction.lambda$andThen$0(HandlerFilterFunction.java:58)
		at org.springframework.web.servlet.function.HandlerFilterFunction.lambda$ofRequestProcessor$3(HandlerFilterFunction.java:83)
		at org.springframework.web.servlet.function.HandlerFilterFunction.lambda$andThen$1(HandlerFilterFunction.java:59)
		at org.springframework.web.servlet.function.HandlerFilterFunction.lambda$apply$2(HandlerFilterFunction.java:70)
		at org.springframework.web.servlet.function.support.HandlerFunctionAdapter.handle(HandlerFunctionAdapter.java:108)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
		at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:633)
		at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:411)
		at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:331)
		at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:268)
		at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:380)
		at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:208)
		at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:285)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:149)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:239)
		at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:243)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:57)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 12:26:03 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [cd0f1347, L:/127.0.0.1:58616 ! R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0xcd0f1347, L:/127.0.0.1:58616 ! R:localhost/127.0.0.1:8081]}, [disconnecting])
2025-02-20 12:27:04 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [568817ef, L:/127.0.0.1:58617 ! R:localhost/127.0.0.1:8082] onStateChange(PooledConnection{channel=[id: 0x568817ef, L:/127.0.0.1:58617 ! R:localhost/127.0.0.1:8082]}, [disconnecting])
2025-02-20 12:27:31 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-20 12:27:31 [c4ea03db-4fc2-433a-82de-85a5f8fe9efa] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-20 12:27:31 [c4ea03db-4fc2-433a-82de-85a5f8fe9efa] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-20 12:27:31 [c4ea03db-4fc2-433a-82de-85a5f8fe9efa] INFO  c.c.c.g.c.config.RouterConfiguration - Authorized Request!
2025-02-20 12:27:31 [c4ea03db-4fc2-433a-82de-85a5f8fe9efa] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [GET] /users
2025-02-20 12:27:31 [c4ea03db-4fc2-433a-82de-85a5f8fe9efa] INFO  c.c.c.g.c.config.RouterConfiguration - method: GET
2025-02-20 12:27:31 [c4ea03db-4fc2-433a-82de-85a5f8fe9efa] INFO  c.c.c.g.c.config.RouterConfiguration - path: /users
2025-02-20 12:27:31 [] DEBUG r.n.r.PooledConnectionProvider - [01882e56] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 12:27:31 [] DEBUG r.netty.transport.TransportConfig - [01882e56] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-20 12:27:31 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 12:27:31 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 12:27:31 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 12:27:31 [] DEBUG r.netty.transport.TransportConnector - [01882e56] Connecting to [localhost/127.0.0.1:8081].
2025-02-20 12:27:31 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [01882e56, L:/127.0.0.1:58648 - R:localhost/127.0.0.1:8081] Registering pool release on close event for channel
2025-02-20 12:27:31 [] DEBUG r.n.r.PooledConnectionProvider - [01882e56, L:/127.0.0.1:58648 - R:localhost/127.0.0.1:8081] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 12:27:31 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [01882e56, L:/127.0.0.1:58648 - R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x01882e56, L:/127.0.0.1:58648 - R:localhost/127.0.0.1:8081]}, [connected])
2025-02-20 12:27:31 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [01882e56-1, L:/127.0.0.1:58648 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0x01882e56, L:/127.0.0.1:58648 - R:localhost/127.0.0.1:8081]}}, [configured])
2025-02-20 12:27:31 [] DEBUG r.n.http.client.HttpClientConnect - [01882e56-1, L:/127.0.0.1:58648 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/users, method=GET}
2025-02-20 12:27:31 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [01882e56-1, L:/127.0.0.1:58648 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0x01882e56, L:/127.0.0.1:58648 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-20 12:27:31 [] DEBUG r.n.http.client.HttpClientOperations - [01882e56-1, L:/127.0.0.1:58648 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-20 12:27:31 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [01882e56-1, L:/127.0.0.1:58648 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0x01882e56, L:/127.0.0.1:58648 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-20 12:27:31 [] DEBUG r.n.http.client.HttpClientOperations - [01882e56-1, L:/127.0.0.1:58648 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 500 
Vary: <filtered>
Vary: <filtered>
Vary: <filtered>
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
Connection: <filtered>
2025-02-20 12:27:31 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [01882e56-1, L:/127.0.0.1:58648 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0x01882e56, L:/127.0.0.1:58648 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-20 12:27:31 [] DEBUG reactor.netty.channel.FluxReceive - [01882e56-1, L:/127.0.0.1:58648 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 12:27:31 [] DEBUG r.n.http.client.HttpClientOperations - [01882e56-1, L:/127.0.0.1:58648 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-20 12:27:31 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [01882e56, L:/127.0.0.1:58648 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0x01882e56, L:/127.0.0.1:58648 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-20 12:27:31 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [01882e56, L:/127.0.0.1:58648 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0x01882e56, L:/127.0.0.1:58648 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-20 12:27:31 [] DEBUG r.n.r.PooledConnectionProvider - [01882e56, L:/127.0.0.1:58648 ! R:localhost/127.0.0.1:8081] Channel closed, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 12:27:31 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [01882e56, L:/127.0.0.1:58648 ! R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x01882e56, L:/127.0.0.1:58648 ! R:localhost/127.0.0.1:8081]}, [disconnecting])
2025-02-20 12:27:31 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.web.reactive.function.client.WebClientResponseException$InternalServerError: 500 Internal Server Error from GET http://localhost:8081/users] with root cause
org.springframework.web.reactive.function.client.WebClientResponseException$InternalServerError: 500 Internal Server Error from GET http://localhost:8081/users
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 500 INTERNAL_SERVER_ERROR from GET http://localhost:8081/users [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104)
		at reactor.core.publisher.Mono.block(Mono.java:1779)
		at com.citpl.common.gateway.commongateway.config.RouterConfiguration.lambda$dynamicRouting$2(RouterConfiguration.java:56)
		at org.springframework.web.servlet.function.HandlerFilterFunction.lambda$ofErrorHandler$5(HandlerFilterFunction.java:114)
		at org.springframework.web.servlet.function.HandlerFilterFunction.lambda$andThen$0(HandlerFilterFunction.java:58)
		at org.springframework.web.servlet.function.HandlerFilterFunction.lambda$ofRequestProcessor$3(HandlerFilterFunction.java:83)
		at org.springframework.web.servlet.function.HandlerFilterFunction.lambda$andThen$1(HandlerFilterFunction.java:59)
		at org.springframework.web.servlet.function.HandlerFilterFunction.lambda$apply$2(HandlerFilterFunction.java:70)
		at org.springframework.web.servlet.function.support.HandlerFunctionAdapter.handle(HandlerFunctionAdapter.java:108)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
		at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at com.citpl.common.gateway.commongateway.filter.MDCFilter.doFilter(MDCFilter.java:37)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.cloud.gateway.server.mvc.filter.WeightCalculatorFilter.doFilter(WeightCalculatorFilter.java:229)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.cloud.gateway.server.mvc.filter.FormFilter.doFilter(FormFilter.java:93)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 12:27:31 [] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-20 12:27:31 [] INFO  c.c.c.g.c.config.RouterConfiguration - Authorized Request!
2025-02-20 12:27:31 [] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [GET] /error
2025-02-20 12:27:31 [] INFO  c.c.c.g.c.config.RouterConfiguration - method: GET
2025-02-20 12:27:31 [] INFO  c.c.c.g.c.config.RouterConfiguration - path: /error
2025-02-20 12:27:31 [] DEBUG r.n.r.PooledConnectionProvider - [5624396a] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 12:27:31 [] DEBUG r.netty.transport.TransportConfig - [5624396a] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-20 12:27:31 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 12:27:31 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 12:27:31 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 12:27:31 [] DEBUG r.netty.transport.TransportConnector - [5624396a] Connecting to [localhost/127.0.0.1:8081].
2025-02-20 12:27:31 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [5624396a, L:/127.0.0.1:58649 - R:localhost/127.0.0.1:8081] Registering pool release on close event for channel
2025-02-20 12:27:31 [] DEBUG r.n.r.PooledConnectionProvider - [5624396a, L:/127.0.0.1:58649 - R:localhost/127.0.0.1:8081] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 12:27:31 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [5624396a, L:/127.0.0.1:58649 - R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x5624396a, L:/127.0.0.1:58649 - R:localhost/127.0.0.1:8081]}, [connected])
2025-02-20 12:27:31 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [5624396a-1, L:/127.0.0.1:58649 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0x5624396a, L:/127.0.0.1:58649 - R:localhost/127.0.0.1:8081]}}, [configured])
2025-02-20 12:27:31 [] DEBUG r.n.http.client.HttpClientConnect - [5624396a-1, L:/127.0.0.1:58649 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/error, method=GET}
2025-02-20 12:27:31 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [5624396a-1, L:/127.0.0.1:58649 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0x5624396a, L:/127.0.0.1:58649 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-20 12:27:31 [] DEBUG r.n.http.client.HttpClientOperations - [5624396a-1, L:/127.0.0.1:58649 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-20 12:27:31 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [5624396a-1, L:/127.0.0.1:58649 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0x5624396a, L:/127.0.0.1:58649 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-20 12:27:31 [] DEBUG r.n.http.client.HttpClientOperations - [5624396a-1, L:/127.0.0.1:58649 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 500 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
Connection: <filtered>
2025-02-20 12:27:31 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [5624396a-1, L:/127.0.0.1:58649 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0x5624396a, L:/127.0.0.1:58649 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-20 12:27:31 [] DEBUG reactor.netty.channel.FluxReceive - [5624396a-1, L:/127.0.0.1:58649 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 12:27:31 [] DEBUG r.n.http.client.HttpClientOperations - [5624396a-1, L:/127.0.0.1:58649 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-20 12:27:31 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [5624396a, L:/127.0.0.1:58649 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0x5624396a, L:/127.0.0.1:58649 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-20 12:27:31 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [5624396a, L:/127.0.0.1:58649 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0x5624396a, L:/127.0.0.1:58649 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-20 12:27:31 [] DEBUG r.n.r.PooledConnectionProvider - [5624396a, L:/127.0.0.1:58649 ! R:localhost/127.0.0.1:8081] Channel closed, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 12:27:31 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [5624396a, L:/127.0.0.1:58649 ! R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x5624396a, L:/127.0.0.1:58649 ! R:localhost/127.0.0.1:8081]}, [disconnecting])
2025-02-20 12:27:31 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] threw exception
org.springframework.web.reactive.function.client.WebClientResponseException$InternalServerError: 500 Internal Server Error from GET http://localhost:8081/error
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 500 INTERNAL_SERVER_ERROR from GET http://localhost:8081/error [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104)
		at reactor.core.publisher.Mono.block(Mono.java:1779)
		at com.citpl.common.gateway.commongateway.config.RouterConfiguration.lambda$dynamicRouting$2(RouterConfiguration.java:56)
		at org.springframework.web.servlet.function.HandlerFilterFunction.lambda$ofErrorHandler$5(HandlerFilterFunction.java:114)
		at org.springframework.web.servlet.function.HandlerFilterFunction.lambda$andThen$0(HandlerFilterFunction.java:58)
		at org.springframework.web.servlet.function.HandlerFilterFunction.lambda$ofRequestProcessor$3(HandlerFilterFunction.java:83)
		at org.springframework.web.servlet.function.HandlerFilterFunction.lambda$andThen$1(HandlerFilterFunction.java:59)
		at org.springframework.web.servlet.function.HandlerFilterFunction.lambda$apply$2(HandlerFilterFunction.java:70)
		at org.springframework.web.servlet.function.support.HandlerFunctionAdapter.handle(HandlerFunctionAdapter.java:108)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
		at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:633)
		at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:411)
		at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:331)
		at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:268)
		at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:380)
		at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:208)
		at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:285)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:149)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 12:27:31 [] ERROR o.a.c.c.C.[Tomcat].[localhost] - Exception Processing [ErrorPage[errorCode=0, location=/error]]
jakarta.servlet.ServletException: Request processing failed: org.springframework.web.reactive.function.client.WebClientResponseException$InternalServerError: 500 Internal Server Error from GET http://localhost:8081/error
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1022)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:633)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:411)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:331)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:268)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:380)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:208)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:285)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:149)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.web.reactive.function.client.WebClientResponseException$InternalServerError: 500 Internal Server Error from GET http://localhost:8081/error
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 500 INTERNAL_SERVER_ERROR from GET http://localhost:8081/error [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104)
		at reactor.core.publisher.Mono.block(Mono.java:1779)
		at com.citpl.common.gateway.commongateway.config.RouterConfiguration.lambda$dynamicRouting$2(RouterConfiguration.java:56)
		at org.springframework.web.servlet.function.HandlerFilterFunction.lambda$ofErrorHandler$5(HandlerFilterFunction.java:114)
		at org.springframework.web.servlet.function.HandlerFilterFunction.lambda$andThen$0(HandlerFilterFunction.java:58)
		at org.springframework.web.servlet.function.HandlerFilterFunction.lambda$ofRequestProcessor$3(HandlerFilterFunction.java:83)
		at org.springframework.web.servlet.function.HandlerFilterFunction.lambda$andThen$1(HandlerFilterFunction.java:59)
		at org.springframework.web.servlet.function.HandlerFilterFunction.lambda$apply$2(HandlerFilterFunction.java:70)
		at org.springframework.web.servlet.function.support.HandlerFunctionAdapter.handle(HandlerFunctionAdapter.java:108)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
		at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:633)
		at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:411)
		at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:331)
		at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:268)
		at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:380)
		at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:208)
		at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:285)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:149)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 12:28:02 [] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-02-20 12:28:02 [] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-02-20 12:28:04 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 2 thread-local buffer(s) from thread: reactor-http-nio-5
2025-02-20 12:28:04 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 3 thread-local buffer(s) from thread: reactor-http-nio-2
2025-02-20 12:28:04 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 2 thread-local buffer(s) from thread: reactor-http-nio-3
2025-02-20 12:28:04 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 3 thread-local buffer(s) from thread: reactor-http-nio-4
2025-02-20 12:28:09 [] DEBUG org.jboss.logging - Logging Provider: org.jboss.logging.Slf4jLoggerProvider found via system property
2025-02-20 12:28:09 [] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final
2025-02-20 12:28:09 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-02-20 12:28:09 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-02-20 12:28:09 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-02-20 12:28:09 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-02-20 12:28:09 [] DEBUG o.h.v.i.e.r.TraversableResolvers - Cannot find jakarta.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2025-02-20 12:28:09 [] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-02-20 12:28:09 [] INFO  c.c.c.g.c.CommongatewayApplication - Starting CommongatewayApplication using Java 17.0.12 with PID 27780 (E:\API-GATEWAY\commongateway\target\classes started by CITPL in E:\API-GATEWAY)
2025-02-20 12:28:09 [] DEBUG c.c.c.g.c.CommongatewayApplication - Running with Spring Boot v3.4.2, Spring v6.2.2
2025-02-20 12:28:09 [] INFO  c.c.c.g.c.CommongatewayApplication - No active profile set, falling back to 1 default profile: "default"
2025-02-20 12:28:09 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-02-20 12:28:09 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-02-20 12:28:09 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-02-20 12:28:09 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-02-20 12:28:09 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-02-20 12:28:09 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-02-20 12:28:10 [] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=50299984-946b-3bba-87da-3c9a1df8a676
2025-02-20 12:28:10 [] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-02-20 12:28:10 [] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-02-20 12:28:10 [] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-02-20 12:28:10 [] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.34]
2025-02-20 12:28:10 [] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-02-20 12:28:10 [] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1481 ms
2025-02-20 12:28:10 [] DEBUG i.n.u.i.l.InternalLoggerFactory - Using SLF4J as the default logging framework
2025-02-20 12:28:10 [] DEBUG i.n.util.internal.PlatformDependent0 - -Dio.netty.noUnsafe: false
2025-02-20 12:28:10 [] DEBUG i.n.util.internal.PlatformDependent0 - Java version: 17
2025-02-20 12:28:10 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe.theUnsafe: available
2025-02-20 12:28:10 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe base methods: all available
2025-02-20 12:28:10 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe.storeFence: available
2025-02-20 12:28:10 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.Buffer.address: available
2025-02-20 12:28:10 [] DEBUG i.n.util.internal.PlatformDependent0 - direct buffer constructor: unavailable: Reflective setAccessible(true) disabled
2025-02-20 12:28:10 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.Bits.unaligned: available, true
2025-02-20 12:28:10 [] DEBUG i.n.util.internal.PlatformDependent0 - jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable: class io.netty.util.internal.PlatformDependent0$7 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @7dc222ae
2025-02-20 12:28:10 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.DirectByteBuffer.<init>(long, {int,long}): unavailable
2025-02-20 12:28:10 [] DEBUG i.n.util.internal.PlatformDependent - sun.misc.Unsafe: available
2025-02-20 12:28:10 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.tmpdir: C:\Users\CITPL\AppData\Local\Temp (java.io.tmpdir)
2025-02-20 12:28:10 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.bitMode: 64 (sun.arch.data.model)
2025-02-20 12:28:10 [] DEBUG i.n.util.internal.PlatformDependent - Platform: Windows
2025-02-20 12:28:10 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.maxDirectMemory: -1 bytes
2025-02-20 12:28:10 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.uninitializedArrayAllocationThreshold: -1
2025-02-20 12:28:10 [] DEBUG io.netty.util.internal.CleanerJava9 - java.nio.ByteBuffer.cleaner(): available
2025-02-20 12:28:10 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.noPreferDirect: false
2025-02-20 12:28:10 [] DEBUG reactor.util.Loggers - Using Slf4j logging framework
2025-02-20 12:28:11 [] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-02-20 12:28:11 [] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2025-02-20 12:28:11 [] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2025-02-20 12:28:11 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-02-20 12:28:11 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via user class loader
2025-02-20 12:28:11 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-02-20 12:28:11 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-02-20 12:28:11 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-02-20 12:28:11 [] DEBUG o.h.v.i.e.r.TraversableResolvers - Cannot find jakarta.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2025-02-20 12:28:11 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-02-20 12:28:11 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-02-20 12:28:11 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-02-20 12:28:11 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-02-20 12:28:11 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-02-20 12:28:11 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-02-20 12:28:11 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	c.c.c.g.c.c.HomeController:
	{GET [/home]}: get()
2025-02-20 12:28:11 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2025-02-20 12:28:11 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 'beanNameHandlerMapping' {}
2025-02-20 12:28:11 [] DEBUG _.s.w.s.HandlerMapping.Mappings - Mapped com.citpl.common.gateway.commongateway.config.RouterConfiguration$$Lambda$895/0x0000018b264efd78@6380e9e9 -> com.citpl.common.gateway.commongateway.config.RouterConfiguration$$Lambda$896/0x0000018b264f0000@350da119
2025-02-20 12:28:11 [] DEBUG _.s.w.s.HandlerMapping.Mappings - Mapped /validate/** -> ProxyExchangeHandlerFunction
/users/** -> ProxyExchangeHandlerFunction
2025-02-20 12:28:11 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2025-02-20 12:28:11 [] DEBUG i.n.u.i.InternalThreadLocalMap - -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2025-02-20 12:28:11 [] DEBUG i.n.u.i.InternalThreadLocalMap - -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2025-02-20 12:28:11 [] DEBUG io.netty.util.ResourceLeakDetector - -Dio.netty.leakDetection.level: simple
2025-02-20 12:28:11 [] DEBUG io.netty.util.ResourceLeakDetector - -Dio.netty.leakDetection.targetRecords: 4
2025-02-20 12:28:11 [] DEBUG i.n.handler.codec.compression.Brotli - brotli4j not in the classpath; Brotli support will be unavailable.
2025-02-20 12:28:11 [] DEBUG reactor.netty.tcp.TcpResources - [http] resources will use the default LoopResources: DefaultLoopResources {prefix=reactor-http, daemon=true, selectCount=12, workerCount=12}
2025-02-20 12:28:11 [] DEBUG reactor.netty.tcp.TcpResources - [http] resources will use the default ConnectionProvider: reactor.netty.resources.DefaultPooledConnectionProvider@634aa81e
2025-02-20 12:28:11 [] DEBUG r.netty.resources.DefaultLoopIOUring - Default io_uring support : false
2025-02-20 12:28:11 [] DEBUG r.netty.resources.DefaultLoopEpoll - Default Epoll support : false
2025-02-20 12:28:11 [] DEBUG r.netty.resources.DefaultLoopKQueue - Default KQueue support : false
2025-02-20 12:28:11 [] DEBUG i.n.c.MultithreadEventLoopGroup - -Dio.netty.eventLoopThreads: 24
2025-02-20 12:28:11 [] DEBUG i.n.u.concurrent.GlobalEventExecutor - -Dio.netty.globalEventExecutor.quietPeriodSeconds: 1
2025-02-20 12:28:12 [] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.noKeySetOptimization: false
2025-02-20 12:28:12 [] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.selectorAutoRebuildThreshold: 512
2025-02-20 12:28:12 [] DEBUG i.n.util.internal.PlatformDependent - org.jctools-core.MpscChunkedArrayQueue: available
2025-02-20 12:28:12 [] DEBUG io.netty.util.NetUtil - -Djava.net.preferIPv4Stack: false
2025-02-20 12:28:12 [] DEBUG io.netty.util.NetUtil - -Djava.net.preferIPv6Addresses: false
2025-02-20 12:28:12 [] DEBUG i.netty.util.NetUtilInitializations - Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2025-02-20 12:28:12 [] DEBUG io.netty.util.NetUtil - Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2025-02-20 12:28:12 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default ResolvedAddressTypes: IPV4_ONLY
2025-02-20 12:28:12 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Localhost address: localhost/127.0.0.1
2025-02-20 12:28:12 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Windows hostname: DESKTOP-P307093
2025-02-20 12:28:12 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default search domains: []
2025-02-20 12:28:12 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default UnixResolverOptions{ndots=1, timeout=5, attempts=16}
2025-02-20 12:28:12 [] DEBUG i.n.r.DefaultHostsFileEntriesResolver - -Dio.netty.hostsFileRefreshInterval: 0
2025-02-20 12:28:12 [] DEBUG i.n.r.d.DefaultDnsServerAddressStreamProvider - Default DNS servers: [/8.8.8.8:53, /4.2.2.2:53] (sun.net.dns.ResolverConfiguration)
2025-02-20 12:28:12 [] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-02-20 12:28:12 [] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-02-20 12:28:12 [] INFO  c.c.c.g.c.CommongatewayApplication - Started CommongatewayApplication in 3.668 seconds (process running for 4.446)
2025-02-20 12:28:17 [] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-02-20 12:28:17 [] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-02-20 12:28:17 [] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-02-20 12:28:17 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-20 12:28:17 [05a3baa3-8520-4fca-a436-d138157f027a] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-20 12:28:17 [05a3baa3-8520-4fca-a436-d138157f027a] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-20 12:28:17 [05a3baa3-8520-4fca-a436-d138157f027a] INFO  c.c.c.g.c.config.RouterConfiguration - Authorized Request!
2025-02-20 12:28:17 [05a3baa3-8520-4fca-a436-d138157f027a] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [GET] /validate
2025-02-20 12:28:17 [05a3baa3-8520-4fca-a436-d138157f027a] INFO  c.c.c.g.c.config.RouterConfiguration - method: GET
2025-02-20 12:28:17 [05a3baa3-8520-4fca-a436-d138157f027a] INFO  c.c.c.g.c.config.RouterConfiguration - path: /validate
2025-02-20 12:28:17 [05a3baa3-8520-4fca-a436-d138157f027a] DEBUG r.n.r.PooledConnectionProvider - Creating a new [http] client pool [PoolFactory{evictionInterval=PT0S, leasingStrategy=fifo, maxConnections=500, maxIdleTime=-1, maxLifeTime=-1, metricsEnabled=false, pendingAcquireMaxCount=1000, pendingAcquireTimeout=45000}] for [localhost/<unresolved>:8081]
2025-02-20 12:28:17 [05a3baa3-8520-4fca-a436-d138157f027a] DEBUG io.netty.channel.DefaultChannelId - -Dio.netty.processId: 27780 (auto-detected)
2025-02-20 12:28:17 [05a3baa3-8520-4fca-a436-d138157f027a] DEBUG io.netty.channel.DefaultChannelId - -Dio.netty.machineId: a0:d3:65:ff:fe:5e:b0:28 (auto-detected)
2025-02-20 12:28:17 [05a3baa3-8520-4fca-a436-d138157f027a] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.numHeapArenas: 24
2025-02-20 12:28:17 [05a3baa3-8520-4fca-a436-d138157f027a] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.numDirectArenas: 24
2025-02-20 12:28:17 [05a3baa3-8520-4fca-a436-d138157f027a] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.pageSize: 8192
2025-02-20 12:28:17 [05a3baa3-8520-4fca-a436-d138157f027a] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxOrder: 9
2025-02-20 12:28:17 [05a3baa3-8520-4fca-a436-d138157f027a] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.chunkSize: 4194304
2025-02-20 12:28:17 [05a3baa3-8520-4fca-a436-d138157f027a] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.smallCacheSize: 256
2025-02-20 12:28:17 [05a3baa3-8520-4fca-a436-d138157f027a] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.normalCacheSize: 64
2025-02-20 12:28:17 [05a3baa3-8520-4fca-a436-d138157f027a] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2025-02-20 12:28:17 [05a3baa3-8520-4fca-a436-d138157f027a] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.cacheTrimInterval: 8192
2025-02-20 12:28:17 [05a3baa3-8520-4fca-a436-d138157f027a] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.cacheTrimIntervalMillis: 0
2025-02-20 12:28:17 [05a3baa3-8520-4fca-a436-d138157f027a] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.useCacheForAllThreads: false
2025-02-20 12:28:17 [05a3baa3-8520-4fca-a436-d138157f027a] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
2025-02-20 12:28:17 [05a3baa3-8520-4fca-a436-d138157f027a] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.disableCacheFinalizersForFastThreadLocalThreads: false
2025-02-20 12:28:17 [05a3baa3-8520-4fca-a436-d138157f027a] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.allocator.type: pooled
2025-02-20 12:28:17 [05a3baa3-8520-4fca-a436-d138157f027a] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.threadLocalDirectBufferSize: 0
2025-02-20 12:28:17 [05a3baa3-8520-4fca-a436-d138157f027a] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.maxThreadLocalCharBufferSize: 16384
2025-02-20 12:28:17 [] DEBUG r.n.r.PooledConnectionProvider - [b83add4e] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 12:28:18 [] DEBUG io.netty.buffer.AbstractByteBuf - -Dio.netty.buffer.checkAccessible: true
2025-02-20 12:28:18 [] DEBUG io.netty.buffer.AbstractByteBuf - -Dio.netty.buffer.checkBounds: true
2025-02-20 12:28:18 [] DEBUG i.n.util.ResourceLeakDetectorFactory - Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@521ad8d
2025-02-20 12:28:18 [] DEBUG r.netty.transport.TransportConfig - [b83add4e] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-20 12:28:18 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 12:28:18 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 12:28:18 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 12:28:18 [] DEBUG i.n.b.ChannelInitializerExtensions - -Dio.netty.bootstrap.extensions: null
2025-02-20 12:28:18 [] DEBUG r.netty.transport.TransportConnector - [b83add4e] Connecting to [localhost/127.0.0.1:8081].
2025-02-20 12:28:18 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b83add4e, L:/127.0.0.1:58674 - R:localhost/127.0.0.1:8081] Registering pool release on close event for channel
2025-02-20 12:28:18 [] DEBUG r.n.r.PooledConnectionProvider - [b83add4e, L:/127.0.0.1:58674 - R:localhost/127.0.0.1:8081] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 12:28:18 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b83add4e, L:/127.0.0.1:58674 - R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0xb83add4e, L:/127.0.0.1:58674 - R:localhost/127.0.0.1:8081]}, [connected])
2025-02-20 12:28:18 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b83add4e-1, L:/127.0.0.1:58674 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0xb83add4e, L:/127.0.0.1:58674 - R:localhost/127.0.0.1:8081]}}, [configured])
2025-02-20 12:28:18 [] DEBUG r.n.http.client.HttpClientConnect - [b83add4e-1, L:/127.0.0.1:58674 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate, method=GET}
2025-02-20 12:28:18 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b83add4e-1, L:/127.0.0.1:58674 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xb83add4e, L:/127.0.0.1:58674 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-20 12:28:18 [] DEBUG r.n.http.client.HttpClientOperations - [b83add4e-1, L:/127.0.0.1:58674 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-20 12:28:18 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.maxCapacityPerThread: 4096
2025-02-20 12:28:18 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.ratio: 8
2025-02-20 12:28:18 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.chunkSize: 32
2025-02-20 12:28:18 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.blocking: false
2025-02-20 12:28:18 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.batchFastThreadLocalOnly: true
2025-02-20 12:28:18 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b83add4e-1, L:/127.0.0.1:58674 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xb83add4e, L:/127.0.0.1:58674 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-20 12:28:18 [] DEBUG i.n.handler.codec.compression.Zstd - zstd-jni not in the classpath; Zstd support will be unavailable.
2025-02-20 12:28:18 [] DEBUG r.n.http.client.HttpClientOperations - [b83add4e-1, L:/127.0.0.1:58674 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-20 12:28:18 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b83add4e-1, L:/127.0.0.1:58674 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xb83add4e, L:/127.0.0.1:58674 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-20 12:28:18 [] DEBUG reactor.netty.channel.FluxReceive - [b83add4e-1, L:/127.0.0.1:58674 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 12:28:18 [] DEBUG r.n.http.client.HttpClientOperations - [b83add4e-1, L:/127.0.0.1:58674 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-20 12:28:18 [05a3baa3-8520-4fca-a436-d138157f027a] INFO  c.c.c.g.c.config.RouterConfiguration - Validation Response: true
2025-02-20 12:28:18 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b83add4e, L:/127.0.0.1:58674 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xb83add4e, L:/127.0.0.1:58674 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-20 12:28:18 [05a3baa3-8520-4fca-a436-d138157f027a] INFO  c.c.c.g.c.config.RouterConfiguration - Forwarding [GET] /validate to User Microservice
2025-02-20 12:28:18 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b83add4e, L:/127.0.0.1:58674 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xb83add4e, L:/127.0.0.1:58674 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-20 12:28:18 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b83add4e, L:/127.0.0.1:58674 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-20 12:28:18 [] DEBUG r.n.r.PooledConnectionProvider - [b83add4e, L:/127.0.0.1:58674 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-20 12:28:18 [05a3baa3-8520-4fca-a436-d138157f027a] DEBUG r.n.r.PooledConnectionProvider - Creating a new [http] client pool [PoolFactory{evictionInterval=PT0S, leasingStrategy=fifo, maxConnections=500, maxIdleTime=-1, maxLifeTime=-1, metricsEnabled=false, pendingAcquireMaxCount=1000, pendingAcquireTimeout=45000}] for [localhost/<unresolved>:8082]
2025-02-20 12:28:18 [] DEBUG r.n.r.PooledConnectionProvider - [82bbc98d] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 12:28:18 [] DEBUG r.netty.transport.TransportConfig - [82bbc98d] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-20 12:28:18 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 12:28:18 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 12:28:18 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 12:28:18 [] DEBUG r.netty.transport.TransportConnector - [82bbc98d] Connecting to [localhost/127.0.0.1:8082].
2025-02-20 12:28:18 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [82bbc98d, L:/127.0.0.1:58675 - R:localhost/127.0.0.1:8082] Registering pool release on close event for channel
2025-02-20 12:28:18 [] DEBUG r.n.r.PooledConnectionProvider - [82bbc98d, L:/127.0.0.1:58675 - R:localhost/127.0.0.1:8082] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 12:28:18 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [82bbc98d, L:/127.0.0.1:58675 - R:localhost/127.0.0.1:8082] onStateChange(PooledConnection{channel=[id: 0x82bbc98d, L:/127.0.0.1:58675 - R:localhost/127.0.0.1:8082]}, [connected])
2025-02-20 12:28:18 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [82bbc98d-1, L:/127.0.0.1:58675 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0x82bbc98d, L:/127.0.0.1:58675 - R:localhost/127.0.0.1:8082]}}, [configured])
2025-02-20 12:28:18 [] DEBUG r.n.http.client.HttpClientConnect - [82bbc98d-1, L:/127.0.0.1:58675 - R:localhost/127.0.0.1:8082] Handler is being applied: {uri=http://localhost:8082/validate, method=GET}
2025-02-20 12:28:18 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [82bbc98d-1, L:/127.0.0.1:58675 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x82bbc98d, L:/127.0.0.1:58675 - R:localhost/127.0.0.1:8082]}}, [request_prepared])
2025-02-20 12:28:18 [] DEBUG r.n.http.client.HttpClientOperations - [82bbc98d-1, L:/127.0.0.1:58675 - R:localhost/127.0.0.1:8082] No sendHeaders() called before complete, sending zero-length header
2025-02-20 12:28:18 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [82bbc98d-1, L:/127.0.0.1:58675 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x82bbc98d, L:/127.0.0.1:58675 - R:localhost/127.0.0.1:8082]}}, [request_sent])
2025-02-20 12:28:18 [] DEBUG r.n.http.client.HttpClientOperations - [82bbc98d-1, L:/127.0.0.1:58675 - R:localhost/127.0.0.1:8082] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 404 
Vary: <filtered>
Vary: <filtered>
Vary: <filtered>
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-20 12:28:18 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [82bbc98d-1, L:/127.0.0.1:58675 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x82bbc98d, L:/127.0.0.1:58675 - R:localhost/127.0.0.1:8082]}}, [response_received])
2025-02-20 12:28:18 [] DEBUG reactor.netty.channel.FluxReceive - [82bbc98d-1, L:/127.0.0.1:58675 - R:localhost/127.0.0.1:8082] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 12:28:18 [] DEBUG r.n.http.client.HttpClientOperations - [82bbc98d-1, L:/127.0.0.1:58675 - R:localhost/127.0.0.1:8082] Received last HTTP packet
2025-02-20 12:28:18 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [82bbc98d, L:/127.0.0.1:58675 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x82bbc98d, L:/127.0.0.1:58675 - R:localhost/127.0.0.1:8082]}}, [response_completed])
2025-02-20 12:28:18 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [82bbc98d, L:/127.0.0.1:58675 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x82bbc98d, L:/127.0.0.1:58675 - R:localhost/127.0.0.1:8082]}}, [disconnecting])
2025-02-20 12:28:18 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [82bbc98d, L:/127.0.0.1:58675 - R:localhost/127.0.0.1:8082] Releasing channel
2025-02-20 12:28:18 [] DEBUG r.n.r.PooledConnectionProvider - [82bbc98d, L:/127.0.0.1:58675 - R:localhost/127.0.0.1:8082] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-20 12:28:18 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] threw exception
org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 404 NOT_FOUND from GET http://localhost:8082/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 12:28:18 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate] with root cause
org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 404 NOT_FOUND from GET http://localhost:8082/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 12:28:18 [] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-20 12:28:18 [] INFO  c.c.c.g.c.config.RouterConfiguration - Authorized Request!
2025-02-20 12:28:18 [] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [GET] /error
2025-02-20 12:28:18 [] INFO  c.c.c.g.c.config.RouterConfiguration - method: GET
2025-02-20 12:28:18 [] INFO  c.c.c.g.c.config.RouterConfiguration - path: /error
2025-02-20 12:28:18 [] DEBUG r.n.r.PooledConnectionProvider - [b83add4e, L:/127.0.0.1:58674 - R:localhost/127.0.0.1:8081] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 12:28:18 [] DEBUG r.n.http.client.HttpClientConnect - [b83add4e-2, L:/127.0.0.1:58674 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/error, method=GET}
2025-02-20 12:28:18 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b83add4e-2, L:/127.0.0.1:58674 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0xb83add4e, L:/127.0.0.1:58674 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-20 12:28:18 [] DEBUG r.n.http.client.HttpClientOperations - [b83add4e-2, L:/127.0.0.1:58674 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-20 12:28:18 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b83add4e-2, L:/127.0.0.1:58674 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0xb83add4e, L:/127.0.0.1:58674 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-20 12:28:18 [] DEBUG r.n.http.client.HttpClientOperations - [b83add4e-2, L:/127.0.0.1:58674 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 500 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
Connection: <filtered>
2025-02-20 12:28:18 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b83add4e-2, L:/127.0.0.1:58674 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0xb83add4e, L:/127.0.0.1:58674 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-20 12:28:18 [] DEBUG reactor.netty.channel.FluxReceive - [b83add4e-2, L:/127.0.0.1:58674 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 12:28:18 [] DEBUG r.n.http.client.HttpClientOperations - [b83add4e-2, L:/127.0.0.1:58674 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-20 12:28:18 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b83add4e, L:/127.0.0.1:58674 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0xb83add4e, L:/127.0.0.1:58674 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-20 12:28:18 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b83add4e, L:/127.0.0.1:58674 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0xb83add4e, L:/127.0.0.1:58674 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-20 12:28:18 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] threw exception
org.springframework.web.reactive.function.client.WebClientResponseException$InternalServerError: 500 Internal Server Error from GET http://localhost:8081/error
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 500 INTERNAL_SERVER_ERROR from GET http://localhost:8081/error [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104)
		at reactor.core.publisher.Mono.block(Mono.java:1779)
		at com.citpl.common.gateway.commongateway.config.RouterConfiguration.lambda$dynamicRouting$2(RouterConfiguration.java:56)
		at org.springframework.web.servlet.function.HandlerFilterFunction.lambda$ofErrorHandler$5(HandlerFilterFunction.java:114)
		at org.springframework.web.servlet.function.HandlerFilterFunction.lambda$andThen$0(HandlerFilterFunction.java:58)
		at org.springframework.web.servlet.function.HandlerFilterFunction.lambda$ofRequestProcessor$3(HandlerFilterFunction.java:83)
		at org.springframework.web.servlet.function.HandlerFilterFunction.lambda$andThen$1(HandlerFilterFunction.java:59)
		at org.springframework.web.servlet.function.HandlerFilterFunction.lambda$apply$2(HandlerFilterFunction.java:70)
		at org.springframework.web.servlet.function.support.HandlerFunctionAdapter.handle(HandlerFunctionAdapter.java:108)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
		at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:633)
		at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:411)
		at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:331)
		at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:268)
		at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:380)
		at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:208)
		at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:285)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:149)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:239)
		at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:243)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:57)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 12:28:18 [] DEBUG r.n.r.PooledConnectionProvider - [b83add4e, L:/127.0.0.1:58674 ! R:localhost/127.0.0.1:8081] Channel closed, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 12:28:18 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b83add4e, L:/127.0.0.1:58674 ! R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0xb83add4e, L:/127.0.0.1:58674 ! R:localhost/127.0.0.1:8081]}, [disconnecting])
2025-02-20 12:28:18 [] ERROR o.a.c.c.C.[Tomcat].[localhost] - Exception Processing [ErrorPage[errorCode=0, location=/error]]
jakarta.servlet.ServletException: Request processing failed: org.springframework.web.reactive.function.client.WebClientResponseException$InternalServerError: 500 Internal Server Error from GET http://localhost:8081/error
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1022)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:633)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:411)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:331)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:268)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:380)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:208)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:285)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:149)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:239)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:243)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:57)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.web.reactive.function.client.WebClientResponseException$InternalServerError: 500 Internal Server Error from GET http://localhost:8081/error
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 500 INTERNAL_SERVER_ERROR from GET http://localhost:8081/error [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104)
		at reactor.core.publisher.Mono.block(Mono.java:1779)
		at com.citpl.common.gateway.commongateway.config.RouterConfiguration.lambda$dynamicRouting$2(RouterConfiguration.java:56)
		at org.springframework.web.servlet.function.HandlerFilterFunction.lambda$ofErrorHandler$5(HandlerFilterFunction.java:114)
		at org.springframework.web.servlet.function.HandlerFilterFunction.lambda$andThen$0(HandlerFilterFunction.java:58)
		at org.springframework.web.servlet.function.HandlerFilterFunction.lambda$ofRequestProcessor$3(HandlerFilterFunction.java:83)
		at org.springframework.web.servlet.function.HandlerFilterFunction.lambda$andThen$1(HandlerFilterFunction.java:59)
		at org.springframework.web.servlet.function.HandlerFilterFunction.lambda$apply$2(HandlerFilterFunction.java:70)
		at org.springframework.web.servlet.function.support.HandlerFunctionAdapter.handle(HandlerFunctionAdapter.java:108)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
		at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:633)
		at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:411)
		at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:331)
		at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:268)
		at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:380)
		at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:208)
		at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:285)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:149)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:239)
		at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:243)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:57)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 12:28:34 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-20 12:28:34 [3ecf08cf-a56e-47a2-8b16-8ee8ba23393f] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-20 12:28:34 [3ecf08cf-a56e-47a2-8b16-8ee8ba23393f] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-20 12:28:34 [3ecf08cf-a56e-47a2-8b16-8ee8ba23393f] INFO  c.c.c.g.c.config.RouterConfiguration - Authorized Request!
2025-02-20 12:28:34 [3ecf08cf-a56e-47a2-8b16-8ee8ba23393f] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [GET] /users
2025-02-20 12:28:34 [3ecf08cf-a56e-47a2-8b16-8ee8ba23393f] INFO  c.c.c.g.c.config.RouterConfiguration - method: GET
2025-02-20 12:28:34 [3ecf08cf-a56e-47a2-8b16-8ee8ba23393f] INFO  c.c.c.g.c.config.RouterConfiguration - path: /users
2025-02-20 12:28:34 [] DEBUG r.n.r.PooledConnectionProvider - [2a2c90d4] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 12:28:34 [] DEBUG r.netty.transport.TransportConfig - [2a2c90d4] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-20 12:28:34 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 12:28:34 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 12:28:34 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 12:28:34 [] DEBUG r.netty.transport.TransportConnector - [2a2c90d4] Connecting to [localhost/127.0.0.1:8081].
2025-02-20 12:28:34 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [2a2c90d4, L:/127.0.0.1:58684 - R:localhost/127.0.0.1:8081] Registering pool release on close event for channel
2025-02-20 12:28:34 [] DEBUG r.n.r.PooledConnectionProvider - [2a2c90d4, L:/127.0.0.1:58684 - R:localhost/127.0.0.1:8081] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 12:28:34 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [2a2c90d4, L:/127.0.0.1:58684 - R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x2a2c90d4, L:/127.0.0.1:58684 - R:localhost/127.0.0.1:8081]}, [connected])
2025-02-20 12:28:34 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [2a2c90d4-1, L:/127.0.0.1:58684 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0x2a2c90d4, L:/127.0.0.1:58684 - R:localhost/127.0.0.1:8081]}}, [configured])
2025-02-20 12:28:34 [] DEBUG r.n.http.client.HttpClientConnect - [2a2c90d4-1, L:/127.0.0.1:58684 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/users, method=GET}
2025-02-20 12:28:34 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [2a2c90d4-1, L:/127.0.0.1:58684 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0x2a2c90d4, L:/127.0.0.1:58684 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-20 12:28:34 [] DEBUG r.n.http.client.HttpClientOperations - [2a2c90d4-1, L:/127.0.0.1:58684 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-20 12:28:34 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [2a2c90d4-1, L:/127.0.0.1:58684 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0x2a2c90d4, L:/127.0.0.1:58684 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-20 12:28:34 [] DEBUG r.n.http.client.HttpClientOperations - [2a2c90d4-1, L:/127.0.0.1:58684 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 500 
Vary: <filtered>
Vary: <filtered>
Vary: <filtered>
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
Connection: <filtered>
2025-02-20 12:28:34 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [2a2c90d4-1, L:/127.0.0.1:58684 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0x2a2c90d4, L:/127.0.0.1:58684 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-20 12:28:34 [] DEBUG reactor.netty.channel.FluxReceive - [2a2c90d4-1, L:/127.0.0.1:58684 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 12:28:34 [] DEBUG r.n.http.client.HttpClientOperations - [2a2c90d4-1, L:/127.0.0.1:58684 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-20 12:28:34 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [2a2c90d4, L:/127.0.0.1:58684 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0x2a2c90d4, L:/127.0.0.1:58684 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-20 12:28:34 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [2a2c90d4, L:/127.0.0.1:58684 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0x2a2c90d4, L:/127.0.0.1:58684 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-20 12:28:34 [] DEBUG r.n.r.PooledConnectionProvider - [2a2c90d4, L:/127.0.0.1:58684 ! R:localhost/127.0.0.1:8081] Channel closed, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 12:28:34 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [2a2c90d4, L:/127.0.0.1:58684 ! R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x2a2c90d4, L:/127.0.0.1:58684 ! R:localhost/127.0.0.1:8081]}, [disconnecting])
2025-02-20 12:28:34 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.web.reactive.function.client.WebClientResponseException$InternalServerError: 500 Internal Server Error from GET http://localhost:8081/users] with root cause
org.springframework.web.reactive.function.client.WebClientResponseException$InternalServerError: 500 Internal Server Error from GET http://localhost:8081/users
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 500 INTERNAL_SERVER_ERROR from GET http://localhost:8081/users [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104)
		at reactor.core.publisher.Mono.block(Mono.java:1779)
		at com.citpl.common.gateway.commongateway.config.RouterConfiguration.lambda$dynamicRouting$2(RouterConfiguration.java:56)
		at org.springframework.web.servlet.function.HandlerFilterFunction.lambda$ofErrorHandler$5(HandlerFilterFunction.java:114)
		at org.springframework.web.servlet.function.HandlerFilterFunction.lambda$andThen$0(HandlerFilterFunction.java:58)
		at org.springframework.web.servlet.function.HandlerFilterFunction.lambda$ofRequestProcessor$3(HandlerFilterFunction.java:83)
		at org.springframework.web.servlet.function.HandlerFilterFunction.lambda$andThen$1(HandlerFilterFunction.java:59)
		at org.springframework.web.servlet.function.HandlerFilterFunction.lambda$apply$2(HandlerFilterFunction.java:70)
		at org.springframework.web.servlet.function.support.HandlerFunctionAdapter.handle(HandlerFunctionAdapter.java:108)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
		at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at com.citpl.common.gateway.commongateway.filter.MDCFilter.doFilter(MDCFilter.java:37)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.cloud.gateway.server.mvc.filter.WeightCalculatorFilter.doFilter(WeightCalculatorFilter.java:229)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.cloud.gateway.server.mvc.filter.FormFilter.doFilter(FormFilter.java:93)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 12:28:34 [] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-20 12:28:34 [] INFO  c.c.c.g.c.config.RouterConfiguration - Authorized Request!
2025-02-20 12:28:34 [] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [GET] /error
2025-02-20 12:28:34 [] INFO  c.c.c.g.c.config.RouterConfiguration - method: GET
2025-02-20 12:28:34 [] INFO  c.c.c.g.c.config.RouterConfiguration - path: /error
2025-02-20 12:28:34 [] DEBUG r.n.r.PooledConnectionProvider - [c5bb2027] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 12:28:34 [] DEBUG r.netty.transport.TransportConfig - [c5bb2027] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-20 12:28:34 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 12:28:34 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 12:28:34 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 12:28:34 [] DEBUG r.netty.transport.TransportConnector - [c5bb2027] Connecting to [localhost/127.0.0.1:8081].
2025-02-20 12:28:34 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [c5bb2027, L:/127.0.0.1:58685 - R:localhost/127.0.0.1:8081] Registering pool release on close event for channel
2025-02-20 12:28:34 [] DEBUG r.n.r.PooledConnectionProvider - [c5bb2027, L:/127.0.0.1:58685 - R:localhost/127.0.0.1:8081] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 12:28:34 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [c5bb2027, L:/127.0.0.1:58685 - R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0xc5bb2027, L:/127.0.0.1:58685 - R:localhost/127.0.0.1:8081]}, [connected])
2025-02-20 12:28:34 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [c5bb2027-1, L:/127.0.0.1:58685 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0xc5bb2027, L:/127.0.0.1:58685 - R:localhost/127.0.0.1:8081]}}, [configured])
2025-02-20 12:28:34 [] DEBUG r.n.http.client.HttpClientConnect - [c5bb2027-1, L:/127.0.0.1:58685 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/error, method=GET}
2025-02-20 12:28:34 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [c5bb2027-1, L:/127.0.0.1:58685 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0xc5bb2027, L:/127.0.0.1:58685 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-20 12:28:34 [] DEBUG r.n.http.client.HttpClientOperations - [c5bb2027-1, L:/127.0.0.1:58685 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-20 12:28:34 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [c5bb2027-1, L:/127.0.0.1:58685 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0xc5bb2027, L:/127.0.0.1:58685 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-20 12:28:34 [] DEBUG r.n.http.client.HttpClientOperations - [c5bb2027-1, L:/127.0.0.1:58685 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 500 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
Connection: <filtered>
2025-02-20 12:28:34 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [c5bb2027-1, L:/127.0.0.1:58685 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0xc5bb2027, L:/127.0.0.1:58685 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-20 12:28:34 [] DEBUG reactor.netty.channel.FluxReceive - [c5bb2027-1, L:/127.0.0.1:58685 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 12:28:34 [] DEBUG r.n.http.client.HttpClientOperations - [c5bb2027-1, L:/127.0.0.1:58685 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-20 12:28:34 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [c5bb2027, L:/127.0.0.1:58685 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0xc5bb2027, L:/127.0.0.1:58685 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-20 12:28:34 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [c5bb2027, L:/127.0.0.1:58685 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0xc5bb2027, L:/127.0.0.1:58685 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-20 12:28:34 [] DEBUG r.n.r.PooledConnectionProvider - [c5bb2027, L:/127.0.0.1:58685 ! R:localhost/127.0.0.1:8081] Channel closed, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 12:28:34 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [c5bb2027, L:/127.0.0.1:58685 ! R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0xc5bb2027, L:/127.0.0.1:58685 ! R:localhost/127.0.0.1:8081]}, [disconnecting])
2025-02-20 12:28:34 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] threw exception
org.springframework.web.reactive.function.client.WebClientResponseException$InternalServerError: 500 Internal Server Error from GET http://localhost:8081/error
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 500 INTERNAL_SERVER_ERROR from GET http://localhost:8081/error [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104)
		at reactor.core.publisher.Mono.block(Mono.java:1779)
		at com.citpl.common.gateway.commongateway.config.RouterConfiguration.lambda$dynamicRouting$2(RouterConfiguration.java:56)
		at org.springframework.web.servlet.function.HandlerFilterFunction.lambda$ofErrorHandler$5(HandlerFilterFunction.java:114)
		at org.springframework.web.servlet.function.HandlerFilterFunction.lambda$andThen$0(HandlerFilterFunction.java:58)
		at org.springframework.web.servlet.function.HandlerFilterFunction.lambda$ofRequestProcessor$3(HandlerFilterFunction.java:83)
		at org.springframework.web.servlet.function.HandlerFilterFunction.lambda$andThen$1(HandlerFilterFunction.java:59)
		at org.springframework.web.servlet.function.HandlerFilterFunction.lambda$apply$2(HandlerFilterFunction.java:70)
		at org.springframework.web.servlet.function.support.HandlerFunctionAdapter.handle(HandlerFunctionAdapter.java:108)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
		at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:633)
		at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:411)
		at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:331)
		at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:268)
		at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:380)
		at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:208)
		at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:285)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:149)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 12:28:34 [] ERROR o.a.c.c.C.[Tomcat].[localhost] - Exception Processing [ErrorPage[errorCode=0, location=/error]]
jakarta.servlet.ServletException: Request processing failed: org.springframework.web.reactive.function.client.WebClientResponseException$InternalServerError: 500 Internal Server Error from GET http://localhost:8081/error
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1022)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:633)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:411)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:331)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:268)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:380)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:208)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:285)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:149)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.web.reactive.function.client.WebClientResponseException$InternalServerError: 500 Internal Server Error from GET http://localhost:8081/error
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 500 INTERNAL_SERVER_ERROR from GET http://localhost:8081/error [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:332)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104)
		at reactor.core.publisher.Mono.block(Mono.java:1779)
		at com.citpl.common.gateway.commongateway.config.RouterConfiguration.lambda$dynamicRouting$2(RouterConfiguration.java:56)
		at org.springframework.web.servlet.function.HandlerFilterFunction.lambda$ofErrorHandler$5(HandlerFilterFunction.java:114)
		at org.springframework.web.servlet.function.HandlerFilterFunction.lambda$andThen$0(HandlerFilterFunction.java:58)
		at org.springframework.web.servlet.function.HandlerFilterFunction.lambda$ofRequestProcessor$3(HandlerFilterFunction.java:83)
		at org.springframework.web.servlet.function.HandlerFilterFunction.lambda$andThen$1(HandlerFilterFunction.java:59)
		at org.springframework.web.servlet.function.HandlerFilterFunction.lambda$apply$2(HandlerFilterFunction.java:70)
		at org.springframework.web.servlet.function.support.HandlerFunctionAdapter.handle(HandlerFunctionAdapter.java:108)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
		at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:633)
		at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:411)
		at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:331)
		at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:268)
		at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:380)
		at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:208)
		at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:285)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:149)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 12:29:17 [] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-02-20 12:29:17 [] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-02-20 12:29:17 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [82bbc98d, L:/127.0.0.1:58675 ! R:localhost/127.0.0.1:8082] onStateChange(PooledConnection{channel=[id: 0x82bbc98d, L:/127.0.0.1:58675 ! R:localhost/127.0.0.1:8082]}, [disconnecting])
2025-02-20 12:29:20 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 3 thread-local buffer(s) from thread: reactor-http-nio-4
2025-02-20 12:29:20 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 3 thread-local buffer(s) from thread: reactor-http-nio-3
2025-02-20 12:29:20 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 2 thread-local buffer(s) from thread: reactor-http-nio-5
2025-02-20 12:29:20 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 3 thread-local buffer(s) from thread: reactor-http-nio-2
2025-02-20 12:29:24 [] DEBUG org.jboss.logging - Logging Provider: org.jboss.logging.Slf4jLoggerProvider found via system property
2025-02-20 12:29:24 [] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final
2025-02-20 12:29:24 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-02-20 12:29:24 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-02-20 12:29:24 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-02-20 12:29:24 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-02-20 12:29:24 [] DEBUG o.h.v.i.e.r.TraversableResolvers - Cannot find jakarta.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2025-02-20 12:29:24 [] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-02-20 12:29:24 [] INFO  c.c.c.g.c.CommongatewayApplication - Starting CommongatewayApplication using Java 17.0.12 with PID 24900 (E:\API-GATEWAY\commongateway\target\classes started by CITPL in E:\API-GATEWAY)
2025-02-20 12:29:24 [] DEBUG c.c.c.g.c.CommongatewayApplication - Running with Spring Boot v3.4.2, Spring v6.2.2
2025-02-20 12:29:24 [] INFO  c.c.c.g.c.CommongatewayApplication - No active profile set, falling back to 1 default profile: "default"
2025-02-20 12:29:24 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-02-20 12:29:24 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-02-20 12:29:24 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-02-20 12:29:24 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-02-20 12:29:24 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-02-20 12:29:24 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-02-20 12:29:25 [] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=50299984-946b-3bba-87da-3c9a1df8a676
2025-02-20 12:29:25 [] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-02-20 12:29:25 [] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-02-20 12:29:25 [] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-02-20 12:29:25 [] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.34]
2025-02-20 12:29:25 [] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-02-20 12:29:25 [] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1495 ms
2025-02-20 12:29:25 [] DEBUG i.n.u.i.l.InternalLoggerFactory - Using SLF4J as the default logging framework
2025-02-20 12:29:25 [] DEBUG i.n.util.internal.PlatformDependent0 - -Dio.netty.noUnsafe: false
2025-02-20 12:29:25 [] DEBUG i.n.util.internal.PlatformDependent0 - Java version: 17
2025-02-20 12:29:25 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe.theUnsafe: available
2025-02-20 12:29:25 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe base methods: all available
2025-02-20 12:29:25 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe.storeFence: available
2025-02-20 12:29:25 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.Buffer.address: available
2025-02-20 12:29:25 [] DEBUG i.n.util.internal.PlatformDependent0 - direct buffer constructor: unavailable: Reflective setAccessible(true) disabled
2025-02-20 12:29:25 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.Bits.unaligned: available, true
2025-02-20 12:29:25 [] DEBUG i.n.util.internal.PlatformDependent0 - jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable: class io.netty.util.internal.PlatformDependent0$7 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @7dc222ae
2025-02-20 12:29:25 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.DirectByteBuffer.<init>(long, {int,long}): unavailable
2025-02-20 12:29:25 [] DEBUG i.n.util.internal.PlatformDependent - sun.misc.Unsafe: available
2025-02-20 12:29:25 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.tmpdir: C:\Users\CITPL\AppData\Local\Temp (java.io.tmpdir)
2025-02-20 12:29:25 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.bitMode: 64 (sun.arch.data.model)
2025-02-20 12:29:25 [] DEBUG i.n.util.internal.PlatformDependent - Platform: Windows
2025-02-20 12:29:25 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.maxDirectMemory: -1 bytes
2025-02-20 12:29:25 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.uninitializedArrayAllocationThreshold: -1
2025-02-20 12:29:25 [] DEBUG io.netty.util.internal.CleanerJava9 - java.nio.ByteBuffer.cleaner(): available
2025-02-20 12:29:25 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.noPreferDirect: false
2025-02-20 12:29:26 [] DEBUG reactor.util.Loggers - Using Slf4j logging framework
2025-02-20 12:29:26 [] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-02-20 12:29:26 [] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2025-02-20 12:29:26 [] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2025-02-20 12:29:26 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-02-20 12:29:26 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via user class loader
2025-02-20 12:29:26 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-02-20 12:29:26 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-02-20 12:29:26 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-02-20 12:29:26 [] DEBUG o.h.v.i.e.r.TraversableResolvers - Cannot find jakarta.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2025-02-20 12:29:26 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-02-20 12:29:26 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-02-20 12:29:26 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-02-20 12:29:26 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-02-20 12:29:26 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-02-20 12:29:26 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-02-20 12:29:26 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	c.c.c.g.c.c.HomeController:
	{GET [/home]}: get()
2025-02-20 12:29:26 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2025-02-20 12:29:26 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 'beanNameHandlerMapping' {}
2025-02-20 12:29:26 [] DEBUG _.s.w.s.HandlerMapping.Mappings - Mapped com.citpl.common.gateway.commongateway.config.RouterConfiguration$$Lambda$895/0x000002410150fb30@22a6d75c -> com.citpl.common.gateway.commongateway.config.RouterConfiguration$$Lambda$896/0x000002410150fd98@5a9840f3
2025-02-20 12:29:26 [] DEBUG _.s.w.s.HandlerMapping.Mappings - Mapped /validate/** -> ProxyExchangeHandlerFunction
/users/** -> ProxyExchangeHandlerFunction
2025-02-20 12:29:26 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2025-02-20 12:29:26 [] DEBUG i.n.u.i.InternalThreadLocalMap - -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2025-02-20 12:29:26 [] DEBUG i.n.u.i.InternalThreadLocalMap - -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2025-02-20 12:29:26 [] DEBUG io.netty.util.ResourceLeakDetector - -Dio.netty.leakDetection.level: simple
2025-02-20 12:29:26 [] DEBUG io.netty.util.ResourceLeakDetector - -Dio.netty.leakDetection.targetRecords: 4
2025-02-20 12:29:26 [] DEBUG i.n.handler.codec.compression.Brotli - brotli4j not in the classpath; Brotli support will be unavailable.
2025-02-20 12:29:26 [] DEBUG reactor.netty.tcp.TcpResources - [http] resources will use the default LoopResources: DefaultLoopResources {prefix=reactor-http, daemon=true, selectCount=12, workerCount=12}
2025-02-20 12:29:26 [] DEBUG reactor.netty.tcp.TcpResources - [http] resources will use the default ConnectionProvider: reactor.netty.resources.DefaultPooledConnectionProvider@3957d88b
2025-02-20 12:29:26 [] DEBUG r.netty.resources.DefaultLoopIOUring - Default io_uring support : false
2025-02-20 12:29:26 [] DEBUG r.netty.resources.DefaultLoopEpoll - Default Epoll support : false
2025-02-20 12:29:26 [] DEBUG r.netty.resources.DefaultLoopKQueue - Default KQueue support : false
2025-02-20 12:29:26 [] DEBUG i.n.c.MultithreadEventLoopGroup - -Dio.netty.eventLoopThreads: 24
2025-02-20 12:29:26 [] DEBUG i.n.u.concurrent.GlobalEventExecutor - -Dio.netty.globalEventExecutor.quietPeriodSeconds: 1
2025-02-20 12:29:26 [] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.noKeySetOptimization: false
2025-02-20 12:29:26 [] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.selectorAutoRebuildThreshold: 512
2025-02-20 12:29:26 [] DEBUG i.n.util.internal.PlatformDependent - org.jctools-core.MpscChunkedArrayQueue: available
2025-02-20 12:29:26 [] DEBUG io.netty.util.NetUtil - -Djava.net.preferIPv4Stack: false
2025-02-20 12:29:26 [] DEBUG io.netty.util.NetUtil - -Djava.net.preferIPv6Addresses: false
2025-02-20 12:29:26 [] DEBUG i.netty.util.NetUtilInitializations - Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2025-02-20 12:29:26 [] DEBUG io.netty.util.NetUtil - Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2025-02-20 12:29:26 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default ResolvedAddressTypes: IPV4_ONLY
2025-02-20 12:29:26 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Localhost address: localhost/127.0.0.1
2025-02-20 12:29:26 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Windows hostname: DESKTOP-P307093
2025-02-20 12:29:26 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default search domains: []
2025-02-20 12:29:26 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default UnixResolverOptions{ndots=1, timeout=5, attempts=16}
2025-02-20 12:29:26 [] DEBUG i.n.r.DefaultHostsFileEntriesResolver - -Dio.netty.hostsFileRefreshInterval: 0
2025-02-20 12:29:27 [] DEBUG i.n.r.d.DefaultDnsServerAddressStreamProvider - Default DNS servers: [/8.8.8.8:53, /4.2.2.2:53] (sun.net.dns.ResolverConfiguration)
2025-02-20 12:29:27 [] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-02-20 12:29:27 [] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-02-20 12:29:27 [] INFO  c.c.c.g.c.CommongatewayApplication - Started CommongatewayApplication in 3.608 seconds (process running for 4.339)
2025-02-20 12:29:31 [] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-02-20 12:29:31 [] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-02-20 12:29:31 [] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-02-20 12:29:31 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-20 12:29:31 [c1f362f3-afeb-4e4d-a109-762d1283aa13] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-20 12:29:31 [c1f362f3-afeb-4e4d-a109-762d1283aa13] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-20 12:29:31 [c1f362f3-afeb-4e4d-a109-762d1283aa13] INFO  c.c.c.g.c.config.RouterConfiguration - Authorized Request!
2025-02-20 12:29:31 [c1f362f3-afeb-4e4d-a109-762d1283aa13] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [GET] /users
2025-02-20 12:29:31 [c1f362f3-afeb-4e4d-a109-762d1283aa13] DEBUG r.n.r.PooledConnectionProvider - Creating a new [http] client pool [PoolFactory{evictionInterval=PT0S, leasingStrategy=fifo, maxConnections=500, maxIdleTime=-1, maxLifeTime=-1, metricsEnabled=false, pendingAcquireMaxCount=1000, pendingAcquireTimeout=45000}] for [localhost/<unresolved>:8081]
2025-02-20 12:29:31 [c1f362f3-afeb-4e4d-a109-762d1283aa13] DEBUG io.netty.channel.DefaultChannelId - -Dio.netty.processId: 24900 (auto-detected)
2025-02-20 12:29:31 [c1f362f3-afeb-4e4d-a109-762d1283aa13] DEBUG io.netty.channel.DefaultChannelId - -Dio.netty.machineId: a0:d3:65:ff:fe:5e:b0:28 (auto-detected)
2025-02-20 12:29:31 [c1f362f3-afeb-4e4d-a109-762d1283aa13] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.numHeapArenas: 24
2025-02-20 12:29:31 [c1f362f3-afeb-4e4d-a109-762d1283aa13] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.numDirectArenas: 24
2025-02-20 12:29:31 [c1f362f3-afeb-4e4d-a109-762d1283aa13] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.pageSize: 8192
2025-02-20 12:29:31 [c1f362f3-afeb-4e4d-a109-762d1283aa13] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxOrder: 9
2025-02-20 12:29:31 [c1f362f3-afeb-4e4d-a109-762d1283aa13] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.chunkSize: 4194304
2025-02-20 12:29:31 [c1f362f3-afeb-4e4d-a109-762d1283aa13] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.smallCacheSize: 256
2025-02-20 12:29:31 [c1f362f3-afeb-4e4d-a109-762d1283aa13] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.normalCacheSize: 64
2025-02-20 12:29:31 [c1f362f3-afeb-4e4d-a109-762d1283aa13] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2025-02-20 12:29:31 [c1f362f3-afeb-4e4d-a109-762d1283aa13] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.cacheTrimInterval: 8192
2025-02-20 12:29:31 [c1f362f3-afeb-4e4d-a109-762d1283aa13] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.cacheTrimIntervalMillis: 0
2025-02-20 12:29:31 [c1f362f3-afeb-4e4d-a109-762d1283aa13] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.useCacheForAllThreads: false
2025-02-20 12:29:31 [c1f362f3-afeb-4e4d-a109-762d1283aa13] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
2025-02-20 12:29:31 [c1f362f3-afeb-4e4d-a109-762d1283aa13] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.disableCacheFinalizersForFastThreadLocalThreads: false
2025-02-20 12:29:31 [c1f362f3-afeb-4e4d-a109-762d1283aa13] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.allocator.type: pooled
2025-02-20 12:29:31 [c1f362f3-afeb-4e4d-a109-762d1283aa13] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.threadLocalDirectBufferSize: 0
2025-02-20 12:29:31 [c1f362f3-afeb-4e4d-a109-762d1283aa13] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.maxThreadLocalCharBufferSize: 16384
2025-02-20 12:29:31 [] DEBUG r.n.r.PooledConnectionProvider - [750b487a] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 12:29:31 [] DEBUG io.netty.buffer.AbstractByteBuf - -Dio.netty.buffer.checkAccessible: true
2025-02-20 12:29:31 [] DEBUG io.netty.buffer.AbstractByteBuf - -Dio.netty.buffer.checkBounds: true
2025-02-20 12:29:31 [] DEBUG i.n.util.ResourceLeakDetectorFactory - Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@4e769286
2025-02-20 12:29:31 [] DEBUG r.netty.transport.TransportConfig - [750b487a] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-20 12:29:31 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 12:29:31 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 12:29:31 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 12:29:31 [] DEBUG i.n.b.ChannelInitializerExtensions - -Dio.netty.bootstrap.extensions: null
2025-02-20 12:29:31 [] DEBUG r.netty.transport.TransportConnector - [750b487a] Connecting to [localhost/127.0.0.1:8081].
2025-02-20 12:29:31 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [750b487a, L:/127.0.0.1:58711 - R:localhost/127.0.0.1:8081] Registering pool release on close event for channel
2025-02-20 12:29:31 [] DEBUG r.n.r.PooledConnectionProvider - [750b487a, L:/127.0.0.1:58711 - R:localhost/127.0.0.1:8081] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 12:29:31 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [750b487a, L:/127.0.0.1:58711 - R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x750b487a, L:/127.0.0.1:58711 - R:localhost/127.0.0.1:8081]}, [connected])
2025-02-20 12:29:31 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [750b487a-1, L:/127.0.0.1:58711 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0x750b487a, L:/127.0.0.1:58711 - R:localhost/127.0.0.1:8081]}}, [configured])
2025-02-20 12:29:31 [] DEBUG r.n.http.client.HttpClientConnect - [750b487a-1, L:/127.0.0.1:58711 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate, method=GET}
2025-02-20 12:29:31 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [750b487a-1, L:/127.0.0.1:58711 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x750b487a, L:/127.0.0.1:58711 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-20 12:29:31 [] DEBUG r.n.http.client.HttpClientOperations - [750b487a-1, L:/127.0.0.1:58711 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-20 12:29:31 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.maxCapacityPerThread: 4096
2025-02-20 12:29:31 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.ratio: 8
2025-02-20 12:29:31 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.chunkSize: 32
2025-02-20 12:29:31 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.blocking: false
2025-02-20 12:29:31 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.batchFastThreadLocalOnly: true
2025-02-20 12:29:31 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [750b487a-1, L:/127.0.0.1:58711 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x750b487a, L:/127.0.0.1:58711 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-20 12:29:31 [] DEBUG i.n.handler.codec.compression.Zstd - zstd-jni not in the classpath; Zstd support will be unavailable.
2025-02-20 12:29:31 [] DEBUG r.n.http.client.HttpClientOperations - [750b487a-1, L:/127.0.0.1:58711 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-20 12:29:31 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [750b487a-1, L:/127.0.0.1:58711 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x750b487a, L:/127.0.0.1:58711 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-20 12:29:31 [] DEBUG reactor.netty.channel.FluxReceive - [750b487a-1, L:/127.0.0.1:58711 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 12:29:31 [] DEBUG r.n.http.client.HttpClientOperations - [750b487a-1, L:/127.0.0.1:58711 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-20 12:29:31 [c1f362f3-afeb-4e4d-a109-762d1283aa13] INFO  c.c.c.g.c.config.RouterConfiguration - Validation Response: true
2025-02-20 12:29:31 [c1f362f3-afeb-4e4d-a109-762d1283aa13] INFO  c.c.c.g.c.config.RouterConfiguration - Forwarding [GET] /users to User Microservice
2025-02-20 12:29:31 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [750b487a, L:/127.0.0.1:58711 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x750b487a, L:/127.0.0.1:58711 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-20 12:29:31 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [750b487a, L:/127.0.0.1:58711 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x750b487a, L:/127.0.0.1:58711 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-20 12:29:31 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [750b487a, L:/127.0.0.1:58711 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-20 12:29:31 [] DEBUG r.n.r.PooledConnectionProvider - [750b487a, L:/127.0.0.1:58711 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-20 12:29:31 [c1f362f3-afeb-4e4d-a109-762d1283aa13] DEBUG r.n.r.PooledConnectionProvider - Creating a new [http] client pool [PoolFactory{evictionInterval=PT0S, leasingStrategy=fifo, maxConnections=500, maxIdleTime=-1, maxLifeTime=-1, metricsEnabled=false, pendingAcquireMaxCount=1000, pendingAcquireTimeout=45000}] for [localhost/<unresolved>:8082]
2025-02-20 12:29:31 [] DEBUG r.n.r.PooledConnectionProvider - [e5730166] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 12:29:31 [] DEBUG r.netty.transport.TransportConfig - [e5730166] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-20 12:29:31 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 12:29:31 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 12:29:31 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 12:29:31 [] DEBUG r.netty.transport.TransportConnector - [e5730166] Connecting to [localhost/127.0.0.1:8082].
2025-02-20 12:29:31 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [e5730166, L:/127.0.0.1:58712 - R:localhost/127.0.0.1:8082] Registering pool release on close event for channel
2025-02-20 12:29:31 [] DEBUG r.n.r.PooledConnectionProvider - [e5730166, L:/127.0.0.1:58712 - R:localhost/127.0.0.1:8082] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 12:29:31 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [e5730166, L:/127.0.0.1:58712 - R:localhost/127.0.0.1:8082] onStateChange(PooledConnection{channel=[id: 0xe5730166, L:/127.0.0.1:58712 - R:localhost/127.0.0.1:8082]}, [connected])
2025-02-20 12:29:31 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [e5730166-1, L:/127.0.0.1:58712 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0xe5730166, L:/127.0.0.1:58712 - R:localhost/127.0.0.1:8082]}}, [configured])
2025-02-20 12:29:31 [] DEBUG r.n.http.client.HttpClientConnect - [e5730166-1, L:/127.0.0.1:58712 - R:localhost/127.0.0.1:8082] Handler is being applied: {uri=http://localhost:8082/users, method=GET}
2025-02-20 12:29:31 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [e5730166-1, L:/127.0.0.1:58712 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0xe5730166, L:/127.0.0.1:58712 - R:localhost/127.0.0.1:8082]}}, [request_prepared])
2025-02-20 12:29:31 [] DEBUG r.n.http.client.HttpClientOperations - [e5730166-1, L:/127.0.0.1:58712 - R:localhost/127.0.0.1:8082] No sendHeaders() called before complete, sending zero-length header
2025-02-20 12:29:31 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [e5730166-1, L:/127.0.0.1:58712 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0xe5730166, L:/127.0.0.1:58712 - R:localhost/127.0.0.1:8082]}}, [request_sent])
2025-02-20 12:29:31 [] DEBUG r.n.http.client.HttpClientOperations - [e5730166-1, L:/127.0.0.1:58712 - R:localhost/127.0.0.1:8082] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Content-Length: <filtered>
Date: <filtered>
2025-02-20 12:29:31 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [e5730166-1, L:/127.0.0.1:58712 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0xe5730166, L:/127.0.0.1:58712 - R:localhost/127.0.0.1:8082]}}, [response_received])
2025-02-20 12:29:31 [] DEBUG reactor.netty.channel.FluxReceive - [e5730166-1, L:/127.0.0.1:58712 - R:localhost/127.0.0.1:8082] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 12:29:31 [] DEBUG r.n.http.client.HttpClientOperations - [e5730166-1, L:/127.0.0.1:58712 - R:localhost/127.0.0.1:8082] Received last HTTP packet
2025-02-20 12:29:31 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [e5730166, L:/127.0.0.1:58712 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0xe5730166, L:/127.0.0.1:58712 - R:localhost/127.0.0.1:8082]}}, [response_completed])
2025-02-20 12:29:31 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [e5730166, L:/127.0.0.1:58712 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0xe5730166, L:/127.0.0.1:58712 - R:localhost/127.0.0.1:8082]}}, [disconnecting])
2025-02-20 12:29:31 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [e5730166, L:/127.0.0.1:58712 - R:localhost/127.0.0.1:8082] Releasing channel
2025-02-20 12:29:31 [] DEBUG r.n.r.PooledConnectionProvider - [e5730166, L:/127.0.0.1:58712 - R:localhost/127.0.0.1:8082] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-20 12:29:38 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-20 12:29:38 [c8c74e35-325d-4aad-a0ac-946af5b4d5bc] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-20 12:29:38 [c8c74e35-325d-4aad-a0ac-946af5b4d5bc] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-20 12:29:38 [c8c74e35-325d-4aad-a0ac-946af5b4d5bc] INFO  c.c.c.g.c.config.RouterConfiguration - Authorized Request!
2025-02-20 12:29:38 [c8c74e35-325d-4aad-a0ac-946af5b4d5bc] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [GET] /validate
2025-02-20 12:29:38 [] DEBUG r.n.r.PooledConnectionProvider - [750b487a, L:/127.0.0.1:58711 - R:localhost/127.0.0.1:8081] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 12:29:38 [] DEBUG r.n.http.client.HttpClientConnect - [750b487a-2, L:/127.0.0.1:58711 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate, method=GET}
2025-02-20 12:29:38 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [750b487a-2, L:/127.0.0.1:58711 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x750b487a, L:/127.0.0.1:58711 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-20 12:29:38 [] DEBUG r.n.http.client.HttpClientOperations - [750b487a-2, L:/127.0.0.1:58711 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-20 12:29:38 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [750b487a-2, L:/127.0.0.1:58711 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x750b487a, L:/127.0.0.1:58711 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-20 12:29:38 [] DEBUG r.n.http.client.HttpClientOperations - [750b487a-2, L:/127.0.0.1:58711 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-20 12:29:38 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [750b487a-2, L:/127.0.0.1:58711 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x750b487a, L:/127.0.0.1:58711 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-20 12:29:38 [] DEBUG reactor.netty.channel.FluxReceive - [750b487a-2, L:/127.0.0.1:58711 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 12:29:38 [] DEBUG r.n.http.client.HttpClientOperations - [750b487a-2, L:/127.0.0.1:58711 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-20 12:29:38 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [750b487a, L:/127.0.0.1:58711 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x750b487a, L:/127.0.0.1:58711 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-20 12:29:38 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [750b487a, L:/127.0.0.1:58711 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x750b487a, L:/127.0.0.1:58711 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-20 12:29:38 [c8c74e35-325d-4aad-a0ac-946af5b4d5bc] INFO  c.c.c.g.c.config.RouterConfiguration - Validation Response: true
2025-02-20 12:29:38 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [750b487a, L:/127.0.0.1:58711 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-20 12:29:38 [c8c74e35-325d-4aad-a0ac-946af5b4d5bc] INFO  c.c.c.g.c.config.RouterConfiguration - Forwarding [GET] /validate to User Microservice
2025-02-20 12:29:38 [] DEBUG r.n.r.PooledConnectionProvider - [750b487a, L:/127.0.0.1:58711 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-20 12:29:38 [] DEBUG r.n.r.PooledConnectionProvider - [e5730166, L:/127.0.0.1:58712 - R:localhost/127.0.0.1:8082] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 12:29:38 [] DEBUG r.n.http.client.HttpClientConnect - [e5730166-2, L:/127.0.0.1:58712 - R:localhost/127.0.0.1:8082] Handler is being applied: {uri=http://localhost:8082/validate, method=GET}
2025-02-20 12:29:38 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [e5730166-2, L:/127.0.0.1:58712 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xe5730166, L:/127.0.0.1:58712 - R:localhost/127.0.0.1:8082]}}, [request_prepared])
2025-02-20 12:29:38 [] DEBUG r.n.http.client.HttpClientOperations - [e5730166-2, L:/127.0.0.1:58712 - R:localhost/127.0.0.1:8082] No sendHeaders() called before complete, sending zero-length header
2025-02-20 12:29:38 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [e5730166-2, L:/127.0.0.1:58712 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xe5730166, L:/127.0.0.1:58712 - R:localhost/127.0.0.1:8082]}}, [request_sent])
2025-02-20 12:29:38 [] DEBUG r.n.http.client.HttpClientOperations - [e5730166-2, L:/127.0.0.1:58712 - R:localhost/127.0.0.1:8082] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 404 
Vary: <filtered>
Vary: <filtered>
Vary: <filtered>
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-20 12:29:38 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [e5730166-2, L:/127.0.0.1:58712 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xe5730166, L:/127.0.0.1:58712 - R:localhost/127.0.0.1:8082]}}, [response_received])
2025-02-20 12:29:38 [] DEBUG reactor.netty.channel.FluxReceive - [e5730166-2, L:/127.0.0.1:58712 - R:localhost/127.0.0.1:8082] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 12:29:38 [] DEBUG r.n.http.client.HttpClientOperations - [e5730166-2, L:/127.0.0.1:58712 - R:localhost/127.0.0.1:8082] Received last HTTP packet
2025-02-20 12:29:38 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [e5730166, L:/127.0.0.1:58712 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xe5730166, L:/127.0.0.1:58712 - R:localhost/127.0.0.1:8082]}}, [response_completed])
2025-02-20 12:29:38 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [e5730166, L:/127.0.0.1:58712 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xe5730166, L:/127.0.0.1:58712 - R:localhost/127.0.0.1:8082]}}, [disconnecting])
2025-02-20 12:29:38 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [e5730166, L:/127.0.0.1:58712 - R:localhost/127.0.0.1:8082] Releasing channel
2025-02-20 12:29:38 [] DEBUG r.n.r.PooledConnectionProvider - [e5730166, L:/127.0.0.1:58712 - R:localhost/127.0.0.1:8082] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-20 12:29:38 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] threw exception
org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 404 NOT_FOUND from GET http://localhost:8082/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 12:29:38 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate] with root cause
org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 404 NOT_FOUND from GET http://localhost:8082/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 12:29:38 [] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-20 12:29:38 [] INFO  c.c.c.g.c.config.RouterConfiguration - Authorized Request!
2025-02-20 12:29:38 [] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [GET] /error
2025-02-20 12:29:38 [] DEBUG r.n.r.PooledConnectionProvider - [750b487a, L:/127.0.0.1:58711 - R:localhost/127.0.0.1:8081] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 12:29:38 [] DEBUG r.n.http.client.HttpClientConnect - [750b487a-3, L:/127.0.0.1:58711 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate, method=GET}
2025-02-20 12:29:38 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [750b487a-3, L:/127.0.0.1:58711 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x750b487a, L:/127.0.0.1:58711 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-20 12:29:38 [] DEBUG r.n.http.client.HttpClientOperations - [750b487a-3, L:/127.0.0.1:58711 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-20 12:29:38 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [750b487a-3, L:/127.0.0.1:58711 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x750b487a, L:/127.0.0.1:58711 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-20 12:29:38 [] DEBUG r.n.http.client.HttpClientOperations - [750b487a-3, L:/127.0.0.1:58711 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-20 12:29:38 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [750b487a-3, L:/127.0.0.1:58711 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x750b487a, L:/127.0.0.1:58711 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-20 12:29:38 [] DEBUG reactor.netty.channel.FluxReceive - [750b487a-3, L:/127.0.0.1:58711 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 12:29:38 [] DEBUG r.n.http.client.HttpClientOperations - [750b487a-3, L:/127.0.0.1:58711 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-20 12:29:38 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [750b487a, L:/127.0.0.1:58711 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x750b487a, L:/127.0.0.1:58711 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-20 12:29:38 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [750b487a, L:/127.0.0.1:58711 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x750b487a, L:/127.0.0.1:58711 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-20 12:29:38 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [750b487a, L:/127.0.0.1:58711 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-20 12:29:38 [] INFO  c.c.c.g.c.config.RouterConfiguration - Validation Response: true
2025-02-20 12:29:38 [] INFO  c.c.c.g.c.config.RouterConfiguration - Forwarding [GET] /error to User Microservice
2025-02-20 12:29:38 [] DEBUG r.n.r.PooledConnectionProvider - [750b487a, L:/127.0.0.1:58711 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-20 12:29:38 [] DEBUG r.n.r.PooledConnectionProvider - [e5730166, L:/127.0.0.1:58712 - R:localhost/127.0.0.1:8082] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 12:29:38 [] DEBUG r.n.http.client.HttpClientConnect - [e5730166-3, L:/127.0.0.1:58712 - R:localhost/127.0.0.1:8082] Handler is being applied: {uri=http://localhost:8082/error, method=GET}
2025-02-20 12:29:38 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [e5730166-3, L:/127.0.0.1:58712 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0xe5730166, L:/127.0.0.1:58712 - R:localhost/127.0.0.1:8082]}}, [request_prepared])
2025-02-20 12:29:38 [] DEBUG r.n.http.client.HttpClientOperations - [e5730166-3, L:/127.0.0.1:58712 - R:localhost/127.0.0.1:8082] No sendHeaders() called before complete, sending zero-length header
2025-02-20 12:29:38 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [e5730166-3, L:/127.0.0.1:58712 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0xe5730166, L:/127.0.0.1:58712 - R:localhost/127.0.0.1:8082]}}, [request_sent])
2025-02-20 12:29:38 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] threw exception
org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 404 NOT_FOUND from GET http://localhost:8082/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 12:29:38 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate] with root cause
org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 404 NOT_FOUND from GET http://localhost:8082/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 12:29:38 [] DEBUG r.n.http.client.HttpClientOperations - [e5730166-3, L:/127.0.0.1:58712 - R:localhost/127.0.0.1:8082] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 500 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
Connection: <filtered>
2025-02-20 12:29:38 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [e5730166-3, L:/127.0.0.1:58712 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0xe5730166, L:/127.0.0.1:58712 - R:localhost/127.0.0.1:8082]}}, [response_received])
2025-02-20 12:29:38 [] DEBUG reactor.netty.channel.FluxReceive - [e5730166-3, L:/127.0.0.1:58712 - R:localhost/127.0.0.1:8082] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 12:29:38 [] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-20 12:29:38 [] INFO  c.c.c.g.c.config.RouterConfiguration - Authorized Request!
2025-02-20 12:29:38 [] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [GET] /error
2025-02-20 12:29:38 [] DEBUG r.n.http.client.HttpClientOperations - [e5730166-3, L:/127.0.0.1:58712 - R:localhost/127.0.0.1:8082] Received last HTTP packet
2025-02-20 12:29:38 [] DEBUG r.n.r.PooledConnectionProvider - [750b487a, L:/127.0.0.1:58711 - R:localhost/127.0.0.1:8081] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 12:29:38 [] DEBUG r.n.http.client.HttpClientConnect - [750b487a-4, L:/127.0.0.1:58711 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate, method=GET}
2025-02-20 12:29:38 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [750b487a-4, L:/127.0.0.1:58711 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x750b487a, L:/127.0.0.1:58711 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-20 12:29:38 [] DEBUG r.n.http.client.HttpClientOperations - [750b487a-4, L:/127.0.0.1:58711 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-20 12:29:38 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [e5730166, L:/127.0.0.1:58712 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0xe5730166, L:/127.0.0.1:58712 - R:localhost/127.0.0.1:8082]}}, [response_completed])
2025-02-20 12:29:38 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [750b487a-4, L:/127.0.0.1:58711 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x750b487a, L:/127.0.0.1:58711 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-20 12:29:38 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [e5730166, L:/127.0.0.1:58712 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0xe5730166, L:/127.0.0.1:58712 - R:localhost/127.0.0.1:8082]}}, [disconnecting])
2025-02-20 12:29:38 [] DEBUG r.n.http.client.HttpClientOperations - [750b487a-4, L:/127.0.0.1:58711 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-20 12:29:38 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [750b487a-4, L:/127.0.0.1:58711 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x750b487a, L:/127.0.0.1:58711 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-20 12:29:38 [] DEBUG reactor.netty.channel.FluxReceive - [750b487a-4, L:/127.0.0.1:58711 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 12:29:38 [] DEBUG r.n.r.PooledConnectionProvider - [e5730166, L:/127.0.0.1:58712 ! R:localhost/127.0.0.1:8082] Channel closed, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 12:29:38 [] DEBUG r.n.http.client.HttpClientOperations - [750b487a-4, L:/127.0.0.1:58711 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-20 12:29:38 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [750b487a, L:/127.0.0.1:58711 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x750b487a, L:/127.0.0.1:58711 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-20 12:29:38 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [750b487a, L:/127.0.0.1:58711 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x750b487a, L:/127.0.0.1:58711 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-20 12:29:38 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [750b487a, L:/127.0.0.1:58711 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-20 12:29:38 [] INFO  c.c.c.g.c.config.RouterConfiguration - Validation Response: true
2025-02-20 12:29:38 [] DEBUG r.n.r.PooledConnectionProvider - [750b487a, L:/127.0.0.1:58711 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-20 12:29:38 [] INFO  c.c.c.g.c.config.RouterConfiguration - Forwarding [GET] /error to User Microservice
2025-02-20 12:29:38 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [e5730166, L:/127.0.0.1:58712 ! R:localhost/127.0.0.1:8082] onStateChange(PooledConnection{channel=[id: 0xe5730166, L:/127.0.0.1:58712 ! R:localhost/127.0.0.1:8082]}, [disconnecting])
2025-02-20 12:29:38 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] threw exception
java.lang.IllegalStateException: Cannot start async: [ERROR]
	at org.springframework.util.Assert.state(Assert.java:79)
	at org.springframework.web.context.request.async.StandardServletAsyncWebRequest.startAsync(StandardServletAsyncWebRequest.java:157)
	at org.springframework.web.context.request.async.WebAsyncManager.startAsyncProcessing(WebAsyncManager.java:487)
	at org.springframework.web.context.request.async.WebAsyncManager.startDeferredResultProcessing(WebAsyncManager.java:462)
	at org.springframework.web.servlet.function.DefaultAsyncServerResponse.writeAsync(DefaultAsyncServerResponse.java:130)
	at org.springframework.web.servlet.function.DefaultEntityResponseBuilder$PublisherEntityResponse.writeToInternal(DefaultEntityResponseBuilder.java:429)
	at org.springframework.web.servlet.function.AbstractServerResponse.writeTo(AbstractServerResponse.java:101)
	at org.springframework.web.servlet.function.support.HandlerFunctionAdapter.handle(HandlerFunctionAdapter.java:112)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:633)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:511)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:454)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:361)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:208)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:285)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:149)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:239)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:243)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:57)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 12:29:38 [] ERROR o.a.c.c.C.[Tomcat].[localhost] - Exception Processing [ErrorPage[errorCode=0, location=/error]]
jakarta.servlet.ServletException: Async processing failed
	at org.springframework.web.servlet.function.DefaultAsyncServerResponse.writeAsync(DefaultAsyncServerResponse.java:136)
	at org.springframework.web.servlet.function.DefaultEntityResponseBuilder$PublisherEntityResponse.writeToInternal(DefaultEntityResponseBuilder.java:429)
	at org.springframework.web.servlet.function.AbstractServerResponse.writeTo(AbstractServerResponse.java:101)
	at org.springframework.web.servlet.function.support.HandlerFunctionAdapter.handle(HandlerFunctionAdapter.java:112)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:633)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:511)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:454)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:361)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:208)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:285)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:149)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:239)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:243)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:57)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: java.lang.IllegalStateException: Cannot start async: [ERROR]
	at org.springframework.util.Assert.state(Assert.java:79)
	at org.springframework.web.context.request.async.StandardServletAsyncWebRequest.startAsync(StandardServletAsyncWebRequest.java:157)
	at org.springframework.web.context.request.async.WebAsyncManager.startAsyncProcessing(WebAsyncManager.java:487)
	at org.springframework.web.context.request.async.WebAsyncManager.startDeferredResultProcessing(WebAsyncManager.java:462)
	at org.springframework.web.servlet.function.DefaultAsyncServerResponse.writeAsync(DefaultAsyncServerResponse.java:130)
	... 41 common frames omitted
2025-02-20 12:30:35 [] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-02-20 12:30:36 [] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-02-20 12:30:36 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [750b487a, L:/127.0.0.1:58711 ! R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x750b487a, L:/127.0.0.1:58711 ! R:localhost/127.0.0.1:8081]}, [disconnecting])
2025-02-20 12:30:38 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 4 thread-local buffer(s) from thread: reactor-http-nio-3
2025-02-20 12:30:38 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 5 thread-local buffer(s) from thread: reactor-http-nio-2
2025-02-20 12:30:42 [] DEBUG org.jboss.logging - Logging Provider: org.jboss.logging.Slf4jLoggerProvider found via system property
2025-02-20 12:30:42 [] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final
2025-02-20 12:30:42 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-02-20 12:30:42 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-02-20 12:30:42 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-02-20 12:30:42 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-02-20 12:30:42 [] DEBUG o.h.v.i.e.r.TraversableResolvers - Cannot find jakarta.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2025-02-20 12:30:42 [] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-02-20 12:30:42 [] INFO  c.c.c.g.c.CommongatewayApplication - Starting CommongatewayApplication using Java 17.0.12 with PID 29620 (E:\API-GATEWAY\commongateway\target\classes started by CITPL in E:\API-GATEWAY)
2025-02-20 12:30:42 [] DEBUG c.c.c.g.c.CommongatewayApplication - Running with Spring Boot v3.4.2, Spring v6.2.2
2025-02-20 12:30:42 [] INFO  c.c.c.g.c.CommongatewayApplication - No active profile set, falling back to 1 default profile: "default"
2025-02-20 12:30:42 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-02-20 12:30:42 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-02-20 12:30:42 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-02-20 12:30:42 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-02-20 12:30:42 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-02-20 12:30:42 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-02-20 12:30:43 [] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=50299984-946b-3bba-87da-3c9a1df8a676
2025-02-20 12:30:43 [] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-02-20 12:30:43 [] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-02-20 12:30:43 [] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-02-20 12:30:43 [] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.34]
2025-02-20 12:30:43 [] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-02-20 12:30:43 [] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1396 ms
2025-02-20 12:30:43 [] DEBUG i.n.u.i.l.InternalLoggerFactory - Using SLF4J as the default logging framework
2025-02-20 12:30:43 [] DEBUG i.n.util.internal.PlatformDependent0 - -Dio.netty.noUnsafe: false
2025-02-20 12:30:43 [] DEBUG i.n.util.internal.PlatformDependent0 - Java version: 17
2025-02-20 12:30:43 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe.theUnsafe: available
2025-02-20 12:30:43 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe base methods: all available
2025-02-20 12:30:43 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe.storeFence: available
2025-02-20 12:30:43 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.Buffer.address: available
2025-02-20 12:30:43 [] DEBUG i.n.util.internal.PlatformDependent0 - direct buffer constructor: unavailable: Reflective setAccessible(true) disabled
2025-02-20 12:30:43 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.Bits.unaligned: available, true
2025-02-20 12:30:43 [] DEBUG i.n.util.internal.PlatformDependent0 - jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable: class io.netty.util.internal.PlatformDependent0$7 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @7dc222ae
2025-02-20 12:30:43 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.DirectByteBuffer.<init>(long, {int,long}): unavailable
2025-02-20 12:30:43 [] DEBUG i.n.util.internal.PlatformDependent - sun.misc.Unsafe: available
2025-02-20 12:30:43 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.tmpdir: C:\Users\CITPL\AppData\Local\Temp (java.io.tmpdir)
2025-02-20 12:30:43 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.bitMode: 64 (sun.arch.data.model)
2025-02-20 12:30:43 [] DEBUG i.n.util.internal.PlatformDependent - Platform: Windows
2025-02-20 12:30:43 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.maxDirectMemory: -1 bytes
2025-02-20 12:30:43 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.uninitializedArrayAllocationThreshold: -1
2025-02-20 12:30:43 [] DEBUG io.netty.util.internal.CleanerJava9 - java.nio.ByteBuffer.cleaner(): available
2025-02-20 12:30:43 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.noPreferDirect: false
2025-02-20 12:30:43 [] DEBUG reactor.util.Loggers - Using Slf4j logging framework
2025-02-20 12:30:43 [] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-02-20 12:30:43 [] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2025-02-20 12:30:43 [] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2025-02-20 12:30:43 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-02-20 12:30:43 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via user class loader
2025-02-20 12:30:43 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-02-20 12:30:43 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-02-20 12:30:43 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-02-20 12:30:43 [] DEBUG o.h.v.i.e.r.TraversableResolvers - Cannot find jakarta.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2025-02-20 12:30:43 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-02-20 12:30:43 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-02-20 12:30:43 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-02-20 12:30:43 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-02-20 12:30:43 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-02-20 12:30:43 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-02-20 12:30:44 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	c.c.c.g.c.c.HomeController:
	{GET [/home]}: get()
2025-02-20 12:30:44 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2025-02-20 12:30:44 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 'beanNameHandlerMapping' {}
2025-02-20 12:30:44 [] DEBUG _.s.w.s.HandlerMapping.Mappings - Mapped com.citpl.common.gateway.commongateway.config.RouterConfiguration$$Lambda$895/0x000002674f50b798@1cd2ff5b -> com.citpl.common.gateway.commongateway.config.RouterConfiguration$$Lambda$896/0x000002674f50ba00@38ac8968
2025-02-20 12:30:44 [] DEBUG _.s.w.s.HandlerMapping.Mappings - Mapped /validate/** -> ProxyExchangeHandlerFunction
/users/** -> ProxyExchangeHandlerFunction
2025-02-20 12:30:44 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2025-02-20 12:30:44 [] DEBUG i.n.u.i.InternalThreadLocalMap - -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2025-02-20 12:30:44 [] DEBUG i.n.u.i.InternalThreadLocalMap - -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2025-02-20 12:30:44 [] DEBUG io.netty.util.ResourceLeakDetector - -Dio.netty.leakDetection.level: simple
2025-02-20 12:30:44 [] DEBUG io.netty.util.ResourceLeakDetector - -Dio.netty.leakDetection.targetRecords: 4
2025-02-20 12:30:44 [] DEBUG i.n.handler.codec.compression.Brotli - brotli4j not in the classpath; Brotli support will be unavailable.
2025-02-20 12:30:44 [] DEBUG reactor.netty.tcp.TcpResources - [http] resources will use the default LoopResources: DefaultLoopResources {prefix=reactor-http, daemon=true, selectCount=12, workerCount=12}
2025-02-20 12:30:44 [] DEBUG reactor.netty.tcp.TcpResources - [http] resources will use the default ConnectionProvider: reactor.netty.resources.DefaultPooledConnectionProvider@5ce3409b
2025-02-20 12:30:44 [] DEBUG r.netty.resources.DefaultLoopIOUring - Default io_uring support : false
2025-02-20 12:30:44 [] DEBUG r.netty.resources.DefaultLoopEpoll - Default Epoll support : false
2025-02-20 12:30:44 [] DEBUG r.netty.resources.DefaultLoopKQueue - Default KQueue support : false
2025-02-20 12:30:44 [] DEBUG i.n.c.MultithreadEventLoopGroup - -Dio.netty.eventLoopThreads: 24
2025-02-20 12:30:44 [] DEBUG i.n.u.concurrent.GlobalEventExecutor - -Dio.netty.globalEventExecutor.quietPeriodSeconds: 1
2025-02-20 12:30:44 [] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.noKeySetOptimization: false
2025-02-20 12:30:44 [] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.selectorAutoRebuildThreshold: 512
2025-02-20 12:30:44 [] DEBUG i.n.util.internal.PlatformDependent - org.jctools-core.MpscChunkedArrayQueue: available
2025-02-20 12:30:44 [] DEBUG io.netty.util.NetUtil - -Djava.net.preferIPv4Stack: false
2025-02-20 12:30:44 [] DEBUG io.netty.util.NetUtil - -Djava.net.preferIPv6Addresses: false
2025-02-20 12:30:44 [] DEBUG i.netty.util.NetUtilInitializations - Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2025-02-20 12:30:44 [] DEBUG io.netty.util.NetUtil - Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2025-02-20 12:30:44 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default ResolvedAddressTypes: IPV4_ONLY
2025-02-20 12:30:44 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Localhost address: localhost/127.0.0.1
2025-02-20 12:30:44 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Windows hostname: DESKTOP-P307093
2025-02-20 12:30:44 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default search domains: []
2025-02-20 12:30:44 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default UnixResolverOptions{ndots=1, timeout=5, attempts=16}
2025-02-20 12:30:44 [] DEBUG i.n.r.DefaultHostsFileEntriesResolver - -Dio.netty.hostsFileRefreshInterval: 0
2025-02-20 12:30:44 [] DEBUG i.n.r.d.DefaultDnsServerAddressStreamProvider - Default DNS servers: [/8.8.8.8:53, /4.2.2.2:53] (sun.net.dns.ResolverConfiguration)
2025-02-20 12:30:44 [] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-02-20 12:30:44 [] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-02-20 12:30:45 [] INFO  c.c.c.g.c.CommongatewayApplication - Started CommongatewayApplication in 3.49 seconds (process running for 4.23)
2025-02-20 12:30:47 [] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-02-20 12:30:47 [] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-02-20 12:30:47 [] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 0 ms
2025-02-20 12:30:47 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-20 12:30:47 [86df5df1-fabf-45ca-8ac2-4c2841de90e7] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-20 12:30:47 [86df5df1-fabf-45ca-8ac2-4c2841de90e7] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-20 12:30:47 [86df5df1-fabf-45ca-8ac2-4c2841de90e7] INFO  c.c.c.g.c.config.RouterConfiguration - Authorized Request!
2025-02-20 12:30:47 [86df5df1-fabf-45ca-8ac2-4c2841de90e7] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [GET] /validate
2025-02-20 12:30:47 [86df5df1-fabf-45ca-8ac2-4c2841de90e7] INFO  c.c.c.g.c.config.RouterConfiguration - Forwarding [GET] /validate to User Microservice
2025-02-20 12:30:47 [86df5df1-fabf-45ca-8ac2-4c2841de90e7] DEBUG r.n.r.PooledConnectionProvider - Creating a new [http] client pool [PoolFactory{evictionInterval=PT0S, leasingStrategy=fifo, maxConnections=500, maxIdleTime=-1, maxLifeTime=-1, metricsEnabled=false, pendingAcquireMaxCount=1000, pendingAcquireTimeout=45000}] for [localhost/<unresolved>:8082]
2025-02-20 12:30:47 [86df5df1-fabf-45ca-8ac2-4c2841de90e7] DEBUG io.netty.channel.DefaultChannelId - -Dio.netty.processId: 29620 (auto-detected)
2025-02-20 12:30:47 [86df5df1-fabf-45ca-8ac2-4c2841de90e7] DEBUG io.netty.channel.DefaultChannelId - -Dio.netty.machineId: a0:d3:65:ff:fe:5e:b0:28 (auto-detected)
2025-02-20 12:30:47 [86df5df1-fabf-45ca-8ac2-4c2841de90e7] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.numHeapArenas: 24
2025-02-20 12:30:47 [86df5df1-fabf-45ca-8ac2-4c2841de90e7] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.numDirectArenas: 24
2025-02-20 12:30:47 [86df5df1-fabf-45ca-8ac2-4c2841de90e7] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.pageSize: 8192
2025-02-20 12:30:47 [86df5df1-fabf-45ca-8ac2-4c2841de90e7] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxOrder: 9
2025-02-20 12:30:47 [86df5df1-fabf-45ca-8ac2-4c2841de90e7] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.chunkSize: 4194304
2025-02-20 12:30:47 [86df5df1-fabf-45ca-8ac2-4c2841de90e7] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.smallCacheSize: 256
2025-02-20 12:30:47 [86df5df1-fabf-45ca-8ac2-4c2841de90e7] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.normalCacheSize: 64
2025-02-20 12:30:47 [86df5df1-fabf-45ca-8ac2-4c2841de90e7] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2025-02-20 12:30:47 [86df5df1-fabf-45ca-8ac2-4c2841de90e7] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.cacheTrimInterval: 8192
2025-02-20 12:30:47 [86df5df1-fabf-45ca-8ac2-4c2841de90e7] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.cacheTrimIntervalMillis: 0
2025-02-20 12:30:47 [86df5df1-fabf-45ca-8ac2-4c2841de90e7] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.useCacheForAllThreads: false
2025-02-20 12:30:47 [86df5df1-fabf-45ca-8ac2-4c2841de90e7] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
2025-02-20 12:30:47 [86df5df1-fabf-45ca-8ac2-4c2841de90e7] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.disableCacheFinalizersForFastThreadLocalThreads: false
2025-02-20 12:30:47 [86df5df1-fabf-45ca-8ac2-4c2841de90e7] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.allocator.type: pooled
2025-02-20 12:30:47 [86df5df1-fabf-45ca-8ac2-4c2841de90e7] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.threadLocalDirectBufferSize: 0
2025-02-20 12:30:47 [86df5df1-fabf-45ca-8ac2-4c2841de90e7] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.maxThreadLocalCharBufferSize: 16384
2025-02-20 12:30:47 [] DEBUG r.n.r.PooledConnectionProvider - [26b26463] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 12:30:47 [] DEBUG io.netty.buffer.AbstractByteBuf - -Dio.netty.buffer.checkAccessible: true
2025-02-20 12:30:47 [] DEBUG io.netty.buffer.AbstractByteBuf - -Dio.netty.buffer.checkBounds: true
2025-02-20 12:30:47 [] DEBUG i.n.util.ResourceLeakDetectorFactory - Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@48ce5893
2025-02-20 12:30:47 [] DEBUG r.netty.transport.TransportConfig - [26b26463] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-20 12:30:47 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 12:30:47 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 12:30:47 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 12:30:47 [] DEBUG i.n.b.ChannelInitializerExtensions - -Dio.netty.bootstrap.extensions: null
2025-02-20 12:30:47 [] DEBUG r.netty.transport.TransportConnector - [26b26463] Connecting to [localhost/127.0.0.1:8082].
2025-02-20 12:30:47 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [26b26463, L:/127.0.0.1:58750 - R:localhost/127.0.0.1:8082] Registering pool release on close event for channel
2025-02-20 12:30:47 [] DEBUG r.n.r.PooledConnectionProvider - [26b26463, L:/127.0.0.1:58750 - R:localhost/127.0.0.1:8082] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 12:30:47 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [26b26463, L:/127.0.0.1:58750 - R:localhost/127.0.0.1:8082] onStateChange(PooledConnection{channel=[id: 0x26b26463, L:/127.0.0.1:58750 - R:localhost/127.0.0.1:8082]}, [connected])
2025-02-20 12:30:47 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [26b26463-1, L:/127.0.0.1:58750 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0x26b26463, L:/127.0.0.1:58750 - R:localhost/127.0.0.1:8082]}}, [configured])
2025-02-20 12:30:47 [] DEBUG r.n.http.client.HttpClientConnect - [26b26463-1, L:/127.0.0.1:58750 - R:localhost/127.0.0.1:8082] Handler is being applied: {uri=http://localhost:8082/validate, method=GET}
2025-02-20 12:30:47 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [26b26463-1, L:/127.0.0.1:58750 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x26b26463, L:/127.0.0.1:58750 - R:localhost/127.0.0.1:8082]}}, [request_prepared])
2025-02-20 12:30:47 [] DEBUG r.n.http.client.HttpClientOperations - [26b26463-1, L:/127.0.0.1:58750 - R:localhost/127.0.0.1:8082] No sendHeaders() called before complete, sending zero-length header
2025-02-20 12:30:47 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.maxCapacityPerThread: 4096
2025-02-20 12:30:47 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.ratio: 8
2025-02-20 12:30:47 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.chunkSize: 32
2025-02-20 12:30:47 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.blocking: false
2025-02-20 12:30:47 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.batchFastThreadLocalOnly: true
2025-02-20 12:30:47 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [26b26463-1, L:/127.0.0.1:58750 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x26b26463, L:/127.0.0.1:58750 - R:localhost/127.0.0.1:8082]}}, [request_sent])
2025-02-20 12:30:47 [] DEBUG i.n.handler.codec.compression.Zstd - zstd-jni not in the classpath; Zstd support will be unavailable.
2025-02-20 12:30:47 [] DEBUG r.n.http.client.HttpClientOperations - [26b26463-1, L:/127.0.0.1:58750 - R:localhost/127.0.0.1:8082] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 404 
Vary: <filtered>
Vary: <filtered>
Vary: <filtered>
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-20 12:30:47 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [26b26463-1, L:/127.0.0.1:58750 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x26b26463, L:/127.0.0.1:58750 - R:localhost/127.0.0.1:8082]}}, [response_received])
2025-02-20 12:30:47 [] DEBUG reactor.netty.channel.FluxReceive - [26b26463-1, L:/127.0.0.1:58750 - R:localhost/127.0.0.1:8082] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 12:30:47 [] DEBUG r.n.http.client.HttpClientOperations - [26b26463-1, L:/127.0.0.1:58750 - R:localhost/127.0.0.1:8082] Received last HTTP packet
2025-02-20 12:30:47 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [26b26463, L:/127.0.0.1:58750 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x26b26463, L:/127.0.0.1:58750 - R:localhost/127.0.0.1:8082]}}, [response_completed])
2025-02-20 12:30:47 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [26b26463, L:/127.0.0.1:58750 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x26b26463, L:/127.0.0.1:58750 - R:localhost/127.0.0.1:8082]}}, [disconnecting])
2025-02-20 12:30:47 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [26b26463, L:/127.0.0.1:58750 - R:localhost/127.0.0.1:8082] Releasing channel
2025-02-20 12:30:47 [] DEBUG r.n.r.PooledConnectionProvider - [26b26463, L:/127.0.0.1:58750 - R:localhost/127.0.0.1:8082] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-20 12:30:47 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] threw exception
org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 404 NOT_FOUND from GET http://localhost:8082/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 12:30:47 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate] with root cause
org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 404 NOT_FOUND from GET http://localhost:8082/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 12:30:47 [] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-20 12:30:47 [] INFO  c.c.c.g.c.config.RouterConfiguration - Authorized Request!
2025-02-20 12:30:47 [] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [GET] /error
2025-02-20 12:30:47 [] INFO  c.c.c.g.c.config.RouterConfiguration - Forwarding [GET] /error to User Microservice
2025-02-20 12:30:47 [] DEBUG r.n.r.PooledConnectionProvider - [26b26463, L:/127.0.0.1:58750 - R:localhost/127.0.0.1:8082] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 12:30:47 [] DEBUG r.n.http.client.HttpClientConnect - [26b26463-2, L:/127.0.0.1:58750 - R:localhost/127.0.0.1:8082] Handler is being applied: {uri=http://localhost:8082/error, method=GET}
2025-02-20 12:30:47 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [26b26463-2, L:/127.0.0.1:58750 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0x26b26463, L:/127.0.0.1:58750 - R:localhost/127.0.0.1:8082]}}, [request_prepared])
2025-02-20 12:30:47 [] DEBUG r.n.http.client.HttpClientOperations - [26b26463-2, L:/127.0.0.1:58750 - R:localhost/127.0.0.1:8082] No sendHeaders() called before complete, sending zero-length header
2025-02-20 12:30:47 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [26b26463-2, L:/127.0.0.1:58750 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0x26b26463, L:/127.0.0.1:58750 - R:localhost/127.0.0.1:8082]}}, [request_sent])
2025-02-20 12:30:47 [] DEBUG r.n.http.client.HttpClientOperations - [26b26463-2, L:/127.0.0.1:58750 - R:localhost/127.0.0.1:8082] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 500 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
Connection: <filtered>
2025-02-20 12:30:47 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [26b26463-2, L:/127.0.0.1:58750 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0x26b26463, L:/127.0.0.1:58750 - R:localhost/127.0.0.1:8082]}}, [response_received])
2025-02-20 12:30:47 [] DEBUG reactor.netty.channel.FluxReceive - [26b26463-2, L:/127.0.0.1:58750 - R:localhost/127.0.0.1:8082] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 12:30:47 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] threw exception
org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 404 NOT_FOUND from GET http://localhost:8082/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 12:30:47 [] DEBUG r.n.http.client.HttpClientOperations - [26b26463-2, L:/127.0.0.1:58750 - R:localhost/127.0.0.1:8082] Received last HTTP packet
2025-02-20 12:30:47 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [26b26463, L:/127.0.0.1:58750 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0x26b26463, L:/127.0.0.1:58750 - R:localhost/127.0.0.1:8082]}}, [response_completed])
2025-02-20 12:30:47 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [26b26463, L:/127.0.0.1:58750 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0x26b26463, L:/127.0.0.1:58750 - R:localhost/127.0.0.1:8082]}}, [disconnecting])
2025-02-20 12:30:47 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate] with root cause
org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 404 NOT_FOUND from GET http://localhost:8082/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 12:30:47 [] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-20 12:30:47 [] INFO  c.c.c.g.c.config.RouterConfiguration - Authorized Request!
2025-02-20 12:30:47 [] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [GET] /error
2025-02-20 12:30:47 [] INFO  c.c.c.g.c.config.RouterConfiguration - Forwarding [GET] /error to User Microservice
2025-02-20 12:30:47 [] DEBUG r.n.r.PooledConnectionProvider - [26b26463, L:/127.0.0.1:58750 ! R:localhost/127.0.0.1:8082] Channel closed, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 12:30:47 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] threw exception
java.lang.IllegalStateException: Cannot start async: [ERROR]
	at org.springframework.util.Assert.state(Assert.java:79)
	at org.springframework.web.context.request.async.StandardServletAsyncWebRequest.startAsync(StandardServletAsyncWebRequest.java:157)
	at org.springframework.web.context.request.async.WebAsyncManager.startAsyncProcessing(WebAsyncManager.java:487)
	at org.springframework.web.context.request.async.WebAsyncManager.startDeferredResultProcessing(WebAsyncManager.java:462)
	at org.springframework.web.servlet.function.DefaultAsyncServerResponse.writeAsync(DefaultAsyncServerResponse.java:130)
	at org.springframework.web.servlet.function.DefaultEntityResponseBuilder$PublisherEntityResponse.writeToInternal(DefaultEntityResponseBuilder.java:429)
	at org.springframework.web.servlet.function.AbstractServerResponse.writeTo(AbstractServerResponse.java:101)
	at org.springframework.web.servlet.function.support.HandlerFunctionAdapter.handle(HandlerFunctionAdapter.java:112)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:633)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:511)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:454)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:361)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:208)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:285)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:149)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:239)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:243)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:57)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 12:30:47 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [26b26463, L:/127.0.0.1:58750 ! R:localhost/127.0.0.1:8082] onStateChange(PooledConnection{channel=[id: 0x26b26463, L:/127.0.0.1:58750 ! R:localhost/127.0.0.1:8082]}, [disconnecting])
2025-02-20 12:30:58 [66130bdf-9848-413b-8afa-1a46766909e4] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-20 12:30:58 [66130bdf-9848-413b-8afa-1a46766909e4] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-20 12:30:58 [66130bdf-9848-413b-8afa-1a46766909e4] INFO  c.c.c.g.c.config.RouterConfiguration - Authorized Request!
2025-02-20 12:30:58 [66130bdf-9848-413b-8afa-1a46766909e4] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [GET] /users
2025-02-20 12:30:58 [66130bdf-9848-413b-8afa-1a46766909e4] INFO  c.c.c.g.c.config.RouterConfiguration - Forwarding [GET] /users to User Microservice
2025-02-20 12:30:58 [] DEBUG r.n.r.PooledConnectionProvider - [5f534cef] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 12:30:58 [] DEBUG r.netty.transport.TransportConfig - [5f534cef] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-20 12:30:58 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 12:30:58 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 12:30:58 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 12:31:02 [a0c340f3-55e9-4720-9101-7602d122e22e] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-20 14:40:43 [] DEBUG org.jboss.logging - Logging Provider: org.jboss.logging.Slf4jLoggerProvider found via system property
2025-02-20 14:40:43 [] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final
2025-02-20 14:40:43 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-02-20 14:40:43 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-02-20 14:40:43 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-02-20 14:40:43 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-02-20 14:40:43 [] DEBUG o.h.v.i.e.r.TraversableResolvers - Cannot find jakarta.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2025-02-20 14:40:44 [] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-02-20 14:40:44 [] INFO  c.c.c.g.c.CommongatewayApplication - Starting CommongatewayApplication using Java 17.0.12 with PID 23184 (D:\WORKSPACE\API-GATEWAY\commongateway\target\classes started by CITPL in D:\WORKSPACE\API-GATEWAY)
2025-02-20 14:40:44 [] DEBUG c.c.c.g.c.CommongatewayApplication - Running with Spring Boot v3.4.2, Spring v6.2.2
2025-02-20 14:40:44 [] INFO  c.c.c.g.c.CommongatewayApplication - No active profile set, falling back to 1 default profile: "default"
2025-02-20 14:40:44 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-02-20 14:40:44 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-02-20 14:40:44 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-02-20 14:40:44 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-02-20 14:40:44 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-02-20 14:40:44 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-02-20 14:40:45 [] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=50299984-946b-3bba-87da-3c9a1df8a676
2025-02-20 14:40:45 [] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-02-20 14:40:45 [] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-02-20 14:40:45 [] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-02-20 14:40:45 [] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.34]
2025-02-20 14:40:45 [] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-02-20 14:40:45 [] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1680 ms
2025-02-20 14:40:45 [] DEBUG i.n.u.i.l.InternalLoggerFactory - Using SLF4J as the default logging framework
2025-02-20 14:40:45 [] DEBUG i.n.util.internal.PlatformDependent0 - -Dio.netty.noUnsafe: false
2025-02-20 14:40:45 [] DEBUG i.n.util.internal.PlatformDependent0 - Java version: 17
2025-02-20 14:40:45 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe.theUnsafe: available
2025-02-20 14:40:45 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe base methods: all available
2025-02-20 14:40:45 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe.storeFence: available
2025-02-20 14:40:45 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.Buffer.address: available
2025-02-20 14:40:45 [] DEBUG i.n.util.internal.PlatformDependent0 - direct buffer constructor: unavailable: Reflective setAccessible(true) disabled
2025-02-20 14:40:45 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.Bits.unaligned: available, true
2025-02-20 14:40:45 [] DEBUG i.n.util.internal.PlatformDependent0 - jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable: class io.netty.util.internal.PlatformDependent0$7 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @7dc222ae
2025-02-20 14:40:45 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.DirectByteBuffer.<init>(long, {int,long}): unavailable
2025-02-20 14:40:45 [] DEBUG i.n.util.internal.PlatformDependent - sun.misc.Unsafe: available
2025-02-20 14:40:45 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.tmpdir: C:\Users\CITPL\AppData\Local\Temp (java.io.tmpdir)
2025-02-20 14:40:45 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.bitMode: 64 (sun.arch.data.model)
2025-02-20 14:40:45 [] DEBUG i.n.util.internal.PlatformDependent - Platform: Windows
2025-02-20 14:40:45 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.maxDirectMemory: -1 bytes
2025-02-20 14:40:45 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.uninitializedArrayAllocationThreshold: -1
2025-02-20 14:40:45 [] DEBUG io.netty.util.internal.CleanerJava9 - java.nio.ByteBuffer.cleaner(): available
2025-02-20 14:40:45 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.noPreferDirect: false
2025-02-20 14:40:46 [] DEBUG reactor.util.Loggers - Using Slf4j logging framework
2025-02-20 14:40:46 [] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-02-20 14:40:46 [] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2025-02-20 14:40:46 [] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2025-02-20 14:40:46 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-02-20 14:40:46 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via user class loader
2025-02-20 14:40:46 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-02-20 14:40:46 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-02-20 14:40:46 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-02-20 14:40:46 [] DEBUG o.h.v.i.e.r.TraversableResolvers - Cannot find jakarta.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2025-02-20 14:40:46 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-02-20 14:40:46 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-02-20 14:40:46 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-02-20 14:40:46 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-02-20 14:40:46 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-02-20 14:40:46 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-02-20 14:40:46 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	c.c.c.g.c.c.HomeController:
	{GET [/home]}: get()
2025-02-20 14:40:46 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2025-02-20 14:40:46 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 'beanNameHandlerMapping' {}
2025-02-20 14:40:46 [] DEBUG _.s.w.s.HandlerMapping.Mappings - Mapped com.citpl.common.gateway.commongateway.config.RouterConfiguration$$Lambda$895/0x0000020b814efb30@11f23038 -> com.citpl.common.gateway.commongateway.config.RouterConfiguration$$Lambda$896/0x0000020b814efd98@de77146
2025-02-20 14:40:46 [] DEBUG _.s.w.s.HandlerMapping.Mappings - Mapped /validate/** -> ProxyExchangeHandlerFunction
/users/** -> ProxyExchangeHandlerFunction
2025-02-20 14:40:46 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2025-02-20 14:40:47 [] DEBUG i.n.u.i.InternalThreadLocalMap - -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2025-02-20 14:40:47 [] DEBUG i.n.u.i.InternalThreadLocalMap - -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2025-02-20 14:40:47 [] DEBUG io.netty.util.ResourceLeakDetector - -Dio.netty.leakDetection.level: simple
2025-02-20 14:40:47 [] DEBUG io.netty.util.ResourceLeakDetector - -Dio.netty.leakDetection.targetRecords: 4
2025-02-20 14:40:47 [] DEBUG i.n.handler.codec.compression.Brotli - brotli4j not in the classpath; Brotli support will be unavailable.
2025-02-20 14:40:47 [] DEBUG reactor.netty.tcp.TcpResources - [http] resources will use the default LoopResources: DefaultLoopResources {prefix=reactor-http, daemon=true, selectCount=12, workerCount=12}
2025-02-20 14:40:47 [] DEBUG reactor.netty.tcp.TcpResources - [http] resources will use the default ConnectionProvider: reactor.netty.resources.DefaultPooledConnectionProvider@25218a4d
2025-02-20 14:40:47 [] DEBUG r.netty.resources.DefaultLoopIOUring - Default io_uring support : false
2025-02-20 14:40:47 [] DEBUG r.netty.resources.DefaultLoopEpoll - Default Epoll support : false
2025-02-20 14:40:47 [] DEBUG r.netty.resources.DefaultLoopKQueue - Default KQueue support : false
2025-02-20 14:40:47 [] DEBUG i.n.c.MultithreadEventLoopGroup - -Dio.netty.eventLoopThreads: 24
2025-02-20 14:40:47 [] DEBUG i.n.u.concurrent.GlobalEventExecutor - -Dio.netty.globalEventExecutor.quietPeriodSeconds: 1
2025-02-20 14:40:47 [] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.noKeySetOptimization: false
2025-02-20 14:40:47 [] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.selectorAutoRebuildThreshold: 512
2025-02-20 14:40:47 [] DEBUG i.n.util.internal.PlatformDependent - org.jctools-core.MpscChunkedArrayQueue: available
2025-02-20 14:40:47 [] DEBUG io.netty.util.NetUtil - -Djava.net.preferIPv4Stack: false
2025-02-20 14:40:47 [] DEBUG io.netty.util.NetUtil - -Djava.net.preferIPv6Addresses: false
2025-02-20 14:40:47 [] DEBUG i.netty.util.NetUtilInitializations - Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2025-02-20 14:40:47 [] DEBUG io.netty.util.NetUtil - Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2025-02-20 14:40:47 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default ResolvedAddressTypes: IPV4_ONLY
2025-02-20 14:40:47 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Localhost address: localhost/127.0.0.1
2025-02-20 14:40:47 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Windows hostname: DESKTOP-P307093
2025-02-20 14:40:47 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default search domains: []
2025-02-20 14:40:47 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default UnixResolverOptions{ndots=1, timeout=5, attempts=16}
2025-02-20 14:40:47 [] DEBUG i.n.r.DefaultHostsFileEntriesResolver - -Dio.netty.hostsFileRefreshInterval: 0
2025-02-20 14:40:47 [] DEBUG i.n.r.d.DefaultDnsServerAddressStreamProvider - Default DNS servers: [/8.8.8.8:53, /4.2.2.2:53] (sun.net.dns.ResolverConfiguration)
2025-02-20 14:40:47 [] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-02-20 14:40:47 [] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-02-20 14:40:48 [] INFO  c.c.c.g.c.CommongatewayApplication - Started CommongatewayApplication in 4.717 seconds (process running for 5.634)
2025-02-20 14:41:40 [] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-02-20 14:41:40 [] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-02-20 14:41:40 [] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-02-20 14:41:40 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-20 14:41:40 [5d6b6bb9-7943-45e6-a5c5-6879e73ef18e] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-20 14:41:40 [5d6b6bb9-7943-45e6-a5c5-6879e73ef18e] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-20 14:41:40 [5d6b6bb9-7943-45e6-a5c5-6879e73ef18e] INFO  c.c.c.g.c.config.RouterConfiguration - Authorized Request!
2025-02-20 14:41:40 [5d6b6bb9-7943-45e6-a5c5-6879e73ef18e] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [GET] /validate
2025-02-20 14:41:40 [5d6b6bb9-7943-45e6-a5c5-6879e73ef18e] INFO  c.c.c.g.c.config.RouterConfiguration - Forwarding [GET] /validate to User Microservice
2025-02-20 14:41:40 [5d6b6bb9-7943-45e6-a5c5-6879e73ef18e] DEBUG r.n.r.PooledConnectionProvider - Creating a new [http] client pool [PoolFactory{evictionInterval=PT0S, leasingStrategy=fifo, maxConnections=500, maxIdleTime=-1, maxLifeTime=-1, metricsEnabled=false, pendingAcquireMaxCount=1000, pendingAcquireTimeout=45000}] for [localhost/<unresolved>:8082]
2025-02-20 14:41:40 [5d6b6bb9-7943-45e6-a5c5-6879e73ef18e] DEBUG io.netty.channel.DefaultChannelId - -Dio.netty.processId: 23184 (auto-detected)
2025-02-20 14:41:40 [5d6b6bb9-7943-45e6-a5c5-6879e73ef18e] DEBUG io.netty.channel.DefaultChannelId - -Dio.netty.machineId: a0:d3:65:ff:fe:5e:b0:28 (auto-detected)
2025-02-20 14:41:40 [5d6b6bb9-7943-45e6-a5c5-6879e73ef18e] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.numHeapArenas: 24
2025-02-20 14:41:40 [5d6b6bb9-7943-45e6-a5c5-6879e73ef18e] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.numDirectArenas: 24
2025-02-20 14:41:40 [5d6b6bb9-7943-45e6-a5c5-6879e73ef18e] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.pageSize: 8192
2025-02-20 14:41:40 [5d6b6bb9-7943-45e6-a5c5-6879e73ef18e] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxOrder: 9
2025-02-20 14:41:40 [5d6b6bb9-7943-45e6-a5c5-6879e73ef18e] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.chunkSize: 4194304
2025-02-20 14:41:40 [5d6b6bb9-7943-45e6-a5c5-6879e73ef18e] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.smallCacheSize: 256
2025-02-20 14:41:40 [5d6b6bb9-7943-45e6-a5c5-6879e73ef18e] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.normalCacheSize: 64
2025-02-20 14:41:40 [5d6b6bb9-7943-45e6-a5c5-6879e73ef18e] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2025-02-20 14:41:40 [5d6b6bb9-7943-45e6-a5c5-6879e73ef18e] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.cacheTrimInterval: 8192
2025-02-20 14:41:40 [5d6b6bb9-7943-45e6-a5c5-6879e73ef18e] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.cacheTrimIntervalMillis: 0
2025-02-20 14:41:40 [5d6b6bb9-7943-45e6-a5c5-6879e73ef18e] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.useCacheForAllThreads: false
2025-02-20 14:41:40 [5d6b6bb9-7943-45e6-a5c5-6879e73ef18e] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
2025-02-20 14:41:40 [5d6b6bb9-7943-45e6-a5c5-6879e73ef18e] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.disableCacheFinalizersForFastThreadLocalThreads: false
2025-02-20 14:41:40 [5d6b6bb9-7943-45e6-a5c5-6879e73ef18e] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.allocator.type: pooled
2025-02-20 14:41:40 [5d6b6bb9-7943-45e6-a5c5-6879e73ef18e] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.threadLocalDirectBufferSize: 0
2025-02-20 14:41:40 [5d6b6bb9-7943-45e6-a5c5-6879e73ef18e] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.maxThreadLocalCharBufferSize: 16384
2025-02-20 14:41:40 [] DEBUG r.n.r.PooledConnectionProvider - [de3e8b19] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 14:41:40 [] DEBUG io.netty.buffer.AbstractByteBuf - -Dio.netty.buffer.checkAccessible: true
2025-02-20 14:41:40 [] DEBUG io.netty.buffer.AbstractByteBuf - -Dio.netty.buffer.checkBounds: true
2025-02-20 14:41:40 [] DEBUG i.n.util.ResourceLeakDetectorFactory - Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@30dc3452
2025-02-20 14:41:40 [] DEBUG r.netty.transport.TransportConfig - [de3e8b19] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-20 14:41:40 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 14:41:40 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 14:41:40 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 14:41:40 [] DEBUG i.n.b.ChannelInitializerExtensions - -Dio.netty.bootstrap.extensions: null
2025-02-20 14:41:40 [] DEBUG r.netty.transport.TransportConnector - [de3e8b19] Connecting to [localhost/127.0.0.1:8082].
2025-02-20 14:41:40 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [de3e8b19, L:/127.0.0.1:56204 - R:localhost/127.0.0.1:8082] Registering pool release on close event for channel
2025-02-20 14:41:40 [] DEBUG r.n.r.PooledConnectionProvider - [de3e8b19, L:/127.0.0.1:56204 - R:localhost/127.0.0.1:8082] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 14:41:40 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [de3e8b19, L:/127.0.0.1:56204 - R:localhost/127.0.0.1:8082] onStateChange(PooledConnection{channel=[id: 0xde3e8b19, L:/127.0.0.1:56204 - R:localhost/127.0.0.1:8082]}, [connected])
2025-02-20 14:41:40 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [de3e8b19-1, L:/127.0.0.1:56204 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0xde3e8b19, L:/127.0.0.1:56204 - R:localhost/127.0.0.1:8082]}}, [configured])
2025-02-20 14:41:40 [] DEBUG r.n.http.client.HttpClientConnect - [de3e8b19-1, L:/127.0.0.1:56204 - R:localhost/127.0.0.1:8082] Handler is being applied: {uri=http://localhost:8082/validate, method=GET}
2025-02-20 14:41:40 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [de3e8b19-1, L:/127.0.0.1:56204 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xde3e8b19, L:/127.0.0.1:56204 - R:localhost/127.0.0.1:8082]}}, [request_prepared])
2025-02-20 14:41:41 [] DEBUG r.n.http.client.HttpClientOperations - [de3e8b19-1, L:/127.0.0.1:56204 - R:localhost/127.0.0.1:8082] No sendHeaders() called before complete, sending zero-length header
2025-02-20 14:41:41 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.maxCapacityPerThread: 4096
2025-02-20 14:41:41 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.ratio: 8
2025-02-20 14:41:41 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.chunkSize: 32
2025-02-20 14:41:41 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.blocking: false
2025-02-20 14:41:41 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.batchFastThreadLocalOnly: true
2025-02-20 14:41:41 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [de3e8b19-1, L:/127.0.0.1:56204 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xde3e8b19, L:/127.0.0.1:56204 - R:localhost/127.0.0.1:8082]}}, [request_sent])
2025-02-20 14:41:41 [] DEBUG i.n.handler.codec.compression.Zstd - zstd-jni not in the classpath; Zstd support will be unavailable.
2025-02-20 14:41:41 [] DEBUG r.n.http.client.HttpClientOperations - [de3e8b19-1, L:/127.0.0.1:56204 - R:localhost/127.0.0.1:8082] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 404 
Vary: <filtered>
Vary: <filtered>
Vary: <filtered>
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-20 14:41:41 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [de3e8b19-1, L:/127.0.0.1:56204 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xde3e8b19, L:/127.0.0.1:56204 - R:localhost/127.0.0.1:8082]}}, [response_received])
2025-02-20 14:41:41 [] DEBUG reactor.netty.channel.FluxReceive - [de3e8b19-1, L:/127.0.0.1:56204 - R:localhost/127.0.0.1:8082] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 14:41:41 [] DEBUG r.n.http.client.HttpClientOperations - [de3e8b19-1, L:/127.0.0.1:56204 - R:localhost/127.0.0.1:8082] Received last HTTP packet
2025-02-20 14:41:41 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [de3e8b19, L:/127.0.0.1:56204 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xde3e8b19, L:/127.0.0.1:56204 - R:localhost/127.0.0.1:8082]}}, [response_completed])
2025-02-20 14:41:41 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [de3e8b19, L:/127.0.0.1:56204 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xde3e8b19, L:/127.0.0.1:56204 - R:localhost/127.0.0.1:8082]}}, [disconnecting])
2025-02-20 14:41:41 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [de3e8b19, L:/127.0.0.1:56204 - R:localhost/127.0.0.1:8082] Releasing channel
2025-02-20 14:41:41 [] DEBUG r.n.r.PooledConnectionProvider - [de3e8b19, L:/127.0.0.1:56204 - R:localhost/127.0.0.1:8082] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-20 14:41:41 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] threw exception
org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 404 NOT_FOUND from GET http://localhost:8082/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 14:41:41 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate] with root cause
org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 404 NOT_FOUND from GET http://localhost:8082/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 14:41:41 [] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-20 14:41:41 [] INFO  c.c.c.g.c.config.RouterConfiguration - Authorized Request!
2025-02-20 14:41:41 [] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [GET] /error
2025-02-20 14:41:41 [] INFO  c.c.c.g.c.config.RouterConfiguration - Forwarding [GET] /error to User Microservice
2025-02-20 14:41:41 [] DEBUG r.n.r.PooledConnectionProvider - [de3e8b19, L:/127.0.0.1:56204 - R:localhost/127.0.0.1:8082] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 14:41:41 [] DEBUG r.n.http.client.HttpClientConnect - [de3e8b19-2, L:/127.0.0.1:56204 - R:localhost/127.0.0.1:8082] Handler is being applied: {uri=http://localhost:8082/error, method=GET}
2025-02-20 14:41:41 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [de3e8b19-2, L:/127.0.0.1:56204 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0xde3e8b19, L:/127.0.0.1:56204 - R:localhost/127.0.0.1:8082]}}, [request_prepared])
2025-02-20 14:41:41 [] DEBUG r.n.http.client.HttpClientOperations - [de3e8b19-2, L:/127.0.0.1:56204 - R:localhost/127.0.0.1:8082] No sendHeaders() called before complete, sending zero-length header
2025-02-20 14:41:41 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [de3e8b19-2, L:/127.0.0.1:56204 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0xde3e8b19, L:/127.0.0.1:56204 - R:localhost/127.0.0.1:8082]}}, [request_sent])
2025-02-20 14:41:41 [] DEBUG r.n.http.client.HttpClientOperations - [de3e8b19-2, L:/127.0.0.1:56204 - R:localhost/127.0.0.1:8082] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 500 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
Connection: <filtered>
2025-02-20 14:41:41 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [de3e8b19-2, L:/127.0.0.1:56204 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0xde3e8b19, L:/127.0.0.1:56204 - R:localhost/127.0.0.1:8082]}}, [response_received])
2025-02-20 14:41:41 [] DEBUG reactor.netty.channel.FluxReceive - [de3e8b19-2, L:/127.0.0.1:56204 - R:localhost/127.0.0.1:8082] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 14:41:41 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] threw exception
org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 404 NOT_FOUND from GET http://localhost:8082/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 14:41:41 [] DEBUG r.n.http.client.HttpClientOperations - [de3e8b19-2, L:/127.0.0.1:56204 - R:localhost/127.0.0.1:8082] Received last HTTP packet
2025-02-20 14:41:41 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [de3e8b19, L:/127.0.0.1:56204 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0xde3e8b19, L:/127.0.0.1:56204 - R:localhost/127.0.0.1:8082]}}, [response_completed])
2025-02-20 14:41:41 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [de3e8b19, L:/127.0.0.1:56204 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0xde3e8b19, L:/127.0.0.1:56204 - R:localhost/127.0.0.1:8082]}}, [disconnecting])
2025-02-20 14:41:41 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate] with root cause
org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 404 NOT_FOUND from GET http://localhost:8082/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 14:41:41 [] DEBUG r.n.r.PooledConnectionProvider - [de3e8b19, L:/127.0.0.1:56204 ! R:localhost/127.0.0.1:8082] Channel closed, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 14:41:41 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [de3e8b19, L:/127.0.0.1:56204 ! R:localhost/127.0.0.1:8082] onStateChange(PooledConnection{channel=[id: 0xde3e8b19, L:/127.0.0.1:56204 ! R:localhost/127.0.0.1:8082]}, [disconnecting])
2025-02-20 14:41:41 [] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-20 14:41:41 [] INFO  c.c.c.g.c.config.RouterConfiguration - Authorized Request!
2025-02-20 14:41:41 [] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [GET] /error
2025-02-20 14:41:41 [] INFO  c.c.c.g.c.config.RouterConfiguration - Forwarding [GET] /error to User Microservice
2025-02-20 14:41:41 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] threw exception
java.lang.IllegalStateException: Cannot start async: [ERROR]
	at org.springframework.util.Assert.state(Assert.java:79)
	at org.springframework.web.context.request.async.StandardServletAsyncWebRequest.startAsync(StandardServletAsyncWebRequest.java:157)
	at org.springframework.web.context.request.async.WebAsyncManager.startAsyncProcessing(WebAsyncManager.java:487)
	at org.springframework.web.context.request.async.WebAsyncManager.startDeferredResultProcessing(WebAsyncManager.java:462)
	at org.springframework.web.servlet.function.DefaultAsyncServerResponse.writeAsync(DefaultAsyncServerResponse.java:130)
	at org.springframework.web.servlet.function.DefaultEntityResponseBuilder$PublisherEntityResponse.writeToInternal(DefaultEntityResponseBuilder.java:429)
	at org.springframework.web.servlet.function.AbstractServerResponse.writeTo(AbstractServerResponse.java:101)
	at org.springframework.web.servlet.function.support.HandlerFunctionAdapter.handle(HandlerFunctionAdapter.java:112)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:633)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:511)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:454)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:361)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:208)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:285)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:149)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:239)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:243)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:57)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 14:41:41 [] ERROR o.a.c.c.C.[Tomcat].[localhost] - Exception Processing [ErrorPage[errorCode=0, location=/error]]
jakarta.servlet.ServletException: Async processing failed
	at org.springframework.web.servlet.function.DefaultAsyncServerResponse.writeAsync(DefaultAsyncServerResponse.java:136)
	at org.springframework.web.servlet.function.DefaultEntityResponseBuilder$PublisherEntityResponse.writeToInternal(DefaultEntityResponseBuilder.java:429)
	at org.springframework.web.servlet.function.AbstractServerResponse.writeTo(AbstractServerResponse.java:101)
	at org.springframework.web.servlet.function.support.HandlerFunctionAdapter.handle(HandlerFunctionAdapter.java:112)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:633)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:511)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:454)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:361)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:208)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:285)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:149)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:239)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:243)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:57)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: java.lang.IllegalStateException: Cannot start async: [ERROR]
	at org.springframework.util.Assert.state(Assert.java:79)
	at org.springframework.web.context.request.async.StandardServletAsyncWebRequest.startAsync(StandardServletAsyncWebRequest.java:157)
	at org.springframework.web.context.request.async.WebAsyncManager.startAsyncProcessing(WebAsyncManager.java:487)
	at org.springframework.web.context.request.async.WebAsyncManager.startDeferredResultProcessing(WebAsyncManager.java:462)
	at org.springframework.web.servlet.function.DefaultAsyncServerResponse.writeAsync(DefaultAsyncServerResponse.java:130)
	... 41 common frames omitted
2025-02-20 14:47:21 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-20 14:47:21 [5a0ae49d-0f6d-4cb7-8f62-853343ecbf00] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-20 14:47:21 [5a0ae49d-0f6d-4cb7-8f62-853343ecbf00] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-20 14:47:21 [5a0ae49d-0f6d-4cb7-8f62-853343ecbf00] INFO  c.c.c.g.c.config.RouterConfiguration - Authorized Request!
2025-02-20 14:47:21 [5a0ae49d-0f6d-4cb7-8f62-853343ecbf00] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [GET] /validate
2025-02-20 14:47:21 [5a0ae49d-0f6d-4cb7-8f62-853343ecbf00] INFO  c.c.c.g.c.config.RouterConfiguration - Forwarding [GET] /validate to User Microservice
2025-02-20 14:47:21 [] DEBUG r.n.r.PooledConnectionProvider - [fe3de4e2] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 14:47:21 [] DEBUG r.netty.transport.TransportConfig - [fe3de4e2] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-20 14:47:21 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 14:47:21 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 14:47:21 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 14:47:21 [] DEBUG r.netty.transport.TransportConnector - [fe3de4e2] Connecting to [localhost/127.0.0.1:8082].
2025-02-20 14:47:21 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [fe3de4e2, L:/127.0.0.1:56316 - R:localhost/127.0.0.1:8082] Registering pool release on close event for channel
2025-02-20 14:47:21 [] DEBUG r.n.r.PooledConnectionProvider - [fe3de4e2, L:/127.0.0.1:56316 - R:localhost/127.0.0.1:8082] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 14:47:21 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [fe3de4e2, L:/127.0.0.1:56316 - R:localhost/127.0.0.1:8082] onStateChange(PooledConnection{channel=[id: 0xfe3de4e2, L:/127.0.0.1:56316 - R:localhost/127.0.0.1:8082]}, [connected])
2025-02-20 14:47:21 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [fe3de4e2-1, L:/127.0.0.1:56316 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0xfe3de4e2, L:/127.0.0.1:56316 - R:localhost/127.0.0.1:8082]}}, [configured])
2025-02-20 14:47:21 [] DEBUG r.n.http.client.HttpClientConnect - [fe3de4e2-1, L:/127.0.0.1:56316 - R:localhost/127.0.0.1:8082] Handler is being applied: {uri=http://localhost:8082/validate, method=GET}
2025-02-20 14:47:21 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [fe3de4e2-1, L:/127.0.0.1:56316 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xfe3de4e2, L:/127.0.0.1:56316 - R:localhost/127.0.0.1:8082]}}, [request_prepared])
2025-02-20 14:47:21 [] DEBUG r.n.http.client.HttpClientOperations - [fe3de4e2-1, L:/127.0.0.1:56316 - R:localhost/127.0.0.1:8082] No sendHeaders() called before complete, sending zero-length header
2025-02-20 14:47:21 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [fe3de4e2-1, L:/127.0.0.1:56316 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xfe3de4e2, L:/127.0.0.1:56316 - R:localhost/127.0.0.1:8082]}}, [request_sent])
2025-02-20 14:47:21 [] DEBUG r.n.http.client.HttpClientOperations - [fe3de4e2-1, L:/127.0.0.1:56316 - R:localhost/127.0.0.1:8082] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 404 
Vary: <filtered>
Vary: <filtered>
Vary: <filtered>
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-20 14:47:21 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [fe3de4e2-1, L:/127.0.0.1:56316 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xfe3de4e2, L:/127.0.0.1:56316 - R:localhost/127.0.0.1:8082]}}, [response_received])
2025-02-20 14:47:21 [] DEBUG reactor.netty.channel.FluxReceive - [fe3de4e2-1, L:/127.0.0.1:56316 - R:localhost/127.0.0.1:8082] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 14:47:21 [] DEBUG r.n.http.client.HttpClientOperations - [fe3de4e2-1, L:/127.0.0.1:56316 - R:localhost/127.0.0.1:8082] Received last HTTP packet
2025-02-20 14:47:21 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [fe3de4e2, L:/127.0.0.1:56316 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xfe3de4e2, L:/127.0.0.1:56316 - R:localhost/127.0.0.1:8082]}}, [response_completed])
2025-02-20 14:47:21 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [fe3de4e2, L:/127.0.0.1:56316 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xfe3de4e2, L:/127.0.0.1:56316 - R:localhost/127.0.0.1:8082]}}, [disconnecting])
2025-02-20 14:47:21 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [fe3de4e2, L:/127.0.0.1:56316 - R:localhost/127.0.0.1:8082] Releasing channel
2025-02-20 14:47:21 [] DEBUG r.n.r.PooledConnectionProvider - [fe3de4e2, L:/127.0.0.1:56316 - R:localhost/127.0.0.1:8082] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-20 14:47:21 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] threw exception
org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 404 NOT_FOUND from GET http://localhost:8082/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 14:47:21 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate] with root cause
org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 404 NOT_FOUND from GET http://localhost:8082/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 14:47:21 [] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-20 14:47:21 [] INFO  c.c.c.g.c.config.RouterConfiguration - Authorized Request!
2025-02-20 14:47:21 [] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [GET] /error
2025-02-20 14:47:21 [] INFO  c.c.c.g.c.config.RouterConfiguration - Forwarding [GET] /error to User Microservice
2025-02-20 14:47:21 [] DEBUG r.n.r.PooledConnectionProvider - [fe3de4e2, L:/127.0.0.1:56316 - R:localhost/127.0.0.1:8082] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 14:47:21 [] DEBUG r.n.http.client.HttpClientConnect - [fe3de4e2-2, L:/127.0.0.1:56316 - R:localhost/127.0.0.1:8082] Handler is being applied: {uri=http://localhost:8082/error, method=GET}
2025-02-20 14:47:21 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [fe3de4e2-2, L:/127.0.0.1:56316 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0xfe3de4e2, L:/127.0.0.1:56316 - R:localhost/127.0.0.1:8082]}}, [request_prepared])
2025-02-20 14:47:21 [] DEBUG r.n.http.client.HttpClientOperations - [fe3de4e2-2, L:/127.0.0.1:56316 - R:localhost/127.0.0.1:8082] No sendHeaders() called before complete, sending zero-length header
2025-02-20 14:47:21 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [fe3de4e2-2, L:/127.0.0.1:56316 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0xfe3de4e2, L:/127.0.0.1:56316 - R:localhost/127.0.0.1:8082]}}, [request_sent])
2025-02-20 14:47:21 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] threw exception
org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 404 NOT_FOUND from GET http://localhost:8082/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 14:47:21 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate] with root cause
org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 404 NOT_FOUND from GET http://localhost:8082/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 14:47:21 [] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-20 14:47:21 [] INFO  c.c.c.g.c.config.RouterConfiguration - Authorized Request!
2025-02-20 14:47:21 [] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [GET] /error
2025-02-20 14:47:21 [] DEBUG r.n.http.client.HttpClientOperations - [fe3de4e2-2, L:/127.0.0.1:56316 - R:localhost/127.0.0.1:8082] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 500 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
Connection: <filtered>
2025-02-20 14:47:21 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [fe3de4e2-2, L:/127.0.0.1:56316 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0xfe3de4e2, L:/127.0.0.1:56316 - R:localhost/127.0.0.1:8082]}}, [response_received])
2025-02-20 14:47:21 [] INFO  c.c.c.g.c.config.RouterConfiguration - Forwarding [GET] /error to User Microservice
2025-02-20 14:47:21 [] DEBUG reactor.netty.channel.FluxReceive - [fe3de4e2-2, L:/127.0.0.1:56316 - R:localhost/127.0.0.1:8082] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 14:47:21 [] DEBUG r.n.http.client.HttpClientOperations - [fe3de4e2-2, L:/127.0.0.1:56316 - R:localhost/127.0.0.1:8082] Received last HTTP packet
2025-02-20 14:47:21 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] threw exception
java.lang.IllegalStateException: Cannot start async: [ERROR]
	at org.springframework.util.Assert.state(Assert.java:79)
	at org.springframework.web.context.request.async.StandardServletAsyncWebRequest.startAsync(StandardServletAsyncWebRequest.java:157)
	at org.springframework.web.context.request.async.WebAsyncManager.startAsyncProcessing(WebAsyncManager.java:487)
	at org.springframework.web.context.request.async.WebAsyncManager.startDeferredResultProcessing(WebAsyncManager.java:462)
	at org.springframework.web.servlet.function.DefaultAsyncServerResponse.writeAsync(DefaultAsyncServerResponse.java:130)
	at org.springframework.web.servlet.function.DefaultEntityResponseBuilder$PublisherEntityResponse.writeToInternal(DefaultEntityResponseBuilder.java:429)
	at org.springframework.web.servlet.function.AbstractServerResponse.writeTo(AbstractServerResponse.java:101)
	at org.springframework.web.servlet.function.support.HandlerFunctionAdapter.handle(HandlerFunctionAdapter.java:112)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:633)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:511)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:454)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:361)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:208)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:285)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:149)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:239)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:243)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:57)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 14:47:21 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [fe3de4e2, L:/127.0.0.1:56316 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0xfe3de4e2, L:/127.0.0.1:56316 - R:localhost/127.0.0.1:8082]}}, [response_completed])
2025-02-20 14:47:21 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [fe3de4e2, L:/127.0.0.1:56316 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0xfe3de4e2, L:/127.0.0.1:56316 - R:localhost/127.0.0.1:8082]}}, [disconnecting])
2025-02-20 14:47:21 [] DEBUG r.n.r.PooledConnectionProvider - [fe3de4e2, L:/127.0.0.1:56316 ! R:localhost/127.0.0.1:8082] Channel closed, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 14:47:21 [] ERROR o.a.c.c.C.[Tomcat].[localhost] - Exception Processing [ErrorPage[errorCode=0, location=/error]]
jakarta.servlet.ServletException: Async processing failed
	at org.springframework.web.servlet.function.DefaultAsyncServerResponse.writeAsync(DefaultAsyncServerResponse.java:136)
	at org.springframework.web.servlet.function.DefaultEntityResponseBuilder$PublisherEntityResponse.writeToInternal(DefaultEntityResponseBuilder.java:429)
	at org.springframework.web.servlet.function.AbstractServerResponse.writeTo(AbstractServerResponse.java:101)
	at org.springframework.web.servlet.function.support.HandlerFunctionAdapter.handle(HandlerFunctionAdapter.java:112)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:633)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:511)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:454)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:361)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:208)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:285)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:149)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:239)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:243)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:57)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: java.lang.IllegalStateException: Cannot start async: [ERROR]
	at org.springframework.util.Assert.state(Assert.java:79)
	at org.springframework.web.context.request.async.StandardServletAsyncWebRequest.startAsync(StandardServletAsyncWebRequest.java:157)
	at org.springframework.web.context.request.async.WebAsyncManager.startAsyncProcessing(WebAsyncManager.java:487)
	at org.springframework.web.context.request.async.WebAsyncManager.startDeferredResultProcessing(WebAsyncManager.java:462)
	at org.springframework.web.servlet.function.DefaultAsyncServerResponse.writeAsync(DefaultAsyncServerResponse.java:130)
	... 41 common frames omitted
2025-02-20 14:47:21 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [fe3de4e2, L:/127.0.0.1:56316 ! R:localhost/127.0.0.1:8082] onStateChange(PooledConnection{channel=[id: 0xfe3de4e2, L:/127.0.0.1:56316 ! R:localhost/127.0.0.1:8082]}, [disconnecting])
2025-02-20 14:47:23 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-20 14:47:23 [9491d66d-324b-4b06-8a74-d71f1ed3f4f1] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-20 14:47:23 [9491d66d-324b-4b06-8a74-d71f1ed3f4f1] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-20 14:47:23 [9491d66d-324b-4b06-8a74-d71f1ed3f4f1] INFO  c.c.c.g.c.config.RouterConfiguration - Authorized Request!
2025-02-20 14:47:23 [9491d66d-324b-4b06-8a74-d71f1ed3f4f1] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [GET] /validate
2025-02-20 14:47:23 [9491d66d-324b-4b06-8a74-d71f1ed3f4f1] INFO  c.c.c.g.c.config.RouterConfiguration - Forwarding [GET] /validate to User Microservice
2025-02-20 14:47:23 [] DEBUG r.n.r.PooledConnectionProvider - [bc01b63b] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 14:47:23 [] DEBUG r.netty.transport.TransportConfig - [bc01b63b] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-20 14:47:23 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 14:47:23 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 14:47:23 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 14:47:23 [] DEBUG r.netty.transport.TransportConnector - [bc01b63b] Connecting to [localhost/127.0.0.1:8082].
2025-02-20 14:47:23 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [bc01b63b, L:/127.0.0.1:56326 - R:localhost/127.0.0.1:8082] Registering pool release on close event for channel
2025-02-20 14:47:23 [] DEBUG r.n.r.PooledConnectionProvider - [bc01b63b, L:/127.0.0.1:56326 - R:localhost/127.0.0.1:8082] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 14:47:23 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [bc01b63b, L:/127.0.0.1:56326 - R:localhost/127.0.0.1:8082] onStateChange(PooledConnection{channel=[id: 0xbc01b63b, L:/127.0.0.1:56326 - R:localhost/127.0.0.1:8082]}, [connected])
2025-02-20 14:47:23 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [bc01b63b-1, L:/127.0.0.1:56326 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0xbc01b63b, L:/127.0.0.1:56326 - R:localhost/127.0.0.1:8082]}}, [configured])
2025-02-20 14:47:23 [] DEBUG r.n.http.client.HttpClientConnect - [bc01b63b-1, L:/127.0.0.1:56326 - R:localhost/127.0.0.1:8082] Handler is being applied: {uri=http://localhost:8082/validate, method=GET}
2025-02-20 14:47:23 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [bc01b63b-1, L:/127.0.0.1:56326 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xbc01b63b, L:/127.0.0.1:56326 - R:localhost/127.0.0.1:8082]}}, [request_prepared])
2025-02-20 14:47:23 [] DEBUG r.n.http.client.HttpClientOperations - [bc01b63b-1, L:/127.0.0.1:56326 - R:localhost/127.0.0.1:8082] No sendHeaders() called before complete, sending zero-length header
2025-02-20 14:47:23 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [bc01b63b-1, L:/127.0.0.1:56326 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xbc01b63b, L:/127.0.0.1:56326 - R:localhost/127.0.0.1:8082]}}, [request_sent])
2025-02-20 14:47:23 [] DEBUG r.n.http.client.HttpClientOperations - [bc01b63b-1, L:/127.0.0.1:56326 - R:localhost/127.0.0.1:8082] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 404 
Vary: <filtered>
Vary: <filtered>
Vary: <filtered>
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-20 14:47:23 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [bc01b63b-1, L:/127.0.0.1:56326 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xbc01b63b, L:/127.0.0.1:56326 - R:localhost/127.0.0.1:8082]}}, [response_received])
2025-02-20 14:47:23 [] DEBUG reactor.netty.channel.FluxReceive - [bc01b63b-1, L:/127.0.0.1:56326 - R:localhost/127.0.0.1:8082] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 14:47:23 [] DEBUG r.n.http.client.HttpClientOperations - [bc01b63b-1, L:/127.0.0.1:56326 - R:localhost/127.0.0.1:8082] Received last HTTP packet
2025-02-20 14:47:23 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [bc01b63b, L:/127.0.0.1:56326 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xbc01b63b, L:/127.0.0.1:56326 - R:localhost/127.0.0.1:8082]}}, [response_completed])
2025-02-20 14:47:23 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [bc01b63b, L:/127.0.0.1:56326 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xbc01b63b, L:/127.0.0.1:56326 - R:localhost/127.0.0.1:8082]}}, [disconnecting])
2025-02-20 14:47:23 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [bc01b63b, L:/127.0.0.1:56326 - R:localhost/127.0.0.1:8082] Releasing channel
2025-02-20 14:47:23 [] DEBUG r.n.r.PooledConnectionProvider - [bc01b63b, L:/127.0.0.1:56326 - R:localhost/127.0.0.1:8082] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-20 14:47:23 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] threw exception
org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 404 NOT_FOUND from GET http://localhost:8082/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 14:47:23 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate] with root cause
org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 404 NOT_FOUND from GET http://localhost:8082/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 14:47:23 [] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-20 14:47:23 [] INFO  c.c.c.g.c.config.RouterConfiguration - Authorized Request!
2025-02-20 14:47:23 [] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [GET] /error
2025-02-20 14:47:23 [] INFO  c.c.c.g.c.config.RouterConfiguration - Forwarding [GET] /error to User Microservice
2025-02-20 14:47:23 [] DEBUG r.n.r.PooledConnectionProvider - [bc01b63b, L:/127.0.0.1:56326 - R:localhost/127.0.0.1:8082] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 14:47:23 [] DEBUG r.n.http.client.HttpClientConnect - [bc01b63b-2, L:/127.0.0.1:56326 - R:localhost/127.0.0.1:8082] Handler is being applied: {uri=http://localhost:8082/error, method=GET}
2025-02-20 14:47:23 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [bc01b63b-2, L:/127.0.0.1:56326 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0xbc01b63b, L:/127.0.0.1:56326 - R:localhost/127.0.0.1:8082]}}, [request_prepared])
2025-02-20 14:47:23 [] DEBUG r.n.http.client.HttpClientOperations - [bc01b63b-2, L:/127.0.0.1:56326 - R:localhost/127.0.0.1:8082] No sendHeaders() called before complete, sending zero-length header
2025-02-20 14:47:23 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [bc01b63b-2, L:/127.0.0.1:56326 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0xbc01b63b, L:/127.0.0.1:56326 - R:localhost/127.0.0.1:8082]}}, [request_sent])
2025-02-20 14:47:23 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] threw exception
org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 404 NOT_FOUND from GET http://localhost:8082/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 14:47:23 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate] with root cause
org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 404 NOT_FOUND from GET http://localhost:8082/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 14:47:23 [] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-20 14:47:23 [] INFO  c.c.c.g.c.config.RouterConfiguration - Authorized Request!
2025-02-20 14:47:23 [] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [GET] /error
2025-02-20 14:47:23 [] INFO  c.c.c.g.c.config.RouterConfiguration - Forwarding [GET] /error to User Microservice
2025-02-20 14:47:23 [] DEBUG r.n.http.client.HttpClientOperations - [bc01b63b-2, L:/127.0.0.1:56326 - R:localhost/127.0.0.1:8082] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 500 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
Connection: <filtered>
2025-02-20 14:47:23 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [bc01b63b-2, L:/127.0.0.1:56326 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0xbc01b63b, L:/127.0.0.1:56326 - R:localhost/127.0.0.1:8082]}}, [response_received])
2025-02-20 14:47:23 [] DEBUG reactor.netty.channel.FluxReceive - [bc01b63b-2, L:/127.0.0.1:56326 - R:localhost/127.0.0.1:8082] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 14:47:23 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] threw exception
java.lang.IllegalStateException: Cannot start async: [ERROR]
	at org.springframework.util.Assert.state(Assert.java:79)
	at org.springframework.web.context.request.async.StandardServletAsyncWebRequest.startAsync(StandardServletAsyncWebRequest.java:157)
	at org.springframework.web.context.request.async.WebAsyncManager.startAsyncProcessing(WebAsyncManager.java:487)
	at org.springframework.web.context.request.async.WebAsyncManager.startDeferredResultProcessing(WebAsyncManager.java:462)
	at org.springframework.web.servlet.function.DefaultAsyncServerResponse.writeAsync(DefaultAsyncServerResponse.java:130)
	at org.springframework.web.servlet.function.DefaultEntityResponseBuilder$PublisherEntityResponse.writeToInternal(DefaultEntityResponseBuilder.java:429)
	at org.springframework.web.servlet.function.AbstractServerResponse.writeTo(AbstractServerResponse.java:101)
	at org.springframework.web.servlet.function.support.HandlerFunctionAdapter.handle(HandlerFunctionAdapter.java:112)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:633)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:511)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:454)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:361)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:208)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:285)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:149)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:239)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:243)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:57)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 14:47:23 [] ERROR o.a.c.c.C.[Tomcat].[localhost] - Exception Processing [ErrorPage[errorCode=0, location=/error]]
jakarta.servlet.ServletException: Async processing failed
	at org.springframework.web.servlet.function.DefaultAsyncServerResponse.writeAsync(DefaultAsyncServerResponse.java:136)
	at org.springframework.web.servlet.function.DefaultEntityResponseBuilder$PublisherEntityResponse.writeToInternal(DefaultEntityResponseBuilder.java:429)
	at org.springframework.web.servlet.function.AbstractServerResponse.writeTo(AbstractServerResponse.java:101)
	at org.springframework.web.servlet.function.support.HandlerFunctionAdapter.handle(HandlerFunctionAdapter.java:112)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:633)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:511)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:454)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:361)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:208)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:285)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:149)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:239)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:243)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:57)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: java.lang.IllegalStateException: Cannot start async: [ERROR]
	at org.springframework.util.Assert.state(Assert.java:79)
	at org.springframework.web.context.request.async.StandardServletAsyncWebRequest.startAsync(StandardServletAsyncWebRequest.java:157)
	at org.springframework.web.context.request.async.WebAsyncManager.startAsyncProcessing(WebAsyncManager.java:487)
	at org.springframework.web.context.request.async.WebAsyncManager.startDeferredResultProcessing(WebAsyncManager.java:462)
	at org.springframework.web.servlet.function.DefaultAsyncServerResponse.writeAsync(DefaultAsyncServerResponse.java:130)
	... 41 common frames omitted
2025-02-20 14:47:23 [] DEBUG r.n.http.client.HttpClientOperations - [bc01b63b-2, L:/127.0.0.1:56326 - R:localhost/127.0.0.1:8082] Received last HTTP packet
2025-02-20 14:47:23 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [bc01b63b, L:/127.0.0.1:56326 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0xbc01b63b, L:/127.0.0.1:56326 - R:localhost/127.0.0.1:8082]}}, [response_completed])
2025-02-20 14:47:23 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [bc01b63b, L:/127.0.0.1:56326 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0xbc01b63b, L:/127.0.0.1:56326 - R:localhost/127.0.0.1:8082]}}, [disconnecting])
2025-02-20 14:47:23 [] DEBUG r.n.r.PooledConnectionProvider - [bc01b63b, L:/127.0.0.1:56326 ! R:localhost/127.0.0.1:8082] Channel closed, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 14:47:23 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [bc01b63b, L:/127.0.0.1:56326 ! R:localhost/127.0.0.1:8082] onStateChange(PooledConnection{channel=[id: 0xbc01b63b, L:/127.0.0.1:56326 ! R:localhost/127.0.0.1:8082]}, [disconnecting])
2025-02-20 14:47:47 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-20 14:47:47 [ae454f38-fe1c-4e9c-8949-34eecef410c4] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-20 14:47:47 [ae454f38-fe1c-4e9c-8949-34eecef410c4] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-20 14:47:47 [ae454f38-fe1c-4e9c-8949-34eecef410c4] INFO  c.c.c.g.c.config.RouterConfiguration - Authorized Request!
2025-02-20 14:47:47 [ae454f38-fe1c-4e9c-8949-34eecef410c4] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [GET] /validate
2025-02-20 14:47:47 [ae454f38-fe1c-4e9c-8949-34eecef410c4] WARN  c.c.c.g.c.config.RouterConfiguration - Missing Validation Token!
2025-02-20 14:47:55 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-20 14:47:55 [87b1b8b2-c886-44e5-9129-215fac09cd0a] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-20 14:47:55 [87b1b8b2-c886-44e5-9129-215fac09cd0a] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-20 14:47:55 [87b1b8b2-c886-44e5-9129-215fac09cd0a] INFO  c.c.c.g.c.config.RouterConfiguration - Authorized Request!
2025-02-20 14:47:55 [87b1b8b2-c886-44e5-9129-215fac09cd0a] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [GET] /validate
2025-02-20 14:47:55 [87b1b8b2-c886-44e5-9129-215fac09cd0a] INFO  c.c.c.g.c.config.RouterConfiguration - Forwarding [GET] /validate to User Microservice
2025-02-20 14:47:55 [] DEBUG r.n.r.PooledConnectionProvider - [cf53bd14] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 14:47:55 [] DEBUG r.netty.transport.TransportConfig - [cf53bd14] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-20 14:47:55 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 14:47:55 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 14:47:55 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 14:47:55 [] DEBUG r.netty.transport.TransportConnector - [cf53bd14] Connecting to [localhost/127.0.0.1:8082].
2025-02-20 14:47:55 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [cf53bd14, L:/127.0.0.1:56341 - R:localhost/127.0.0.1:8082] Registering pool release on close event for channel
2025-02-20 14:47:55 [] DEBUG r.n.r.PooledConnectionProvider - [cf53bd14, L:/127.0.0.1:56341 - R:localhost/127.0.0.1:8082] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 14:47:55 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [cf53bd14, L:/127.0.0.1:56341 - R:localhost/127.0.0.1:8082] onStateChange(PooledConnection{channel=[id: 0xcf53bd14, L:/127.0.0.1:56341 - R:localhost/127.0.0.1:8082]}, [connected])
2025-02-20 14:47:55 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [cf53bd14-1, L:/127.0.0.1:56341 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0xcf53bd14, L:/127.0.0.1:56341 - R:localhost/127.0.0.1:8082]}}, [configured])
2025-02-20 14:47:55 [] DEBUG r.n.http.client.HttpClientConnect - [cf53bd14-1, L:/127.0.0.1:56341 - R:localhost/127.0.0.1:8082] Handler is being applied: {uri=http://localhost:8082/validate, method=GET}
2025-02-20 14:47:55 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [cf53bd14-1, L:/127.0.0.1:56341 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xcf53bd14, L:/127.0.0.1:56341 - R:localhost/127.0.0.1:8082]}}, [request_prepared])
2025-02-20 14:47:55 [] DEBUG r.n.http.client.HttpClientOperations - [cf53bd14-1, L:/127.0.0.1:56341 - R:localhost/127.0.0.1:8082] No sendHeaders() called before complete, sending zero-length header
2025-02-20 14:47:55 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [cf53bd14-1, L:/127.0.0.1:56341 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xcf53bd14, L:/127.0.0.1:56341 - R:localhost/127.0.0.1:8082]}}, [request_sent])
2025-02-20 14:47:55 [] DEBUG r.n.http.client.HttpClientOperations - [cf53bd14-1, L:/127.0.0.1:56341 - R:localhost/127.0.0.1:8082] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 404 
Vary: <filtered>
Vary: <filtered>
Vary: <filtered>
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-20 14:47:55 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [cf53bd14-1, L:/127.0.0.1:56341 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xcf53bd14, L:/127.0.0.1:56341 - R:localhost/127.0.0.1:8082]}}, [response_received])
2025-02-20 14:47:55 [] DEBUG reactor.netty.channel.FluxReceive - [cf53bd14-1, L:/127.0.0.1:56341 - R:localhost/127.0.0.1:8082] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 14:47:55 [] DEBUG r.n.http.client.HttpClientOperations - [cf53bd14-1, L:/127.0.0.1:56341 - R:localhost/127.0.0.1:8082] Received last HTTP packet
2025-02-20 14:47:55 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [cf53bd14, L:/127.0.0.1:56341 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xcf53bd14, L:/127.0.0.1:56341 - R:localhost/127.0.0.1:8082]}}, [response_completed])
2025-02-20 14:47:55 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [cf53bd14, L:/127.0.0.1:56341 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xcf53bd14, L:/127.0.0.1:56341 - R:localhost/127.0.0.1:8082]}}, [disconnecting])
2025-02-20 14:47:55 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [cf53bd14, L:/127.0.0.1:56341 - R:localhost/127.0.0.1:8082] Releasing channel
2025-02-20 14:47:55 [] DEBUG r.n.r.PooledConnectionProvider - [cf53bd14, L:/127.0.0.1:56341 - R:localhost/127.0.0.1:8082] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-20 14:47:55 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] threw exception
org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 404 NOT_FOUND from GET http://localhost:8082/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 14:47:55 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate] with root cause
org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 404 NOT_FOUND from GET http://localhost:8082/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 14:47:55 [] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-20 14:47:55 [] INFO  c.c.c.g.c.config.RouterConfiguration - Authorized Request!
2025-02-20 14:47:55 [] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [GET] /error
2025-02-20 14:47:55 [] INFO  c.c.c.g.c.config.RouterConfiguration - Forwarding [GET] /error to User Microservice
2025-02-20 14:47:55 [] DEBUG r.n.r.PooledConnectionProvider - [cf53bd14, L:/127.0.0.1:56341 - R:localhost/127.0.0.1:8082] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 14:47:55 [] DEBUG r.n.http.client.HttpClientConnect - [cf53bd14-2, L:/127.0.0.1:56341 - R:localhost/127.0.0.1:8082] Handler is being applied: {uri=http://localhost:8082/error, method=GET}
2025-02-20 14:47:55 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [cf53bd14-2, L:/127.0.0.1:56341 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0xcf53bd14, L:/127.0.0.1:56341 - R:localhost/127.0.0.1:8082]}}, [request_prepared])
2025-02-20 14:47:55 [] DEBUG r.n.http.client.HttpClientOperations - [cf53bd14-2, L:/127.0.0.1:56341 - R:localhost/127.0.0.1:8082] No sendHeaders() called before complete, sending zero-length header
2025-02-20 14:47:55 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [cf53bd14-2, L:/127.0.0.1:56341 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0xcf53bd14, L:/127.0.0.1:56341 - R:localhost/127.0.0.1:8082]}}, [request_sent])
2025-02-20 14:47:55 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] threw exception
org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 404 NOT_FOUND from GET http://localhost:8082/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 14:47:55 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate] with root cause
org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 404 NOT_FOUND from GET http://localhost:8082/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 14:47:55 [] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-20 14:47:55 [] INFO  c.c.c.g.c.config.RouterConfiguration - Authorized Request!
2025-02-20 14:47:55 [] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [GET] /error
2025-02-20 14:47:55 [] INFO  c.c.c.g.c.config.RouterConfiguration - Forwarding [GET] /error to User Microservice
2025-02-20 14:47:55 [] DEBUG r.n.http.client.HttpClientOperations - [cf53bd14-2, L:/127.0.0.1:56341 - R:localhost/127.0.0.1:8082] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 500 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
Connection: <filtered>
2025-02-20 14:47:55 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [cf53bd14-2, L:/127.0.0.1:56341 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0xcf53bd14, L:/127.0.0.1:56341 - R:localhost/127.0.0.1:8082]}}, [response_received])
2025-02-20 14:47:55 [] DEBUG reactor.netty.channel.FluxReceive - [cf53bd14-2, L:/127.0.0.1:56341 - R:localhost/127.0.0.1:8082] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 14:47:55 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] threw exception
java.lang.IllegalStateException: Cannot start async: [ERROR]
	at org.springframework.util.Assert.state(Assert.java:79)
	at org.springframework.web.context.request.async.StandardServletAsyncWebRequest.startAsync(StandardServletAsyncWebRequest.java:157)
	at org.springframework.web.context.request.async.WebAsyncManager.startAsyncProcessing(WebAsyncManager.java:487)
	at org.springframework.web.context.request.async.WebAsyncManager.startDeferredResultProcessing(WebAsyncManager.java:462)
	at org.springframework.web.servlet.function.DefaultAsyncServerResponse.writeAsync(DefaultAsyncServerResponse.java:130)
	at org.springframework.web.servlet.function.DefaultEntityResponseBuilder$PublisherEntityResponse.writeToInternal(DefaultEntityResponseBuilder.java:429)
	at org.springframework.web.servlet.function.AbstractServerResponse.writeTo(AbstractServerResponse.java:101)
	at org.springframework.web.servlet.function.support.HandlerFunctionAdapter.handle(HandlerFunctionAdapter.java:112)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:633)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:511)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:454)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:361)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:208)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:285)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:149)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:239)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:243)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:57)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 14:47:55 [] DEBUG r.n.http.client.HttpClientOperations - [cf53bd14-2, L:/127.0.0.1:56341 - R:localhost/127.0.0.1:8082] Received last HTTP packet
2025-02-20 14:47:55 [] ERROR o.a.c.c.C.[Tomcat].[localhost] - Exception Processing [ErrorPage[errorCode=0, location=/error]]
jakarta.servlet.ServletException: Async processing failed
	at org.springframework.web.servlet.function.DefaultAsyncServerResponse.writeAsync(DefaultAsyncServerResponse.java:136)
	at org.springframework.web.servlet.function.DefaultEntityResponseBuilder$PublisherEntityResponse.writeToInternal(DefaultEntityResponseBuilder.java:429)
	at org.springframework.web.servlet.function.AbstractServerResponse.writeTo(AbstractServerResponse.java:101)
	at org.springframework.web.servlet.function.support.HandlerFunctionAdapter.handle(HandlerFunctionAdapter.java:112)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:633)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:511)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:454)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:361)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:208)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:285)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:149)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:239)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:243)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:57)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: java.lang.IllegalStateException: Cannot start async: [ERROR]
	at org.springframework.util.Assert.state(Assert.java:79)
	at org.springframework.web.context.request.async.StandardServletAsyncWebRequest.startAsync(StandardServletAsyncWebRequest.java:157)
	at org.springframework.web.context.request.async.WebAsyncManager.startAsyncProcessing(WebAsyncManager.java:487)
	at org.springframework.web.context.request.async.WebAsyncManager.startDeferredResultProcessing(WebAsyncManager.java:462)
	at org.springframework.web.servlet.function.DefaultAsyncServerResponse.writeAsync(DefaultAsyncServerResponse.java:130)
	... 41 common frames omitted
2025-02-20 14:47:55 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [cf53bd14, L:/127.0.0.1:56341 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0xcf53bd14, L:/127.0.0.1:56341 - R:localhost/127.0.0.1:8082]}}, [response_completed])
2025-02-20 14:47:55 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [cf53bd14, L:/127.0.0.1:56341 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0xcf53bd14, L:/127.0.0.1:56341 - R:localhost/127.0.0.1:8082]}}, [disconnecting])
2025-02-20 14:47:55 [] DEBUG r.n.r.PooledConnectionProvider - [cf53bd14, L:/127.0.0.1:56341 ! R:localhost/127.0.0.1:8082] Channel closed, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 14:47:55 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [cf53bd14, L:/127.0.0.1:56341 ! R:localhost/127.0.0.1:8082] onStateChange(PooledConnection{channel=[id: 0xcf53bd14, L:/127.0.0.1:56341 ! R:localhost/127.0.0.1:8082]}, [disconnecting])
2025-02-20 14:48:13 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-20 14:48:13 [0ccfa4f1-572e-4b1f-b9ad-28c3de1a2690] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-20 14:48:13 [0ccfa4f1-572e-4b1f-b9ad-28c3de1a2690] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-20 14:48:13 [0ccfa4f1-572e-4b1f-b9ad-28c3de1a2690] INFO  c.c.c.g.c.config.RouterConfiguration - Authorized Request!
2025-02-20 14:48:13 [0ccfa4f1-572e-4b1f-b9ad-28c3de1a2690] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [GET] /validate
2025-02-20 14:48:13 [0ccfa4f1-572e-4b1f-b9ad-28c3de1a2690] WARN  c.c.c.g.c.config.RouterConfiguration - Missing Validation Token!
2025-02-20 14:48:18 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-20 14:48:18 [c7fc19bf-7a62-4476-a91f-5f38cfad679d] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-20 14:48:18 [c7fc19bf-7a62-4476-a91f-5f38cfad679d] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-20 14:48:18 [c7fc19bf-7a62-4476-a91f-5f38cfad679d] INFO  c.c.c.g.c.config.RouterConfiguration - Authorized Request!
2025-02-20 14:48:18 [c7fc19bf-7a62-4476-a91f-5f38cfad679d] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [GET] /validate
2025-02-20 14:48:18 [c7fc19bf-7a62-4476-a91f-5f38cfad679d] INFO  c.c.c.g.c.config.RouterConfiguration - Forwarding [GET] /validate to User Microservice
2025-02-20 14:48:18 [] DEBUG r.n.r.PooledConnectionProvider - [b432477d] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 14:48:18 [] DEBUG r.netty.transport.TransportConfig - [b432477d] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-20 14:48:18 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 14:48:18 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 14:48:18 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 14:48:18 [] DEBUG r.netty.transport.TransportConnector - [b432477d] Connecting to [localhost/127.0.0.1:8082].
2025-02-20 14:48:18 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b432477d, L:/127.0.0.1:56357 - R:localhost/127.0.0.1:8082] Registering pool release on close event for channel
2025-02-20 14:48:18 [] DEBUG r.n.r.PooledConnectionProvider - [b432477d, L:/127.0.0.1:56357 - R:localhost/127.0.0.1:8082] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 14:48:18 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b432477d, L:/127.0.0.1:56357 - R:localhost/127.0.0.1:8082] onStateChange(PooledConnection{channel=[id: 0xb432477d, L:/127.0.0.1:56357 - R:localhost/127.0.0.1:8082]}, [connected])
2025-02-20 14:48:18 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b432477d-1, L:/127.0.0.1:56357 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0xb432477d, L:/127.0.0.1:56357 - R:localhost/127.0.0.1:8082]}}, [configured])
2025-02-20 14:48:18 [] DEBUG r.n.http.client.HttpClientConnect - [b432477d-1, L:/127.0.0.1:56357 - R:localhost/127.0.0.1:8082] Handler is being applied: {uri=http://localhost:8082/validate, method=GET}
2025-02-20 14:48:18 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b432477d-1, L:/127.0.0.1:56357 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xb432477d, L:/127.0.0.1:56357 - R:localhost/127.0.0.1:8082]}}, [request_prepared])
2025-02-20 14:48:18 [] DEBUG r.n.http.client.HttpClientOperations - [b432477d-1, L:/127.0.0.1:56357 - R:localhost/127.0.0.1:8082] No sendHeaders() called before complete, sending zero-length header
2025-02-20 14:48:18 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b432477d-1, L:/127.0.0.1:56357 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xb432477d, L:/127.0.0.1:56357 - R:localhost/127.0.0.1:8082]}}, [request_sent])
2025-02-20 14:48:18 [] DEBUG r.n.http.client.HttpClientOperations - [b432477d-1, L:/127.0.0.1:56357 - R:localhost/127.0.0.1:8082] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 404 
Vary: <filtered>
Vary: <filtered>
Vary: <filtered>
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-20 14:48:18 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b432477d-1, L:/127.0.0.1:56357 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xb432477d, L:/127.0.0.1:56357 - R:localhost/127.0.0.1:8082]}}, [response_received])
2025-02-20 14:48:18 [] DEBUG reactor.netty.channel.FluxReceive - [b432477d-1, L:/127.0.0.1:56357 - R:localhost/127.0.0.1:8082] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 14:48:18 [] DEBUG r.n.http.client.HttpClientOperations - [b432477d-1, L:/127.0.0.1:56357 - R:localhost/127.0.0.1:8082] Received last HTTP packet
2025-02-20 14:48:18 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b432477d, L:/127.0.0.1:56357 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xb432477d, L:/127.0.0.1:56357 - R:localhost/127.0.0.1:8082]}}, [response_completed])
2025-02-20 14:48:18 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b432477d, L:/127.0.0.1:56357 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xb432477d, L:/127.0.0.1:56357 - R:localhost/127.0.0.1:8082]}}, [disconnecting])
2025-02-20 14:48:18 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b432477d, L:/127.0.0.1:56357 - R:localhost/127.0.0.1:8082] Releasing channel
2025-02-20 14:48:18 [] DEBUG r.n.r.PooledConnectionProvider - [b432477d, L:/127.0.0.1:56357 - R:localhost/127.0.0.1:8082] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-20 14:48:18 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] threw exception
org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 404 NOT_FOUND from GET http://localhost:8082/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 14:48:18 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate] with root cause
org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 404 NOT_FOUND from GET http://localhost:8082/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 14:48:18 [] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-20 14:48:18 [] INFO  c.c.c.g.c.config.RouterConfiguration - Authorized Request!
2025-02-20 14:48:18 [] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [GET] /error
2025-02-20 14:48:18 [] INFO  c.c.c.g.c.config.RouterConfiguration - Forwarding [GET] /error to User Microservice
2025-02-20 14:48:18 [] DEBUG r.n.r.PooledConnectionProvider - [b432477d, L:/127.0.0.1:56357 - R:localhost/127.0.0.1:8082] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 14:48:18 [] DEBUG r.n.http.client.HttpClientConnect - [b432477d-2, L:/127.0.0.1:56357 - R:localhost/127.0.0.1:8082] Handler is being applied: {uri=http://localhost:8082/error, method=GET}
2025-02-20 14:48:18 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b432477d-2, L:/127.0.0.1:56357 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0xb432477d, L:/127.0.0.1:56357 - R:localhost/127.0.0.1:8082]}}, [request_prepared])
2025-02-20 14:48:18 [] DEBUG r.n.http.client.HttpClientOperations - [b432477d-2, L:/127.0.0.1:56357 - R:localhost/127.0.0.1:8082] No sendHeaders() called before complete, sending zero-length header
2025-02-20 14:48:18 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b432477d-2, L:/127.0.0.1:56357 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0xb432477d, L:/127.0.0.1:56357 - R:localhost/127.0.0.1:8082]}}, [request_sent])
2025-02-20 14:48:18 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] threw exception
org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 404 NOT_FOUND from GET http://localhost:8082/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 14:48:18 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate] with root cause
org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 404 NOT_FOUND from GET http://localhost:8082/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 14:48:18 [] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-20 14:48:18 [] INFO  c.c.c.g.c.config.RouterConfiguration - Authorized Request!
2025-02-20 14:48:18 [] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [GET] /error
2025-02-20 14:48:18 [] INFO  c.c.c.g.c.config.RouterConfiguration - Forwarding [GET] /error to User Microservice
2025-02-20 14:48:18 [] DEBUG r.n.http.client.HttpClientOperations - [b432477d-2, L:/127.0.0.1:56357 - R:localhost/127.0.0.1:8082] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 500 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
Connection: <filtered>
2025-02-20 14:48:18 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b432477d-2, L:/127.0.0.1:56357 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0xb432477d, L:/127.0.0.1:56357 - R:localhost/127.0.0.1:8082]}}, [response_received])
2025-02-20 14:48:18 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] threw exception
java.lang.IllegalStateException: Cannot start async: [ERROR]
	at org.springframework.util.Assert.state(Assert.java:79)
	at org.springframework.web.context.request.async.StandardServletAsyncWebRequest.startAsync(StandardServletAsyncWebRequest.java:157)
	at org.springframework.web.context.request.async.WebAsyncManager.startAsyncProcessing(WebAsyncManager.java:487)
	at org.springframework.web.context.request.async.WebAsyncManager.startDeferredResultProcessing(WebAsyncManager.java:462)
	at org.springframework.web.servlet.function.DefaultAsyncServerResponse.writeAsync(DefaultAsyncServerResponse.java:130)
	at org.springframework.web.servlet.function.DefaultEntityResponseBuilder$PublisherEntityResponse.writeToInternal(DefaultEntityResponseBuilder.java:429)
	at org.springframework.web.servlet.function.AbstractServerResponse.writeTo(AbstractServerResponse.java:101)
	at org.springframework.web.servlet.function.support.HandlerFunctionAdapter.handle(HandlerFunctionAdapter.java:112)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:633)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:511)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:454)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:361)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:208)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:285)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:149)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:239)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:243)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:57)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 14:48:18 [] DEBUG reactor.netty.channel.FluxReceive - [b432477d-2, L:/127.0.0.1:56357 - R:localhost/127.0.0.1:8082] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 14:48:18 [] ERROR o.a.c.c.C.[Tomcat].[localhost] - Exception Processing [ErrorPage[errorCode=0, location=/error]]
jakarta.servlet.ServletException: Async processing failed
	at org.springframework.web.servlet.function.DefaultAsyncServerResponse.writeAsync(DefaultAsyncServerResponse.java:136)
	at org.springframework.web.servlet.function.DefaultEntityResponseBuilder$PublisherEntityResponse.writeToInternal(DefaultEntityResponseBuilder.java:429)
	at org.springframework.web.servlet.function.AbstractServerResponse.writeTo(AbstractServerResponse.java:101)
	at org.springframework.web.servlet.function.support.HandlerFunctionAdapter.handle(HandlerFunctionAdapter.java:112)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:633)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:511)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:454)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:361)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:208)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:285)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:149)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:239)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:243)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:57)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: java.lang.IllegalStateException: Cannot start async: [ERROR]
	at org.springframework.util.Assert.state(Assert.java:79)
	at org.springframework.web.context.request.async.StandardServletAsyncWebRequest.startAsync(StandardServletAsyncWebRequest.java:157)
	at org.springframework.web.context.request.async.WebAsyncManager.startAsyncProcessing(WebAsyncManager.java:487)
	at org.springframework.web.context.request.async.WebAsyncManager.startDeferredResultProcessing(WebAsyncManager.java:462)
	at org.springframework.web.servlet.function.DefaultAsyncServerResponse.writeAsync(DefaultAsyncServerResponse.java:130)
	... 41 common frames omitted
2025-02-20 14:48:18 [] DEBUG r.n.http.client.HttpClientOperations - [b432477d-2, L:/127.0.0.1:56357 - R:localhost/127.0.0.1:8082] Received last HTTP packet
2025-02-20 14:48:18 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b432477d, L:/127.0.0.1:56357 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0xb432477d, L:/127.0.0.1:56357 - R:localhost/127.0.0.1:8082]}}, [response_completed])
2025-02-20 14:48:18 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b432477d, L:/127.0.0.1:56357 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0xb432477d, L:/127.0.0.1:56357 - R:localhost/127.0.0.1:8082]}}, [disconnecting])
2025-02-20 14:48:18 [] DEBUG r.n.r.PooledConnectionProvider - [b432477d, L:/127.0.0.1:56357 ! R:localhost/127.0.0.1:8082] Channel closed, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 14:48:18 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b432477d, L:/127.0.0.1:56357 ! R:localhost/127.0.0.1:8082] onStateChange(PooledConnection{channel=[id: 0xb432477d, L:/127.0.0.1:56357 ! R:localhost/127.0.0.1:8082]}, [disconnecting])
2025-02-20 14:50:24 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-20 14:50:24 [768d13bf-7137-4c3b-9a0d-b2d2bcb2017c] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-20 14:50:24 [768d13bf-7137-4c3b-9a0d-b2d2bcb2017c] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-20 14:50:24 [768d13bf-7137-4c3b-9a0d-b2d2bcb2017c] INFO  c.c.c.g.c.config.RouterConfiguration - Authorized Request!
2025-02-20 14:50:24 [768d13bf-7137-4c3b-9a0d-b2d2bcb2017c] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [POST] /validate
2025-02-20 14:50:24 [768d13bf-7137-4c3b-9a0d-b2d2bcb2017c] INFO  c.c.c.g.c.config.RouterConfiguration - Forwarding [POST] /validate to User Microservice
2025-02-20 14:50:24 [] DEBUG r.n.r.PooledConnectionProvider - [e245b334] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 14:50:24 [] DEBUG r.netty.transport.TransportConfig - [e245b334] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-20 14:50:24 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 14:50:24 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 14:50:24 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 14:50:24 [] DEBUG r.netty.transport.TransportConnector - [e245b334] Connecting to [localhost/127.0.0.1:8082].
2025-02-20 14:50:24 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [e245b334, L:/127.0.0.1:56392 - R:localhost/127.0.0.1:8082] Registering pool release on close event for channel
2025-02-20 14:50:24 [] DEBUG r.n.r.PooledConnectionProvider - [e245b334, L:/127.0.0.1:56392 - R:localhost/127.0.0.1:8082] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 14:50:24 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [e245b334, L:/127.0.0.1:56392 - R:localhost/127.0.0.1:8082] onStateChange(PooledConnection{channel=[id: 0xe245b334, L:/127.0.0.1:56392 - R:localhost/127.0.0.1:8082]}, [connected])
2025-02-20 14:50:24 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [e245b334-1, L:/127.0.0.1:56392 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0xe245b334, L:/127.0.0.1:56392 - R:localhost/127.0.0.1:8082]}}, [configured])
2025-02-20 14:50:24 [] DEBUG r.n.http.client.HttpClientConnect - [e245b334-1, L:/127.0.0.1:56392 - R:localhost/127.0.0.1:8082] Handler is being applied: {uri=http://localhost:8082/validate, method=POST}
2025-02-20 14:50:24 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [e245b334-1, L:/127.0.0.1:56392 - R:localhost/127.0.0.1:8082] onStateChange(POST{uri=/validate, connection=PooledConnection{channel=[id: 0xe245b334, L:/127.0.0.1:56392 - R:localhost/127.0.0.1:8082]}}, [request_prepared])
2025-02-20 14:50:24 [] DEBUG r.n.http.client.HttpClientOperations - [e245b334-1, L:/127.0.0.1:56392 - R:localhost/127.0.0.1:8082] No sendHeaders() called before complete, sending zero-length header
2025-02-20 14:50:24 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [e245b334-1, L:/127.0.0.1:56392 - R:localhost/127.0.0.1:8082] onStateChange(POST{uri=/validate, connection=PooledConnection{channel=[id: 0xe245b334, L:/127.0.0.1:56392 - R:localhost/127.0.0.1:8082]}}, [request_sent])
2025-02-20 14:50:24 [] DEBUG r.n.http.client.HttpClientOperations - [e245b334-1, L:/127.0.0.1:56392 - R:localhost/127.0.0.1:8082] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 404 
Vary: <filtered>
Vary: <filtered>
Vary: <filtered>
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-20 14:50:24 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [e245b334-1, L:/127.0.0.1:56392 - R:localhost/127.0.0.1:8082] onStateChange(POST{uri=/validate, connection=PooledConnection{channel=[id: 0xe245b334, L:/127.0.0.1:56392 - R:localhost/127.0.0.1:8082]}}, [response_received])
2025-02-20 14:50:24 [] DEBUG reactor.netty.channel.FluxReceive - [e245b334-1, L:/127.0.0.1:56392 - R:localhost/127.0.0.1:8082] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 14:50:24 [] DEBUG r.n.http.client.HttpClientOperations - [e245b334-1, L:/127.0.0.1:56392 - R:localhost/127.0.0.1:8082] Received last HTTP packet
2025-02-20 14:50:24 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [e245b334, L:/127.0.0.1:56392 - R:localhost/127.0.0.1:8082] onStateChange(POST{uri=/validate, connection=PooledConnection{channel=[id: 0xe245b334, L:/127.0.0.1:56392 - R:localhost/127.0.0.1:8082]}}, [response_completed])
2025-02-20 14:50:24 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [e245b334, L:/127.0.0.1:56392 - R:localhost/127.0.0.1:8082] onStateChange(POST{uri=/validate, connection=PooledConnection{channel=[id: 0xe245b334, L:/127.0.0.1:56392 - R:localhost/127.0.0.1:8082]}}, [disconnecting])
2025-02-20 14:50:24 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [e245b334, L:/127.0.0.1:56392 - R:localhost/127.0.0.1:8082] Releasing channel
2025-02-20 14:50:24 [] DEBUG r.n.r.PooledConnectionProvider - [e245b334, L:/127.0.0.1:56392 - R:localhost/127.0.0.1:8082] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-20 14:50:24 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] threw exception
org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from POST http://localhost:8082/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 404 NOT_FOUND from POST http://localhost:8082/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 14:50:24 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from POST http://localhost:8082/validate] with root cause
org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from POST http://localhost:8082/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 404 NOT_FOUND from POST http://localhost:8082/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 14:50:24 [] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-20 14:50:24 [] INFO  c.c.c.g.c.config.RouterConfiguration - Authorized Request!
2025-02-20 14:50:24 [] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [POST] /error
2025-02-20 14:50:24 [] INFO  c.c.c.g.c.config.RouterConfiguration - Forwarding [POST] /error to User Microservice
2025-02-20 14:50:24 [] DEBUG r.n.r.PooledConnectionProvider - [e245b334, L:/127.0.0.1:56392 - R:localhost/127.0.0.1:8082] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 14:50:24 [] DEBUG r.n.http.client.HttpClientConnect - [e245b334-2, L:/127.0.0.1:56392 - R:localhost/127.0.0.1:8082] Handler is being applied: {uri=http://localhost:8082/error, method=POST}
2025-02-20 14:50:24 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [e245b334-2, L:/127.0.0.1:56392 - R:localhost/127.0.0.1:8082] onStateChange(POST{uri=/error, connection=PooledConnection{channel=[id: 0xe245b334, L:/127.0.0.1:56392 - R:localhost/127.0.0.1:8082]}}, [request_prepared])
2025-02-20 14:50:24 [] DEBUG r.n.http.client.HttpClientOperations - [e245b334-2, L:/127.0.0.1:56392 - R:localhost/127.0.0.1:8082] No sendHeaders() called before complete, sending zero-length header
2025-02-20 14:50:24 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [e245b334-2, L:/127.0.0.1:56392 - R:localhost/127.0.0.1:8082] onStateChange(POST{uri=/error, connection=PooledConnection{channel=[id: 0xe245b334, L:/127.0.0.1:56392 - R:localhost/127.0.0.1:8082]}}, [request_sent])
2025-02-20 14:50:24 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] threw exception
org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from POST http://localhost:8082/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 404 NOT_FOUND from POST http://localhost:8082/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 14:50:24 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from POST http://localhost:8082/validate] with root cause
org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from POST http://localhost:8082/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 404 NOT_FOUND from POST http://localhost:8082/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 14:50:24 [] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-20 14:50:24 [] INFO  c.c.c.g.c.config.RouterConfiguration - Authorized Request!
2025-02-20 14:50:24 [] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [POST] /error
2025-02-20 14:50:24 [] INFO  c.c.c.g.c.config.RouterConfiguration - Forwarding [POST] /error to User Microservice
2025-02-20 14:50:24 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] threw exception
java.lang.IllegalStateException: Cannot start async: [ERROR]
	at org.springframework.util.Assert.state(Assert.java:79)
	at org.springframework.web.context.request.async.StandardServletAsyncWebRequest.startAsync(StandardServletAsyncWebRequest.java:157)
	at org.springframework.web.context.request.async.WebAsyncManager.startAsyncProcessing(WebAsyncManager.java:487)
	at org.springframework.web.context.request.async.WebAsyncManager.startDeferredResultProcessing(WebAsyncManager.java:462)
	at org.springframework.web.servlet.function.DefaultAsyncServerResponse.writeAsync(DefaultAsyncServerResponse.java:130)
	at org.springframework.web.servlet.function.DefaultEntityResponseBuilder$PublisherEntityResponse.writeToInternal(DefaultEntityResponseBuilder.java:429)
	at org.springframework.web.servlet.function.AbstractServerResponse.writeTo(AbstractServerResponse.java:101)
	at org.springframework.web.servlet.function.support.HandlerFunctionAdapter.handle(HandlerFunctionAdapter.java:112)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:633)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:511)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:454)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:361)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:208)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:285)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:149)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:239)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:243)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:57)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 14:50:24 [] DEBUG r.n.http.client.HttpClientOperations - [e245b334-2, L:/127.0.0.1:56392 - R:localhost/127.0.0.1:8082] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 500 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
Connection: <filtered>
2025-02-20 14:50:24 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [e245b334-2, L:/127.0.0.1:56392 - R:localhost/127.0.0.1:8082] onStateChange(POST{uri=/error, connection=PooledConnection{channel=[id: 0xe245b334, L:/127.0.0.1:56392 - R:localhost/127.0.0.1:8082]}}, [response_received])
2025-02-20 14:50:24 [] ERROR o.a.c.c.C.[Tomcat].[localhost] - Exception Processing [ErrorPage[errorCode=0, location=/error]]
jakarta.servlet.ServletException: Async processing failed
	at org.springframework.web.servlet.function.DefaultAsyncServerResponse.writeAsync(DefaultAsyncServerResponse.java:136)
	at org.springframework.web.servlet.function.DefaultEntityResponseBuilder$PublisherEntityResponse.writeToInternal(DefaultEntityResponseBuilder.java:429)
	at org.springframework.web.servlet.function.AbstractServerResponse.writeTo(AbstractServerResponse.java:101)
	at org.springframework.web.servlet.function.support.HandlerFunctionAdapter.handle(HandlerFunctionAdapter.java:112)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:633)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:511)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:454)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:361)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:208)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:285)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:149)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:239)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:243)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:57)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: java.lang.IllegalStateException: Cannot start async: [ERROR]
	at org.springframework.util.Assert.state(Assert.java:79)
	at org.springframework.web.context.request.async.StandardServletAsyncWebRequest.startAsync(StandardServletAsyncWebRequest.java:157)
	at org.springframework.web.context.request.async.WebAsyncManager.startAsyncProcessing(WebAsyncManager.java:487)
	at org.springframework.web.context.request.async.WebAsyncManager.startDeferredResultProcessing(WebAsyncManager.java:462)
	at org.springframework.web.servlet.function.DefaultAsyncServerResponse.writeAsync(DefaultAsyncServerResponse.java:130)
	... 41 common frames omitted
2025-02-20 14:50:24 [] DEBUG reactor.netty.channel.FluxReceive - [e245b334-2, L:/127.0.0.1:56392 - R:localhost/127.0.0.1:8082] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 14:50:24 [] DEBUG r.n.http.client.HttpClientOperations - [e245b334-2, L:/127.0.0.1:56392 - R:localhost/127.0.0.1:8082] Received last HTTP packet
2025-02-20 14:50:24 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [e245b334, L:/127.0.0.1:56392 - R:localhost/127.0.0.1:8082] onStateChange(POST{uri=/error, connection=PooledConnection{channel=[id: 0xe245b334, L:/127.0.0.1:56392 - R:localhost/127.0.0.1:8082]}}, [response_completed])
2025-02-20 14:50:24 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [e245b334, L:/127.0.0.1:56392 - R:localhost/127.0.0.1:8082] onStateChange(POST{uri=/error, connection=PooledConnection{channel=[id: 0xe245b334, L:/127.0.0.1:56392 - R:localhost/127.0.0.1:8082]}}, [disconnecting])
2025-02-20 14:50:24 [] DEBUG r.n.r.PooledConnectionProvider - [e245b334, L:/127.0.0.1:56392 ! R:localhost/127.0.0.1:8082] Channel closed, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 14:50:24 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [e245b334, L:/127.0.0.1:56392 ! R:localhost/127.0.0.1:8082] onStateChange(PooledConnection{channel=[id: 0xe245b334, L:/127.0.0.1:56392 ! R:localhost/127.0.0.1:8082]}, [disconnecting])
2025-02-20 14:50:29 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-20 14:50:29 [9aa7a2ea-dbdb-400b-8ee9-6b4006c9ffa4] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-20 14:50:29 [9aa7a2ea-dbdb-400b-8ee9-6b4006c9ffa4] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-20 14:50:29 [9aa7a2ea-dbdb-400b-8ee9-6b4006c9ffa4] INFO  c.c.c.g.c.config.RouterConfiguration - Authorized Request!
2025-02-20 14:50:29 [9aa7a2ea-dbdb-400b-8ee9-6b4006c9ffa4] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [POST] /validate
2025-02-20 14:50:29 [9aa7a2ea-dbdb-400b-8ee9-6b4006c9ffa4] INFO  c.c.c.g.c.config.RouterConfiguration - Forwarding [POST] /validate to User Microservice
2025-02-20 14:50:29 [] DEBUG r.n.r.PooledConnectionProvider - [263b2c89] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 14:50:29 [] DEBUG r.netty.transport.TransportConfig - [263b2c89] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-20 14:50:29 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 14:50:29 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 14:50:29 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 14:50:29 [] DEBUG r.netty.transport.TransportConnector - [263b2c89] Connecting to [localhost/127.0.0.1:8082].
2025-02-20 14:50:29 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [263b2c89, L:/127.0.0.1:56401 - R:localhost/127.0.0.1:8082] Registering pool release on close event for channel
2025-02-20 14:50:29 [] DEBUG r.n.r.PooledConnectionProvider - [263b2c89, L:/127.0.0.1:56401 - R:localhost/127.0.0.1:8082] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 14:50:29 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [263b2c89, L:/127.0.0.1:56401 - R:localhost/127.0.0.1:8082] onStateChange(PooledConnection{channel=[id: 0x263b2c89, L:/127.0.0.1:56401 - R:localhost/127.0.0.1:8082]}, [connected])
2025-02-20 14:50:29 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [263b2c89-1, L:/127.0.0.1:56401 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0x263b2c89, L:/127.0.0.1:56401 - R:localhost/127.0.0.1:8082]}}, [configured])
2025-02-20 14:50:29 [] DEBUG r.n.http.client.HttpClientConnect - [263b2c89-1, L:/127.0.0.1:56401 - R:localhost/127.0.0.1:8082] Handler is being applied: {uri=http://localhost:8082/validate, method=POST}
2025-02-20 14:50:29 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [263b2c89-1, L:/127.0.0.1:56401 - R:localhost/127.0.0.1:8082] onStateChange(POST{uri=/validate, connection=PooledConnection{channel=[id: 0x263b2c89, L:/127.0.0.1:56401 - R:localhost/127.0.0.1:8082]}}, [request_prepared])
2025-02-20 14:50:29 [] DEBUG r.n.http.client.HttpClientOperations - [263b2c89-1, L:/127.0.0.1:56401 - R:localhost/127.0.0.1:8082] No sendHeaders() called before complete, sending zero-length header
2025-02-20 14:50:29 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [263b2c89-1, L:/127.0.0.1:56401 - R:localhost/127.0.0.1:8082] onStateChange(POST{uri=/validate, connection=PooledConnection{channel=[id: 0x263b2c89, L:/127.0.0.1:56401 - R:localhost/127.0.0.1:8082]}}, [request_sent])
2025-02-20 14:50:29 [] DEBUG r.n.http.client.HttpClientOperations - [263b2c89-1, L:/127.0.0.1:56401 - R:localhost/127.0.0.1:8082] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 404 
Vary: <filtered>
Vary: <filtered>
Vary: <filtered>
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-20 14:50:29 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [263b2c89-1, L:/127.0.0.1:56401 - R:localhost/127.0.0.1:8082] onStateChange(POST{uri=/validate, connection=PooledConnection{channel=[id: 0x263b2c89, L:/127.0.0.1:56401 - R:localhost/127.0.0.1:8082]}}, [response_received])
2025-02-20 14:50:29 [] DEBUG reactor.netty.channel.FluxReceive - [263b2c89-1, L:/127.0.0.1:56401 - R:localhost/127.0.0.1:8082] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 14:50:29 [] DEBUG r.n.http.client.HttpClientOperations - [263b2c89-1, L:/127.0.0.1:56401 - R:localhost/127.0.0.1:8082] Received last HTTP packet
2025-02-20 14:50:29 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [263b2c89, L:/127.0.0.1:56401 - R:localhost/127.0.0.1:8082] onStateChange(POST{uri=/validate, connection=PooledConnection{channel=[id: 0x263b2c89, L:/127.0.0.1:56401 - R:localhost/127.0.0.1:8082]}}, [response_completed])
2025-02-20 14:50:29 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [263b2c89, L:/127.0.0.1:56401 - R:localhost/127.0.0.1:8082] onStateChange(POST{uri=/validate, connection=PooledConnection{channel=[id: 0x263b2c89, L:/127.0.0.1:56401 - R:localhost/127.0.0.1:8082]}}, [disconnecting])
2025-02-20 14:50:29 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [263b2c89, L:/127.0.0.1:56401 - R:localhost/127.0.0.1:8082] Releasing channel
2025-02-20 14:50:29 [] DEBUG r.n.r.PooledConnectionProvider - [263b2c89, L:/127.0.0.1:56401 - R:localhost/127.0.0.1:8082] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-20 14:50:29 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] threw exception
org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from POST http://localhost:8082/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 404 NOT_FOUND from POST http://localhost:8082/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 14:50:29 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from POST http://localhost:8082/validate] with root cause
org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from POST http://localhost:8082/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 404 NOT_FOUND from POST http://localhost:8082/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 14:50:29 [] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-20 14:50:29 [] INFO  c.c.c.g.c.config.RouterConfiguration - Authorized Request!
2025-02-20 14:50:29 [] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [POST] /error
2025-02-20 14:50:29 [] INFO  c.c.c.g.c.config.RouterConfiguration - Forwarding [POST] /error to User Microservice
2025-02-20 14:50:29 [] DEBUG r.n.r.PooledConnectionProvider - [263b2c89, L:/127.0.0.1:56401 - R:localhost/127.0.0.1:8082] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 14:50:29 [] DEBUG r.n.http.client.HttpClientConnect - [263b2c89-2, L:/127.0.0.1:56401 - R:localhost/127.0.0.1:8082] Handler is being applied: {uri=http://localhost:8082/error, method=POST}
2025-02-20 14:50:29 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [263b2c89-2, L:/127.0.0.1:56401 - R:localhost/127.0.0.1:8082] onStateChange(POST{uri=/error, connection=PooledConnection{channel=[id: 0x263b2c89, L:/127.0.0.1:56401 - R:localhost/127.0.0.1:8082]}}, [request_prepared])
2025-02-20 14:50:29 [] DEBUG r.n.http.client.HttpClientOperations - [263b2c89-2, L:/127.0.0.1:56401 - R:localhost/127.0.0.1:8082] No sendHeaders() called before complete, sending zero-length header
2025-02-20 14:50:29 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [263b2c89-2, L:/127.0.0.1:56401 - R:localhost/127.0.0.1:8082] onStateChange(POST{uri=/error, connection=PooledConnection{channel=[id: 0x263b2c89, L:/127.0.0.1:56401 - R:localhost/127.0.0.1:8082]}}, [request_sent])
2025-02-20 14:50:29 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] threw exception
org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from POST http://localhost:8082/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 404 NOT_FOUND from POST http://localhost:8082/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 14:50:29 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from POST http://localhost:8082/validate] with root cause
org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from POST http://localhost:8082/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 404 NOT_FOUND from POST http://localhost:8082/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 14:50:29 [] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-20 14:50:29 [] INFO  c.c.c.g.c.config.RouterConfiguration - Authorized Request!
2025-02-20 14:50:29 [] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [POST] /error
2025-02-20 14:50:29 [] INFO  c.c.c.g.c.config.RouterConfiguration - Forwarding [POST] /error to User Microservice
2025-02-20 14:50:29 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] threw exception
java.lang.IllegalStateException: Cannot start async: [ERROR]
	at org.springframework.util.Assert.state(Assert.java:79)
	at org.springframework.web.context.request.async.StandardServletAsyncWebRequest.startAsync(StandardServletAsyncWebRequest.java:157)
	at org.springframework.web.context.request.async.WebAsyncManager.startAsyncProcessing(WebAsyncManager.java:487)
	at org.springframework.web.context.request.async.WebAsyncManager.startDeferredResultProcessing(WebAsyncManager.java:462)
	at org.springframework.web.servlet.function.DefaultAsyncServerResponse.writeAsync(DefaultAsyncServerResponse.java:130)
	at org.springframework.web.servlet.function.DefaultEntityResponseBuilder$PublisherEntityResponse.writeToInternal(DefaultEntityResponseBuilder.java:429)
	at org.springframework.web.servlet.function.AbstractServerResponse.writeTo(AbstractServerResponse.java:101)
	at org.springframework.web.servlet.function.support.HandlerFunctionAdapter.handle(HandlerFunctionAdapter.java:112)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:633)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:511)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:454)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:361)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:208)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:285)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:149)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:239)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:243)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:57)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 14:50:29 [] DEBUG r.n.http.client.HttpClientOperations - [263b2c89-2, L:/127.0.0.1:56401 - R:localhost/127.0.0.1:8082] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 500 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
Connection: <filtered>
2025-02-20 14:50:29 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [263b2c89-2, L:/127.0.0.1:56401 - R:localhost/127.0.0.1:8082] onStateChange(POST{uri=/error, connection=PooledConnection{channel=[id: 0x263b2c89, L:/127.0.0.1:56401 - R:localhost/127.0.0.1:8082]}}, [response_received])
2025-02-20 14:50:29 [] ERROR o.a.c.c.C.[Tomcat].[localhost] - Exception Processing [ErrorPage[errorCode=0, location=/error]]
jakarta.servlet.ServletException: Async processing failed
	at org.springframework.web.servlet.function.DefaultAsyncServerResponse.writeAsync(DefaultAsyncServerResponse.java:136)
	at org.springframework.web.servlet.function.DefaultEntityResponseBuilder$PublisherEntityResponse.writeToInternal(DefaultEntityResponseBuilder.java:429)
	at org.springframework.web.servlet.function.AbstractServerResponse.writeTo(AbstractServerResponse.java:101)
	at org.springframework.web.servlet.function.support.HandlerFunctionAdapter.handle(HandlerFunctionAdapter.java:112)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:633)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:511)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:454)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:361)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:208)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:285)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:149)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:239)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:243)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:57)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: java.lang.IllegalStateException: Cannot start async: [ERROR]
	at org.springframework.util.Assert.state(Assert.java:79)
	at org.springframework.web.context.request.async.StandardServletAsyncWebRequest.startAsync(StandardServletAsyncWebRequest.java:157)
	at org.springframework.web.context.request.async.WebAsyncManager.startAsyncProcessing(WebAsyncManager.java:487)
	at org.springframework.web.context.request.async.WebAsyncManager.startDeferredResultProcessing(WebAsyncManager.java:462)
	at org.springframework.web.servlet.function.DefaultAsyncServerResponse.writeAsync(DefaultAsyncServerResponse.java:130)
	... 41 common frames omitted
2025-02-20 14:50:29 [] DEBUG reactor.netty.channel.FluxReceive - [263b2c89-2, L:/127.0.0.1:56401 - R:localhost/127.0.0.1:8082] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 14:50:29 [] DEBUG r.n.http.client.HttpClientOperations - [263b2c89-2, L:/127.0.0.1:56401 - R:localhost/127.0.0.1:8082] Received last HTTP packet
2025-02-20 14:50:29 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [263b2c89, L:/127.0.0.1:56401 - R:localhost/127.0.0.1:8082] onStateChange(POST{uri=/error, connection=PooledConnection{channel=[id: 0x263b2c89, L:/127.0.0.1:56401 - R:localhost/127.0.0.1:8082]}}, [response_completed])
2025-02-20 14:50:29 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [263b2c89, L:/127.0.0.1:56401 - R:localhost/127.0.0.1:8082] onStateChange(POST{uri=/error, connection=PooledConnection{channel=[id: 0x263b2c89, L:/127.0.0.1:56401 - R:localhost/127.0.0.1:8082]}}, [disconnecting])
2025-02-20 14:50:29 [] DEBUG r.n.r.PooledConnectionProvider - [263b2c89, L:/127.0.0.1:56401 ! R:localhost/127.0.0.1:8082] Channel closed, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 14:50:29 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [263b2c89, L:/127.0.0.1:56401 ! R:localhost/127.0.0.1:8082] onStateChange(PooledConnection{channel=[id: 0x263b2c89, L:/127.0.0.1:56401 ! R:localhost/127.0.0.1:8082]}, [disconnecting])
2025-02-20 14:51:27 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-20 14:51:27 [424d71c6-f642-4d10-819f-a53b8d0a6725] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-20 14:51:27 [424d71c6-f642-4d10-819f-a53b8d0a6725] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-20 14:51:27 [424d71c6-f642-4d10-819f-a53b8d0a6725] INFO  c.c.c.g.c.config.RouterConfiguration - Authorized Request!
2025-02-20 14:51:27 [424d71c6-f642-4d10-819f-a53b8d0a6725] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [POST] /validate
2025-02-20 14:51:27 [424d71c6-f642-4d10-819f-a53b8d0a6725] INFO  c.c.c.g.c.config.RouterConfiguration - Forwarding [POST] /validate to User Microservice
2025-02-20 14:51:27 [] DEBUG r.n.r.PooledConnectionProvider - [d7fc7b74] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 14:51:27 [] DEBUG r.netty.transport.TransportConfig - [d7fc7b74] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-20 14:51:27 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 14:51:27 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 14:51:27 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 14:51:27 [] DEBUG r.netty.transport.TransportConnector - [d7fc7b74] Connecting to [localhost/127.0.0.1:8082].
2025-02-20 14:51:27 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [d7fc7b74, L:/127.0.0.1:56427 - R:localhost/127.0.0.1:8082] Registering pool release on close event for channel
2025-02-20 14:51:27 [] DEBUG r.n.r.PooledConnectionProvider - [d7fc7b74, L:/127.0.0.1:56427 - R:localhost/127.0.0.1:8082] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 14:51:27 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [d7fc7b74, L:/127.0.0.1:56427 - R:localhost/127.0.0.1:8082] onStateChange(PooledConnection{channel=[id: 0xd7fc7b74, L:/127.0.0.1:56427 - R:localhost/127.0.0.1:8082]}, [connected])
2025-02-20 14:51:27 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [d7fc7b74-1, L:/127.0.0.1:56427 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0xd7fc7b74, L:/127.0.0.1:56427 - R:localhost/127.0.0.1:8082]}}, [configured])
2025-02-20 14:51:27 [] DEBUG r.n.http.client.HttpClientConnect - [d7fc7b74-1, L:/127.0.0.1:56427 - R:localhost/127.0.0.1:8082] Handler is being applied: {uri=http://localhost:8082/validate, method=POST}
2025-02-20 14:51:27 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [d7fc7b74-1, L:/127.0.0.1:56427 - R:localhost/127.0.0.1:8082] onStateChange(POST{uri=/validate, connection=PooledConnection{channel=[id: 0xd7fc7b74, L:/127.0.0.1:56427 - R:localhost/127.0.0.1:8082]}}, [request_prepared])
2025-02-20 14:51:27 [] DEBUG r.n.http.client.HttpClientOperations - [d7fc7b74-1, L:/127.0.0.1:56427 - R:localhost/127.0.0.1:8082] No sendHeaders() called before complete, sending zero-length header
2025-02-20 14:51:27 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [d7fc7b74-1, L:/127.0.0.1:56427 - R:localhost/127.0.0.1:8082] onStateChange(POST{uri=/validate, connection=PooledConnection{channel=[id: 0xd7fc7b74, L:/127.0.0.1:56427 - R:localhost/127.0.0.1:8082]}}, [request_sent])
2025-02-20 14:51:27 [] DEBUG r.n.http.client.HttpClientOperations - [d7fc7b74-1, L:/127.0.0.1:56427 - R:localhost/127.0.0.1:8082] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 404 
Vary: <filtered>
Vary: <filtered>
Vary: <filtered>
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-20 14:51:27 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [d7fc7b74-1, L:/127.0.0.1:56427 - R:localhost/127.0.0.1:8082] onStateChange(POST{uri=/validate, connection=PooledConnection{channel=[id: 0xd7fc7b74, L:/127.0.0.1:56427 - R:localhost/127.0.0.1:8082]}}, [response_received])
2025-02-20 14:51:27 [] DEBUG reactor.netty.channel.FluxReceive - [d7fc7b74-1, L:/127.0.0.1:56427 - R:localhost/127.0.0.1:8082] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 14:51:27 [] DEBUG r.n.http.client.HttpClientOperations - [d7fc7b74-1, L:/127.0.0.1:56427 - R:localhost/127.0.0.1:8082] Received last HTTP packet
2025-02-20 14:51:27 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [d7fc7b74, L:/127.0.0.1:56427 - R:localhost/127.0.0.1:8082] onStateChange(POST{uri=/validate, connection=PooledConnection{channel=[id: 0xd7fc7b74, L:/127.0.0.1:56427 - R:localhost/127.0.0.1:8082]}}, [response_completed])
2025-02-20 14:51:27 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [d7fc7b74, L:/127.0.0.1:56427 - R:localhost/127.0.0.1:8082] onStateChange(POST{uri=/validate, connection=PooledConnection{channel=[id: 0xd7fc7b74, L:/127.0.0.1:56427 - R:localhost/127.0.0.1:8082]}}, [disconnecting])
2025-02-20 14:51:27 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [d7fc7b74, L:/127.0.0.1:56427 - R:localhost/127.0.0.1:8082] Releasing channel
2025-02-20 14:51:27 [] DEBUG r.n.r.PooledConnectionProvider - [d7fc7b74, L:/127.0.0.1:56427 - R:localhost/127.0.0.1:8082] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-20 14:51:27 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] threw exception
org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from POST http://localhost:8082/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 404 NOT_FOUND from POST http://localhost:8082/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 14:51:27 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from POST http://localhost:8082/validate] with root cause
org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from POST http://localhost:8082/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 404 NOT_FOUND from POST http://localhost:8082/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 14:51:27 [] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-20 14:51:27 [] INFO  c.c.c.g.c.config.RouterConfiguration - Authorized Request!
2025-02-20 14:51:27 [] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [POST] /error
2025-02-20 14:51:27 [] INFO  c.c.c.g.c.config.RouterConfiguration - Forwarding [POST] /error to User Microservice
2025-02-20 14:51:27 [] DEBUG r.n.r.PooledConnectionProvider - [d7fc7b74, L:/127.0.0.1:56427 - R:localhost/127.0.0.1:8082] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 14:51:27 [] DEBUG r.n.http.client.HttpClientConnect - [d7fc7b74-2, L:/127.0.0.1:56427 - R:localhost/127.0.0.1:8082] Handler is being applied: {uri=http://localhost:8082/error, method=POST}
2025-02-20 14:51:27 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [d7fc7b74-2, L:/127.0.0.1:56427 - R:localhost/127.0.0.1:8082] onStateChange(POST{uri=/error, connection=PooledConnection{channel=[id: 0xd7fc7b74, L:/127.0.0.1:56427 - R:localhost/127.0.0.1:8082]}}, [request_prepared])
2025-02-20 14:51:27 [] DEBUG r.n.http.client.HttpClientOperations - [d7fc7b74-2, L:/127.0.0.1:56427 - R:localhost/127.0.0.1:8082] No sendHeaders() called before complete, sending zero-length header
2025-02-20 14:51:27 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [d7fc7b74-2, L:/127.0.0.1:56427 - R:localhost/127.0.0.1:8082] onStateChange(POST{uri=/error, connection=PooledConnection{channel=[id: 0xd7fc7b74, L:/127.0.0.1:56427 - R:localhost/127.0.0.1:8082]}}, [request_sent])
2025-02-20 14:51:27 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] threw exception
org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from POST http://localhost:8082/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 404 NOT_FOUND from POST http://localhost:8082/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 14:51:27 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from POST http://localhost:8082/validate] with root cause
org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from POST http://localhost:8082/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 404 NOT_FOUND from POST http://localhost:8082/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 14:51:27 [] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-20 14:51:27 [] INFO  c.c.c.g.c.config.RouterConfiguration - Authorized Request!
2025-02-20 14:51:27 [] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [POST] /error
2025-02-20 14:51:27 [] INFO  c.c.c.g.c.config.RouterConfiguration - Forwarding [POST] /error to User Microservice
2025-02-20 14:51:27 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] threw exception
java.lang.IllegalStateException: Cannot start async: [ERROR]
	at org.springframework.util.Assert.state(Assert.java:79)
	at org.springframework.web.context.request.async.StandardServletAsyncWebRequest.startAsync(StandardServletAsyncWebRequest.java:157)
	at org.springframework.web.context.request.async.WebAsyncManager.startAsyncProcessing(WebAsyncManager.java:487)
	at org.springframework.web.context.request.async.WebAsyncManager.startDeferredResultProcessing(WebAsyncManager.java:462)
	at org.springframework.web.servlet.function.DefaultAsyncServerResponse.writeAsync(DefaultAsyncServerResponse.java:130)
	at org.springframework.web.servlet.function.DefaultEntityResponseBuilder$PublisherEntityResponse.writeToInternal(DefaultEntityResponseBuilder.java:429)
	at org.springframework.web.servlet.function.AbstractServerResponse.writeTo(AbstractServerResponse.java:101)
	at org.springframework.web.servlet.function.support.HandlerFunctionAdapter.handle(HandlerFunctionAdapter.java:112)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:633)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:511)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:454)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:361)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:208)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:285)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:149)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:239)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:243)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:57)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 14:51:27 [] DEBUG r.n.http.client.HttpClientOperations - [d7fc7b74-2, L:/127.0.0.1:56427 - R:localhost/127.0.0.1:8082] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 500 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
Connection: <filtered>
2025-02-20 14:51:27 [] ERROR o.a.c.c.C.[Tomcat].[localhost] - Exception Processing [ErrorPage[errorCode=0, location=/error]]
jakarta.servlet.ServletException: Async processing failed
	at org.springframework.web.servlet.function.DefaultAsyncServerResponse.writeAsync(DefaultAsyncServerResponse.java:136)
	at org.springframework.web.servlet.function.DefaultEntityResponseBuilder$PublisherEntityResponse.writeToInternal(DefaultEntityResponseBuilder.java:429)
	at org.springframework.web.servlet.function.AbstractServerResponse.writeTo(AbstractServerResponse.java:101)
	at org.springframework.web.servlet.function.support.HandlerFunctionAdapter.handle(HandlerFunctionAdapter.java:112)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:633)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:511)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:454)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:361)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:208)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:285)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:149)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:239)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:243)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:57)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: java.lang.IllegalStateException: Cannot start async: [ERROR]
	at org.springframework.util.Assert.state(Assert.java:79)
	at org.springframework.web.context.request.async.StandardServletAsyncWebRequest.startAsync(StandardServletAsyncWebRequest.java:157)
	at org.springframework.web.context.request.async.WebAsyncManager.startAsyncProcessing(WebAsyncManager.java:487)
	at org.springframework.web.context.request.async.WebAsyncManager.startDeferredResultProcessing(WebAsyncManager.java:462)
	at org.springframework.web.servlet.function.DefaultAsyncServerResponse.writeAsync(DefaultAsyncServerResponse.java:130)
	... 41 common frames omitted
2025-02-20 14:51:27 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [d7fc7b74-2, L:/127.0.0.1:56427 - R:localhost/127.0.0.1:8082] onStateChange(POST{uri=/error, connection=PooledConnection{channel=[id: 0xd7fc7b74, L:/127.0.0.1:56427 - R:localhost/127.0.0.1:8082]}}, [response_received])
2025-02-20 14:51:27 [] DEBUG reactor.netty.channel.FluxReceive - [d7fc7b74-2, L:/127.0.0.1:56427 - R:localhost/127.0.0.1:8082] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 14:51:27 [] DEBUG r.n.http.client.HttpClientOperations - [d7fc7b74-2, L:/127.0.0.1:56427 - R:localhost/127.0.0.1:8082] Received last HTTP packet
2025-02-20 14:51:27 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [d7fc7b74, L:/127.0.0.1:56427 - R:localhost/127.0.0.1:8082] onStateChange(POST{uri=/error, connection=PooledConnection{channel=[id: 0xd7fc7b74, L:/127.0.0.1:56427 - R:localhost/127.0.0.1:8082]}}, [response_completed])
2025-02-20 14:51:27 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [d7fc7b74, L:/127.0.0.1:56427 - R:localhost/127.0.0.1:8082] onStateChange(POST{uri=/error, connection=PooledConnection{channel=[id: 0xd7fc7b74, L:/127.0.0.1:56427 - R:localhost/127.0.0.1:8082]}}, [disconnecting])
2025-02-20 14:51:27 [] DEBUG r.n.r.PooledConnectionProvider - [d7fc7b74, L:/127.0.0.1:56427 ! R:localhost/127.0.0.1:8082] Channel closed, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 14:51:27 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [d7fc7b74, L:/127.0.0.1:56427 ! R:localhost/127.0.0.1:8082] onStateChange(PooledConnection{channel=[id: 0xd7fc7b74, L:/127.0.0.1:56427 ! R:localhost/127.0.0.1:8082]}, [disconnecting])
2025-02-20 14:55:44 [] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-02-20 14:55:44 [] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-02-20 14:55:46 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 3 thread-local buffer(s) from thread: reactor-http-nio-4
2025-02-20 14:55:46 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 5 thread-local buffer(s) from thread: reactor-http-nio-3
2025-02-20 14:55:46 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 3 thread-local buffer(s) from thread: reactor-http-nio-2
2025-02-20 14:55:46 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 5 thread-local buffer(s) from thread: reactor-http-nio-5
2025-02-20 14:55:46 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 5 thread-local buffer(s) from thread: reactor-http-nio-6
2025-02-20 14:55:46 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 3 thread-local buffer(s) from thread: reactor-http-nio-7
2025-02-20 14:55:46 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 5 thread-local buffer(s) from thread: reactor-http-nio-8
2025-02-20 14:55:46 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 5 thread-local buffer(s) from thread: reactor-http-nio-9
2025-02-20 14:55:51 [] DEBUG org.jboss.logging - Logging Provider: org.jboss.logging.Slf4jLoggerProvider found via system property
2025-02-20 14:55:51 [] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final
2025-02-20 14:55:51 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-02-20 14:55:51 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-02-20 14:55:51 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-02-20 14:55:51 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-02-20 14:55:51 [] DEBUG o.h.v.i.e.r.TraversableResolvers - Cannot find jakarta.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2025-02-20 14:55:51 [] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-02-20 14:55:51 [] INFO  c.c.c.g.c.CommongatewayApplication - Starting CommongatewayApplication using Java 17.0.12 with PID 14916 (D:\WORKSPACE\API-GATEWAY\commongateway\target\classes started by CITPL in D:\WORKSPACE\API-GATEWAY)
2025-02-20 14:55:51 [] DEBUG c.c.c.g.c.CommongatewayApplication - Running with Spring Boot v3.4.2, Spring v6.2.2
2025-02-20 14:55:51 [] INFO  c.c.c.g.c.CommongatewayApplication - No active profile set, falling back to 1 default profile: "default"
2025-02-20 14:55:51 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-02-20 14:55:51 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-02-20 14:55:51 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-02-20 14:55:51 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-02-20 14:55:51 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-02-20 14:55:51 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-02-20 14:55:52 [] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=50299984-946b-3bba-87da-3c9a1df8a676
2025-02-20 14:55:52 [] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-02-20 14:55:52 [] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-02-20 14:55:52 [] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-02-20 14:55:52 [] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.34]
2025-02-20 14:55:52 [] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-02-20 14:55:52 [] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1588 ms
2025-02-20 14:55:53 [] DEBUG i.n.u.i.l.InternalLoggerFactory - Using SLF4J as the default logging framework
2025-02-20 14:55:53 [] DEBUG i.n.util.internal.PlatformDependent0 - -Dio.netty.noUnsafe: false
2025-02-20 14:55:53 [] DEBUG i.n.util.internal.PlatformDependent0 - Java version: 17
2025-02-20 14:55:53 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe.theUnsafe: available
2025-02-20 14:55:53 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe base methods: all available
2025-02-20 14:55:53 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe.storeFence: available
2025-02-20 14:55:53 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.Buffer.address: available
2025-02-20 14:55:53 [] DEBUG i.n.util.internal.PlatformDependent0 - direct buffer constructor: unavailable: Reflective setAccessible(true) disabled
2025-02-20 14:55:53 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.Bits.unaligned: available, true
2025-02-20 14:55:53 [] DEBUG i.n.util.internal.PlatformDependent0 - jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable: class io.netty.util.internal.PlatformDependent0$7 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @7dc222ae
2025-02-20 14:55:53 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.DirectByteBuffer.<init>(long, {int,long}): unavailable
2025-02-20 14:55:53 [] DEBUG i.n.util.internal.PlatformDependent - sun.misc.Unsafe: available
2025-02-20 14:55:53 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.tmpdir: C:\Users\CITPL\AppData\Local\Temp (java.io.tmpdir)
2025-02-20 14:55:53 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.bitMode: 64 (sun.arch.data.model)
2025-02-20 14:55:53 [] DEBUG i.n.util.internal.PlatformDependent - Platform: Windows
2025-02-20 14:55:53 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.maxDirectMemory: -1 bytes
2025-02-20 14:55:53 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.uninitializedArrayAllocationThreshold: -1
2025-02-20 14:55:53 [] DEBUG io.netty.util.internal.CleanerJava9 - java.nio.ByteBuffer.cleaner(): available
2025-02-20 14:55:53 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.noPreferDirect: false
2025-02-20 14:55:53 [] DEBUG reactor.util.Loggers - Using Slf4j logging framework
2025-02-20 14:55:53 [] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-02-20 14:55:53 [] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2025-02-20 14:55:53 [] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2025-02-20 14:55:53 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-02-20 14:55:53 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via user class loader
2025-02-20 14:55:53 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-02-20 14:55:53 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-02-20 14:55:53 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-02-20 14:55:53 [] DEBUG o.h.v.i.e.r.TraversableResolvers - Cannot find jakarta.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2025-02-20 14:55:53 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-02-20 14:55:53 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-02-20 14:55:53 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-02-20 14:55:53 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-02-20 14:55:53 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-02-20 14:55:53 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-02-20 14:55:53 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	c.c.c.g.c.c.HomeController:
	{GET [/home]}: get()
2025-02-20 14:55:53 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2025-02-20 14:55:53 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 'beanNameHandlerMapping' {}
2025-02-20 14:55:53 [] DEBUG _.s.w.s.HandlerMapping.Mappings - Mapped com.citpl.common.gateway.commongateway.config.RouterConfiguration$$Lambda$895/0x000001f82e4ebcb8@50598a1a -> com.citpl.common.gateway.commongateway.config.RouterConfiguration$$Lambda$896/0x000001f82e4ebf20@14de1901
2025-02-20 14:55:53 [] DEBUG _.s.w.s.HandlerMapping.Mappings - Mapped /validate/** -> ProxyExchangeHandlerFunction
/users/** -> ProxyExchangeHandlerFunction
2025-02-20 14:55:53 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2025-02-20 14:55:53 [] DEBUG i.n.u.i.InternalThreadLocalMap - -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2025-02-20 14:55:53 [] DEBUG i.n.u.i.InternalThreadLocalMap - -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2025-02-20 14:55:53 [] DEBUG io.netty.util.ResourceLeakDetector - -Dio.netty.leakDetection.level: simple
2025-02-20 14:55:53 [] DEBUG io.netty.util.ResourceLeakDetector - -Dio.netty.leakDetection.targetRecords: 4
2025-02-20 14:55:53 [] DEBUG i.n.handler.codec.compression.Brotli - brotli4j not in the classpath; Brotli support will be unavailable.
2025-02-20 14:55:54 [] DEBUG reactor.netty.tcp.TcpResources - [http] resources will use the default LoopResources: DefaultLoopResources {prefix=reactor-http, daemon=true, selectCount=12, workerCount=12}
2025-02-20 14:55:54 [] DEBUG reactor.netty.tcp.TcpResources - [http] resources will use the default ConnectionProvider: reactor.netty.resources.DefaultPooledConnectionProvider@b5c902
2025-02-20 14:55:54 [] DEBUG r.netty.resources.DefaultLoopIOUring - Default io_uring support : false
2025-02-20 14:55:54 [] DEBUG r.netty.resources.DefaultLoopEpoll - Default Epoll support : false
2025-02-20 14:55:54 [] DEBUG r.netty.resources.DefaultLoopKQueue - Default KQueue support : false
2025-02-20 14:55:54 [] DEBUG i.n.c.MultithreadEventLoopGroup - -Dio.netty.eventLoopThreads: 24
2025-02-20 14:55:54 [] DEBUG i.n.u.concurrent.GlobalEventExecutor - -Dio.netty.globalEventExecutor.quietPeriodSeconds: 1
2025-02-20 14:55:54 [] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.noKeySetOptimization: false
2025-02-20 14:55:54 [] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.selectorAutoRebuildThreshold: 512
2025-02-20 14:55:54 [] DEBUG i.n.util.internal.PlatformDependent - org.jctools-core.MpscChunkedArrayQueue: available
2025-02-20 14:55:54 [] DEBUG io.netty.util.NetUtil - -Djava.net.preferIPv4Stack: false
2025-02-20 14:55:54 [] DEBUG io.netty.util.NetUtil - -Djava.net.preferIPv6Addresses: false
2025-02-20 14:55:54 [] DEBUG i.netty.util.NetUtilInitializations - Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2025-02-20 14:55:54 [] DEBUG io.netty.util.NetUtil - Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2025-02-20 14:55:54 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default ResolvedAddressTypes: IPV4_ONLY
2025-02-20 14:55:54 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Localhost address: localhost/127.0.0.1
2025-02-20 14:55:54 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Windows hostname: DESKTOP-P307093
2025-02-20 14:55:54 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default search domains: []
2025-02-20 14:55:54 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default UnixResolverOptions{ndots=1, timeout=5, attempts=16}
2025-02-20 14:55:54 [] DEBUG i.n.r.DefaultHostsFileEntriesResolver - -Dio.netty.hostsFileRefreshInterval: 0
2025-02-20 14:55:54 [] DEBUG i.n.r.d.DefaultDnsServerAddressStreamProvider - Default DNS servers: [/8.8.8.8:53, /4.2.2.2:53] (sun.net.dns.ResolverConfiguration)
2025-02-20 14:55:54 [] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-02-20 14:55:54 [] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-02-20 14:55:54 [] INFO  c.c.c.g.c.CommongatewayApplication - Started CommongatewayApplication in 3.757 seconds (process running for 4.647)
2025-02-20 14:55:56 [] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-02-20 14:55:56 [] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-02-20 14:55:56 [] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 0 ms
2025-02-20 14:55:56 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-20 14:55:56 [f33291df-e805-49ab-aabb-7721478f008c] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-20 14:55:56 [f33291df-e805-49ab-aabb-7721478f008c] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-20 14:55:56 [f33291df-e805-49ab-aabb-7721478f008c] INFO  c.c.c.g.c.config.RouterConfiguration - Authorized Request!
2025-02-20 14:55:56 [f33291df-e805-49ab-aabb-7721478f008c] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [GET] /validate
2025-02-20 14:55:56 [f33291df-e805-49ab-aabb-7721478f008c] DEBUG r.n.r.PooledConnectionProvider - Creating a new [http] client pool [PoolFactory{evictionInterval=PT0S, leasingStrategy=fifo, maxConnections=500, maxIdleTime=-1, maxLifeTime=-1, metricsEnabled=false, pendingAcquireMaxCount=1000, pendingAcquireTimeout=45000}] for [localhost/<unresolved>:8081]
2025-02-20 14:55:56 [f33291df-e805-49ab-aabb-7721478f008c] DEBUG io.netty.channel.DefaultChannelId - -Dio.netty.processId: 14916 (auto-detected)
2025-02-20 14:55:56 [f33291df-e805-49ab-aabb-7721478f008c] DEBUG io.netty.channel.DefaultChannelId - -Dio.netty.machineId: a0:d3:65:ff:fe:5e:b0:28 (auto-detected)
2025-02-20 14:55:56 [f33291df-e805-49ab-aabb-7721478f008c] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.numHeapArenas: 24
2025-02-20 14:55:56 [f33291df-e805-49ab-aabb-7721478f008c] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.numDirectArenas: 24
2025-02-20 14:55:56 [f33291df-e805-49ab-aabb-7721478f008c] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.pageSize: 8192
2025-02-20 14:55:56 [f33291df-e805-49ab-aabb-7721478f008c] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxOrder: 9
2025-02-20 14:55:56 [f33291df-e805-49ab-aabb-7721478f008c] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.chunkSize: 4194304
2025-02-20 14:55:56 [f33291df-e805-49ab-aabb-7721478f008c] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.smallCacheSize: 256
2025-02-20 14:55:56 [f33291df-e805-49ab-aabb-7721478f008c] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.normalCacheSize: 64
2025-02-20 14:55:56 [f33291df-e805-49ab-aabb-7721478f008c] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2025-02-20 14:55:56 [f33291df-e805-49ab-aabb-7721478f008c] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.cacheTrimInterval: 8192
2025-02-20 14:55:56 [f33291df-e805-49ab-aabb-7721478f008c] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.cacheTrimIntervalMillis: 0
2025-02-20 14:55:56 [f33291df-e805-49ab-aabb-7721478f008c] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.useCacheForAllThreads: false
2025-02-20 14:55:56 [f33291df-e805-49ab-aabb-7721478f008c] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
2025-02-20 14:55:56 [f33291df-e805-49ab-aabb-7721478f008c] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.disableCacheFinalizersForFastThreadLocalThreads: false
2025-02-20 14:55:56 [f33291df-e805-49ab-aabb-7721478f008c] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.allocator.type: pooled
2025-02-20 14:55:56 [f33291df-e805-49ab-aabb-7721478f008c] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.threadLocalDirectBufferSize: 0
2025-02-20 14:55:56 [f33291df-e805-49ab-aabb-7721478f008c] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.maxThreadLocalCharBufferSize: 16384
2025-02-20 14:55:56 [] DEBUG r.n.r.PooledConnectionProvider - [9bd1e2ab] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 14:55:56 [] DEBUG io.netty.buffer.AbstractByteBuf - -Dio.netty.buffer.checkAccessible: true
2025-02-20 14:55:56 [] DEBUG io.netty.buffer.AbstractByteBuf - -Dio.netty.buffer.checkBounds: true
2025-02-20 14:55:56 [] DEBUG i.n.util.ResourceLeakDetectorFactory - Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@47ded3fa
2025-02-20 14:55:56 [] DEBUG r.netty.transport.TransportConfig - [9bd1e2ab] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-20 14:55:56 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 14:55:56 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 14:55:56 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 14:55:56 [] DEBUG i.n.b.ChannelInitializerExtensions - -Dio.netty.bootstrap.extensions: null
2025-02-20 14:55:56 [] DEBUG r.netty.transport.TransportConnector - [9bd1e2ab] Connecting to [localhost/127.0.0.1:8081].
2025-02-20 14:55:56 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [9bd1e2ab, L:/127.0.0.1:56528 - R:localhost/127.0.0.1:8081] Registering pool release on close event for channel
2025-02-20 14:55:56 [] DEBUG r.n.r.PooledConnectionProvider - [9bd1e2ab, L:/127.0.0.1:56528 - R:localhost/127.0.0.1:8081] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 14:55:56 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [9bd1e2ab, L:/127.0.0.1:56528 - R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x9bd1e2ab, L:/127.0.0.1:56528 - R:localhost/127.0.0.1:8081]}, [connected])
2025-02-20 14:55:56 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [9bd1e2ab-1, L:/127.0.0.1:56528 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0x9bd1e2ab, L:/127.0.0.1:56528 - R:localhost/127.0.0.1:8081]}}, [configured])
2025-02-20 14:55:56 [] DEBUG r.n.http.client.HttpClientConnect - [9bd1e2ab-1, L:/127.0.0.1:56528 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate, method=GET}
2025-02-20 14:55:56 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [9bd1e2ab-1, L:/127.0.0.1:56528 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x9bd1e2ab, L:/127.0.0.1:56528 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-20 14:55:56 [] DEBUG r.n.http.client.HttpClientOperations - [9bd1e2ab-1, L:/127.0.0.1:56528 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-20 14:55:56 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.maxCapacityPerThread: 4096
2025-02-20 14:55:56 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.ratio: 8
2025-02-20 14:55:56 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.chunkSize: 32
2025-02-20 14:55:56 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.blocking: false
2025-02-20 14:55:56 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.batchFastThreadLocalOnly: true
2025-02-20 14:55:56 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [9bd1e2ab-1, L:/127.0.0.1:56528 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x9bd1e2ab, L:/127.0.0.1:56528 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-20 14:55:56 [] DEBUG i.n.handler.codec.compression.Zstd - zstd-jni not in the classpath; Zstd support will be unavailable.
2025-02-20 14:55:56 [] DEBUG r.n.http.client.HttpClientOperations - [9bd1e2ab-1, L:/127.0.0.1:56528 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Content-Length: <filtered>
Date: <filtered>
2025-02-20 14:55:56 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [9bd1e2ab-1, L:/127.0.0.1:56528 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x9bd1e2ab, L:/127.0.0.1:56528 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-20 14:55:56 [] DEBUG reactor.netty.channel.FluxReceive - [9bd1e2ab-1, L:/127.0.0.1:56528 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 14:55:56 [] DEBUG r.n.http.client.HttpClientOperations - [9bd1e2ab-1, L:/127.0.0.1:56528 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-20 14:55:56 [] DEBUG r.n.http.client.HttpClientOperations - [9bd1e2ab-1, L:/127.0.0.1:56528 - R:localhost/127.0.0.1:8081] Http client inbound receiver cancelled, closing channel.
2025-02-20 14:55:56 [] DEBUG r.n.r.PooledConnectionProvider - [9bd1e2ab-1, L:/127.0.0.1:56528 ! R:localhost/127.0.0.1:8081] Channel closed, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 14:55:56 [] DEBUG reactor.netty.channel.FluxReceive - [9bd1e2ab-1, L:/127.0.0.1:56528 ! R:localhost/127.0.0.1:8081] [terminated=false, cancelled=true, pending=0, error=null]: Rejecting additional inbound receiver.
2025-02-20 14:55:56 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [9bd1e2ab, L:/127.0.0.1:56528 ! R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x9bd1e2ab, L:/127.0.0.1:56528 ! R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-20 14:55:56 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [9bd1e2ab, L:/127.0.0.1:56528 ! R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x9bd1e2ab, L:/127.0.0.1:56528 ! R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-20 14:55:56 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [9bd1e2ab, L:/127.0.0.1:56528 ! R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x9bd1e2ab, L:/127.0.0.1:56528 ! R:localhost/127.0.0.1:8081]}, [disconnecting])
2025-02-20 14:55:56 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.web.reactive.function.client.WebClientResponseException: 200 OK from GET http://localhost:8081/validate, but response failed with cause: org.springframework.web.reactive.function.UnsupportedMediaTypeException: Content type 'text/plain;charset=UTF-8' not supported for bodyType=java.lang.Boolean] with root cause
org.springframework.web.reactive.function.UnsupportedMediaTypeException: Content type 'text/plain;charset=UTF-8' not supported for bodyType=java.lang.Boolean
	at org.springframework.web.reactive.function.BodyExtractors.readWithMessageReaders(BodyExtractors.java:205)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ Body from GET http://localhost:8081/validate [DefaultClientResponse]
Original Stack Trace:
		at org.springframework.web.reactive.function.BodyExtractors.readWithMessageReaders(BodyExtractors.java:205)
		at org.springframework.web.reactive.function.BodyExtractors.lambda$toMono$2(BodyExtractors.java:84)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.body(DefaultClientResponse.java:135)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.bodyToMono(DefaultClientResponse.java:150)
		at org.springframework.web.reactive.function.client.DefaultWebClient$DefaultResponseSpec.lambda$bodyToMono$2(DefaultWebClient.java:581)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:132)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onNext(FluxDoFinally.java:113)
		at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onNext(MonoPeekTerminal.java:180)
		at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
		at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:200)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:122)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:200)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:200)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:200)
		at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext(MonoFlatMapMany.java:251)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2571)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onSubscribeInner(MonoFlatMapMany.java:150)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onSubscribe(MonoFlatMapMany.java:246)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onSubscribe(FluxContextWrite.java:101)
		at reactor.core.publisher.FluxJust.subscribe(FluxJust.java:68)
		at reactor.core.publisher.Flux.subscribe(Flux.java:8891)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext(MonoFlatMapMany.java:196)
		at reactor.core.publisher.SerializedSubscriber.onNext(SerializedSubscriber.java:99)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.onNext(FluxRetryWhen.java:178)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.success(MonoCreate.java:176)
		at reactor.netty.http.client.HttpClientConnect$HttpIOHandlerObserver.onStateChange(HttpClientConnect.java:442)
		at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:716)
		at reactor.netty.resources.DefaultPooledConnectionProvider$DisposableAcquire.onStateChange(DefaultPooledConnectionProvider.java:207)
		at reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnection.onStateChange(DefaultPooledConnectionProvider.java:468)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:744)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:333)
		at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:455)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 14:55:56 [] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-20 14:55:56 [] INFO  c.c.c.g.c.config.RouterConfiguration - Authorized Request!
2025-02-20 14:55:56 [] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [GET] /error
2025-02-20 14:55:56 [] DEBUG r.n.r.PooledConnectionProvider - [5e76ed74] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 14:55:56 [] DEBUG r.netty.transport.TransportConfig - [5e76ed74] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-20 14:55:56 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 14:55:56 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 14:55:56 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 14:55:56 [] DEBUG r.netty.transport.TransportConnector - [5e76ed74] Connecting to [localhost/127.0.0.1:8081].
2025-02-20 14:55:56 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [5e76ed74, L:/127.0.0.1:56529 - R:localhost/127.0.0.1:8081] Registering pool release on close event for channel
2025-02-20 14:55:56 [] DEBUG r.n.r.PooledConnectionProvider - [5e76ed74, L:/127.0.0.1:56529 - R:localhost/127.0.0.1:8081] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 14:55:56 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [5e76ed74, L:/127.0.0.1:56529 - R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x5e76ed74, L:/127.0.0.1:56529 - R:localhost/127.0.0.1:8081]}, [connected])
2025-02-20 14:55:56 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [5e76ed74-1, L:/127.0.0.1:56529 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0x5e76ed74, L:/127.0.0.1:56529 - R:localhost/127.0.0.1:8081]}}, [configured])
2025-02-20 14:55:56 [] DEBUG r.n.http.client.HttpClientConnect - [5e76ed74-1, L:/127.0.0.1:56529 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate, method=GET}
2025-02-20 14:55:56 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [5e76ed74-1, L:/127.0.0.1:56529 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x5e76ed74, L:/127.0.0.1:56529 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-20 14:55:56 [] DEBUG r.n.http.client.HttpClientOperations - [5e76ed74-1, L:/127.0.0.1:56529 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-20 14:55:56 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [5e76ed74-1, L:/127.0.0.1:56529 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x5e76ed74, L:/127.0.0.1:56529 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-20 14:55:56 [] DEBUG r.n.http.client.HttpClientOperations - [5e76ed74-1, L:/127.0.0.1:56529 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Content-Length: <filtered>
Date: <filtered>
2025-02-20 14:55:56 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [5e76ed74-1, L:/127.0.0.1:56529 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x5e76ed74, L:/127.0.0.1:56529 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-20 14:55:56 [] DEBUG reactor.netty.channel.FluxReceive - [5e76ed74-1, L:/127.0.0.1:56529 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 14:55:56 [] DEBUG r.n.http.client.HttpClientOperations - [5e76ed74-1, L:/127.0.0.1:56529 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-20 14:55:56 [] DEBUG r.n.http.client.HttpClientOperations - [5e76ed74-1, L:/127.0.0.1:56529 - R:localhost/127.0.0.1:8081] Http client inbound receiver cancelled, closing channel.
2025-02-20 14:55:56 [] DEBUG r.n.r.PooledConnectionProvider - [5e76ed74-1, L:/127.0.0.1:56529 ! R:localhost/127.0.0.1:8081] Channel closed, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 14:55:56 [] DEBUG reactor.netty.channel.FluxReceive - [5e76ed74-1, L:/127.0.0.1:56529 ! R:localhost/127.0.0.1:8081] [terminated=false, cancelled=true, pending=0, error=null]: Rejecting additional inbound receiver.
2025-02-20 14:55:56 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [5e76ed74, L:/127.0.0.1:56529 ! R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x5e76ed74, L:/127.0.0.1:56529 ! R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-20 14:55:56 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [5e76ed74, L:/127.0.0.1:56529 ! R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x5e76ed74, L:/127.0.0.1:56529 ! R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-20 14:55:56 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [5e76ed74, L:/127.0.0.1:56529 ! R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x5e76ed74, L:/127.0.0.1:56529 ! R:localhost/127.0.0.1:8081]}, [disconnecting])
2025-02-20 14:55:56 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] threw exception
org.springframework.web.reactive.function.UnsupportedMediaTypeException: Content type 'text/plain;charset=UTF-8' not supported for bodyType=java.lang.Boolean
	at org.springframework.web.reactive.function.BodyExtractors.readWithMessageReaders(BodyExtractors.java:205)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ Body from GET http://localhost:8081/validate [DefaultClientResponse]
Original Stack Trace:
		at org.springframework.web.reactive.function.BodyExtractors.readWithMessageReaders(BodyExtractors.java:205)
		at org.springframework.web.reactive.function.BodyExtractors.lambda$toMono$2(BodyExtractors.java:84)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.body(DefaultClientResponse.java:135)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.bodyToMono(DefaultClientResponse.java:150)
		at org.springframework.web.reactive.function.client.DefaultWebClient$DefaultResponseSpec.lambda$bodyToMono$2(DefaultWebClient.java:581)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:132)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onNext(FluxDoFinally.java:113)
		at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onNext(MonoPeekTerminal.java:180)
		at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
		at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:200)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:122)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:200)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:200)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:200)
		at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext(MonoFlatMapMany.java:251)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2571)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onSubscribeInner(MonoFlatMapMany.java:150)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onSubscribe(MonoFlatMapMany.java:246)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onSubscribe(FluxContextWrite.java:101)
		at reactor.core.publisher.FluxJust.subscribe(FluxJust.java:68)
		at reactor.core.publisher.Flux.subscribe(Flux.java:8891)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext(MonoFlatMapMany.java:196)
		at reactor.core.publisher.SerializedSubscriber.onNext(SerializedSubscriber.java:99)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.onNext(FluxRetryWhen.java:178)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.success(MonoCreate.java:176)
		at reactor.netty.http.client.HttpClientConnect$HttpIOHandlerObserver.onStateChange(HttpClientConnect.java:442)
		at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:716)
		at reactor.netty.resources.DefaultPooledConnectionProvider$DisposableAcquire.onStateChange(DefaultPooledConnectionProvider.java:207)
		at reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnection.onStateChange(DefaultPooledConnectionProvider.java:468)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:744)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:333)
		at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:455)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 14:55:56 [] ERROR o.a.c.c.C.[Tomcat].[localhost] - Exception Processing [ErrorPage[errorCode=0, location=/error]]
jakarta.servlet.ServletException: Request processing failed: org.springframework.web.reactive.function.client.WebClientResponseException: 200 OK from GET http://localhost:8081/validate, but response failed with cause: org.springframework.web.reactive.function.UnsupportedMediaTypeException: Content type 'text/plain;charset=UTF-8' not supported for bodyType=java.lang.Boolean
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1022)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:633)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:411)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:331)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:268)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:380)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:208)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:285)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:149)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.web.reactive.function.client.WebClientResponseException: 200 OK from GET http://localhost:8081/validate, but response failed with cause: org.springframework.web.reactive.function.UnsupportedMediaTypeException: Content type 'text/plain;charset=UTF-8' not supported for bodyType=java.lang.Boolean
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:337)
	at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
	at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
	at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onError(FluxOnErrorReturn.java:199)
	at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onError(FluxDefaultIfEmpty.java:156)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onError(FluxOnAssembly.java:544)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onError(FluxMapFuseable.java:142)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onError(FluxContextWrite.java:121)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onError(FluxMapFuseable.java:340)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onError(FluxFilterFuseable.java:382)
	at reactor.core.publisher.MonoCollect$CollectSubscriber.onError(MonoCollect.java:135)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:134)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:134)
	at reactor.core.publisher.Operators.error(Operators.java:198)
	at reactor.netty.channel.FluxReceive.startReceiver(FluxReceive.java:189)
	at reactor.netty.channel.FluxReceive.subscribe(FluxReceive.java:145)
	at reactor.core.publisher.InternalFluxOperator.subscribe(InternalFluxOperator.java:68)
	at reactor.netty.ByteBufFlux.subscribe(ByteBufFlux.java:340)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onError(FluxOnAssembly.java:544)
	at reactor.core.publisher.MonoNext$NextSubscriber.onError(MonoNext.java:93)
	at reactor.core.publisher.FluxConcatArray$ConcatArraySubscriber.onError(FluxConcatArray.java:186)
	at reactor.core.publisher.Operators.error(Operators.java:198)
	at reactor.core.publisher.FluxError.subscribe(FluxError.java:43)
	at reactor.core.publisher.Flux.subscribe(Flux.java:8891)
	at reactor.core.publisher.FluxConcatArray$ConcatArraySubscriber.onComplete(FluxConcatArray.java:238)
	at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onComplete(MonoIgnoreElements.java:89)
	at reactor.core.publisher.FluxTakeWhile$TakeWhileSubscriber.onComplete(FluxTakeWhile.java:122)
	at reactor.core.publisher.FluxTakeWhile$TakeWhileSubscriber.onNext(FluxTakeWhile.java:96)
	at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:122)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:200)
	at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:122)
	at reactor.netty.channel.FluxReceive.onInboundNext(FluxReceive.java:377)
	at reactor.netty.channel.ChannelOperations.onInboundNext(ChannelOperations.java:435)
	at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:802)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104)
		at reactor.core.publisher.Mono.block(Mono.java:1779)
		at com.citpl.common.gateway.commongateway.config.RouterConfiguration.lambda$dynamicRouting$2(RouterConfiguration.java:56)
		at org.springframework.web.servlet.function.HandlerFilterFunction.lambda$ofErrorHandler$5(HandlerFilterFunction.java:114)
		at org.springframework.web.servlet.function.HandlerFilterFunction.lambda$andThen$0(HandlerFilterFunction.java:58)
		at org.springframework.web.servlet.function.HandlerFilterFunction.lambda$ofRequestProcessor$3(HandlerFilterFunction.java:83)
		at org.springframework.web.servlet.function.HandlerFilterFunction.lambda$andThen$1(HandlerFilterFunction.java:59)
		at org.springframework.web.servlet.function.HandlerFilterFunction.lambda$apply$2(HandlerFilterFunction.java:70)
		at org.springframework.web.servlet.function.support.HandlerFunctionAdapter.handle(HandlerFunctionAdapter.java:108)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
		at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:633)
		at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:411)
		at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:331)
		at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:268)
		at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:380)
		at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:208)
		at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:285)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:149)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		... 1 common frames omitted
Caused by: org.springframework.web.reactive.function.UnsupportedMediaTypeException: Content type 'text/plain;charset=UTF-8' not supported for bodyType=java.lang.Boolean
	at org.springframework.web.reactive.function.BodyExtractors.readWithMessageReaders(BodyExtractors.java:205)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ Body from GET http://localhost:8081/validate [DefaultClientResponse]
Original Stack Trace:
		at org.springframework.web.reactive.function.BodyExtractors.readWithMessageReaders(BodyExtractors.java:205)
		at org.springframework.web.reactive.function.BodyExtractors.lambda$toMono$2(BodyExtractors.java:84)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.body(DefaultClientResponse.java:135)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.bodyToMono(DefaultClientResponse.java:150)
		at org.springframework.web.reactive.function.client.DefaultWebClient$DefaultResponseSpec.lambda$bodyToMono$2(DefaultWebClient.java:581)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:132)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onNext(FluxDoFinally.java:113)
		at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onNext(MonoPeekTerminal.java:180)
		at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
		at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:200)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:122)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:200)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:200)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:200)
		at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext(MonoFlatMapMany.java:251)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2571)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onSubscribeInner(MonoFlatMapMany.java:150)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onSubscribe(MonoFlatMapMany.java:246)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onSubscribe(FluxContextWrite.java:101)
		at reactor.core.publisher.FluxJust.subscribe(FluxJust.java:68)
		at reactor.core.publisher.Flux.subscribe(Flux.java:8891)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext(MonoFlatMapMany.java:196)
		at reactor.core.publisher.SerializedSubscriber.onNext(SerializedSubscriber.java:99)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.onNext(FluxRetryWhen.java:178)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.success(MonoCreate.java:176)
		at reactor.netty.http.client.HttpClientConnect$HttpIOHandlerObserver.onStateChange(HttpClientConnect.java:442)
		at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:716)
		at reactor.netty.resources.DefaultPooledConnectionProvider$DisposableAcquire.onStateChange(DefaultPooledConnectionProvider.java:207)
		at reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnection.onStateChange(DefaultPooledConnectionProvider.java:468)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:744)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:333)
		at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:455)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 14:56:44 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-20 14:56:44 [40fd680c-9052-4306-b362-5e6ffc81b278] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-20 14:56:44 [40fd680c-9052-4306-b362-5e6ffc81b278] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-20 14:56:44 [40fd680c-9052-4306-b362-5e6ffc81b278] INFO  c.c.c.g.c.config.RouterConfiguration - Authorized Request!
2025-02-20 14:56:44 [40fd680c-9052-4306-b362-5e6ffc81b278] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [GET] /users
2025-02-20 14:56:44 [] DEBUG r.n.r.PooledConnectionProvider - [b5940df2] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 14:56:44 [] DEBUG r.netty.transport.TransportConfig - [b5940df2] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-20 14:56:44 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 14:56:44 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 14:56:44 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 14:56:44 [] DEBUG r.netty.transport.TransportConnector - [b5940df2] Connecting to [localhost/127.0.0.1:8081].
2025-02-20 14:56:44 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b5940df2, L:/127.0.0.1:56553 - R:localhost/127.0.0.1:8081] Registering pool release on close event for channel
2025-02-20 14:56:44 [] DEBUG r.n.r.PooledConnectionProvider - [b5940df2, L:/127.0.0.1:56553 - R:localhost/127.0.0.1:8081] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 14:56:44 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b5940df2, L:/127.0.0.1:56553 - R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0xb5940df2, L:/127.0.0.1:56553 - R:localhost/127.0.0.1:8081]}, [connected])
2025-02-20 14:56:44 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b5940df2-1, L:/127.0.0.1:56553 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0xb5940df2, L:/127.0.0.1:56553 - R:localhost/127.0.0.1:8081]}}, [configured])
2025-02-20 14:56:44 [] DEBUG r.n.http.client.HttpClientConnect - [b5940df2-1, L:/127.0.0.1:56553 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate, method=GET}
2025-02-20 14:56:44 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b5940df2-1, L:/127.0.0.1:56553 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xb5940df2, L:/127.0.0.1:56553 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-20 14:56:44 [] DEBUG r.n.http.client.HttpClientOperations - [b5940df2-1, L:/127.0.0.1:56553 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-20 14:56:44 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b5940df2-1, L:/127.0.0.1:56553 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xb5940df2, L:/127.0.0.1:56553 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-20 14:56:44 [] DEBUG r.n.http.client.HttpClientOperations - [b5940df2-1, L:/127.0.0.1:56553 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Content-Length: <filtered>
Date: <filtered>
2025-02-20 14:56:44 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b5940df2-1, L:/127.0.0.1:56553 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xb5940df2, L:/127.0.0.1:56553 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-20 14:56:44 [] DEBUG reactor.netty.channel.FluxReceive - [b5940df2-1, L:/127.0.0.1:56553 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 14:56:44 [] DEBUG r.n.http.client.HttpClientOperations - [b5940df2-1, L:/127.0.0.1:56553 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-20 14:56:44 [] DEBUG r.n.http.client.HttpClientOperations - [b5940df2-1, L:/127.0.0.1:56553 - R:localhost/127.0.0.1:8081] Http client inbound receiver cancelled, closing channel.
2025-02-20 14:56:44 [] DEBUG r.n.r.PooledConnectionProvider - [b5940df2-1, L:/127.0.0.1:56553 ! R:localhost/127.0.0.1:8081] Channel closed, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 14:56:44 [] DEBUG reactor.netty.channel.FluxReceive - [b5940df2-1, L:/127.0.0.1:56553 ! R:localhost/127.0.0.1:8081] [terminated=false, cancelled=true, pending=0, error=null]: Rejecting additional inbound receiver.
2025-02-20 14:56:44 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b5940df2, L:/127.0.0.1:56553 ! R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xb5940df2, L:/127.0.0.1:56553 ! R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-20 14:56:44 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b5940df2, L:/127.0.0.1:56553 ! R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xb5940df2, L:/127.0.0.1:56553 ! R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-20 14:56:44 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b5940df2, L:/127.0.0.1:56553 ! R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0xb5940df2, L:/127.0.0.1:56553 ! R:localhost/127.0.0.1:8081]}, [disconnecting])
2025-02-20 14:56:44 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.web.reactive.function.client.WebClientResponseException: 200 OK from GET http://localhost:8081/validate, but response failed with cause: org.springframework.web.reactive.function.UnsupportedMediaTypeException: Content type 'text/plain;charset=UTF-8' not supported for bodyType=java.lang.Boolean] with root cause
org.springframework.web.reactive.function.UnsupportedMediaTypeException: Content type 'text/plain;charset=UTF-8' not supported for bodyType=java.lang.Boolean
	at org.springframework.web.reactive.function.BodyExtractors.readWithMessageReaders(BodyExtractors.java:205)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ Body from GET http://localhost:8081/validate [DefaultClientResponse]
Original Stack Trace:
		at org.springframework.web.reactive.function.BodyExtractors.readWithMessageReaders(BodyExtractors.java:205)
		at org.springframework.web.reactive.function.BodyExtractors.lambda$toMono$2(BodyExtractors.java:84)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.body(DefaultClientResponse.java:135)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.bodyToMono(DefaultClientResponse.java:150)
		at org.springframework.web.reactive.function.client.DefaultWebClient$DefaultResponseSpec.lambda$bodyToMono$2(DefaultWebClient.java:581)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:132)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onNext(FluxDoFinally.java:113)
		at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onNext(MonoPeekTerminal.java:180)
		at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
		at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:200)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:122)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:200)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:200)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:200)
		at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext(MonoFlatMapMany.java:251)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2571)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onSubscribeInner(MonoFlatMapMany.java:150)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onSubscribe(MonoFlatMapMany.java:246)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onSubscribe(FluxContextWrite.java:101)
		at reactor.core.publisher.FluxJust.subscribe(FluxJust.java:68)
		at reactor.core.publisher.Flux.subscribe(Flux.java:8891)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext(MonoFlatMapMany.java:196)
		at reactor.core.publisher.SerializedSubscriber.onNext(SerializedSubscriber.java:99)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.onNext(FluxRetryWhen.java:178)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.success(MonoCreate.java:176)
		at reactor.netty.http.client.HttpClientConnect$HttpIOHandlerObserver.onStateChange(HttpClientConnect.java:442)
		at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:716)
		at reactor.netty.resources.DefaultPooledConnectionProvider$DisposableAcquire.onStateChange(DefaultPooledConnectionProvider.java:207)
		at reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnection.onStateChange(DefaultPooledConnectionProvider.java:468)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:744)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:333)
		at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:455)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 14:56:44 [] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-20 14:56:44 [] INFO  c.c.c.g.c.config.RouterConfiguration - Authorized Request!
2025-02-20 14:56:44 [] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [GET] /error
2025-02-20 14:56:44 [] DEBUG r.n.r.PooledConnectionProvider - [a59104e5] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 14:56:44 [] DEBUG r.netty.transport.TransportConfig - [a59104e5] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-20 14:56:44 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 14:56:44 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 14:56:44 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 14:56:44 [] DEBUG r.netty.transport.TransportConnector - [a59104e5] Connecting to [localhost/127.0.0.1:8081].
2025-02-20 14:56:44 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [a59104e5, L:/127.0.0.1:56554 - R:localhost/127.0.0.1:8081] Registering pool release on close event for channel
2025-02-20 14:56:44 [] DEBUG r.n.r.PooledConnectionProvider - [a59104e5, L:/127.0.0.1:56554 - R:localhost/127.0.0.1:8081] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 14:56:44 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [a59104e5, L:/127.0.0.1:56554 - R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0xa59104e5, L:/127.0.0.1:56554 - R:localhost/127.0.0.1:8081]}, [connected])
2025-02-20 14:56:44 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [a59104e5-1, L:/127.0.0.1:56554 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0xa59104e5, L:/127.0.0.1:56554 - R:localhost/127.0.0.1:8081]}}, [configured])
2025-02-20 14:56:44 [] DEBUG r.n.http.client.HttpClientConnect - [a59104e5-1, L:/127.0.0.1:56554 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate, method=GET}
2025-02-20 14:56:44 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [a59104e5-1, L:/127.0.0.1:56554 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xa59104e5, L:/127.0.0.1:56554 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-20 14:56:44 [] DEBUG r.n.http.client.HttpClientOperations - [a59104e5-1, L:/127.0.0.1:56554 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-20 14:56:44 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [a59104e5-1, L:/127.0.0.1:56554 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xa59104e5, L:/127.0.0.1:56554 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-20 14:56:44 [] DEBUG r.n.http.client.HttpClientOperations - [a59104e5-1, L:/127.0.0.1:56554 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Content-Length: <filtered>
Date: <filtered>
2025-02-20 14:56:44 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [a59104e5-1, L:/127.0.0.1:56554 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xa59104e5, L:/127.0.0.1:56554 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-20 14:56:44 [] DEBUG reactor.netty.channel.FluxReceive - [a59104e5-1, L:/127.0.0.1:56554 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 14:56:44 [] DEBUG r.n.http.client.HttpClientOperations - [a59104e5-1, L:/127.0.0.1:56554 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-20 14:56:44 [] DEBUG r.n.http.client.HttpClientOperations - [a59104e5-1, L:/127.0.0.1:56554 - R:localhost/127.0.0.1:8081] Http client inbound receiver cancelled, closing channel.
2025-02-20 14:56:44 [] DEBUG r.n.r.PooledConnectionProvider - [a59104e5-1, L:/127.0.0.1:56554 ! R:localhost/127.0.0.1:8081] Channel closed, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 14:56:44 [] DEBUG reactor.netty.channel.FluxReceive - [a59104e5-1, L:/127.0.0.1:56554 ! R:localhost/127.0.0.1:8081] [terminated=false, cancelled=true, pending=0, error=null]: Rejecting additional inbound receiver.
2025-02-20 14:56:44 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [a59104e5, L:/127.0.0.1:56554 ! R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xa59104e5, L:/127.0.0.1:56554 ! R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-20 14:56:44 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [a59104e5, L:/127.0.0.1:56554 ! R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xa59104e5, L:/127.0.0.1:56554 ! R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-20 14:56:44 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [a59104e5, L:/127.0.0.1:56554 ! R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0xa59104e5, L:/127.0.0.1:56554 ! R:localhost/127.0.0.1:8081]}, [disconnecting])
2025-02-20 14:56:44 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] threw exception
org.springframework.web.reactive.function.UnsupportedMediaTypeException: Content type 'text/plain;charset=UTF-8' not supported for bodyType=java.lang.Boolean
	at org.springframework.web.reactive.function.BodyExtractors.readWithMessageReaders(BodyExtractors.java:205)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ Body from GET http://localhost:8081/validate [DefaultClientResponse]
Original Stack Trace:
		at org.springframework.web.reactive.function.BodyExtractors.readWithMessageReaders(BodyExtractors.java:205)
		at org.springframework.web.reactive.function.BodyExtractors.lambda$toMono$2(BodyExtractors.java:84)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.body(DefaultClientResponse.java:135)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.bodyToMono(DefaultClientResponse.java:150)
		at org.springframework.web.reactive.function.client.DefaultWebClient$DefaultResponseSpec.lambda$bodyToMono$2(DefaultWebClient.java:581)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:132)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onNext(FluxDoFinally.java:113)
		at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onNext(MonoPeekTerminal.java:180)
		at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
		at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:200)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:122)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:200)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:200)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:200)
		at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext(MonoFlatMapMany.java:251)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2571)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onSubscribeInner(MonoFlatMapMany.java:150)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onSubscribe(MonoFlatMapMany.java:246)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onSubscribe(FluxContextWrite.java:101)
		at reactor.core.publisher.FluxJust.subscribe(FluxJust.java:68)
		at reactor.core.publisher.Flux.subscribe(Flux.java:8891)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext(MonoFlatMapMany.java:196)
		at reactor.core.publisher.SerializedSubscriber.onNext(SerializedSubscriber.java:99)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.onNext(FluxRetryWhen.java:178)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.success(MonoCreate.java:176)
		at reactor.netty.http.client.HttpClientConnect$HttpIOHandlerObserver.onStateChange(HttpClientConnect.java:442)
		at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:716)
		at reactor.netty.resources.DefaultPooledConnectionProvider$DisposableAcquire.onStateChange(DefaultPooledConnectionProvider.java:207)
		at reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnection.onStateChange(DefaultPooledConnectionProvider.java:468)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:744)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:333)
		at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:455)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 14:56:44 [] ERROR o.a.c.c.C.[Tomcat].[localhost] - Exception Processing [ErrorPage[errorCode=0, location=/error]]
jakarta.servlet.ServletException: Request processing failed: org.springframework.web.reactive.function.client.WebClientResponseException: 200 OK from GET http://localhost:8081/validate, but response failed with cause: org.springframework.web.reactive.function.UnsupportedMediaTypeException: Content type 'text/plain;charset=UTF-8' not supported for bodyType=java.lang.Boolean
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1022)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:633)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:411)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:331)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:268)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:380)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:208)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:285)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:149)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.web.reactive.function.client.WebClientResponseException: 200 OK from GET http://localhost:8081/validate, but response failed with cause: org.springframework.web.reactive.function.UnsupportedMediaTypeException: Content type 'text/plain;charset=UTF-8' not supported for bodyType=java.lang.Boolean
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:337)
	at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
	at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
	at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onError(FluxOnErrorReturn.java:199)
	at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onError(FluxDefaultIfEmpty.java:156)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onError(FluxOnAssembly.java:544)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onError(FluxMapFuseable.java:142)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onError(FluxContextWrite.java:121)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onError(FluxMapFuseable.java:340)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onError(FluxFilterFuseable.java:382)
	at reactor.core.publisher.MonoCollect$CollectSubscriber.onError(MonoCollect.java:135)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:134)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:134)
	at reactor.core.publisher.Operators.error(Operators.java:198)
	at reactor.netty.channel.FluxReceive.startReceiver(FluxReceive.java:189)
	at reactor.netty.channel.FluxReceive.subscribe(FluxReceive.java:145)
	at reactor.core.publisher.InternalFluxOperator.subscribe(InternalFluxOperator.java:68)
	at reactor.netty.ByteBufFlux.subscribe(ByteBufFlux.java:340)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onError(FluxOnAssembly.java:544)
	at reactor.core.publisher.MonoNext$NextSubscriber.onError(MonoNext.java:93)
	at reactor.core.publisher.FluxConcatArray$ConcatArraySubscriber.onError(FluxConcatArray.java:186)
	at reactor.core.publisher.Operators.error(Operators.java:198)
	at reactor.core.publisher.FluxError.subscribe(FluxError.java:43)
	at reactor.core.publisher.Flux.subscribe(Flux.java:8891)
	at reactor.core.publisher.FluxConcatArray$ConcatArraySubscriber.onComplete(FluxConcatArray.java:238)
	at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onComplete(MonoIgnoreElements.java:89)
	at reactor.core.publisher.FluxTakeWhile$TakeWhileSubscriber.onComplete(FluxTakeWhile.java:122)
	at reactor.core.publisher.FluxTakeWhile$TakeWhileSubscriber.onNext(FluxTakeWhile.java:96)
	at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:122)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:200)
	at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:122)
	at reactor.netty.channel.FluxReceive.onInboundNext(FluxReceive.java:377)
	at reactor.netty.channel.ChannelOperations.onInboundNext(ChannelOperations.java:435)
	at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:802)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104)
		at reactor.core.publisher.Mono.block(Mono.java:1779)
		at com.citpl.common.gateway.commongateway.config.RouterConfiguration.lambda$dynamicRouting$2(RouterConfiguration.java:56)
		at org.springframework.web.servlet.function.HandlerFilterFunction.lambda$ofErrorHandler$5(HandlerFilterFunction.java:114)
		at org.springframework.web.servlet.function.HandlerFilterFunction.lambda$andThen$0(HandlerFilterFunction.java:58)
		at org.springframework.web.servlet.function.HandlerFilterFunction.lambda$ofRequestProcessor$3(HandlerFilterFunction.java:83)
		at org.springframework.web.servlet.function.HandlerFilterFunction.lambda$andThen$1(HandlerFilterFunction.java:59)
		at org.springframework.web.servlet.function.HandlerFilterFunction.lambda$apply$2(HandlerFilterFunction.java:70)
		at org.springframework.web.servlet.function.support.HandlerFunctionAdapter.handle(HandlerFunctionAdapter.java:108)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
		at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
		at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:633)
		at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:411)
		at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:331)
		at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:268)
		at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:380)
		at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:208)
		at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:285)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:149)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		... 1 common frames omitted
Caused by: org.springframework.web.reactive.function.UnsupportedMediaTypeException: Content type 'text/plain;charset=UTF-8' not supported for bodyType=java.lang.Boolean
	at org.springframework.web.reactive.function.BodyExtractors.readWithMessageReaders(BodyExtractors.java:205)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ Body from GET http://localhost:8081/validate [DefaultClientResponse]
Original Stack Trace:
		at org.springframework.web.reactive.function.BodyExtractors.readWithMessageReaders(BodyExtractors.java:205)
		at org.springframework.web.reactive.function.BodyExtractors.lambda$toMono$2(BodyExtractors.java:84)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.body(DefaultClientResponse.java:135)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.bodyToMono(DefaultClientResponse.java:150)
		at org.springframework.web.reactive.function.client.DefaultWebClient$DefaultResponseSpec.lambda$bodyToMono$2(DefaultWebClient.java:581)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:132)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onNext(FluxDoFinally.java:113)
		at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onNext(MonoPeekTerminal.java:180)
		at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
		at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:200)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:122)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:200)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:200)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:200)
		at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext(MonoFlatMapMany.java:251)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2571)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onSubscribeInner(MonoFlatMapMany.java:150)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onSubscribe(MonoFlatMapMany.java:246)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onSubscribe(FluxContextWrite.java:101)
		at reactor.core.publisher.FluxJust.subscribe(FluxJust.java:68)
		at reactor.core.publisher.Flux.subscribe(Flux.java:8891)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext(MonoFlatMapMany.java:196)
		at reactor.core.publisher.SerializedSubscriber.onNext(SerializedSubscriber.java:99)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.onNext(FluxRetryWhen.java:178)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.success(MonoCreate.java:176)
		at reactor.netty.http.client.HttpClientConnect$HttpIOHandlerObserver.onStateChange(HttpClientConnect.java:442)
		at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:716)
		at reactor.netty.resources.DefaultPooledConnectionProvider$DisposableAcquire.onStateChange(DefaultPooledConnectionProvider.java:207)
		at reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnection.onStateChange(DefaultPooledConnectionProvider.java:468)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:744)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:333)
		at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:455)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 14:59:05 [] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-02-20 14:59:05 [] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-02-20 14:59:07 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 2 thread-local buffer(s) from thread: reactor-http-nio-2
2025-02-20 14:59:07 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 2 thread-local buffer(s) from thread: reactor-http-nio-3
2025-02-20 14:59:07 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 2 thread-local buffer(s) from thread: reactor-http-nio-5
2025-02-20 14:59:07 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 2 thread-local buffer(s) from thread: reactor-http-nio-4
2025-02-20 14:59:11 [] DEBUG org.jboss.logging - Logging Provider: org.jboss.logging.Slf4jLoggerProvider found via system property
2025-02-20 14:59:11 [] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final
2025-02-20 14:59:11 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-02-20 14:59:11 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-02-20 14:59:11 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-02-20 14:59:11 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-02-20 14:59:11 [] DEBUG o.h.v.i.e.r.TraversableResolvers - Cannot find jakarta.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2025-02-20 14:59:11 [] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-02-20 14:59:12 [] INFO  c.c.c.g.c.CommongatewayApplication - Starting CommongatewayApplication using Java 17.0.12 with PID 22984 (D:\WORKSPACE\API-GATEWAY\commongateway\target\classes started by CITPL in D:\WORKSPACE\API-GATEWAY)
2025-02-20 14:59:12 [] DEBUG c.c.c.g.c.CommongatewayApplication - Running with Spring Boot v3.4.2, Spring v6.2.2
2025-02-20 14:59:12 [] INFO  c.c.c.g.c.CommongatewayApplication - No active profile set, falling back to 1 default profile: "default"
2025-02-20 14:59:12 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-02-20 14:59:12 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-02-20 14:59:12 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-02-20 14:59:12 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-02-20 14:59:12 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-02-20 14:59:12 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-02-20 14:59:13 [] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=50299984-946b-3bba-87da-3c9a1df8a676
2025-02-20 14:59:13 [] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-02-20 14:59:13 [] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-02-20 14:59:13 [] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-02-20 14:59:13 [] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.34]
2025-02-20 14:59:13 [] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-02-20 14:59:13 [] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1637 ms
2025-02-20 14:59:13 [] DEBUG i.n.u.i.l.InternalLoggerFactory - Using SLF4J as the default logging framework
2025-02-20 14:59:13 [] DEBUG i.n.util.internal.PlatformDependent0 - -Dio.netty.noUnsafe: false
2025-02-20 14:59:13 [] DEBUG i.n.util.internal.PlatformDependent0 - Java version: 17
2025-02-20 14:59:13 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe.theUnsafe: available
2025-02-20 14:59:13 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe base methods: all available
2025-02-20 14:59:13 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe.storeFence: available
2025-02-20 14:59:13 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.Buffer.address: available
2025-02-20 14:59:13 [] DEBUG i.n.util.internal.PlatformDependent0 - direct buffer constructor: unavailable: Reflective setAccessible(true) disabled
2025-02-20 14:59:13 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.Bits.unaligned: available, true
2025-02-20 14:59:13 [] DEBUG i.n.util.internal.PlatformDependent0 - jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable: class io.netty.util.internal.PlatformDependent0$7 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @7dc222ae
2025-02-20 14:59:13 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.DirectByteBuffer.<init>(long, {int,long}): unavailable
2025-02-20 14:59:13 [] DEBUG i.n.util.internal.PlatformDependent - sun.misc.Unsafe: available
2025-02-20 14:59:13 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.tmpdir: C:\Users\CITPL\AppData\Local\Temp (java.io.tmpdir)
2025-02-20 14:59:13 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.bitMode: 64 (sun.arch.data.model)
2025-02-20 14:59:13 [] DEBUG i.n.util.internal.PlatformDependent - Platform: Windows
2025-02-20 14:59:13 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.maxDirectMemory: -1 bytes
2025-02-20 14:59:13 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.uninitializedArrayAllocationThreshold: -1
2025-02-20 14:59:13 [] DEBUG io.netty.util.internal.CleanerJava9 - java.nio.ByteBuffer.cleaner(): available
2025-02-20 14:59:13 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.noPreferDirect: false
2025-02-20 14:59:14 [] DEBUG reactor.util.Loggers - Using Slf4j logging framework
2025-02-20 14:59:14 [] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-02-20 14:59:14 [] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2025-02-20 14:59:14 [] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2025-02-20 14:59:14 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-02-20 14:59:14 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via user class loader
2025-02-20 14:59:14 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-02-20 14:59:14 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-02-20 14:59:14 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-02-20 14:59:14 [] DEBUG o.h.v.i.e.r.TraversableResolvers - Cannot find jakarta.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2025-02-20 14:59:14 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-02-20 14:59:14 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-02-20 14:59:14 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-02-20 14:59:14 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-02-20 14:59:14 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-02-20 14:59:14 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-02-20 14:59:14 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	c.c.c.g.c.c.HomeController:
	{GET [/home]}: get()
2025-02-20 14:59:14 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2025-02-20 14:59:14 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 'beanNameHandlerMapping' {}
2025-02-20 14:59:14 [] DEBUG _.s.w.s.HandlerMapping.Mappings - Mapped com.citpl.common.gateway.commongateway.config.RouterConfiguration$$Lambda$895/0x0000024d374eb798@6c951ada -> com.citpl.common.gateway.commongateway.config.RouterConfiguration$$Lambda$896/0x0000024d374eba00@67b61834
2025-02-20 14:59:14 [] DEBUG _.s.w.s.HandlerMapping.Mappings - Mapped /validate/** -> ProxyExchangeHandlerFunction
/users/** -> ProxyExchangeHandlerFunction
2025-02-20 14:59:14 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2025-02-20 14:59:14 [] DEBUG i.n.u.i.InternalThreadLocalMap - -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2025-02-20 14:59:14 [] DEBUG i.n.u.i.InternalThreadLocalMap - -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2025-02-20 14:59:14 [] DEBUG io.netty.util.ResourceLeakDetector - -Dio.netty.leakDetection.level: simple
2025-02-20 14:59:14 [] DEBUG io.netty.util.ResourceLeakDetector - -Dio.netty.leakDetection.targetRecords: 4
2025-02-20 14:59:14 [] DEBUG i.n.handler.codec.compression.Brotli - brotli4j not in the classpath; Brotli support will be unavailable.
2025-02-20 14:59:15 [] DEBUG reactor.netty.tcp.TcpResources - [http] resources will use the default LoopResources: DefaultLoopResources {prefix=reactor-http, daemon=true, selectCount=12, workerCount=12}
2025-02-20 14:59:15 [] DEBUG reactor.netty.tcp.TcpResources - [http] resources will use the default ConnectionProvider: reactor.netty.resources.DefaultPooledConnectionProvider@2fca3eb5
2025-02-20 14:59:15 [] DEBUG r.netty.resources.DefaultLoopIOUring - Default io_uring support : false
2025-02-20 14:59:15 [] DEBUG r.netty.resources.DefaultLoopEpoll - Default Epoll support : false
2025-02-20 14:59:15 [] DEBUG r.netty.resources.DefaultLoopKQueue - Default KQueue support : false
2025-02-20 14:59:15 [] DEBUG i.n.c.MultithreadEventLoopGroup - -Dio.netty.eventLoopThreads: 24
2025-02-20 14:59:15 [] DEBUG i.n.u.concurrent.GlobalEventExecutor - -Dio.netty.globalEventExecutor.quietPeriodSeconds: 1
2025-02-20 14:59:15 [] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.noKeySetOptimization: false
2025-02-20 14:59:15 [] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.selectorAutoRebuildThreshold: 512
2025-02-20 14:59:15 [] DEBUG i.n.util.internal.PlatformDependent - org.jctools-core.MpscChunkedArrayQueue: available
2025-02-20 14:59:15 [] DEBUG io.netty.util.NetUtil - -Djava.net.preferIPv4Stack: false
2025-02-20 14:59:15 [] DEBUG io.netty.util.NetUtil - -Djava.net.preferIPv6Addresses: false
2025-02-20 14:59:15 [] DEBUG i.netty.util.NetUtilInitializations - Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2025-02-20 14:59:15 [] DEBUG io.netty.util.NetUtil - Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2025-02-20 14:59:15 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default ResolvedAddressTypes: IPV4_ONLY
2025-02-20 14:59:15 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Localhost address: localhost/127.0.0.1
2025-02-20 14:59:15 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Windows hostname: DESKTOP-P307093
2025-02-20 14:59:15 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default search domains: []
2025-02-20 14:59:15 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default UnixResolverOptions{ndots=1, timeout=5, attempts=16}
2025-02-20 14:59:15 [] DEBUG i.n.r.DefaultHostsFileEntriesResolver - -Dio.netty.hostsFileRefreshInterval: 0
2025-02-20 14:59:15 [] DEBUG i.n.r.d.DefaultDnsServerAddressStreamProvider - Default DNS servers: [/8.8.8.8:53, /4.2.2.2:53] (sun.net.dns.ResolverConfiguration)
2025-02-20 14:59:15 [] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-02-20 14:59:15 [] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-02-20 14:59:15 [] INFO  c.c.c.g.c.CommongatewayApplication - Started CommongatewayApplication in 4.041 seconds (process running for 4.85)
2025-02-20 14:59:46 [] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-02-20 14:59:46 [] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-02-20 14:59:46 [] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 0 ms
2025-02-20 14:59:46 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-20 14:59:46 [a844db62-dcbd-4d8f-930f-fd5dd01195a9] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-20 14:59:46 [a844db62-dcbd-4d8f-930f-fd5dd01195a9] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-20 14:59:46 [a844db62-dcbd-4d8f-930f-fd5dd01195a9] INFO  c.c.c.g.c.config.RouterConfiguration - Authorized Request!
2025-02-20 14:59:46 [a844db62-dcbd-4d8f-930f-fd5dd01195a9] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [GET] /users
2025-02-20 14:59:46 [a844db62-dcbd-4d8f-930f-fd5dd01195a9] DEBUG r.n.r.PooledConnectionProvider - Creating a new [http] client pool [PoolFactory{evictionInterval=PT0S, leasingStrategy=fifo, maxConnections=500, maxIdleTime=-1, maxLifeTime=-1, metricsEnabled=false, pendingAcquireMaxCount=1000, pendingAcquireTimeout=45000}] for [localhost/<unresolved>:8081]
2025-02-20 14:59:46 [a844db62-dcbd-4d8f-930f-fd5dd01195a9] DEBUG io.netty.channel.DefaultChannelId - -Dio.netty.processId: 22984 (auto-detected)
2025-02-20 14:59:46 [a844db62-dcbd-4d8f-930f-fd5dd01195a9] DEBUG io.netty.channel.DefaultChannelId - -Dio.netty.machineId: a0:d3:65:ff:fe:5e:b0:28 (auto-detected)
2025-02-20 14:59:46 [a844db62-dcbd-4d8f-930f-fd5dd01195a9] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.numHeapArenas: 24
2025-02-20 14:59:46 [a844db62-dcbd-4d8f-930f-fd5dd01195a9] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.numDirectArenas: 24
2025-02-20 14:59:46 [a844db62-dcbd-4d8f-930f-fd5dd01195a9] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.pageSize: 8192
2025-02-20 14:59:46 [a844db62-dcbd-4d8f-930f-fd5dd01195a9] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxOrder: 9
2025-02-20 14:59:46 [a844db62-dcbd-4d8f-930f-fd5dd01195a9] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.chunkSize: 4194304
2025-02-20 14:59:46 [a844db62-dcbd-4d8f-930f-fd5dd01195a9] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.smallCacheSize: 256
2025-02-20 14:59:46 [a844db62-dcbd-4d8f-930f-fd5dd01195a9] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.normalCacheSize: 64
2025-02-20 14:59:46 [a844db62-dcbd-4d8f-930f-fd5dd01195a9] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2025-02-20 14:59:46 [a844db62-dcbd-4d8f-930f-fd5dd01195a9] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.cacheTrimInterval: 8192
2025-02-20 14:59:46 [a844db62-dcbd-4d8f-930f-fd5dd01195a9] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.cacheTrimIntervalMillis: 0
2025-02-20 14:59:46 [a844db62-dcbd-4d8f-930f-fd5dd01195a9] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.useCacheForAllThreads: false
2025-02-20 14:59:46 [a844db62-dcbd-4d8f-930f-fd5dd01195a9] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
2025-02-20 14:59:46 [a844db62-dcbd-4d8f-930f-fd5dd01195a9] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.disableCacheFinalizersForFastThreadLocalThreads: false
2025-02-20 14:59:46 [a844db62-dcbd-4d8f-930f-fd5dd01195a9] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.allocator.type: pooled
2025-02-20 14:59:46 [a844db62-dcbd-4d8f-930f-fd5dd01195a9] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.threadLocalDirectBufferSize: 0
2025-02-20 14:59:46 [a844db62-dcbd-4d8f-930f-fd5dd01195a9] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.maxThreadLocalCharBufferSize: 16384
2025-02-20 14:59:46 [] DEBUG r.n.r.PooledConnectionProvider - [075d11a0] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 14:59:46 [] DEBUG io.netty.buffer.AbstractByteBuf - -Dio.netty.buffer.checkAccessible: true
2025-02-20 14:59:46 [] DEBUG io.netty.buffer.AbstractByteBuf - -Dio.netty.buffer.checkBounds: true
2025-02-20 14:59:46 [] DEBUG i.n.util.ResourceLeakDetectorFactory - Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@4502930f
2025-02-20 14:59:46 [] DEBUG r.netty.transport.TransportConfig - [075d11a0] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-20 14:59:46 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 14:59:46 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 14:59:46 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 14:59:46 [] DEBUG i.n.b.ChannelInitializerExtensions - -Dio.netty.bootstrap.extensions: null
2025-02-20 14:59:46 [] DEBUG r.netty.transport.TransportConnector - [075d11a0] Connecting to [localhost/127.0.0.1:8081].
2025-02-20 14:59:46 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [075d11a0, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] Registering pool release on close event for channel
2025-02-20 14:59:46 [] DEBUG r.n.r.PooledConnectionProvider - [075d11a0, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 14:59:46 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [075d11a0, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x075d11a0, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081]}, [connected])
2025-02-20 14:59:46 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [075d11a0-1, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0x075d11a0, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081]}}, [configured])
2025-02-20 14:59:46 [] DEBUG r.n.http.client.HttpClientConnect - [075d11a0-1, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY, method=GET}
2025-02-20 14:59:46 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [075d11a0-1, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x075d11a0, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-20 14:59:46 [] DEBUG r.n.http.client.HttpClientOperations - [075d11a0-1, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-20 14:59:46 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.maxCapacityPerThread: 4096
2025-02-20 14:59:46 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.ratio: 8
2025-02-20 14:59:46 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.chunkSize: 32
2025-02-20 14:59:46 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.blocking: false
2025-02-20 14:59:46 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.batchFastThreadLocalOnly: true
2025-02-20 14:59:46 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [075d11a0-1, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x075d11a0, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-20 14:59:46 [] DEBUG i.n.handler.codec.compression.Zstd - zstd-jni not in the classpath; Zstd support will be unavailable.
2025-02-20 14:59:46 [] DEBUG r.n.http.client.HttpClientOperations - [075d11a0-1, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-20 14:59:46 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [075d11a0-1, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x075d11a0, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-20 14:59:46 [] DEBUG reactor.netty.channel.FluxReceive - [075d11a0-1, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 14:59:46 [] DEBUG r.n.http.client.HttpClientOperations - [075d11a0-1, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-20 14:59:46 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [075d11a0, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x075d11a0, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-20 14:59:46 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [075d11a0, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x075d11a0, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-20 14:59:46 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [075d11a0, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-20 14:59:46 [a844db62-dcbd-4d8f-930f-fd5dd01195a9] INFO  c.c.c.g.c.config.RouterConfiguration - Validation Response: true
2025-02-20 14:59:46 [a844db62-dcbd-4d8f-930f-fd5dd01195a9] INFO  c.c.c.g.c.config.RouterConfiguration - Forwarding [GET] /users to User Microservice
2025-02-20 14:59:46 [] DEBUG r.n.r.PooledConnectionProvider - [075d11a0, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-20 14:59:46 [a844db62-dcbd-4d8f-930f-fd5dd01195a9] DEBUG r.n.r.PooledConnectionProvider - Creating a new [http] client pool [PoolFactory{evictionInterval=PT0S, leasingStrategy=fifo, maxConnections=500, maxIdleTime=-1, maxLifeTime=-1, metricsEnabled=false, pendingAcquireMaxCount=1000, pendingAcquireTimeout=45000}] for [localhost/<unresolved>:8082]
2025-02-20 14:59:46 [] DEBUG r.n.r.PooledConnectionProvider - [bbbb686c] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 14:59:46 [] DEBUG r.netty.transport.TransportConfig - [bbbb686c] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-20 14:59:46 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 14:59:46 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 14:59:46 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 14:59:46 [] DEBUG r.netty.transport.TransportConnector - [bbbb686c] Connecting to [localhost/127.0.0.1:8082].
2025-02-20 14:59:46 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [bbbb686c, L:/127.0.0.1:56620 - R:localhost/127.0.0.1:8082] Registering pool release on close event for channel
2025-02-20 14:59:46 [] DEBUG r.n.r.PooledConnectionProvider - [bbbb686c, L:/127.0.0.1:56620 - R:localhost/127.0.0.1:8082] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 14:59:46 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [bbbb686c, L:/127.0.0.1:56620 - R:localhost/127.0.0.1:8082] onStateChange(PooledConnection{channel=[id: 0xbbbb686c, L:/127.0.0.1:56620 - R:localhost/127.0.0.1:8082]}, [connected])
2025-02-20 14:59:46 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [bbbb686c-1, L:/127.0.0.1:56620 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0xbbbb686c, L:/127.0.0.1:56620 - R:localhost/127.0.0.1:8082]}}, [configured])
2025-02-20 14:59:46 [] DEBUG r.n.http.client.HttpClientConnect - [bbbb686c-1, L:/127.0.0.1:56620 - R:localhost/127.0.0.1:8082] Handler is being applied: {uri=http://localhost:8082/users, method=GET}
2025-02-20 14:59:46 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [bbbb686c-1, L:/127.0.0.1:56620 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0xbbbb686c, L:/127.0.0.1:56620 - R:localhost/127.0.0.1:8082]}}, [request_prepared])
2025-02-20 14:59:46 [] DEBUG r.n.http.client.HttpClientOperations - [bbbb686c-1, L:/127.0.0.1:56620 - R:localhost/127.0.0.1:8082] No sendHeaders() called before complete, sending zero-length header
2025-02-20 14:59:46 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [bbbb686c-1, L:/127.0.0.1:56620 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0xbbbb686c, L:/127.0.0.1:56620 - R:localhost/127.0.0.1:8082]}}, [request_sent])
2025-02-20 14:59:46 [] DEBUG r.n.http.client.HttpClientOperations - [bbbb686c-1, L:/127.0.0.1:56620 - R:localhost/127.0.0.1:8082] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Content-Length: <filtered>
Date: <filtered>
2025-02-20 14:59:46 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [bbbb686c-1, L:/127.0.0.1:56620 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0xbbbb686c, L:/127.0.0.1:56620 - R:localhost/127.0.0.1:8082]}}, [response_received])
2025-02-20 14:59:46 [] DEBUG reactor.netty.channel.FluxReceive - [bbbb686c-1, L:/127.0.0.1:56620 - R:localhost/127.0.0.1:8082] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 14:59:46 [] DEBUG r.n.http.client.HttpClientOperations - [bbbb686c-1, L:/127.0.0.1:56620 - R:localhost/127.0.0.1:8082] Received last HTTP packet
2025-02-20 14:59:46 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [bbbb686c, L:/127.0.0.1:56620 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0xbbbb686c, L:/127.0.0.1:56620 - R:localhost/127.0.0.1:8082]}}, [response_completed])
2025-02-20 14:59:46 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [bbbb686c, L:/127.0.0.1:56620 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0xbbbb686c, L:/127.0.0.1:56620 - R:localhost/127.0.0.1:8082]}}, [disconnecting])
2025-02-20 14:59:46 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [bbbb686c, L:/127.0.0.1:56620 - R:localhost/127.0.0.1:8082] Releasing channel
2025-02-20 14:59:46 [] DEBUG r.n.r.PooledConnectionProvider - [bbbb686c, L:/127.0.0.1:56620 - R:localhost/127.0.0.1:8082] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-20 14:59:52 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-20 14:59:52 [8926ee3e-6983-4970-a36b-072666c7ae87] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-20 14:59:52 [8926ee3e-6983-4970-a36b-072666c7ae87] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-20 14:59:52 [8926ee3e-6983-4970-a36b-072666c7ae87] INFO  c.c.c.g.c.config.RouterConfiguration - Authorized Request!
2025-02-20 14:59:52 [8926ee3e-6983-4970-a36b-072666c7ae87] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [GET] /validate
2025-02-20 14:59:52 [] DEBUG r.n.r.PooledConnectionProvider - [075d11a0, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 14:59:52 [] DEBUG r.n.http.client.HttpClientConnect - [075d11a0-2, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY, method=GET}
2025-02-20 14:59:52 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [075d11a0-2, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x075d11a0, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-20 14:59:52 [] DEBUG r.n.http.client.HttpClientOperations - [075d11a0-2, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-20 14:59:52 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [075d11a0-2, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x075d11a0, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-20 14:59:52 [] DEBUG r.n.http.client.HttpClientOperations - [075d11a0-2, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-20 14:59:52 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [075d11a0-2, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x075d11a0, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-20 14:59:52 [] DEBUG reactor.netty.channel.FluxReceive - [075d11a0-2, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 14:59:52 [] DEBUG r.n.http.client.HttpClientOperations - [075d11a0-2, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-20 14:59:52 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [075d11a0, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x075d11a0, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-20 14:59:52 [8926ee3e-6983-4970-a36b-072666c7ae87] INFO  c.c.c.g.c.config.RouterConfiguration - Validation Response: true
2025-02-20 14:59:52 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [075d11a0, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x075d11a0, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-20 14:59:52 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [075d11a0, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-20 14:59:52 [8926ee3e-6983-4970-a36b-072666c7ae87] INFO  c.c.c.g.c.config.RouterConfiguration - Forwarding [GET] /validate to User Microservice
2025-02-20 14:59:52 [] DEBUG r.n.r.PooledConnectionProvider - [075d11a0, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-20 14:59:52 [] DEBUG r.n.r.PooledConnectionProvider - [bbbb686c, L:/127.0.0.1:56620 - R:localhost/127.0.0.1:8082] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 14:59:52 [] DEBUG r.n.http.client.HttpClientConnect - [bbbb686c-2, L:/127.0.0.1:56620 - R:localhost/127.0.0.1:8082] Handler is being applied: {uri=http://localhost:8082/validate, method=GET}
2025-02-20 14:59:52 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [bbbb686c-2, L:/127.0.0.1:56620 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xbbbb686c, L:/127.0.0.1:56620 - R:localhost/127.0.0.1:8082]}}, [request_prepared])
2025-02-20 14:59:52 [] DEBUG r.n.http.client.HttpClientOperations - [bbbb686c-2, L:/127.0.0.1:56620 - R:localhost/127.0.0.1:8082] No sendHeaders() called before complete, sending zero-length header
2025-02-20 14:59:52 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [bbbb686c-2, L:/127.0.0.1:56620 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xbbbb686c, L:/127.0.0.1:56620 - R:localhost/127.0.0.1:8082]}}, [request_sent])
2025-02-20 14:59:52 [] DEBUG r.n.http.client.HttpClientOperations - [bbbb686c-2, L:/127.0.0.1:56620 - R:localhost/127.0.0.1:8082] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 404 
Vary: <filtered>
Vary: <filtered>
Vary: <filtered>
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-20 14:59:52 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [bbbb686c-2, L:/127.0.0.1:56620 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xbbbb686c, L:/127.0.0.1:56620 - R:localhost/127.0.0.1:8082]}}, [response_received])
2025-02-20 14:59:52 [] DEBUG reactor.netty.channel.FluxReceive - [bbbb686c-2, L:/127.0.0.1:56620 - R:localhost/127.0.0.1:8082] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 14:59:52 [] DEBUG r.n.http.client.HttpClientOperations - [bbbb686c-2, L:/127.0.0.1:56620 - R:localhost/127.0.0.1:8082] Received last HTTP packet
2025-02-20 14:59:52 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [bbbb686c, L:/127.0.0.1:56620 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xbbbb686c, L:/127.0.0.1:56620 - R:localhost/127.0.0.1:8082]}}, [response_completed])
2025-02-20 14:59:52 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [bbbb686c, L:/127.0.0.1:56620 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xbbbb686c, L:/127.0.0.1:56620 - R:localhost/127.0.0.1:8082]}}, [disconnecting])
2025-02-20 14:59:52 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [bbbb686c, L:/127.0.0.1:56620 - R:localhost/127.0.0.1:8082] Releasing channel
2025-02-20 14:59:52 [] DEBUG r.n.r.PooledConnectionProvider - [bbbb686c, L:/127.0.0.1:56620 - R:localhost/127.0.0.1:8082] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-20 14:59:52 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] threw exception
org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 404 NOT_FOUND from GET http://localhost:8082/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 14:59:52 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate] with root cause
org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 404 NOT_FOUND from GET http://localhost:8082/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 14:59:52 [] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-20 14:59:52 [] INFO  c.c.c.g.c.config.RouterConfiguration - Authorized Request!
2025-02-20 14:59:52 [] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [GET] /error
2025-02-20 14:59:52 [] DEBUG r.n.r.PooledConnectionProvider - [075d11a0, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 14:59:52 [] DEBUG r.n.http.client.HttpClientConnect - [075d11a0-3, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY, method=GET}
2025-02-20 14:59:52 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [075d11a0-3, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x075d11a0, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-20 14:59:52 [] DEBUG r.n.http.client.HttpClientOperations - [075d11a0-3, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-20 14:59:52 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [075d11a0-3, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x075d11a0, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-20 14:59:52 [] DEBUG r.n.http.client.HttpClientOperations - [075d11a0-3, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-20 14:59:52 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [075d11a0-3, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x075d11a0, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-20 14:59:52 [] DEBUG reactor.netty.channel.FluxReceive - [075d11a0-3, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 14:59:52 [] DEBUG r.n.http.client.HttpClientOperations - [075d11a0-3, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-20 14:59:52 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [075d11a0, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x075d11a0, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-20 14:59:52 [] INFO  c.c.c.g.c.config.RouterConfiguration - Validation Response: true
2025-02-20 14:59:52 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [075d11a0, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x075d11a0, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-20 14:59:52 [] INFO  c.c.c.g.c.config.RouterConfiguration - Forwarding [GET] /error to User Microservice
2025-02-20 14:59:52 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [075d11a0, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-20 14:59:52 [] DEBUG r.n.r.PooledConnectionProvider - [075d11a0, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-20 14:59:52 [] DEBUG r.n.r.PooledConnectionProvider - [bbbb686c, L:/127.0.0.1:56620 - R:localhost/127.0.0.1:8082] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 14:59:52 [] DEBUG r.n.http.client.HttpClientConnect - [bbbb686c-3, L:/127.0.0.1:56620 - R:localhost/127.0.0.1:8082] Handler is being applied: {uri=http://localhost:8082/error, method=GET}
2025-02-20 14:59:52 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [bbbb686c-3, L:/127.0.0.1:56620 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0xbbbb686c, L:/127.0.0.1:56620 - R:localhost/127.0.0.1:8082]}}, [request_prepared])
2025-02-20 14:59:52 [] DEBUG r.n.http.client.HttpClientOperations - [bbbb686c-3, L:/127.0.0.1:56620 - R:localhost/127.0.0.1:8082] No sendHeaders() called before complete, sending zero-length header
2025-02-20 14:59:52 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [bbbb686c-3, L:/127.0.0.1:56620 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0xbbbb686c, L:/127.0.0.1:56620 - R:localhost/127.0.0.1:8082]}}, [request_sent])
2025-02-20 14:59:52 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] threw exception
org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 404 NOT_FOUND from GET http://localhost:8082/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 14:59:52 [] DEBUG r.n.http.client.HttpClientOperations - [bbbb686c-3, L:/127.0.0.1:56620 - R:localhost/127.0.0.1:8082] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 500 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
Connection: <filtered>
2025-02-20 14:59:52 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [bbbb686c-3, L:/127.0.0.1:56620 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0xbbbb686c, L:/127.0.0.1:56620 - R:localhost/127.0.0.1:8082]}}, [response_received])
2025-02-20 14:59:52 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate] with root cause
org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 404 NOT_FOUND from GET http://localhost:8082/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 14:59:52 [] DEBUG reactor.netty.channel.FluxReceive - [bbbb686c-3, L:/127.0.0.1:56620 - R:localhost/127.0.0.1:8082] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 14:59:52 [] DEBUG r.n.http.client.HttpClientOperations - [bbbb686c-3, L:/127.0.0.1:56620 - R:localhost/127.0.0.1:8082] Received last HTTP packet
2025-02-20 14:59:52 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [bbbb686c, L:/127.0.0.1:56620 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0xbbbb686c, L:/127.0.0.1:56620 - R:localhost/127.0.0.1:8082]}}, [response_completed])
2025-02-20 14:59:52 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [bbbb686c, L:/127.0.0.1:56620 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0xbbbb686c, L:/127.0.0.1:56620 - R:localhost/127.0.0.1:8082]}}, [disconnecting])
2025-02-20 14:59:52 [] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-20 14:59:52 [] INFO  c.c.c.g.c.config.RouterConfiguration - Authorized Request!
2025-02-20 14:59:52 [] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [GET] /error
2025-02-20 14:59:52 [] DEBUG r.n.r.PooledConnectionProvider - [075d11a0, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 14:59:52 [] DEBUG r.n.http.client.HttpClientConnect - [075d11a0-4, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY, method=GET}
2025-02-20 14:59:52 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [075d11a0-4, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x075d11a0, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-20 14:59:52 [] DEBUG r.n.http.client.HttpClientOperations - [075d11a0-4, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-20 14:59:52 [] DEBUG r.n.r.PooledConnectionProvider - [bbbb686c, L:/127.0.0.1:56620 ! R:localhost/127.0.0.1:8082] Channel closed, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 14:59:52 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [075d11a0-4, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x075d11a0, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-20 14:59:52 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [bbbb686c, L:/127.0.0.1:56620 ! R:localhost/127.0.0.1:8082] onStateChange(PooledConnection{channel=[id: 0xbbbb686c, L:/127.0.0.1:56620 ! R:localhost/127.0.0.1:8082]}, [disconnecting])
2025-02-20 14:59:52 [] DEBUG r.n.http.client.HttpClientOperations - [075d11a0-4, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-20 14:59:52 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [075d11a0-4, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x075d11a0, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-20 14:59:52 [] DEBUG reactor.netty.channel.FluxReceive - [075d11a0-4, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 14:59:52 [] DEBUG r.n.http.client.HttpClientOperations - [075d11a0-4, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-20 14:59:52 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [075d11a0, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x075d11a0, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-20 14:59:52 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [075d11a0, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x075d11a0, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-20 14:59:52 [] INFO  c.c.c.g.c.config.RouterConfiguration - Validation Response: true
2025-02-20 14:59:52 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [075d11a0, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-20 14:59:52 [] INFO  c.c.c.g.c.config.RouterConfiguration - Forwarding [GET] /error to User Microservice
2025-02-20 14:59:52 [] DEBUG r.n.r.PooledConnectionProvider - [075d11a0, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-20 14:59:52 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] threw exception
java.lang.IllegalStateException: Cannot start async: [ERROR]
	at org.springframework.util.Assert.state(Assert.java:79)
	at org.springframework.web.context.request.async.StandardServletAsyncWebRequest.startAsync(StandardServletAsyncWebRequest.java:157)
	at org.springframework.web.context.request.async.WebAsyncManager.startAsyncProcessing(WebAsyncManager.java:487)
	at org.springframework.web.context.request.async.WebAsyncManager.startDeferredResultProcessing(WebAsyncManager.java:462)
	at org.springframework.web.servlet.function.DefaultAsyncServerResponse.writeAsync(DefaultAsyncServerResponse.java:130)
	at org.springframework.web.servlet.function.DefaultEntityResponseBuilder$PublisherEntityResponse.writeToInternal(DefaultEntityResponseBuilder.java:429)
	at org.springframework.web.servlet.function.AbstractServerResponse.writeTo(AbstractServerResponse.java:101)
	at org.springframework.web.servlet.function.support.HandlerFunctionAdapter.handle(HandlerFunctionAdapter.java:112)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:633)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:511)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:454)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:361)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:208)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:285)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:149)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:239)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:243)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:57)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 14:59:52 [] ERROR o.a.c.c.C.[Tomcat].[localhost] - Exception Processing [ErrorPage[errorCode=0, location=/error]]
jakarta.servlet.ServletException: Async processing failed
	at org.springframework.web.servlet.function.DefaultAsyncServerResponse.writeAsync(DefaultAsyncServerResponse.java:136)
	at org.springframework.web.servlet.function.DefaultEntityResponseBuilder$PublisherEntityResponse.writeToInternal(DefaultEntityResponseBuilder.java:429)
	at org.springframework.web.servlet.function.AbstractServerResponse.writeTo(AbstractServerResponse.java:101)
	at org.springframework.web.servlet.function.support.HandlerFunctionAdapter.handle(HandlerFunctionAdapter.java:112)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:633)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:511)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:454)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:361)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:208)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:285)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:149)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:239)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:243)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:57)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: java.lang.IllegalStateException: Cannot start async: [ERROR]
	at org.springframework.util.Assert.state(Assert.java:79)
	at org.springframework.web.context.request.async.StandardServletAsyncWebRequest.startAsync(StandardServletAsyncWebRequest.java:157)
	at org.springframework.web.context.request.async.WebAsyncManager.startAsyncProcessing(WebAsyncManager.java:487)
	at org.springframework.web.context.request.async.WebAsyncManager.startDeferredResultProcessing(WebAsyncManager.java:462)
	at org.springframework.web.servlet.function.DefaultAsyncServerResponse.writeAsync(DefaultAsyncServerResponse.java:130)
	... 41 common frames omitted
2025-02-20 15:00:04 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-20 15:00:04 [1c102cf2-9ab9-4ba4-bde4-81c3924b9d8d] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-20 15:00:04 [1c102cf2-9ab9-4ba4-bde4-81c3924b9d8d] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-20 15:00:04 [1c102cf2-9ab9-4ba4-bde4-81c3924b9d8d] INFO  c.c.c.g.c.config.RouterConfiguration - Authorized Request!
2025-02-20 15:00:04 [1c102cf2-9ab9-4ba4-bde4-81c3924b9d8d] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [GET] /validate
2025-02-20 15:00:04 [] DEBUG r.n.r.PooledConnectionProvider - [075d11a0, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 15:00:04 [] DEBUG r.n.http.client.HttpClientConnect - [075d11a0-5, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY, method=GET}
2025-02-20 15:00:04 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [075d11a0-5, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x075d11a0, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-20 15:00:04 [] DEBUG r.n.http.client.HttpClientOperations - [075d11a0-5, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-20 15:00:04 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [075d11a0-5, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x075d11a0, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-20 15:00:04 [] DEBUG r.n.http.client.HttpClientOperations - [075d11a0-5, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-20 15:00:04 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [075d11a0-5, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x075d11a0, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-20 15:00:04 [] DEBUG reactor.netty.channel.FluxReceive - [075d11a0-5, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 15:00:04 [] DEBUG r.n.http.client.HttpClientOperations - [075d11a0-5, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-20 15:00:04 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [075d11a0, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x075d11a0, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-20 15:00:04 [1c102cf2-9ab9-4ba4-bde4-81c3924b9d8d] INFO  c.c.c.g.c.config.RouterConfiguration - Validation Response: true
2025-02-20 15:00:04 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [075d11a0, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x075d11a0, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-20 15:00:04 [1c102cf2-9ab9-4ba4-bde4-81c3924b9d8d] INFO  c.c.c.g.c.config.RouterConfiguration - Forwarding [GET] /validate to User Microservice
2025-02-20 15:00:04 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [075d11a0, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-20 15:00:04 [] DEBUG r.n.r.PooledConnectionProvider - [075d11a0, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-20 15:00:04 [] DEBUG r.n.r.PooledConnectionProvider - [dd05ffe0] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 15:00:04 [] DEBUG r.netty.transport.TransportConfig - [dd05ffe0] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-20 15:00:04 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 15:00:04 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 15:00:04 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 15:00:04 [] DEBUG r.netty.transport.TransportConnector - [dd05ffe0] Connecting to [localhost/127.0.0.1:8082].
2025-02-20 15:00:04 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [dd05ffe0, L:/127.0.0.1:56633 - R:localhost/127.0.0.1:8082] Registering pool release on close event for channel
2025-02-20 15:00:04 [] DEBUG r.n.r.PooledConnectionProvider - [dd05ffe0, L:/127.0.0.1:56633 - R:localhost/127.0.0.1:8082] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 15:00:04 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [dd05ffe0, L:/127.0.0.1:56633 - R:localhost/127.0.0.1:8082] onStateChange(PooledConnection{channel=[id: 0xdd05ffe0, L:/127.0.0.1:56633 - R:localhost/127.0.0.1:8082]}, [connected])
2025-02-20 15:00:04 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [dd05ffe0-1, L:/127.0.0.1:56633 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0xdd05ffe0, L:/127.0.0.1:56633 - R:localhost/127.0.0.1:8082]}}, [configured])
2025-02-20 15:00:04 [] DEBUG r.n.http.client.HttpClientConnect - [dd05ffe0-1, L:/127.0.0.1:56633 - R:localhost/127.0.0.1:8082] Handler is being applied: {uri=http://localhost:8082/validate, method=GET}
2025-02-20 15:00:04 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [dd05ffe0-1, L:/127.0.0.1:56633 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xdd05ffe0, L:/127.0.0.1:56633 - R:localhost/127.0.0.1:8082]}}, [request_prepared])
2025-02-20 15:00:04 [] DEBUG r.n.http.client.HttpClientOperations - [dd05ffe0-1, L:/127.0.0.1:56633 - R:localhost/127.0.0.1:8082] No sendHeaders() called before complete, sending zero-length header
2025-02-20 15:00:04 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [dd05ffe0-1, L:/127.0.0.1:56633 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xdd05ffe0, L:/127.0.0.1:56633 - R:localhost/127.0.0.1:8082]}}, [request_sent])
2025-02-20 15:00:04 [] DEBUG r.n.http.client.HttpClientOperations - [dd05ffe0-1, L:/127.0.0.1:56633 - R:localhost/127.0.0.1:8082] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 404 
Vary: <filtered>
Vary: <filtered>
Vary: <filtered>
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-20 15:00:04 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [dd05ffe0-1, L:/127.0.0.1:56633 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xdd05ffe0, L:/127.0.0.1:56633 - R:localhost/127.0.0.1:8082]}}, [response_received])
2025-02-20 15:00:04 [] DEBUG reactor.netty.channel.FluxReceive - [dd05ffe0-1, L:/127.0.0.1:56633 - R:localhost/127.0.0.1:8082] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 15:00:04 [] DEBUG r.n.http.client.HttpClientOperations - [dd05ffe0-1, L:/127.0.0.1:56633 - R:localhost/127.0.0.1:8082] Received last HTTP packet
2025-02-20 15:00:04 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [dd05ffe0, L:/127.0.0.1:56633 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xdd05ffe0, L:/127.0.0.1:56633 - R:localhost/127.0.0.1:8082]}}, [response_completed])
2025-02-20 15:00:04 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [dd05ffe0, L:/127.0.0.1:56633 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xdd05ffe0, L:/127.0.0.1:56633 - R:localhost/127.0.0.1:8082]}}, [disconnecting])
2025-02-20 15:00:04 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [dd05ffe0, L:/127.0.0.1:56633 - R:localhost/127.0.0.1:8082] Releasing channel
2025-02-20 15:00:04 [] DEBUG r.n.r.PooledConnectionProvider - [dd05ffe0, L:/127.0.0.1:56633 - R:localhost/127.0.0.1:8082] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-20 15:00:04 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] threw exception
org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 404 NOT_FOUND from GET http://localhost:8082/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 15:00:04 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate] with root cause
org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 404 NOT_FOUND from GET http://localhost:8082/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 15:00:04 [] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-20 15:00:04 [] INFO  c.c.c.g.c.config.RouterConfiguration - Authorized Request!
2025-02-20 15:00:04 [] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [GET] /error
2025-02-20 15:00:04 [] DEBUG r.n.r.PooledConnectionProvider - [075d11a0, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 15:00:04 [] DEBUG r.n.http.client.HttpClientConnect - [075d11a0-6, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY, method=GET}
2025-02-20 15:00:04 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [075d11a0-6, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x075d11a0, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-20 15:00:04 [] DEBUG r.n.http.client.HttpClientOperations - [075d11a0-6, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-20 15:00:04 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [075d11a0-6, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x075d11a0, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-20 15:00:04 [] DEBUG r.n.http.client.HttpClientOperations - [075d11a0-6, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-20 15:00:04 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [075d11a0-6, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x075d11a0, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-20 15:00:04 [] DEBUG reactor.netty.channel.FluxReceive - [075d11a0-6, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 15:00:04 [] DEBUG r.n.http.client.HttpClientOperations - [075d11a0-6, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-20 15:00:04 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [075d11a0, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x075d11a0, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-20 15:00:04 [] INFO  c.c.c.g.c.config.RouterConfiguration - Validation Response: true
2025-02-20 15:00:04 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [075d11a0, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x075d11a0, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-20 15:00:04 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [075d11a0, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-20 15:00:04 [] INFO  c.c.c.g.c.config.RouterConfiguration - Forwarding [GET] /error to User Microservice
2025-02-20 15:00:04 [] DEBUG r.n.r.PooledConnectionProvider - [075d11a0, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-20 15:00:04 [] DEBUG r.n.r.PooledConnectionProvider - [dd05ffe0, L:/127.0.0.1:56633 - R:localhost/127.0.0.1:8082] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 15:00:04 [] DEBUG r.n.http.client.HttpClientConnect - [dd05ffe0-2, L:/127.0.0.1:56633 - R:localhost/127.0.0.1:8082] Handler is being applied: {uri=http://localhost:8082/error, method=GET}
2025-02-20 15:00:04 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [dd05ffe0-2, L:/127.0.0.1:56633 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0xdd05ffe0, L:/127.0.0.1:56633 - R:localhost/127.0.0.1:8082]}}, [request_prepared])
2025-02-20 15:00:04 [] DEBUG r.n.http.client.HttpClientOperations - [dd05ffe0-2, L:/127.0.0.1:56633 - R:localhost/127.0.0.1:8082] No sendHeaders() called before complete, sending zero-length header
2025-02-20 15:00:04 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [dd05ffe0-2, L:/127.0.0.1:56633 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0xdd05ffe0, L:/127.0.0.1:56633 - R:localhost/127.0.0.1:8082]}}, [request_sent])
2025-02-20 15:00:04 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] threw exception
org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 404 NOT_FOUND from GET http://localhost:8082/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 15:00:04 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate] with root cause
org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 404 NOT_FOUND from GET http://localhost:8082/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 15:00:04 [] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-20 15:00:04 [] INFO  c.c.c.g.c.config.RouterConfiguration - Authorized Request!
2025-02-20 15:00:04 [] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [GET] /error
2025-02-20 15:00:04 [] DEBUG r.n.r.PooledConnectionProvider - [075d11a0, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 15:00:04 [] DEBUG r.n.http.client.HttpClientConnect - [075d11a0-7, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY, method=GET}
2025-02-20 15:00:04 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [075d11a0-7, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x075d11a0, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-20 15:00:04 [] DEBUG r.n.http.client.HttpClientOperations - [dd05ffe0-2, L:/127.0.0.1:56633 - R:localhost/127.0.0.1:8082] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 500 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
Connection: <filtered>
2025-02-20 15:00:04 [] DEBUG r.n.http.client.HttpClientOperations - [075d11a0-7, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-20 15:00:04 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [dd05ffe0-2, L:/127.0.0.1:56633 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0xdd05ffe0, L:/127.0.0.1:56633 - R:localhost/127.0.0.1:8082]}}, [response_received])
2025-02-20 15:00:04 [] DEBUG reactor.netty.channel.FluxReceive - [dd05ffe0-2, L:/127.0.0.1:56633 - R:localhost/127.0.0.1:8082] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 15:00:04 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [075d11a0-7, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x075d11a0, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-20 15:00:04 [] DEBUG r.n.http.client.HttpClientOperations - [dd05ffe0-2, L:/127.0.0.1:56633 - R:localhost/127.0.0.1:8082] Received last HTTP packet
2025-02-20 15:00:04 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [dd05ffe0, L:/127.0.0.1:56633 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0xdd05ffe0, L:/127.0.0.1:56633 - R:localhost/127.0.0.1:8082]}}, [response_completed])
2025-02-20 15:00:04 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [dd05ffe0, L:/127.0.0.1:56633 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0xdd05ffe0, L:/127.0.0.1:56633 - R:localhost/127.0.0.1:8082]}}, [disconnecting])
2025-02-20 15:00:04 [] DEBUG r.n.r.PooledConnectionProvider - [dd05ffe0, L:/127.0.0.1:56633 ! R:localhost/127.0.0.1:8082] Channel closed, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 15:00:04 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [dd05ffe0, L:/127.0.0.1:56633 ! R:localhost/127.0.0.1:8082] onStateChange(PooledConnection{channel=[id: 0xdd05ffe0, L:/127.0.0.1:56633 ! R:localhost/127.0.0.1:8082]}, [disconnecting])
2025-02-20 15:00:04 [] DEBUG r.n.http.client.HttpClientOperations - [075d11a0-7, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-20 15:00:04 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [075d11a0-7, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x075d11a0, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-20 15:00:04 [] DEBUG reactor.netty.channel.FluxReceive - [075d11a0-7, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 15:00:04 [] DEBUG r.n.http.client.HttpClientOperations - [075d11a0-7, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-20 15:00:04 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [075d11a0, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x075d11a0, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-20 15:00:04 [] INFO  c.c.c.g.c.config.RouterConfiguration - Validation Response: true
2025-02-20 15:00:04 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [075d11a0, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x075d11a0, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-20 15:00:04 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [075d11a0, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-20 15:00:04 [] INFO  c.c.c.g.c.config.RouterConfiguration - Forwarding [GET] /error to User Microservice
2025-02-20 15:00:04 [] DEBUG r.n.r.PooledConnectionProvider - [075d11a0, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-20 15:00:04 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] threw exception
java.lang.IllegalStateException: Cannot start async: [ERROR]
	at org.springframework.util.Assert.state(Assert.java:79)
	at org.springframework.web.context.request.async.StandardServletAsyncWebRequest.startAsync(StandardServletAsyncWebRequest.java:157)
	at org.springframework.web.context.request.async.WebAsyncManager.startAsyncProcessing(WebAsyncManager.java:487)
	at org.springframework.web.context.request.async.WebAsyncManager.startDeferredResultProcessing(WebAsyncManager.java:462)
	at org.springframework.web.servlet.function.DefaultAsyncServerResponse.writeAsync(DefaultAsyncServerResponse.java:130)
	at org.springframework.web.servlet.function.DefaultEntityResponseBuilder$PublisherEntityResponse.writeToInternal(DefaultEntityResponseBuilder.java:429)
	at org.springframework.web.servlet.function.AbstractServerResponse.writeTo(AbstractServerResponse.java:101)
	at org.springframework.web.servlet.function.support.HandlerFunctionAdapter.handle(HandlerFunctionAdapter.java:112)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:633)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:511)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:454)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:361)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:208)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:285)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:149)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:239)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:243)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:57)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 15:00:04 [] ERROR o.a.c.c.C.[Tomcat].[localhost] - Exception Processing [ErrorPage[errorCode=0, location=/error]]
jakarta.servlet.ServletException: Async processing failed
	at org.springframework.web.servlet.function.DefaultAsyncServerResponse.writeAsync(DefaultAsyncServerResponse.java:136)
	at org.springframework.web.servlet.function.DefaultEntityResponseBuilder$PublisherEntityResponse.writeToInternal(DefaultEntityResponseBuilder.java:429)
	at org.springframework.web.servlet.function.AbstractServerResponse.writeTo(AbstractServerResponse.java:101)
	at org.springframework.web.servlet.function.support.HandlerFunctionAdapter.handle(HandlerFunctionAdapter.java:112)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:633)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:511)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:454)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:361)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:208)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:285)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:149)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:239)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:243)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:57)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: java.lang.IllegalStateException: Cannot start async: [ERROR]
	at org.springframework.util.Assert.state(Assert.java:79)
	at org.springframework.web.context.request.async.StandardServletAsyncWebRequest.startAsync(StandardServletAsyncWebRequest.java:157)
	at org.springframework.web.context.request.async.WebAsyncManager.startAsyncProcessing(WebAsyncManager.java:487)
	at org.springframework.web.context.request.async.WebAsyncManager.startDeferredResultProcessing(WebAsyncManager.java:462)
	at org.springframework.web.servlet.function.DefaultAsyncServerResponse.writeAsync(DefaultAsyncServerResponse.java:130)
	... 41 common frames omitted
2025-02-20 15:00:11 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-20 15:00:11 [05023ef4-d0da-4b6c-9431-a84208820ded] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-20 15:00:11 [05023ef4-d0da-4b6c-9431-a84208820ded] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-20 15:00:11 [05023ef4-d0da-4b6c-9431-a84208820ded] INFO  c.c.c.g.c.config.RouterConfiguration - Authorized Request!
2025-02-20 15:00:11 [05023ef4-d0da-4b6c-9431-a84208820ded] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [GET] /validate
2025-02-20 15:00:11 [] DEBUG r.n.r.PooledConnectionProvider - [075d11a0, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 15:00:11 [] DEBUG r.n.http.client.HttpClientConnect - [075d11a0-8, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY, method=GET}
2025-02-20 15:00:11 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [075d11a0-8, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x075d11a0, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-20 15:00:11 [] DEBUG r.n.http.client.HttpClientOperations - [075d11a0-8, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-20 15:00:11 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [075d11a0-8, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x075d11a0, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-20 15:00:11 [] DEBUG r.n.http.client.HttpClientOperations - [075d11a0-8, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-20 15:00:11 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [075d11a0-8, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x075d11a0, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-20 15:00:11 [] DEBUG reactor.netty.channel.FluxReceive - [075d11a0-8, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 15:00:11 [] DEBUG r.n.http.client.HttpClientOperations - [075d11a0-8, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-20 15:00:11 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [075d11a0, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x075d11a0, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-20 15:00:11 [05023ef4-d0da-4b6c-9431-a84208820ded] INFO  c.c.c.g.c.config.RouterConfiguration - Validation Response: true
2025-02-20 15:00:11 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [075d11a0, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x075d11a0, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-20 15:00:11 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [075d11a0, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-20 15:00:11 [] DEBUG r.n.r.PooledConnectionProvider - [075d11a0, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-20 15:00:11 [05023ef4-d0da-4b6c-9431-a84208820ded] INFO  c.c.c.g.c.config.RouterConfiguration - Forwarding [GET] /validate to User Microservice
2025-02-20 15:00:11 [] DEBUG r.n.r.PooledConnectionProvider - [bef2b229] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 15:00:11 [] DEBUG r.netty.transport.TransportConfig - [bef2b229] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-20 15:00:11 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 15:00:11 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 15:00:11 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 15:00:11 [] DEBUG r.netty.transport.TransportConnector - [bef2b229] Connecting to [localhost/127.0.0.1:8082].
2025-02-20 15:00:11 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [bef2b229, L:/127.0.0.1:56639 - R:localhost/127.0.0.1:8082] Registering pool release on close event for channel
2025-02-20 15:00:11 [] DEBUG r.n.r.PooledConnectionProvider - [bef2b229, L:/127.0.0.1:56639 - R:localhost/127.0.0.1:8082] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 15:00:11 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [bef2b229, L:/127.0.0.1:56639 - R:localhost/127.0.0.1:8082] onStateChange(PooledConnection{channel=[id: 0xbef2b229, L:/127.0.0.1:56639 - R:localhost/127.0.0.1:8082]}, [connected])
2025-02-20 15:00:11 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [bef2b229-1, L:/127.0.0.1:56639 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0xbef2b229, L:/127.0.0.1:56639 - R:localhost/127.0.0.1:8082]}}, [configured])
2025-02-20 15:00:11 [] DEBUG r.n.http.client.HttpClientConnect - [bef2b229-1, L:/127.0.0.1:56639 - R:localhost/127.0.0.1:8082] Handler is being applied: {uri=http://localhost:8082/validate, method=GET}
2025-02-20 15:00:11 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [bef2b229-1, L:/127.0.0.1:56639 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xbef2b229, L:/127.0.0.1:56639 - R:localhost/127.0.0.1:8082]}}, [request_prepared])
2025-02-20 15:00:11 [] DEBUG r.n.http.client.HttpClientOperations - [bef2b229-1, L:/127.0.0.1:56639 - R:localhost/127.0.0.1:8082] No sendHeaders() called before complete, sending zero-length header
2025-02-20 15:00:11 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [bef2b229-1, L:/127.0.0.1:56639 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xbef2b229, L:/127.0.0.1:56639 - R:localhost/127.0.0.1:8082]}}, [request_sent])
2025-02-20 15:00:11 [] DEBUG r.n.http.client.HttpClientOperations - [bef2b229-1, L:/127.0.0.1:56639 - R:localhost/127.0.0.1:8082] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 404 
Vary: <filtered>
Vary: <filtered>
Vary: <filtered>
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-20 15:00:11 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [bef2b229-1, L:/127.0.0.1:56639 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xbef2b229, L:/127.0.0.1:56639 - R:localhost/127.0.0.1:8082]}}, [response_received])
2025-02-20 15:00:11 [] DEBUG reactor.netty.channel.FluxReceive - [bef2b229-1, L:/127.0.0.1:56639 - R:localhost/127.0.0.1:8082] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 15:00:11 [] DEBUG r.n.http.client.HttpClientOperations - [bef2b229-1, L:/127.0.0.1:56639 - R:localhost/127.0.0.1:8082] Received last HTTP packet
2025-02-20 15:00:11 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [bef2b229, L:/127.0.0.1:56639 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xbef2b229, L:/127.0.0.1:56639 - R:localhost/127.0.0.1:8082]}}, [response_completed])
2025-02-20 15:00:11 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [bef2b229, L:/127.0.0.1:56639 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xbef2b229, L:/127.0.0.1:56639 - R:localhost/127.0.0.1:8082]}}, [disconnecting])
2025-02-20 15:00:11 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [bef2b229, L:/127.0.0.1:56639 - R:localhost/127.0.0.1:8082] Releasing channel
2025-02-20 15:00:11 [] DEBUG r.n.r.PooledConnectionProvider - [bef2b229, L:/127.0.0.1:56639 - R:localhost/127.0.0.1:8082] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-20 15:00:11 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] threw exception
org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 404 NOT_FOUND from GET http://localhost:8082/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 15:00:11 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate] with root cause
org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 404 NOT_FOUND from GET http://localhost:8082/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 15:00:11 [] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-20 15:00:11 [] INFO  c.c.c.g.c.config.RouterConfiguration - Authorized Request!
2025-02-20 15:00:11 [] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [GET] /error
2025-02-20 15:00:11 [] DEBUG r.n.r.PooledConnectionProvider - [075d11a0, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 15:00:11 [] DEBUG r.n.http.client.HttpClientConnect - [075d11a0-9, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY, method=GET}
2025-02-20 15:00:11 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [075d11a0-9, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x075d11a0, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-20 15:00:11 [] DEBUG r.n.http.client.HttpClientOperations - [075d11a0-9, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-20 15:00:11 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [075d11a0-9, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x075d11a0, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-20 15:00:11 [] DEBUG r.n.http.client.HttpClientOperations - [075d11a0-9, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-20 15:00:11 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [075d11a0-9, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x075d11a0, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-20 15:00:11 [] DEBUG reactor.netty.channel.FluxReceive - [075d11a0-9, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 15:00:11 [] DEBUG r.n.http.client.HttpClientOperations - [075d11a0-9, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-20 15:00:11 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [075d11a0, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x075d11a0, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-20 15:00:11 [] INFO  c.c.c.g.c.config.RouterConfiguration - Validation Response: true
2025-02-20 15:00:11 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [075d11a0, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x075d11a0, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-20 15:00:11 [] INFO  c.c.c.g.c.config.RouterConfiguration - Forwarding [GET] /error to User Microservice
2025-02-20 15:00:11 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [075d11a0, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-20 15:00:11 [] DEBUG r.n.r.PooledConnectionProvider - [075d11a0, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-20 15:00:11 [] DEBUG r.n.r.PooledConnectionProvider - [bef2b229, L:/127.0.0.1:56639 - R:localhost/127.0.0.1:8082] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 15:00:11 [] DEBUG r.n.http.client.HttpClientConnect - [bef2b229-2, L:/127.0.0.1:56639 - R:localhost/127.0.0.1:8082] Handler is being applied: {uri=http://localhost:8082/error, method=GET}
2025-02-20 15:00:11 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [bef2b229-2, L:/127.0.0.1:56639 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0xbef2b229, L:/127.0.0.1:56639 - R:localhost/127.0.0.1:8082]}}, [request_prepared])
2025-02-20 15:00:11 [] DEBUG r.n.http.client.HttpClientOperations - [bef2b229-2, L:/127.0.0.1:56639 - R:localhost/127.0.0.1:8082] No sendHeaders() called before complete, sending zero-length header
2025-02-20 15:00:11 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [bef2b229-2, L:/127.0.0.1:56639 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0xbef2b229, L:/127.0.0.1:56639 - R:localhost/127.0.0.1:8082]}}, [request_sent])
2025-02-20 15:00:11 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] threw exception
org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 404 NOT_FOUND from GET http://localhost:8082/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 15:00:11 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate] with root cause
org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 404 NOT_FOUND from GET http://localhost:8082/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 15:00:11 [] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-20 15:00:11 [] INFO  c.c.c.g.c.config.RouterConfiguration - Authorized Request!
2025-02-20 15:00:11 [] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [GET] /error
2025-02-20 15:00:11 [] DEBUG r.n.r.PooledConnectionProvider - [075d11a0, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 15:00:11 [] DEBUG r.n.http.client.HttpClientOperations - [bef2b229-2, L:/127.0.0.1:56639 - R:localhost/127.0.0.1:8082] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 500 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
Connection: <filtered>
2025-02-20 15:00:11 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [bef2b229-2, L:/127.0.0.1:56639 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0xbef2b229, L:/127.0.0.1:56639 - R:localhost/127.0.0.1:8082]}}, [response_received])
2025-02-20 15:00:11 [] DEBUG r.n.http.client.HttpClientConnect - [075d11a0-10, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY, method=GET}
2025-02-20 15:00:11 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [075d11a0-10, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x075d11a0, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-20 15:00:11 [] DEBUG r.n.http.client.HttpClientOperations - [075d11a0-10, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-20 15:00:11 [] DEBUG reactor.netty.channel.FluxReceive - [bef2b229-2, L:/127.0.0.1:56639 - R:localhost/127.0.0.1:8082] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 15:00:11 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [075d11a0-10, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x075d11a0, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-20 15:00:11 [] DEBUG r.n.http.client.HttpClientOperations - [bef2b229-2, L:/127.0.0.1:56639 - R:localhost/127.0.0.1:8082] Received last HTTP packet
2025-02-20 15:00:11 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [bef2b229, L:/127.0.0.1:56639 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0xbef2b229, L:/127.0.0.1:56639 - R:localhost/127.0.0.1:8082]}}, [response_completed])
2025-02-20 15:00:11 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [bef2b229, L:/127.0.0.1:56639 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0xbef2b229, L:/127.0.0.1:56639 - R:localhost/127.0.0.1:8082]}}, [disconnecting])
2025-02-20 15:00:11 [] DEBUG r.n.r.PooledConnectionProvider - [bef2b229, L:/127.0.0.1:56639 ! R:localhost/127.0.0.1:8082] Channel closed, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 15:00:11 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [bef2b229, L:/127.0.0.1:56639 ! R:localhost/127.0.0.1:8082] onStateChange(PooledConnection{channel=[id: 0xbef2b229, L:/127.0.0.1:56639 ! R:localhost/127.0.0.1:8082]}, [disconnecting])
2025-02-20 15:00:11 [] DEBUG r.n.http.client.HttpClientOperations - [075d11a0-10, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-20 15:00:11 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [075d11a0-10, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x075d11a0, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-20 15:00:11 [] DEBUG reactor.netty.channel.FluxReceive - [075d11a0-10, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 15:00:11 [] DEBUG r.n.http.client.HttpClientOperations - [075d11a0-10, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-20 15:00:11 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [075d11a0, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x075d11a0, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-20 15:00:11 [] INFO  c.c.c.g.c.config.RouterConfiguration - Validation Response: true
2025-02-20 15:00:11 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [075d11a0, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x075d11a0, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-20 15:00:11 [] INFO  c.c.c.g.c.config.RouterConfiguration - Forwarding [GET] /error to User Microservice
2025-02-20 15:00:11 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [075d11a0, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-20 15:00:11 [] DEBUG r.n.r.PooledConnectionProvider - [075d11a0, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-20 15:00:11 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] threw exception
java.lang.IllegalStateException: Cannot start async: [ERROR]
	at org.springframework.util.Assert.state(Assert.java:79)
	at org.springframework.web.context.request.async.StandardServletAsyncWebRequest.startAsync(StandardServletAsyncWebRequest.java:157)
	at org.springframework.web.context.request.async.WebAsyncManager.startAsyncProcessing(WebAsyncManager.java:487)
	at org.springframework.web.context.request.async.WebAsyncManager.startDeferredResultProcessing(WebAsyncManager.java:462)
	at org.springframework.web.servlet.function.DefaultAsyncServerResponse.writeAsync(DefaultAsyncServerResponse.java:130)
	at org.springframework.web.servlet.function.DefaultEntityResponseBuilder$PublisherEntityResponse.writeToInternal(DefaultEntityResponseBuilder.java:429)
	at org.springframework.web.servlet.function.AbstractServerResponse.writeTo(AbstractServerResponse.java:101)
	at org.springframework.web.servlet.function.support.HandlerFunctionAdapter.handle(HandlerFunctionAdapter.java:112)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:633)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:511)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:454)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:361)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:208)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:285)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:149)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:239)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:243)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:57)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 15:00:11 [] ERROR o.a.c.c.C.[Tomcat].[localhost] - Exception Processing [ErrorPage[errorCode=0, location=/error]]
jakarta.servlet.ServletException: Async processing failed
	at org.springframework.web.servlet.function.DefaultAsyncServerResponse.writeAsync(DefaultAsyncServerResponse.java:136)
	at org.springframework.web.servlet.function.DefaultEntityResponseBuilder$PublisherEntityResponse.writeToInternal(DefaultEntityResponseBuilder.java:429)
	at org.springframework.web.servlet.function.AbstractServerResponse.writeTo(AbstractServerResponse.java:101)
	at org.springframework.web.servlet.function.support.HandlerFunctionAdapter.handle(HandlerFunctionAdapter.java:112)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:633)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:511)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:454)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:361)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:208)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:285)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:149)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:239)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:243)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:57)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: java.lang.IllegalStateException: Cannot start async: [ERROR]
	at org.springframework.util.Assert.state(Assert.java:79)
	at org.springframework.web.context.request.async.StandardServletAsyncWebRequest.startAsync(StandardServletAsyncWebRequest.java:157)
	at org.springframework.web.context.request.async.WebAsyncManager.startAsyncProcessing(WebAsyncManager.java:487)
	at org.springframework.web.context.request.async.WebAsyncManager.startDeferredResultProcessing(WebAsyncManager.java:462)
	at org.springframework.web.servlet.function.DefaultAsyncServerResponse.writeAsync(DefaultAsyncServerResponse.java:130)
	... 41 common frames omitted
2025-02-20 15:00:14 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-20 15:00:14 [bf9f3101-66bf-403c-95da-27d153fdaaf4] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-20 15:00:14 [bf9f3101-66bf-403c-95da-27d153fdaaf4] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-20 15:00:14 [bf9f3101-66bf-403c-95da-27d153fdaaf4] INFO  c.c.c.g.c.config.RouterConfiguration - Authorized Request!
2025-02-20 15:00:14 [bf9f3101-66bf-403c-95da-27d153fdaaf4] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [GET] /validate
2025-02-20 15:00:14 [] DEBUG r.n.r.PooledConnectionProvider - [075d11a0, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 15:00:14 [] DEBUG r.n.http.client.HttpClientConnect - [075d11a0-11, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY, method=GET}
2025-02-20 15:00:14 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [075d11a0-11, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x075d11a0, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-20 15:00:14 [] DEBUG r.n.http.client.HttpClientOperations - [075d11a0-11, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-20 15:00:14 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [075d11a0-11, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x075d11a0, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-20 15:00:14 [] DEBUG r.n.http.client.HttpClientOperations - [075d11a0-11, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-20 15:00:14 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [075d11a0-11, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x075d11a0, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-20 15:00:14 [] DEBUG reactor.netty.channel.FluxReceive - [075d11a0-11, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 15:00:14 [] DEBUG r.n.http.client.HttpClientOperations - [075d11a0-11, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-20 15:00:14 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [075d11a0, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x075d11a0, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-20 15:00:14 [bf9f3101-66bf-403c-95da-27d153fdaaf4] INFO  c.c.c.g.c.config.RouterConfiguration - Validation Response: true
2025-02-20 15:00:14 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [075d11a0, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x075d11a0, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-20 15:00:14 [bf9f3101-66bf-403c-95da-27d153fdaaf4] INFO  c.c.c.g.c.config.RouterConfiguration - Forwarding [GET] /validate to User Microservice
2025-02-20 15:00:14 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [075d11a0, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-20 15:00:14 [] DEBUG r.n.r.PooledConnectionProvider - [075d11a0, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-20 15:00:14 [] DEBUG r.n.r.PooledConnectionProvider - [5ecc7340] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 15:00:14 [] DEBUG r.netty.transport.TransportConfig - [5ecc7340] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-20 15:00:14 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 15:00:14 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 15:00:14 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 15:00:14 [] DEBUG r.netty.transport.TransportConnector - [5ecc7340] Connecting to [localhost/127.0.0.1:8082].
2025-02-20 15:00:14 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [5ecc7340, L:/127.0.0.1:56644 - R:localhost/127.0.0.1:8082] Registering pool release on close event for channel
2025-02-20 15:00:14 [] DEBUG r.n.r.PooledConnectionProvider - [5ecc7340, L:/127.0.0.1:56644 - R:localhost/127.0.0.1:8082] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 15:00:14 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [5ecc7340, L:/127.0.0.1:56644 - R:localhost/127.0.0.1:8082] onStateChange(PooledConnection{channel=[id: 0x5ecc7340, L:/127.0.0.1:56644 - R:localhost/127.0.0.1:8082]}, [connected])
2025-02-20 15:00:14 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [5ecc7340-1, L:/127.0.0.1:56644 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0x5ecc7340, L:/127.0.0.1:56644 - R:localhost/127.0.0.1:8082]}}, [configured])
2025-02-20 15:00:14 [] DEBUG r.n.http.client.HttpClientConnect - [5ecc7340-1, L:/127.0.0.1:56644 - R:localhost/127.0.0.1:8082] Handler is being applied: {uri=http://localhost:8082/validate, method=GET}
2025-02-20 15:00:14 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [5ecc7340-1, L:/127.0.0.1:56644 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x5ecc7340, L:/127.0.0.1:56644 - R:localhost/127.0.0.1:8082]}}, [request_prepared])
2025-02-20 15:00:14 [] DEBUG r.n.http.client.HttpClientOperations - [5ecc7340-1, L:/127.0.0.1:56644 - R:localhost/127.0.0.1:8082] No sendHeaders() called before complete, sending zero-length header
2025-02-20 15:00:14 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [5ecc7340-1, L:/127.0.0.1:56644 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x5ecc7340, L:/127.0.0.1:56644 - R:localhost/127.0.0.1:8082]}}, [request_sent])
2025-02-20 15:00:14 [] DEBUG r.n.http.client.HttpClientOperations - [5ecc7340-1, L:/127.0.0.1:56644 - R:localhost/127.0.0.1:8082] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 404 
Vary: <filtered>
Vary: <filtered>
Vary: <filtered>
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-20 15:00:14 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [5ecc7340-1, L:/127.0.0.1:56644 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x5ecc7340, L:/127.0.0.1:56644 - R:localhost/127.0.0.1:8082]}}, [response_received])
2025-02-20 15:00:14 [] DEBUG reactor.netty.channel.FluxReceive - [5ecc7340-1, L:/127.0.0.1:56644 - R:localhost/127.0.0.1:8082] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 15:00:14 [] DEBUG r.n.http.client.HttpClientOperations - [5ecc7340-1, L:/127.0.0.1:56644 - R:localhost/127.0.0.1:8082] Received last HTTP packet
2025-02-20 15:00:14 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [5ecc7340, L:/127.0.0.1:56644 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x5ecc7340, L:/127.0.0.1:56644 - R:localhost/127.0.0.1:8082]}}, [response_completed])
2025-02-20 15:00:14 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [5ecc7340, L:/127.0.0.1:56644 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x5ecc7340, L:/127.0.0.1:56644 - R:localhost/127.0.0.1:8082]}}, [disconnecting])
2025-02-20 15:00:14 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [5ecc7340, L:/127.0.0.1:56644 - R:localhost/127.0.0.1:8082] Releasing channel
2025-02-20 15:00:14 [] DEBUG r.n.r.PooledConnectionProvider - [5ecc7340, L:/127.0.0.1:56644 - R:localhost/127.0.0.1:8082] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-20 15:00:14 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] threw exception
org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 404 NOT_FOUND from GET http://localhost:8082/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 15:00:14 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate] with root cause
org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 404 NOT_FOUND from GET http://localhost:8082/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 15:00:14 [] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-20 15:00:14 [] INFO  c.c.c.g.c.config.RouterConfiguration - Authorized Request!
2025-02-20 15:00:14 [] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [GET] /error
2025-02-20 15:00:14 [] DEBUG r.n.r.PooledConnectionProvider - [075d11a0, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 15:00:14 [] DEBUG r.n.http.client.HttpClientConnect - [075d11a0-12, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY, method=GET}
2025-02-20 15:00:14 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [075d11a0-12, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x075d11a0, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-20 15:00:14 [] DEBUG r.n.http.client.HttpClientOperations - [075d11a0-12, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-20 15:00:14 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [075d11a0-12, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x075d11a0, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-20 15:00:14 [] DEBUG r.n.http.client.HttpClientOperations - [075d11a0-12, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-20 15:00:14 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [075d11a0-12, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x075d11a0, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-20 15:00:14 [] DEBUG reactor.netty.channel.FluxReceive - [075d11a0-12, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 15:00:14 [] DEBUG r.n.http.client.HttpClientOperations - [075d11a0-12, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-20 15:00:14 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [075d11a0, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x075d11a0, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-20 15:00:14 [] INFO  c.c.c.g.c.config.RouterConfiguration - Validation Response: true
2025-02-20 15:00:14 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [075d11a0, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x075d11a0, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-20 15:00:14 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [075d11a0, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-20 15:00:14 [] INFO  c.c.c.g.c.config.RouterConfiguration - Forwarding [GET] /error to User Microservice
2025-02-20 15:00:14 [] DEBUG r.n.r.PooledConnectionProvider - [075d11a0, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-20 15:00:14 [] DEBUG r.n.r.PooledConnectionProvider - [5ecc7340, L:/127.0.0.1:56644 - R:localhost/127.0.0.1:8082] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 15:00:14 [] DEBUG r.n.http.client.HttpClientConnect - [5ecc7340-2, L:/127.0.0.1:56644 - R:localhost/127.0.0.1:8082] Handler is being applied: {uri=http://localhost:8082/error, method=GET}
2025-02-20 15:00:14 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [5ecc7340-2, L:/127.0.0.1:56644 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0x5ecc7340, L:/127.0.0.1:56644 - R:localhost/127.0.0.1:8082]}}, [request_prepared])
2025-02-20 15:00:14 [] DEBUG r.n.http.client.HttpClientOperations - [5ecc7340-2, L:/127.0.0.1:56644 - R:localhost/127.0.0.1:8082] No sendHeaders() called before complete, sending zero-length header
2025-02-20 15:00:14 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [5ecc7340-2, L:/127.0.0.1:56644 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0x5ecc7340, L:/127.0.0.1:56644 - R:localhost/127.0.0.1:8082]}}, [request_sent])
2025-02-20 15:00:14 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] threw exception
org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 404 NOT_FOUND from GET http://localhost:8082/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 15:00:14 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate] with root cause
org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 404 NOT_FOUND from GET http://localhost:8082/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 15:00:14 [] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-20 15:00:14 [] INFO  c.c.c.g.c.config.RouterConfiguration - Authorized Request!
2025-02-20 15:00:14 [] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [GET] /error
2025-02-20 15:00:14 [] DEBUG r.n.r.PooledConnectionProvider - [075d11a0, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 15:00:14 [] DEBUG r.n.http.client.HttpClientOperations - [5ecc7340-2, L:/127.0.0.1:56644 - R:localhost/127.0.0.1:8082] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 500 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
Connection: <filtered>
2025-02-20 15:00:14 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [5ecc7340-2, L:/127.0.0.1:56644 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0x5ecc7340, L:/127.0.0.1:56644 - R:localhost/127.0.0.1:8082]}}, [response_received])
2025-02-20 15:00:14 [] DEBUG r.n.http.client.HttpClientConnect - [075d11a0-13, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY, method=GET}
2025-02-20 15:00:14 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [075d11a0-13, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x075d11a0, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-20 15:00:14 [] DEBUG r.n.http.client.HttpClientOperations - [075d11a0-13, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-20 15:00:14 [] DEBUG reactor.netty.channel.FluxReceive - [5ecc7340-2, L:/127.0.0.1:56644 - R:localhost/127.0.0.1:8082] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 15:00:14 [] DEBUG r.n.http.client.HttpClientOperations - [5ecc7340-2, L:/127.0.0.1:56644 - R:localhost/127.0.0.1:8082] Received last HTTP packet
2025-02-20 15:00:14 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [075d11a0-13, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x075d11a0, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-20 15:00:14 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [5ecc7340, L:/127.0.0.1:56644 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0x5ecc7340, L:/127.0.0.1:56644 - R:localhost/127.0.0.1:8082]}}, [response_completed])
2025-02-20 15:00:14 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [5ecc7340, L:/127.0.0.1:56644 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0x5ecc7340, L:/127.0.0.1:56644 - R:localhost/127.0.0.1:8082]}}, [disconnecting])
2025-02-20 15:00:14 [] DEBUG r.n.r.PooledConnectionProvider - [5ecc7340, L:/127.0.0.1:56644 ! R:localhost/127.0.0.1:8082] Channel closed, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 15:00:14 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [5ecc7340, L:/127.0.0.1:56644 ! R:localhost/127.0.0.1:8082] onStateChange(PooledConnection{channel=[id: 0x5ecc7340, L:/127.0.0.1:56644 ! R:localhost/127.0.0.1:8082]}, [disconnecting])
2025-02-20 15:00:14 [] DEBUG r.n.http.client.HttpClientOperations - [075d11a0-13, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-20 15:00:14 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [075d11a0-13, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x075d11a0, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-20 15:00:14 [] DEBUG reactor.netty.channel.FluxReceive - [075d11a0-13, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 15:00:14 [] DEBUG r.n.http.client.HttpClientOperations - [075d11a0-13, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-20 15:00:14 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [075d11a0, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x075d11a0, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-20 15:00:14 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [075d11a0, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x075d11a0, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-20 15:00:14 [] INFO  c.c.c.g.c.config.RouterConfiguration - Validation Response: true
2025-02-20 15:00:14 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [075d11a0, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-20 15:00:14 [] INFO  c.c.c.g.c.config.RouterConfiguration - Forwarding [GET] /error to User Microservice
2025-02-20 15:00:14 [] DEBUG r.n.r.PooledConnectionProvider - [075d11a0, L:/127.0.0.1:56619 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-20 15:00:14 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] threw exception
java.lang.IllegalStateException: Cannot start async: [ERROR]
	at org.springframework.util.Assert.state(Assert.java:79)
	at org.springframework.web.context.request.async.StandardServletAsyncWebRequest.startAsync(StandardServletAsyncWebRequest.java:157)
	at org.springframework.web.context.request.async.WebAsyncManager.startAsyncProcessing(WebAsyncManager.java:487)
	at org.springframework.web.context.request.async.WebAsyncManager.startDeferredResultProcessing(WebAsyncManager.java:462)
	at org.springframework.web.servlet.function.DefaultAsyncServerResponse.writeAsync(DefaultAsyncServerResponse.java:130)
	at org.springframework.web.servlet.function.DefaultEntityResponseBuilder$PublisherEntityResponse.writeToInternal(DefaultEntityResponseBuilder.java:429)
	at org.springframework.web.servlet.function.AbstractServerResponse.writeTo(AbstractServerResponse.java:101)
	at org.springframework.web.servlet.function.support.HandlerFunctionAdapter.handle(HandlerFunctionAdapter.java:112)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:633)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:511)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:454)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:361)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:208)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:285)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:149)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:239)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:243)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:57)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 15:00:14 [] ERROR o.a.c.c.C.[Tomcat].[localhost] - Exception Processing [ErrorPage[errorCode=0, location=/error]]
jakarta.servlet.ServletException: Async processing failed
	at org.springframework.web.servlet.function.DefaultAsyncServerResponse.writeAsync(DefaultAsyncServerResponse.java:136)
	at org.springframework.web.servlet.function.DefaultEntityResponseBuilder$PublisherEntityResponse.writeToInternal(DefaultEntityResponseBuilder.java:429)
	at org.springframework.web.servlet.function.AbstractServerResponse.writeTo(AbstractServerResponse.java:101)
	at org.springframework.web.servlet.function.support.HandlerFunctionAdapter.handle(HandlerFunctionAdapter.java:112)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:633)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:511)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:454)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:361)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:208)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:285)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:149)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:239)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:243)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:57)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: java.lang.IllegalStateException: Cannot start async: [ERROR]
	at org.springframework.util.Assert.state(Assert.java:79)
	at org.springframework.web.context.request.async.StandardServletAsyncWebRequest.startAsync(StandardServletAsyncWebRequest.java:157)
	at org.springframework.web.context.request.async.WebAsyncManager.startAsyncProcessing(WebAsyncManager.java:487)
	at org.springframework.web.context.request.async.WebAsyncManager.startDeferredResultProcessing(WebAsyncManager.java:462)
	at org.springframework.web.servlet.function.DefaultAsyncServerResponse.writeAsync(DefaultAsyncServerResponse.java:130)
	... 41 common frames omitted
2025-02-20 15:01:15 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [075d11a0, L:/127.0.0.1:56619 ! R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x075d11a0, L:/127.0.0.1:56619 ! R:localhost/127.0.0.1:8081]}, [disconnecting])
2025-02-20 15:23:27 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-20 15:23:27 [46114770-b508-4cc6-a3f9-4fb0643ef365] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-20 15:23:27 [46114770-b508-4cc6-a3f9-4fb0643ef365] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-20 15:23:27 [46114770-b508-4cc6-a3f9-4fb0643ef365] INFO  c.c.c.g.c.config.RouterConfiguration - Authorized Request!
2025-02-20 15:23:27 [46114770-b508-4cc6-a3f9-4fb0643ef365] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [GET] /validate
2025-02-20 15:23:27 [] DEBUG r.n.r.PooledConnectionProvider - [393d40d2] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 15:23:27 [] DEBUG r.netty.transport.TransportConfig - [393d40d2] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-20 15:23:27 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 15:23:27 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 15:23:27 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 15:23:27 [] DEBUG r.netty.transport.TransportConnector - [393d40d2] Connecting to [localhost/127.0.0.1:8081].
2025-02-20 15:23:27 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [393d40d2, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081] Registering pool release on close event for channel
2025-02-20 15:23:27 [] DEBUG r.n.r.PooledConnectionProvider - [393d40d2, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 15:23:27 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [393d40d2, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x393d40d2, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081]}, [connected])
2025-02-20 15:23:27 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [393d40d2-1, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0x393d40d2, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081]}}, [configured])
2025-02-20 15:23:27 [] DEBUG r.n.http.client.HttpClientConnect - [393d40d2-1, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY, method=GET}
2025-02-20 15:23:27 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [393d40d2-1, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x393d40d2, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-20 15:23:27 [] DEBUG r.n.http.client.HttpClientOperations - [393d40d2-1, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-20 15:23:27 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [393d40d2-1, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x393d40d2, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-20 15:23:27 [] DEBUG r.n.http.client.HttpClientOperations - [393d40d2-1, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-20 15:23:27 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [393d40d2-1, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x393d40d2, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-20 15:23:27 [] DEBUG reactor.netty.channel.FluxReceive - [393d40d2-1, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 15:23:27 [] DEBUG r.n.http.client.HttpClientOperations - [393d40d2-1, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-20 15:23:27 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [393d40d2, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x393d40d2, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-20 15:23:27 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [393d40d2, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x393d40d2, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-20 15:23:27 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [393d40d2, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-20 15:23:27 [46114770-b508-4cc6-a3f9-4fb0643ef365] INFO  c.c.c.g.c.config.RouterConfiguration - Validation Response: true
2025-02-20 15:23:27 [] DEBUG r.n.r.PooledConnectionProvider - [393d40d2, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-20 15:23:27 [46114770-b508-4cc6-a3f9-4fb0643ef365] INFO  c.c.c.g.c.config.RouterConfiguration - Forwarding [GET] /validate to User Microservice
2025-02-20 15:23:27 [] DEBUG r.n.r.PooledConnectionProvider - [bec2857c] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 15:23:27 [] DEBUG r.netty.transport.TransportConfig - [bec2857c] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-20 15:23:27 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 15:23:27 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 15:23:27 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 15:23:27 [] DEBUG r.netty.transport.TransportConnector - [bec2857c] Connecting to [localhost/127.0.0.1:8082].
2025-02-20 15:23:27 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [bec2857c, L:/127.0.0.1:57085 - R:localhost/127.0.0.1:8082] Registering pool release on close event for channel
2025-02-20 15:23:27 [] DEBUG r.n.r.PooledConnectionProvider - [bec2857c, L:/127.0.0.1:57085 - R:localhost/127.0.0.1:8082] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 15:23:27 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [bec2857c, L:/127.0.0.1:57085 - R:localhost/127.0.0.1:8082] onStateChange(PooledConnection{channel=[id: 0xbec2857c, L:/127.0.0.1:57085 - R:localhost/127.0.0.1:8082]}, [connected])
2025-02-20 15:23:27 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [bec2857c-1, L:/127.0.0.1:57085 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0xbec2857c, L:/127.0.0.1:57085 - R:localhost/127.0.0.1:8082]}}, [configured])
2025-02-20 15:23:27 [] DEBUG r.n.http.client.HttpClientConnect - [bec2857c-1, L:/127.0.0.1:57085 - R:localhost/127.0.0.1:8082] Handler is being applied: {uri=http://localhost:8082/validate, method=GET}
2025-02-20 15:23:27 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [bec2857c-1, L:/127.0.0.1:57085 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xbec2857c, L:/127.0.0.1:57085 - R:localhost/127.0.0.1:8082]}}, [request_prepared])
2025-02-20 15:23:27 [] DEBUG r.n.http.client.HttpClientOperations - [bec2857c-1, L:/127.0.0.1:57085 - R:localhost/127.0.0.1:8082] No sendHeaders() called before complete, sending zero-length header
2025-02-20 15:23:27 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [bec2857c-1, L:/127.0.0.1:57085 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xbec2857c, L:/127.0.0.1:57085 - R:localhost/127.0.0.1:8082]}}, [request_sent])
2025-02-20 15:23:27 [] DEBUG r.n.http.client.HttpClientOperations - [bec2857c-1, L:/127.0.0.1:57085 - R:localhost/127.0.0.1:8082] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 404 
Vary: <filtered>
Vary: <filtered>
Vary: <filtered>
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-20 15:23:27 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [bec2857c-1, L:/127.0.0.1:57085 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xbec2857c, L:/127.0.0.1:57085 - R:localhost/127.0.0.1:8082]}}, [response_received])
2025-02-20 15:23:27 [] DEBUG reactor.netty.channel.FluxReceive - [bec2857c-1, L:/127.0.0.1:57085 - R:localhost/127.0.0.1:8082] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 15:23:27 [] DEBUG r.n.http.client.HttpClientOperations - [bec2857c-1, L:/127.0.0.1:57085 - R:localhost/127.0.0.1:8082] Received last HTTP packet
2025-02-20 15:23:27 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [bec2857c, L:/127.0.0.1:57085 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xbec2857c, L:/127.0.0.1:57085 - R:localhost/127.0.0.1:8082]}}, [response_completed])
2025-02-20 15:23:27 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [bec2857c, L:/127.0.0.1:57085 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xbec2857c, L:/127.0.0.1:57085 - R:localhost/127.0.0.1:8082]}}, [disconnecting])
2025-02-20 15:23:27 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [bec2857c, L:/127.0.0.1:57085 - R:localhost/127.0.0.1:8082] Releasing channel
2025-02-20 15:23:27 [] DEBUG r.n.r.PooledConnectionProvider - [bec2857c, L:/127.0.0.1:57085 - R:localhost/127.0.0.1:8082] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-20 15:23:27 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] threw exception
org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 404 NOT_FOUND from GET http://localhost:8082/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 15:23:27 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate] with root cause
org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 404 NOT_FOUND from GET http://localhost:8082/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 15:23:27 [] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-20 15:23:27 [] INFO  c.c.c.g.c.config.RouterConfiguration - Authorized Request!
2025-02-20 15:23:27 [] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [GET] /error
2025-02-20 15:23:27 [] DEBUG r.n.r.PooledConnectionProvider - [393d40d2, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 15:23:27 [] DEBUG r.n.http.client.HttpClientConnect - [393d40d2-2, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY, method=GET}
2025-02-20 15:23:27 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [393d40d2-2, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x393d40d2, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-20 15:23:27 [] DEBUG r.n.http.client.HttpClientOperations - [393d40d2-2, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-20 15:23:27 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [393d40d2-2, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x393d40d2, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-20 15:23:27 [] DEBUG r.n.http.client.HttpClientOperations - [393d40d2-2, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-20 15:23:27 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [393d40d2-2, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x393d40d2, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-20 15:23:27 [] DEBUG reactor.netty.channel.FluxReceive - [393d40d2-2, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 15:23:27 [] DEBUG r.n.http.client.HttpClientOperations - [393d40d2-2, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-20 15:23:27 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [393d40d2, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x393d40d2, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-20 15:23:27 [] INFO  c.c.c.g.c.config.RouterConfiguration - Validation Response: true
2025-02-20 15:23:27 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [393d40d2, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x393d40d2, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-20 15:23:27 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [393d40d2, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-20 15:23:27 [] INFO  c.c.c.g.c.config.RouterConfiguration - Forwarding [GET] /error to User Microservice
2025-02-20 15:23:27 [] DEBUG r.n.r.PooledConnectionProvider - [393d40d2, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-20 15:23:27 [] DEBUG r.n.r.PooledConnectionProvider - [bec2857c, L:/127.0.0.1:57085 - R:localhost/127.0.0.1:8082] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 15:23:27 [] DEBUG r.n.http.client.HttpClientConnect - [bec2857c-2, L:/127.0.0.1:57085 - R:localhost/127.0.0.1:8082] Handler is being applied: {uri=http://localhost:8082/error, method=GET}
2025-02-20 15:23:27 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [bec2857c-2, L:/127.0.0.1:57085 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0xbec2857c, L:/127.0.0.1:57085 - R:localhost/127.0.0.1:8082]}}, [request_prepared])
2025-02-20 15:23:27 [] DEBUG r.n.http.client.HttpClientOperations - [bec2857c-2, L:/127.0.0.1:57085 - R:localhost/127.0.0.1:8082] No sendHeaders() called before complete, sending zero-length header
2025-02-20 15:23:27 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [bec2857c-2, L:/127.0.0.1:57085 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0xbec2857c, L:/127.0.0.1:57085 - R:localhost/127.0.0.1:8082]}}, [request_sent])
2025-02-20 15:23:27 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] threw exception
org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 404 NOT_FOUND from GET http://localhost:8082/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 15:23:27 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate] with root cause
org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 404 NOT_FOUND from GET http://localhost:8082/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 15:23:27 [] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-20 15:23:27 [] INFO  c.c.c.g.c.config.RouterConfiguration - Authorized Request!
2025-02-20 15:23:27 [] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [GET] /error
2025-02-20 15:23:27 [] DEBUG r.n.r.PooledConnectionProvider - [393d40d2, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 15:23:27 [] DEBUG r.n.http.client.HttpClientConnect - [393d40d2-3, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY, method=GET}
2025-02-20 15:23:27 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [393d40d2-3, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x393d40d2, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-20 15:23:27 [] DEBUG r.n.http.client.HttpClientOperations - [393d40d2-3, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-20 15:23:27 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [393d40d2-3, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x393d40d2, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-20 15:23:27 [] DEBUG r.n.http.client.HttpClientOperations - [bec2857c-2, L:/127.0.0.1:57085 - R:localhost/127.0.0.1:8082] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 500 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
Connection: <filtered>
2025-02-20 15:23:27 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [bec2857c-2, L:/127.0.0.1:57085 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0xbec2857c, L:/127.0.0.1:57085 - R:localhost/127.0.0.1:8082]}}, [response_received])
2025-02-20 15:23:27 [] DEBUG reactor.netty.channel.FluxReceive - [bec2857c-2, L:/127.0.0.1:57085 - R:localhost/127.0.0.1:8082] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 15:23:27 [] DEBUG r.n.http.client.HttpClientOperations - [bec2857c-2, L:/127.0.0.1:57085 - R:localhost/127.0.0.1:8082] Received last HTTP packet
2025-02-20 15:23:27 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [bec2857c, L:/127.0.0.1:57085 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0xbec2857c, L:/127.0.0.1:57085 - R:localhost/127.0.0.1:8082]}}, [response_completed])
2025-02-20 15:23:27 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [bec2857c, L:/127.0.0.1:57085 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0xbec2857c, L:/127.0.0.1:57085 - R:localhost/127.0.0.1:8082]}}, [disconnecting])
2025-02-20 15:23:27 [] DEBUG r.n.r.PooledConnectionProvider - [bec2857c, L:/127.0.0.1:57085 ! R:localhost/127.0.0.1:8082] Channel closed, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 15:23:27 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [bec2857c, L:/127.0.0.1:57085 ! R:localhost/127.0.0.1:8082] onStateChange(PooledConnection{channel=[id: 0xbec2857c, L:/127.0.0.1:57085 ! R:localhost/127.0.0.1:8082]}, [disconnecting])
2025-02-20 15:23:27 [] DEBUG r.n.http.client.HttpClientOperations - [393d40d2-3, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-20 15:23:27 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [393d40d2-3, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x393d40d2, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-20 15:23:27 [] DEBUG reactor.netty.channel.FluxReceive - [393d40d2-3, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 15:23:27 [] DEBUG r.n.http.client.HttpClientOperations - [393d40d2-3, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-20 15:23:27 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [393d40d2, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x393d40d2, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-20 15:23:27 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [393d40d2, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x393d40d2, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-20 15:23:27 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [393d40d2, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-20 15:23:27 [] INFO  c.c.c.g.c.config.RouterConfiguration - Validation Response: true
2025-02-20 15:23:27 [] DEBUG r.n.r.PooledConnectionProvider - [393d40d2, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-20 15:23:27 [] INFO  c.c.c.g.c.config.RouterConfiguration - Forwarding [GET] /error to User Microservice
2025-02-20 15:23:27 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] threw exception
java.lang.IllegalStateException: Cannot start async: [ERROR]
	at org.springframework.util.Assert.state(Assert.java:79)
	at org.springframework.web.context.request.async.StandardServletAsyncWebRequest.startAsync(StandardServletAsyncWebRequest.java:157)
	at org.springframework.web.context.request.async.WebAsyncManager.startAsyncProcessing(WebAsyncManager.java:487)
	at org.springframework.web.context.request.async.WebAsyncManager.startDeferredResultProcessing(WebAsyncManager.java:462)
	at org.springframework.web.servlet.function.DefaultAsyncServerResponse.writeAsync(DefaultAsyncServerResponse.java:130)
	at org.springframework.web.servlet.function.DefaultEntityResponseBuilder$PublisherEntityResponse.writeToInternal(DefaultEntityResponseBuilder.java:429)
	at org.springframework.web.servlet.function.AbstractServerResponse.writeTo(AbstractServerResponse.java:101)
	at org.springframework.web.servlet.function.support.HandlerFunctionAdapter.handle(HandlerFunctionAdapter.java:112)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:633)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:511)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:454)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:361)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:208)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:285)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:149)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:239)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:243)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:57)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 15:23:27 [] ERROR o.a.c.c.C.[Tomcat].[localhost] - Exception Processing [ErrorPage[errorCode=0, location=/error]]
jakarta.servlet.ServletException: Async processing failed
	at org.springframework.web.servlet.function.DefaultAsyncServerResponse.writeAsync(DefaultAsyncServerResponse.java:136)
	at org.springframework.web.servlet.function.DefaultEntityResponseBuilder$PublisherEntityResponse.writeToInternal(DefaultEntityResponseBuilder.java:429)
	at org.springframework.web.servlet.function.AbstractServerResponse.writeTo(AbstractServerResponse.java:101)
	at org.springframework.web.servlet.function.support.HandlerFunctionAdapter.handle(HandlerFunctionAdapter.java:112)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:633)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:511)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:454)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:361)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:208)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:285)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:149)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:239)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:243)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:57)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: java.lang.IllegalStateException: Cannot start async: [ERROR]
	at org.springframework.util.Assert.state(Assert.java:79)
	at org.springframework.web.context.request.async.StandardServletAsyncWebRequest.startAsync(StandardServletAsyncWebRequest.java:157)
	at org.springframework.web.context.request.async.WebAsyncManager.startAsyncProcessing(WebAsyncManager.java:487)
	at org.springframework.web.context.request.async.WebAsyncManager.startDeferredResultProcessing(WebAsyncManager.java:462)
	at org.springframework.web.servlet.function.DefaultAsyncServerResponse.writeAsync(DefaultAsyncServerResponse.java:130)
	... 41 common frames omitted
2025-02-20 15:23:34 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-20 15:23:34 [6ac310a8-e3fb-4c5e-86ed-3487312f88e9] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-20 15:23:34 [6ac310a8-e3fb-4c5e-86ed-3487312f88e9] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-20 15:23:34 [6ac310a8-e3fb-4c5e-86ed-3487312f88e9] INFO  c.c.c.g.c.config.RouterConfiguration - Authorized Request!
2025-02-20 15:23:34 [6ac310a8-e3fb-4c5e-86ed-3487312f88e9] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [GET] /users
2025-02-20 15:23:34 [] DEBUG r.n.r.PooledConnectionProvider - [393d40d2, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 15:23:34 [] DEBUG r.n.http.client.HttpClientConnect - [393d40d2-4, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY, method=GET}
2025-02-20 15:23:34 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [393d40d2-4, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x393d40d2, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-20 15:23:34 [] DEBUG r.n.http.client.HttpClientOperations - [393d40d2-4, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-20 15:23:34 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [393d40d2-4, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x393d40d2, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-20 15:23:34 [] DEBUG r.n.http.client.HttpClientOperations - [393d40d2-4, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-20 15:23:34 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [393d40d2-4, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x393d40d2, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-20 15:23:34 [] DEBUG reactor.netty.channel.FluxReceive - [393d40d2-4, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 15:23:34 [] DEBUG r.n.http.client.HttpClientOperations - [393d40d2-4, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-20 15:23:34 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [393d40d2, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x393d40d2, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-20 15:23:34 [6ac310a8-e3fb-4c5e-86ed-3487312f88e9] INFO  c.c.c.g.c.config.RouterConfiguration - Validation Response: true
2025-02-20 15:23:34 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [393d40d2, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x393d40d2, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-20 15:23:34 [6ac310a8-e3fb-4c5e-86ed-3487312f88e9] INFO  c.c.c.g.c.config.RouterConfiguration - Forwarding [GET] /users to User Microservice
2025-02-20 15:23:34 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [393d40d2, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-20 15:23:34 [] DEBUG r.n.r.PooledConnectionProvider - [393d40d2, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-20 15:23:34 [] DEBUG r.n.r.PooledConnectionProvider - [2fc34e5c] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 15:23:34 [] DEBUG r.netty.transport.TransportConfig - [2fc34e5c] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-20 15:23:34 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 15:23:34 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 15:23:34 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 15:23:34 [] DEBUG r.netty.transport.TransportConnector - [2fc34e5c] Connecting to [localhost/127.0.0.1:8082].
2025-02-20 15:23:34 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [2fc34e5c, L:/127.0.0.1:57100 - R:localhost/127.0.0.1:8082] Registering pool release on close event for channel
2025-02-20 15:23:34 [] DEBUG r.n.r.PooledConnectionProvider - [2fc34e5c, L:/127.0.0.1:57100 - R:localhost/127.0.0.1:8082] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 15:23:34 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [2fc34e5c, L:/127.0.0.1:57100 - R:localhost/127.0.0.1:8082] onStateChange(PooledConnection{channel=[id: 0x2fc34e5c, L:/127.0.0.1:57100 - R:localhost/127.0.0.1:8082]}, [connected])
2025-02-20 15:23:34 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [2fc34e5c-1, L:/127.0.0.1:57100 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0x2fc34e5c, L:/127.0.0.1:57100 - R:localhost/127.0.0.1:8082]}}, [configured])
2025-02-20 15:23:34 [] DEBUG r.n.http.client.HttpClientConnect - [2fc34e5c-1, L:/127.0.0.1:57100 - R:localhost/127.0.0.1:8082] Handler is being applied: {uri=http://localhost:8082/users, method=GET}
2025-02-20 15:23:34 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [2fc34e5c-1, L:/127.0.0.1:57100 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0x2fc34e5c, L:/127.0.0.1:57100 - R:localhost/127.0.0.1:8082]}}, [request_prepared])
2025-02-20 15:23:34 [] DEBUG r.n.http.client.HttpClientOperations - [2fc34e5c-1, L:/127.0.0.1:57100 - R:localhost/127.0.0.1:8082] No sendHeaders() called before complete, sending zero-length header
2025-02-20 15:23:34 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [2fc34e5c-1, L:/127.0.0.1:57100 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0x2fc34e5c, L:/127.0.0.1:57100 - R:localhost/127.0.0.1:8082]}}, [request_sent])
2025-02-20 15:23:34 [] DEBUG r.n.http.client.HttpClientOperations - [2fc34e5c-1, L:/127.0.0.1:57100 - R:localhost/127.0.0.1:8082] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Content-Length: <filtered>
Date: <filtered>
2025-02-20 15:23:34 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [2fc34e5c-1, L:/127.0.0.1:57100 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0x2fc34e5c, L:/127.0.0.1:57100 - R:localhost/127.0.0.1:8082]}}, [response_received])
2025-02-20 15:23:34 [] DEBUG reactor.netty.channel.FluxReceive - [2fc34e5c-1, L:/127.0.0.1:57100 - R:localhost/127.0.0.1:8082] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 15:23:34 [] DEBUG r.n.http.client.HttpClientOperations - [2fc34e5c-1, L:/127.0.0.1:57100 - R:localhost/127.0.0.1:8082] Received last HTTP packet
2025-02-20 15:23:34 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [2fc34e5c, L:/127.0.0.1:57100 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0x2fc34e5c, L:/127.0.0.1:57100 - R:localhost/127.0.0.1:8082]}}, [response_completed])
2025-02-20 15:23:34 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [2fc34e5c, L:/127.0.0.1:57100 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0x2fc34e5c, L:/127.0.0.1:57100 - R:localhost/127.0.0.1:8082]}}, [disconnecting])
2025-02-20 15:23:34 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [2fc34e5c, L:/127.0.0.1:57100 - R:localhost/127.0.0.1:8082] Releasing channel
2025-02-20 15:23:34 [] DEBUG r.n.r.PooledConnectionProvider - [2fc34e5c, L:/127.0.0.1:57100 - R:localhost/127.0.0.1:8082] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-20 15:23:45 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-20 15:23:45 [0e7862cf-9b92-4abd-a96c-449592bf56d3] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-20 15:23:45 [0e7862cf-9b92-4abd-a96c-449592bf56d3] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-20 15:23:45 [0e7862cf-9b92-4abd-a96c-449592bf56d3] INFO  c.c.c.g.c.config.RouterConfiguration - Authorized Request!
2025-02-20 15:23:45 [0e7862cf-9b92-4abd-a96c-449592bf56d3] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [GET] /validate
2025-02-20 15:23:45 [] DEBUG r.n.r.PooledConnectionProvider - [393d40d2, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 15:23:45 [] DEBUG r.n.http.client.HttpClientConnect - [393d40d2-5, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY, method=GET}
2025-02-20 15:23:45 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [393d40d2-5, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x393d40d2, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-20 15:23:45 [] DEBUG r.n.http.client.HttpClientOperations - [393d40d2-5, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-20 15:23:45 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [393d40d2-5, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x393d40d2, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-20 15:23:45 [] DEBUG r.n.http.client.HttpClientOperations - [393d40d2-5, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-20 15:23:45 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [393d40d2-5, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x393d40d2, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-20 15:23:45 [] DEBUG reactor.netty.channel.FluxReceive - [393d40d2-5, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 15:23:45 [] DEBUG r.n.http.client.HttpClientOperations - [393d40d2-5, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-20 15:23:45 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [393d40d2, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x393d40d2, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-20 15:23:45 [0e7862cf-9b92-4abd-a96c-449592bf56d3] INFO  c.c.c.g.c.config.RouterConfiguration - Validation Response: true
2025-02-20 15:23:45 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [393d40d2, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x393d40d2, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-20 15:23:45 [0e7862cf-9b92-4abd-a96c-449592bf56d3] INFO  c.c.c.g.c.config.RouterConfiguration - Forwarding [GET] /validate to User Microservice
2025-02-20 15:23:45 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [393d40d2, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-20 15:23:45 [] DEBUG r.n.r.PooledConnectionProvider - [393d40d2, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-20 15:23:45 [] DEBUG r.n.r.PooledConnectionProvider - [2fc34e5c, L:/127.0.0.1:57100 - R:localhost/127.0.0.1:8082] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 15:23:45 [] DEBUG r.n.http.client.HttpClientConnect - [2fc34e5c-2, L:/127.0.0.1:57100 - R:localhost/127.0.0.1:8082] Handler is being applied: {uri=http://localhost:8082/validate, method=GET}
2025-02-20 15:23:45 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [2fc34e5c-2, L:/127.0.0.1:57100 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x2fc34e5c, L:/127.0.0.1:57100 - R:localhost/127.0.0.1:8082]}}, [request_prepared])
2025-02-20 15:23:45 [] DEBUG r.n.http.client.HttpClientOperations - [2fc34e5c-2, L:/127.0.0.1:57100 - R:localhost/127.0.0.1:8082] No sendHeaders() called before complete, sending zero-length header
2025-02-20 15:23:45 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [2fc34e5c-2, L:/127.0.0.1:57100 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x2fc34e5c, L:/127.0.0.1:57100 - R:localhost/127.0.0.1:8082]}}, [request_sent])
2025-02-20 15:23:45 [] DEBUG r.n.http.client.HttpClientOperations - [2fc34e5c-2, L:/127.0.0.1:57100 - R:localhost/127.0.0.1:8082] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 404 
Vary: <filtered>
Vary: <filtered>
Vary: <filtered>
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-20 15:23:45 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [2fc34e5c-2, L:/127.0.0.1:57100 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x2fc34e5c, L:/127.0.0.1:57100 - R:localhost/127.0.0.1:8082]}}, [response_received])
2025-02-20 15:23:45 [] DEBUG reactor.netty.channel.FluxReceive - [2fc34e5c-2, L:/127.0.0.1:57100 - R:localhost/127.0.0.1:8082] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 15:23:45 [] DEBUG r.n.http.client.HttpClientOperations - [2fc34e5c-2, L:/127.0.0.1:57100 - R:localhost/127.0.0.1:8082] Received last HTTP packet
2025-02-20 15:23:45 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [2fc34e5c, L:/127.0.0.1:57100 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x2fc34e5c, L:/127.0.0.1:57100 - R:localhost/127.0.0.1:8082]}}, [response_completed])
2025-02-20 15:23:45 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [2fc34e5c, L:/127.0.0.1:57100 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x2fc34e5c, L:/127.0.0.1:57100 - R:localhost/127.0.0.1:8082]}}, [disconnecting])
2025-02-20 15:23:45 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [2fc34e5c, L:/127.0.0.1:57100 - R:localhost/127.0.0.1:8082] Releasing channel
2025-02-20 15:23:45 [] DEBUG r.n.r.PooledConnectionProvider - [2fc34e5c, L:/127.0.0.1:57100 - R:localhost/127.0.0.1:8082] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-20 15:23:45 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] threw exception
org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 404 NOT_FOUND from GET http://localhost:8082/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 15:23:45 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate] with root cause
org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 404 NOT_FOUND from GET http://localhost:8082/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 15:23:45 [] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-20 15:23:45 [] INFO  c.c.c.g.c.config.RouterConfiguration - Authorized Request!
2025-02-20 15:23:45 [] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [GET] /error
2025-02-20 15:23:45 [] DEBUG r.n.r.PooledConnectionProvider - [393d40d2, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 15:23:45 [] DEBUG r.n.http.client.HttpClientConnect - [393d40d2-6, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY, method=GET}
2025-02-20 15:23:45 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [393d40d2-6, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x393d40d2, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-20 15:23:45 [] DEBUG r.n.http.client.HttpClientOperations - [393d40d2-6, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-20 15:23:45 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [393d40d2-6, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x393d40d2, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-20 15:23:45 [] DEBUG r.n.http.client.HttpClientOperations - [393d40d2-6, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-20 15:23:45 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [393d40d2-6, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x393d40d2, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-20 15:23:45 [] DEBUG reactor.netty.channel.FluxReceive - [393d40d2-6, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 15:23:45 [] DEBUG r.n.http.client.HttpClientOperations - [393d40d2-6, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-20 15:23:45 [] INFO  c.c.c.g.c.config.RouterConfiguration - Validation Response: true
2025-02-20 15:23:45 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [393d40d2, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x393d40d2, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-20 15:23:45 [] INFO  c.c.c.g.c.config.RouterConfiguration - Forwarding [GET] /error to User Microservice
2025-02-20 15:23:45 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [393d40d2, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x393d40d2, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-20 15:23:45 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [393d40d2, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-20 15:23:45 [] DEBUG r.n.r.PooledConnectionProvider - [393d40d2, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-20 15:23:45 [] DEBUG r.n.r.PooledConnectionProvider - [2fc34e5c, L:/127.0.0.1:57100 - R:localhost/127.0.0.1:8082] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 15:23:45 [] DEBUG r.n.http.client.HttpClientConnect - [2fc34e5c-3, L:/127.0.0.1:57100 - R:localhost/127.0.0.1:8082] Handler is being applied: {uri=http://localhost:8082/error, method=GET}
2025-02-20 15:23:45 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [2fc34e5c-3, L:/127.0.0.1:57100 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0x2fc34e5c, L:/127.0.0.1:57100 - R:localhost/127.0.0.1:8082]}}, [request_prepared])
2025-02-20 15:23:45 [] DEBUG r.n.http.client.HttpClientOperations - [2fc34e5c-3, L:/127.0.0.1:57100 - R:localhost/127.0.0.1:8082] No sendHeaders() called before complete, sending zero-length header
2025-02-20 15:23:45 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [2fc34e5c-3, L:/127.0.0.1:57100 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0x2fc34e5c, L:/127.0.0.1:57100 - R:localhost/127.0.0.1:8082]}}, [request_sent])
2025-02-20 15:23:45 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] threw exception
org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 404 NOT_FOUND from GET http://localhost:8082/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 15:23:45 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate] with root cause
org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 404 NOT_FOUND from GET http://localhost:8082/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 15:23:46 [] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-20 15:23:46 [] INFO  c.c.c.g.c.config.RouterConfiguration - Authorized Request!
2025-02-20 15:23:46 [] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [GET] /error
2025-02-20 15:23:46 [] DEBUG r.n.http.client.HttpClientOperations - [2fc34e5c-3, L:/127.0.0.1:57100 - R:localhost/127.0.0.1:8082] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 500 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
Connection: <filtered>
2025-02-20 15:23:46 [] DEBUG r.n.r.PooledConnectionProvider - [393d40d2, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 15:23:46 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [2fc34e5c-3, L:/127.0.0.1:57100 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0x2fc34e5c, L:/127.0.0.1:57100 - R:localhost/127.0.0.1:8082]}}, [response_received])
2025-02-20 15:23:46 [] DEBUG r.n.http.client.HttpClientConnect - [393d40d2-7, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY, method=GET}
2025-02-20 15:23:46 [] DEBUG reactor.netty.channel.FluxReceive - [2fc34e5c-3, L:/127.0.0.1:57100 - R:localhost/127.0.0.1:8082] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 15:23:46 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [393d40d2-7, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x393d40d2, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-20 15:23:46 [] DEBUG r.n.http.client.HttpClientOperations - [393d40d2-7, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-20 15:23:46 [] DEBUG r.n.http.client.HttpClientOperations - [2fc34e5c-3, L:/127.0.0.1:57100 - R:localhost/127.0.0.1:8082] Received last HTTP packet
2025-02-20 15:23:46 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [393d40d2-7, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x393d40d2, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-20 15:23:46 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [2fc34e5c, L:/127.0.0.1:57100 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0x2fc34e5c, L:/127.0.0.1:57100 - R:localhost/127.0.0.1:8082]}}, [response_completed])
2025-02-20 15:23:46 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [2fc34e5c, L:/127.0.0.1:57100 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0x2fc34e5c, L:/127.0.0.1:57100 - R:localhost/127.0.0.1:8082]}}, [disconnecting])
2025-02-20 15:23:46 [] DEBUG r.n.r.PooledConnectionProvider - [2fc34e5c, L:/127.0.0.1:57100 ! R:localhost/127.0.0.1:8082] Channel closed, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 15:23:46 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [2fc34e5c, L:/127.0.0.1:57100 ! R:localhost/127.0.0.1:8082] onStateChange(PooledConnection{channel=[id: 0x2fc34e5c, L:/127.0.0.1:57100 ! R:localhost/127.0.0.1:8082]}, [disconnecting])
2025-02-20 15:23:46 [] DEBUG r.n.http.client.HttpClientOperations - [393d40d2-7, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-20 15:23:46 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [393d40d2-7, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x393d40d2, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-20 15:23:46 [] DEBUG reactor.netty.channel.FluxReceive - [393d40d2-7, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 15:23:46 [] DEBUG r.n.http.client.HttpClientOperations - [393d40d2-7, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-20 15:23:46 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [393d40d2, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x393d40d2, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-20 15:23:46 [] INFO  c.c.c.g.c.config.RouterConfiguration - Validation Response: true
2025-02-20 15:23:46 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [393d40d2, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x393d40d2, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-20 15:23:46 [] INFO  c.c.c.g.c.config.RouterConfiguration - Forwarding [GET] /error to User Microservice
2025-02-20 15:23:46 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [393d40d2, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-20 15:23:46 [] DEBUG r.n.r.PooledConnectionProvider - [393d40d2, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-20 15:23:46 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] threw exception
java.lang.IllegalStateException: Cannot start async: [ERROR]
	at org.springframework.util.Assert.state(Assert.java:79)
	at org.springframework.web.context.request.async.StandardServletAsyncWebRequest.startAsync(StandardServletAsyncWebRequest.java:157)
	at org.springframework.web.context.request.async.WebAsyncManager.startAsyncProcessing(WebAsyncManager.java:487)
	at org.springframework.web.context.request.async.WebAsyncManager.startDeferredResultProcessing(WebAsyncManager.java:462)
	at org.springframework.web.servlet.function.DefaultAsyncServerResponse.writeAsync(DefaultAsyncServerResponse.java:130)
	at org.springframework.web.servlet.function.DefaultEntityResponseBuilder$PublisherEntityResponse.writeToInternal(DefaultEntityResponseBuilder.java:429)
	at org.springframework.web.servlet.function.AbstractServerResponse.writeTo(AbstractServerResponse.java:101)
	at org.springframework.web.servlet.function.support.HandlerFunctionAdapter.handle(HandlerFunctionAdapter.java:112)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:633)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:511)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:454)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:361)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:208)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:285)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:149)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:239)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:243)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:57)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 15:23:46 [] ERROR o.a.c.c.C.[Tomcat].[localhost] - Exception Processing [ErrorPage[errorCode=0, location=/error]]
jakarta.servlet.ServletException: Async processing failed
	at org.springframework.web.servlet.function.DefaultAsyncServerResponse.writeAsync(DefaultAsyncServerResponse.java:136)
	at org.springframework.web.servlet.function.DefaultEntityResponseBuilder$PublisherEntityResponse.writeToInternal(DefaultEntityResponseBuilder.java:429)
	at org.springframework.web.servlet.function.AbstractServerResponse.writeTo(AbstractServerResponse.java:101)
	at org.springframework.web.servlet.function.support.HandlerFunctionAdapter.handle(HandlerFunctionAdapter.java:112)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:633)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:511)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:454)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:361)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:208)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:285)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:149)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:239)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:243)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:57)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: java.lang.IllegalStateException: Cannot start async: [ERROR]
	at org.springframework.util.Assert.state(Assert.java:79)
	at org.springframework.web.context.request.async.StandardServletAsyncWebRequest.startAsync(StandardServletAsyncWebRequest.java:157)
	at org.springframework.web.context.request.async.WebAsyncManager.startAsyncProcessing(WebAsyncManager.java:487)
	at org.springframework.web.context.request.async.WebAsyncManager.startDeferredResultProcessing(WebAsyncManager.java:462)
	at org.springframework.web.servlet.function.DefaultAsyncServerResponse.writeAsync(DefaultAsyncServerResponse.java:130)
	... 41 common frames omitted
2025-02-20 15:23:54 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-20 15:23:54 [153c1c57-dcc4-47cd-94a6-b8039b85fb97] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-20 15:23:54 [153c1c57-dcc4-47cd-94a6-b8039b85fb97] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-20 15:23:54 [153c1c57-dcc4-47cd-94a6-b8039b85fb97] INFO  c.c.c.g.c.config.RouterConfiguration - Authorized Request!
2025-02-20 15:23:54 [153c1c57-dcc4-47cd-94a6-b8039b85fb97] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [GET] /validate
2025-02-20 15:23:54 [] DEBUG r.n.r.PooledConnectionProvider - [393d40d2, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 15:23:54 [] DEBUG r.n.http.client.HttpClientConnect - [393d40d2-8, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY, method=GET}
2025-02-20 15:23:54 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [393d40d2-8, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x393d40d2, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-20 15:23:54 [] DEBUG r.n.http.client.HttpClientOperations - [393d40d2-8, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-20 15:23:54 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [393d40d2-8, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x393d40d2, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-20 15:23:54 [] DEBUG r.n.http.client.HttpClientOperations - [393d40d2-8, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-20 15:23:54 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [393d40d2-8, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x393d40d2, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-20 15:23:54 [] DEBUG reactor.netty.channel.FluxReceive - [393d40d2-8, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 15:23:54 [] DEBUG r.n.http.client.HttpClientOperations - [393d40d2-8, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-20 15:23:54 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [393d40d2, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x393d40d2, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-20 15:23:54 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [393d40d2, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x393d40d2, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-20 15:23:54 [153c1c57-dcc4-47cd-94a6-b8039b85fb97] INFO  c.c.c.g.c.config.RouterConfiguration - Validation Response: true
2025-02-20 15:23:54 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [393d40d2, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-20 15:23:54 [153c1c57-dcc4-47cd-94a6-b8039b85fb97] INFO  c.c.c.g.c.config.RouterConfiguration - Forwarding [GET] /validate to User Microservice
2025-02-20 15:23:54 [] DEBUG r.n.r.PooledConnectionProvider - [393d40d2, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-20 15:23:54 [] DEBUG r.n.r.PooledConnectionProvider - [60d46081] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 15:23:54 [] DEBUG r.netty.transport.TransportConfig - [60d46081] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-20 15:23:54 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 15:23:54 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 15:23:54 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 15:23:54 [] DEBUG r.netty.transport.TransportConnector - [60d46081] Connecting to [localhost/127.0.0.1:8082].
2025-02-20 15:23:54 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [60d46081, L:/127.0.0.1:57110 - R:localhost/127.0.0.1:8082] Registering pool release on close event for channel
2025-02-20 15:23:54 [] DEBUG r.n.r.PooledConnectionProvider - [60d46081, L:/127.0.0.1:57110 - R:localhost/127.0.0.1:8082] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 15:23:54 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [60d46081, L:/127.0.0.1:57110 - R:localhost/127.0.0.1:8082] onStateChange(PooledConnection{channel=[id: 0x60d46081, L:/127.0.0.1:57110 - R:localhost/127.0.0.1:8082]}, [connected])
2025-02-20 15:23:54 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [60d46081-1, L:/127.0.0.1:57110 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0x60d46081, L:/127.0.0.1:57110 - R:localhost/127.0.0.1:8082]}}, [configured])
2025-02-20 15:23:54 [] DEBUG r.n.http.client.HttpClientConnect - [60d46081-1, L:/127.0.0.1:57110 - R:localhost/127.0.0.1:8082] Handler is being applied: {uri=http://localhost:8082/validate, method=GET}
2025-02-20 15:23:54 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [60d46081-1, L:/127.0.0.1:57110 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x60d46081, L:/127.0.0.1:57110 - R:localhost/127.0.0.1:8082]}}, [request_prepared])
2025-02-20 15:23:54 [] DEBUG r.n.http.client.HttpClientOperations - [60d46081-1, L:/127.0.0.1:57110 - R:localhost/127.0.0.1:8082] No sendHeaders() called before complete, sending zero-length header
2025-02-20 15:23:54 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [60d46081-1, L:/127.0.0.1:57110 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x60d46081, L:/127.0.0.1:57110 - R:localhost/127.0.0.1:8082]}}, [request_sent])
2025-02-20 15:23:54 [] DEBUG r.n.http.client.HttpClientOperations - [60d46081-1, L:/127.0.0.1:57110 - R:localhost/127.0.0.1:8082] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 404 
Vary: <filtered>
Vary: <filtered>
Vary: <filtered>
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-20 15:23:54 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [60d46081-1, L:/127.0.0.1:57110 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x60d46081, L:/127.0.0.1:57110 - R:localhost/127.0.0.1:8082]}}, [response_received])
2025-02-20 15:23:54 [] DEBUG reactor.netty.channel.FluxReceive - [60d46081-1, L:/127.0.0.1:57110 - R:localhost/127.0.0.1:8082] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 15:23:54 [] DEBUG r.n.http.client.HttpClientOperations - [60d46081-1, L:/127.0.0.1:57110 - R:localhost/127.0.0.1:8082] Received last HTTP packet
2025-02-20 15:23:54 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [60d46081, L:/127.0.0.1:57110 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x60d46081, L:/127.0.0.1:57110 - R:localhost/127.0.0.1:8082]}}, [response_completed])
2025-02-20 15:23:54 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [60d46081, L:/127.0.0.1:57110 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x60d46081, L:/127.0.0.1:57110 - R:localhost/127.0.0.1:8082]}}, [disconnecting])
2025-02-20 15:23:54 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [60d46081, L:/127.0.0.1:57110 - R:localhost/127.0.0.1:8082] Releasing channel
2025-02-20 15:23:54 [] DEBUG r.n.r.PooledConnectionProvider - [60d46081, L:/127.0.0.1:57110 - R:localhost/127.0.0.1:8082] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-20 15:23:54 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] threw exception
org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 404 NOT_FOUND from GET http://localhost:8082/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 15:23:54 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate] with root cause
org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 404 NOT_FOUND from GET http://localhost:8082/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 15:23:54 [] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-20 15:23:54 [] INFO  c.c.c.g.c.config.RouterConfiguration - Authorized Request!
2025-02-20 15:23:54 [] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [GET] /error
2025-02-20 15:23:54 [] DEBUG r.n.r.PooledConnectionProvider - [393d40d2, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 15:23:54 [] DEBUG r.n.http.client.HttpClientConnect - [393d40d2-9, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY, method=GET}
2025-02-20 15:23:54 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [393d40d2-9, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x393d40d2, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-20 15:23:54 [] DEBUG r.n.http.client.HttpClientOperations - [393d40d2-9, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-20 15:23:54 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [393d40d2-9, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x393d40d2, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-20 15:23:54 [] DEBUG r.n.http.client.HttpClientOperations - [393d40d2-9, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-20 15:23:54 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [393d40d2-9, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x393d40d2, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-20 15:23:54 [] DEBUG reactor.netty.channel.FluxReceive - [393d40d2-9, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 15:23:54 [] DEBUG r.n.http.client.HttpClientOperations - [393d40d2-9, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-20 15:23:54 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [393d40d2, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x393d40d2, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-20 15:23:54 [] INFO  c.c.c.g.c.config.RouterConfiguration - Validation Response: true
2025-02-20 15:23:54 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [393d40d2, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x393d40d2, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-20 15:23:54 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [393d40d2, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-20 15:23:54 [] INFO  c.c.c.g.c.config.RouterConfiguration - Forwarding [GET] /error to User Microservice
2025-02-20 15:23:54 [] DEBUG r.n.r.PooledConnectionProvider - [393d40d2, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-20 15:23:54 [] DEBUG r.n.r.PooledConnectionProvider - [60d46081, L:/127.0.0.1:57110 - R:localhost/127.0.0.1:8082] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 15:23:54 [] DEBUG r.n.http.client.HttpClientConnect - [60d46081-2, L:/127.0.0.1:57110 - R:localhost/127.0.0.1:8082] Handler is being applied: {uri=http://localhost:8082/error, method=GET}
2025-02-20 15:23:54 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [60d46081-2, L:/127.0.0.1:57110 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0x60d46081, L:/127.0.0.1:57110 - R:localhost/127.0.0.1:8082]}}, [request_prepared])
2025-02-20 15:23:54 [] DEBUG r.n.http.client.HttpClientOperations - [60d46081-2, L:/127.0.0.1:57110 - R:localhost/127.0.0.1:8082] No sendHeaders() called before complete, sending zero-length header
2025-02-20 15:23:54 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [60d46081-2, L:/127.0.0.1:57110 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0x60d46081, L:/127.0.0.1:57110 - R:localhost/127.0.0.1:8082]}}, [request_sent])
2025-02-20 15:23:54 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] threw exception
org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 404 NOT_FOUND from GET http://localhost:8082/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 15:23:54 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate] with root cause
org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 404 NOT_FOUND from GET http://localhost:8082/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 15:23:54 [] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-20 15:23:54 [] INFO  c.c.c.g.c.config.RouterConfiguration - Authorized Request!
2025-02-20 15:23:54 [] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [GET] /error
2025-02-20 15:23:54 [] DEBUG r.n.http.client.HttpClientOperations - [60d46081-2, L:/127.0.0.1:57110 - R:localhost/127.0.0.1:8082] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 500 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
Connection: <filtered>
2025-02-20 15:23:54 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [60d46081-2, L:/127.0.0.1:57110 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0x60d46081, L:/127.0.0.1:57110 - R:localhost/127.0.0.1:8082]}}, [response_received])
2025-02-20 15:23:54 [] DEBUG r.n.r.PooledConnectionProvider - [393d40d2, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 15:23:54 [] DEBUG r.n.http.client.HttpClientConnect - [393d40d2-10, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwibmFtZSI6IkpvbiBEb2UiLCJpYXQiOjE2NjAwMDAwMDB9.x0SaYlmP5mS_5yTV10UM5qOwczrNv5dzRxvdc9_4mVY, method=GET}
2025-02-20 15:23:54 [] DEBUG reactor.netty.channel.FluxReceive - [60d46081-2, L:/127.0.0.1:57110 - R:localhost/127.0.0.1:8082] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 15:23:54 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [393d40d2-10, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x393d40d2, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-20 15:23:54 [] DEBUG r.n.http.client.HttpClientOperations - [393d40d2-10, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-20 15:23:54 [] DEBUG r.n.http.client.HttpClientOperations - [60d46081-2, L:/127.0.0.1:57110 - R:localhost/127.0.0.1:8082] Received last HTTP packet
2025-02-20 15:23:54 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [393d40d2-10, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x393d40d2, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-20 15:23:54 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [60d46081, L:/127.0.0.1:57110 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0x60d46081, L:/127.0.0.1:57110 - R:localhost/127.0.0.1:8082]}}, [response_completed])
2025-02-20 15:23:54 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [60d46081, L:/127.0.0.1:57110 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0x60d46081, L:/127.0.0.1:57110 - R:localhost/127.0.0.1:8082]}}, [disconnecting])
2025-02-20 15:23:54 [] DEBUG r.n.r.PooledConnectionProvider - [60d46081, L:/127.0.0.1:57110 ! R:localhost/127.0.0.1:8082] Channel closed, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 15:23:54 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [60d46081, L:/127.0.0.1:57110 ! R:localhost/127.0.0.1:8082] onStateChange(PooledConnection{channel=[id: 0x60d46081, L:/127.0.0.1:57110 ! R:localhost/127.0.0.1:8082]}, [disconnecting])
2025-02-20 15:23:54 [] DEBUG r.n.http.client.HttpClientOperations - [393d40d2-10, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-20 15:23:54 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [393d40d2-10, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x393d40d2, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-20 15:23:54 [] DEBUG reactor.netty.channel.FluxReceive - [393d40d2-10, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 15:23:54 [] DEBUG r.n.http.client.HttpClientOperations - [393d40d2-10, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-20 15:23:54 [] INFO  c.c.c.g.c.config.RouterConfiguration - Validation Response: true
2025-02-20 15:23:54 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [393d40d2, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x393d40d2, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-20 15:23:54 [] INFO  c.c.c.g.c.config.RouterConfiguration - Forwarding [GET] /error to User Microservice
2025-02-20 15:23:54 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [393d40d2, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x393d40d2, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-20 15:23:54 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [393d40d2, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-20 15:23:54 [] DEBUG r.n.r.PooledConnectionProvider - [393d40d2, L:/127.0.0.1:57084 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-20 15:23:54 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] threw exception
java.lang.IllegalStateException: Cannot start async: [ERROR]
	at org.springframework.util.Assert.state(Assert.java:79)
	at org.springframework.web.context.request.async.StandardServletAsyncWebRequest.startAsync(StandardServletAsyncWebRequest.java:157)
	at org.springframework.web.context.request.async.WebAsyncManager.startAsyncProcessing(WebAsyncManager.java:487)
	at org.springframework.web.context.request.async.WebAsyncManager.startDeferredResultProcessing(WebAsyncManager.java:462)
	at org.springframework.web.servlet.function.DefaultAsyncServerResponse.writeAsync(DefaultAsyncServerResponse.java:130)
	at org.springframework.web.servlet.function.DefaultEntityResponseBuilder$PublisherEntityResponse.writeToInternal(DefaultEntityResponseBuilder.java:429)
	at org.springframework.web.servlet.function.AbstractServerResponse.writeTo(AbstractServerResponse.java:101)
	at org.springframework.web.servlet.function.support.HandlerFunctionAdapter.handle(HandlerFunctionAdapter.java:112)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:633)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:511)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:454)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:361)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:208)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:285)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:149)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:239)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:243)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:57)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 15:23:54 [] ERROR o.a.c.c.C.[Tomcat].[localhost] - Exception Processing [ErrorPage[errorCode=0, location=/error]]
jakarta.servlet.ServletException: Async processing failed
	at org.springframework.web.servlet.function.DefaultAsyncServerResponse.writeAsync(DefaultAsyncServerResponse.java:136)
	at org.springframework.web.servlet.function.DefaultEntityResponseBuilder$PublisherEntityResponse.writeToInternal(DefaultEntityResponseBuilder.java:429)
	at org.springframework.web.servlet.function.AbstractServerResponse.writeTo(AbstractServerResponse.java:101)
	at org.springframework.web.servlet.function.support.HandlerFunctionAdapter.handle(HandlerFunctionAdapter.java:112)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:633)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:511)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:454)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:361)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:208)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:285)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:149)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:239)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:243)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:57)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: java.lang.IllegalStateException: Cannot start async: [ERROR]
	at org.springframework.util.Assert.state(Assert.java:79)
	at org.springframework.web.context.request.async.StandardServletAsyncWebRequest.startAsync(StandardServletAsyncWebRequest.java:157)
	at org.springframework.web.context.request.async.WebAsyncManager.startAsyncProcessing(WebAsyncManager.java:487)
	at org.springframework.web.context.request.async.WebAsyncManager.startDeferredResultProcessing(WebAsyncManager.java:462)
	at org.springframework.web.servlet.function.DefaultAsyncServerResponse.writeAsync(DefaultAsyncServerResponse.java:130)
	... 41 common frames omitted
2025-02-20 15:24:43 [] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-02-20 15:24:43 [] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-02-20 15:24:43 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [393d40d2, L:/127.0.0.1:57084 ! R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x393d40d2, L:/127.0.0.1:57084 ! R:localhost/127.0.0.1:8081]}, [disconnecting])
2025-02-20 15:24:45 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 10 thread-local buffer(s) from thread: reactor-http-nio-2
2025-02-20 15:24:45 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 4 thread-local buffer(s) from thread: reactor-http-nio-9
2025-02-20 15:24:45 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 5 thread-local buffer(s) from thread: reactor-http-nio-6
2025-02-20 15:24:45 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 5 thread-local buffer(s) from thread: reactor-http-nio-4
2025-02-20 15:24:45 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 2 thread-local buffer(s) from thread: reactor-http-nio-8
2025-02-20 15:24:45 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 5 thread-local buffer(s) from thread: reactor-http-nio-5
2025-02-20 15:24:45 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 4 thread-local buffer(s) from thread: reactor-http-nio-3
2025-02-20 15:24:45 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 5 thread-local buffer(s) from thread: reactor-http-nio-10
2025-02-20 15:24:45 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 10 thread-local buffer(s) from thread: reactor-http-nio-7
2025-02-20 15:24:49 [] DEBUG org.jboss.logging - Logging Provider: org.jboss.logging.Slf4jLoggerProvider found via system property
2025-02-20 15:24:49 [] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final
2025-02-20 15:24:49 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-02-20 15:24:49 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-02-20 15:24:49 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-02-20 15:24:49 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-02-20 15:24:49 [] DEBUG o.h.v.i.e.r.TraversableResolvers - Cannot find jakarta.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2025-02-20 15:24:49 [] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-02-20 15:24:49 [] INFO  c.c.c.g.c.CommongatewayApplication - Starting CommongatewayApplication using Java 17.0.12 with PID 19388 (D:\WORKSPACE\API-GATEWAY\commongateway\target\classes started by CITPL in D:\WORKSPACE\API-GATEWAY)
2025-02-20 15:24:49 [] DEBUG c.c.c.g.c.CommongatewayApplication - Running with Spring Boot v3.4.2, Spring v6.2.2
2025-02-20 15:24:49 [] INFO  c.c.c.g.c.CommongatewayApplication - No active profile set, falling back to 1 default profile: "default"
2025-02-20 15:24:49 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-02-20 15:24:49 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-02-20 15:24:49 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-02-20 15:24:49 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-02-20 15:24:49 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-02-20 15:24:49 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-02-20 15:24:50 [] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=50299984-946b-3bba-87da-3c9a1df8a676
2025-02-20 15:24:51 [] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-02-20 15:24:51 [] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-02-20 15:24:51 [] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-02-20 15:24:51 [] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.34]
2025-02-20 15:24:51 [] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-02-20 15:24:51 [] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1588 ms
2025-02-20 15:24:51 [] DEBUG i.n.u.i.l.InternalLoggerFactory - Using SLF4J as the default logging framework
2025-02-20 15:24:51 [] DEBUG i.n.util.internal.PlatformDependent0 - -Dio.netty.noUnsafe: false
2025-02-20 15:24:51 [] DEBUG i.n.util.internal.PlatformDependent0 - Java version: 17
2025-02-20 15:24:51 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe.theUnsafe: available
2025-02-20 15:24:51 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe base methods: all available
2025-02-20 15:24:51 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe.storeFence: available
2025-02-20 15:24:51 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.Buffer.address: available
2025-02-20 15:24:51 [] DEBUG i.n.util.internal.PlatformDependent0 - direct buffer constructor: unavailable: Reflective setAccessible(true) disabled
2025-02-20 15:24:51 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.Bits.unaligned: available, true
2025-02-20 15:24:51 [] DEBUG i.n.util.internal.PlatformDependent0 - jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable: class io.netty.util.internal.PlatformDependent0$7 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @7dc222ae
2025-02-20 15:24:51 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.DirectByteBuffer.<init>(long, {int,long}): unavailable
2025-02-20 15:24:51 [] DEBUG i.n.util.internal.PlatformDependent - sun.misc.Unsafe: available
2025-02-20 15:24:51 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.tmpdir: C:\Users\CITPL\AppData\Local\Temp (java.io.tmpdir)
2025-02-20 15:24:51 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.bitMode: 64 (sun.arch.data.model)
2025-02-20 15:24:51 [] DEBUG i.n.util.internal.PlatformDependent - Platform: Windows
2025-02-20 15:24:51 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.maxDirectMemory: -1 bytes
2025-02-20 15:24:51 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.uninitializedArrayAllocationThreshold: -1
2025-02-20 15:24:51 [] DEBUG io.netty.util.internal.CleanerJava9 - java.nio.ByteBuffer.cleaner(): available
2025-02-20 15:24:51 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.noPreferDirect: false
2025-02-20 15:24:51 [] DEBUG reactor.util.Loggers - Using Slf4j logging framework
2025-02-20 15:24:51 [] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-02-20 15:24:51 [] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2025-02-20 15:24:51 [] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2025-02-20 15:24:51 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-02-20 15:24:51 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via user class loader
2025-02-20 15:24:51 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-02-20 15:24:51 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-02-20 15:24:51 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-02-20 15:24:51 [] DEBUG o.h.v.i.e.r.TraversableResolvers - Cannot find jakarta.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2025-02-20 15:24:51 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-02-20 15:24:51 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-02-20 15:24:51 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-02-20 15:24:51 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-02-20 15:24:51 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-02-20 15:24:51 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-02-20 15:24:52 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	c.c.c.g.c.c.HomeController:
	{GET [/home]}: get()
2025-02-20 15:24:52 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2025-02-20 15:24:52 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 'beanNameHandlerMapping' {}
2025-02-20 15:24:52 [] DEBUG _.s.w.s.HandlerMapping.Mappings - Mapped com.citpl.common.gateway.commongateway.config.RouterConfiguration$$Lambda$895/0x000001e1ab4ead58@5cfed0ba -> com.citpl.common.gateway.commongateway.config.RouterConfiguration$$Lambda$896/0x000001e1ab4eafc0@5c8d58ed
2025-02-20 15:24:52 [] DEBUG _.s.w.s.HandlerMapping.Mappings - Mapped /validate/** -> ProxyExchangeHandlerFunction
/users/** -> ProxyExchangeHandlerFunction
2025-02-20 15:24:52 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2025-02-20 15:24:52 [] DEBUG i.n.u.i.InternalThreadLocalMap - -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2025-02-20 15:24:52 [] DEBUG i.n.u.i.InternalThreadLocalMap - -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2025-02-20 15:24:52 [] DEBUG io.netty.util.ResourceLeakDetector - -Dio.netty.leakDetection.level: simple
2025-02-20 15:24:52 [] DEBUG io.netty.util.ResourceLeakDetector - -Dio.netty.leakDetection.targetRecords: 4
2025-02-20 15:24:52 [] DEBUG i.n.handler.codec.compression.Brotli - brotli4j not in the classpath; Brotli support will be unavailable.
2025-02-20 15:24:52 [] DEBUG reactor.netty.tcp.TcpResources - [http] resources will use the default LoopResources: DefaultLoopResources {prefix=reactor-http, daemon=true, selectCount=12, workerCount=12}
2025-02-20 15:24:52 [] DEBUG reactor.netty.tcp.TcpResources - [http] resources will use the default ConnectionProvider: reactor.netty.resources.DefaultPooledConnectionProvider@6b3d9c38
2025-02-20 15:24:52 [] DEBUG r.netty.resources.DefaultLoopIOUring - Default io_uring support : false
2025-02-20 15:24:52 [] DEBUG r.netty.resources.DefaultLoopEpoll - Default Epoll support : false
2025-02-20 15:24:52 [] DEBUG r.netty.resources.DefaultLoopKQueue - Default KQueue support : false
2025-02-20 15:24:52 [] DEBUG i.n.c.MultithreadEventLoopGroup - -Dio.netty.eventLoopThreads: 24
2025-02-20 15:24:52 [] DEBUG i.n.u.concurrent.GlobalEventExecutor - -Dio.netty.globalEventExecutor.quietPeriodSeconds: 1
2025-02-20 15:24:52 [] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.noKeySetOptimization: false
2025-02-20 15:24:52 [] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.selectorAutoRebuildThreshold: 512
2025-02-20 15:24:52 [] DEBUG i.n.util.internal.PlatformDependent - org.jctools-core.MpscChunkedArrayQueue: available
2025-02-20 15:24:53 [] DEBUG io.netty.util.NetUtil - -Djava.net.preferIPv4Stack: false
2025-02-20 15:24:53 [] DEBUG io.netty.util.NetUtil - -Djava.net.preferIPv6Addresses: false
2025-02-20 15:24:53 [] DEBUG i.netty.util.NetUtilInitializations - Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2025-02-20 15:24:53 [] DEBUG io.netty.util.NetUtil - Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2025-02-20 15:24:53 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default ResolvedAddressTypes: IPV4_ONLY
2025-02-20 15:24:53 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Localhost address: localhost/127.0.0.1
2025-02-20 15:24:53 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Windows hostname: DESKTOP-P307093
2025-02-20 15:24:53 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default search domains: []
2025-02-20 15:24:53 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default UnixResolverOptions{ndots=1, timeout=5, attempts=16}
2025-02-20 15:24:53 [] DEBUG i.n.r.DefaultHostsFileEntriesResolver - -Dio.netty.hostsFileRefreshInterval: 0
2025-02-20 15:24:53 [] DEBUG i.n.r.d.DefaultDnsServerAddressStreamProvider - Default DNS servers: [/8.8.8.8:53, /4.2.2.2:53] (sun.net.dns.ResolverConfiguration)
2025-02-20 15:24:53 [] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-02-20 15:24:53 [] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-02-20 15:24:53 [] INFO  c.c.c.g.c.CommongatewayApplication - Started CommongatewayApplication in 4.106 seconds (process running for 4.956)
2025-02-20 15:51:41 [] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-02-20 15:51:42 [] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-02-20 16:19:39 [] DEBUG org.jboss.logging - Logging Provider: org.jboss.logging.Slf4jLoggerProvider found via system property
2025-02-20 16:19:39 [] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final
2025-02-20 16:19:39 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-02-20 16:19:39 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-02-20 16:19:39 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-02-20 16:19:39 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-02-20 16:19:39 [] DEBUG o.h.v.i.e.r.TraversableResolvers - Cannot find jakarta.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2025-02-20 16:19:39 [] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-02-20 16:19:39 [] INFO  c.c.c.g.c.CommongatewayApplication - Starting CommongatewayApplication using Java 17.0.12 with PID 13472 (D:\WORKSPACE\API-GATEWAY\commongateway\target\classes started by CITPL in D:\WORKSPACE\API-GATEWAY)
2025-02-20 16:19:39 [] DEBUG c.c.c.g.c.CommongatewayApplication - Running with Spring Boot v3.4.2, Spring v6.2.2
2025-02-20 16:19:39 [] INFO  c.c.c.g.c.CommongatewayApplication - No active profile set, falling back to 1 default profile: "default"
2025-02-20 16:19:40 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-02-20 16:19:40 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-02-20 16:19:40 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-02-20 16:19:40 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-02-20 16:19:40 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-02-20 16:19:40 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-02-20 16:19:41 [] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=db7a461d-3fba-387a-918c-4c77c09c8bed
2025-02-20 16:19:42 [] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-02-20 16:19:42 [] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-02-20 16:19:42 [] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-02-20 16:19:42 [] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.34]
2025-02-20 16:19:42 [] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-02-20 16:19:42 [] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2523 ms
2025-02-20 16:19:42 [] DEBUG i.n.u.i.l.InternalLoggerFactory - Using SLF4J as the default logging framework
2025-02-20 16:19:42 [] DEBUG i.n.util.internal.PlatformDependent0 - -Dio.netty.noUnsafe: false
2025-02-20 16:19:42 [] DEBUG i.n.util.internal.PlatformDependent0 - Java version: 17
2025-02-20 16:19:42 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe.theUnsafe: available
2025-02-20 16:19:42 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe base methods: all available
2025-02-20 16:19:42 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe.storeFence: available
2025-02-20 16:19:42 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.Buffer.address: available
2025-02-20 16:19:42 [] DEBUG i.n.util.internal.PlatformDependent0 - direct buffer constructor: unavailable: Reflective setAccessible(true) disabled
2025-02-20 16:19:42 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.Bits.unaligned: available, true
2025-02-20 16:19:42 [] DEBUG i.n.util.internal.PlatformDependent0 - jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable: class io.netty.util.internal.PlatformDependent0$7 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @6366ebe0
2025-02-20 16:19:42 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.DirectByteBuffer.<init>(long, {int,long}): unavailable
2025-02-20 16:19:42 [] DEBUG i.n.util.internal.PlatformDependent - sun.misc.Unsafe: available
2025-02-20 16:19:42 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.tmpdir: C:\Users\CITPL\AppData\Local\Temp (java.io.tmpdir)
2025-02-20 16:19:42 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.bitMode: 64 (sun.arch.data.model)
2025-02-20 16:19:42 [] DEBUG i.n.util.internal.PlatformDependent - Platform: Windows
2025-02-20 16:19:42 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.maxDirectMemory: -1 bytes
2025-02-20 16:19:42 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.uninitializedArrayAllocationThreshold: -1
2025-02-20 16:19:42 [] DEBUG io.netty.util.internal.CleanerJava9 - java.nio.ByteBuffer.cleaner(): available
2025-02-20 16:19:42 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.noPreferDirect: false
2025-02-20 16:19:43 [] DEBUG reactor.util.Loggers - Using Slf4j logging framework
2025-02-20 16:19:43 [] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-02-20 16:19:43 [] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2025-02-20 16:19:43 [] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2025-02-20 16:19:43 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-02-20 16:19:43 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via user class loader
2025-02-20 16:19:43 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-02-20 16:19:43 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-02-20 16:19:43 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-02-20 16:19:43 [] DEBUG o.h.v.i.e.r.TraversableResolvers - Cannot find jakarta.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2025-02-20 16:19:43 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-02-20 16:19:43 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-02-20 16:19:43 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-02-20 16:19:43 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-02-20 16:19:43 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-02-20 16:19:43 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-02-20 16:19:43 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	c.c.c.g.c.c.HomeController:
	{GET [/home]}: get()
2025-02-20 16:19:43 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2025-02-20 16:19:43 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 'beanNameHandlerMapping' {}
2025-02-20 16:19:43 [] DEBUG _.s.w.s.HandlerMapping.Mappings - Mapped com.citpl.common.gateway.commongateway.config.RouterConfiguration$$Lambda$895/0x000002278151d128@5bfc79cb -> com.citpl.common.gateway.commongateway.config.RouterConfiguration$$Lambda$896/0x000002278151d390@27ec8754
2025-02-20 16:19:43 [] DEBUG _.s.w.s.HandlerMapping.Mappings - Mapped /validate/** -> ProxyExchangeHandlerFunction
/users/** -> ProxyExchangeHandlerFunction
2025-02-20 16:19:43 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2025-02-20 16:19:44 [] DEBUG i.n.u.i.InternalThreadLocalMap - -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2025-02-20 16:19:44 [] DEBUG i.n.u.i.InternalThreadLocalMap - -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2025-02-20 16:19:44 [] DEBUG io.netty.util.ResourceLeakDetector - -Dio.netty.leakDetection.level: simple
2025-02-20 16:19:44 [] DEBUG io.netty.util.ResourceLeakDetector - -Dio.netty.leakDetection.targetRecords: 4
2025-02-20 16:19:44 [] DEBUG i.n.handler.codec.compression.Brotli - brotli4j not in the classpath; Brotli support will be unavailable.
2025-02-20 16:19:44 [] DEBUG reactor.netty.tcp.TcpResources - [http] resources will use the default LoopResources: DefaultLoopResources {prefix=reactor-http, daemon=true, selectCount=12, workerCount=12}
2025-02-20 16:19:44 [] DEBUG reactor.netty.tcp.TcpResources - [http] resources will use the default ConnectionProvider: reactor.netty.resources.DefaultPooledConnectionProvider@507049f2
2025-02-20 16:19:44 [] DEBUG r.netty.resources.DefaultLoopIOUring - Default io_uring support : false
2025-02-20 16:19:44 [] DEBUG r.netty.resources.DefaultLoopEpoll - Default Epoll support : false
2025-02-20 16:19:44 [] DEBUG r.netty.resources.DefaultLoopKQueue - Default KQueue support : false
2025-02-20 16:19:44 [] DEBUG i.n.c.MultithreadEventLoopGroup - -Dio.netty.eventLoopThreads: 24
2025-02-20 16:19:44 [] DEBUG i.n.u.concurrent.GlobalEventExecutor - -Dio.netty.globalEventExecutor.quietPeriodSeconds: 1
2025-02-20 16:19:44 [] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.noKeySetOptimization: false
2025-02-20 16:19:44 [] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.selectorAutoRebuildThreshold: 512
2025-02-20 16:19:44 [] DEBUG i.n.util.internal.PlatformDependent - org.jctools-core.MpscChunkedArrayQueue: available
2025-02-20 16:19:44 [] DEBUG io.netty.util.NetUtil - -Djava.net.preferIPv4Stack: false
2025-02-20 16:19:44 [] DEBUG io.netty.util.NetUtil - -Djava.net.preferIPv6Addresses: false
2025-02-20 16:19:44 [] DEBUG i.netty.util.NetUtilInitializations - Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2025-02-20 16:19:44 [] DEBUG io.netty.util.NetUtil - Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2025-02-20 16:19:44 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default ResolvedAddressTypes: IPV4_ONLY
2025-02-20 16:19:44 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Localhost address: localhost/127.0.0.1
2025-02-20 16:19:44 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Windows hostname: DESKTOP-P307093
2025-02-20 16:19:44 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default search domains: []
2025-02-20 16:19:44 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default UnixResolverOptions{ndots=1, timeout=5, attempts=16}
2025-02-20 16:19:44 [] DEBUG i.n.r.DefaultHostsFileEntriesResolver - -Dio.netty.hostsFileRefreshInterval: 0
2025-02-20 16:19:44 [] DEBUG i.n.r.d.DefaultDnsServerAddressStreamProvider - Default DNS servers: [/8.8.8.8:53, /4.2.2.2:53] (sun.net.dns.ResolverConfiguration)
2025-02-20 16:19:44 [] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-02-20 16:19:44 [] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-02-20 16:19:45 [] INFO  c.c.c.g.c.CommongatewayApplication - Started CommongatewayApplication in 6.01 seconds (process running for 7.143)
2025-02-20 16:20:03 [] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-02-20 16:20:03 [] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-02-20 16:20:03 [] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-02-20 16:20:03 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-20 16:20:03 [4497faf3-0d6b-4191-aa30-74cbba14ed52] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-20 16:20:03 [4497faf3-0d6b-4191-aa30-74cbba14ed52] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-20 16:20:03 [4497faf3-0d6b-4191-aa30-74cbba14ed52] INFO  c.c.c.g.c.config.RouterConfiguration - Authorized Request!
2025-02-20 16:20:03 [4497faf3-0d6b-4191-aa30-74cbba14ed52] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [POST] /validate
2025-02-20 16:20:03 [4497faf3-0d6b-4191-aa30-74cbba14ed52] DEBUG r.n.r.PooledConnectionProvider - Creating a new [http] client pool [PoolFactory{evictionInterval=PT0S, leasingStrategy=fifo, maxConnections=500, maxIdleTime=-1, maxLifeTime=-1, metricsEnabled=false, pendingAcquireMaxCount=1000, pendingAcquireTimeout=45000}] for [localhost/<unresolved>:8081]
2025-02-20 16:20:03 [4497faf3-0d6b-4191-aa30-74cbba14ed52] DEBUG io.netty.channel.DefaultChannelId - -Dio.netty.processId: 13472 (auto-detected)
2025-02-20 16:20:03 [4497faf3-0d6b-4191-aa30-74cbba14ed52] DEBUG io.netty.channel.DefaultChannelId - -Dio.netty.machineId: a0:d3:65:ff:fe:5e:b0:28 (auto-detected)
2025-02-20 16:20:03 [4497faf3-0d6b-4191-aa30-74cbba14ed52] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.numHeapArenas: 24
2025-02-20 16:20:03 [4497faf3-0d6b-4191-aa30-74cbba14ed52] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.numDirectArenas: 24
2025-02-20 16:20:03 [4497faf3-0d6b-4191-aa30-74cbba14ed52] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.pageSize: 8192
2025-02-20 16:20:03 [4497faf3-0d6b-4191-aa30-74cbba14ed52] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxOrder: 9
2025-02-20 16:20:03 [4497faf3-0d6b-4191-aa30-74cbba14ed52] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.chunkSize: 4194304
2025-02-20 16:20:03 [4497faf3-0d6b-4191-aa30-74cbba14ed52] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.smallCacheSize: 256
2025-02-20 16:20:03 [4497faf3-0d6b-4191-aa30-74cbba14ed52] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.normalCacheSize: 64
2025-02-20 16:20:03 [4497faf3-0d6b-4191-aa30-74cbba14ed52] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2025-02-20 16:20:03 [4497faf3-0d6b-4191-aa30-74cbba14ed52] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.cacheTrimInterval: 8192
2025-02-20 16:20:03 [4497faf3-0d6b-4191-aa30-74cbba14ed52] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.cacheTrimIntervalMillis: 0
2025-02-20 16:20:03 [4497faf3-0d6b-4191-aa30-74cbba14ed52] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.useCacheForAllThreads: false
2025-02-20 16:20:03 [4497faf3-0d6b-4191-aa30-74cbba14ed52] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
2025-02-20 16:20:03 [4497faf3-0d6b-4191-aa30-74cbba14ed52] DEBUG i.n.buffer.PooledByteBufAllocator - -Dio.netty.allocator.disableCacheFinalizersForFastThreadLocalThreads: false
2025-02-20 16:20:03 [4497faf3-0d6b-4191-aa30-74cbba14ed52] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.allocator.type: pooled
2025-02-20 16:20:03 [4497faf3-0d6b-4191-aa30-74cbba14ed52] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.threadLocalDirectBufferSize: 0
2025-02-20 16:20:03 [4497faf3-0d6b-4191-aa30-74cbba14ed52] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.maxThreadLocalCharBufferSize: 16384
2025-02-20 16:20:03 [] DEBUG r.n.r.PooledConnectionProvider - [7ab8a8b3] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 16:20:03 [] DEBUG io.netty.buffer.AbstractByteBuf - -Dio.netty.buffer.checkAccessible: true
2025-02-20 16:20:03 [] DEBUG io.netty.buffer.AbstractByteBuf - -Dio.netty.buffer.checkBounds: true
2025-02-20 16:20:03 [] DEBUG i.n.util.ResourceLeakDetectorFactory - Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@40e23a6c
2025-02-20 16:20:03 [] DEBUG r.netty.transport.TransportConfig - [7ab8a8b3] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-20 16:20:03 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 16:20:03 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 16:20:03 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 16:20:03 [] DEBUG i.n.b.ChannelInitializerExtensions - -Dio.netty.bootstrap.extensions: null
2025-02-20 16:20:03 [] DEBUG r.netty.transport.TransportConnector - [7ab8a8b3] Connecting to [localhost/127.0.0.1:8081].
2025-02-20 16:20:03 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [7ab8a8b3, L:/127.0.0.1:58267 - R:localhost/127.0.0.1:8081] Registering pool release on close event for channel
2025-02-20 16:20:03 [] DEBUG r.n.r.PooledConnectionProvider - [7ab8a8b3, L:/127.0.0.1:58267 - R:localhost/127.0.0.1:8081] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 16:20:03 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [7ab8a8b3, L:/127.0.0.1:58267 - R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x7ab8a8b3, L:/127.0.0.1:58267 - R:localhost/127.0.0.1:8081]}, [connected])
2025-02-20 16:20:03 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [7ab8a8b3-1, L:/127.0.0.1:58267 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0x7ab8a8b3, L:/127.0.0.1:58267 - R:localhost/127.0.0.1:8081]}}, [configured])
2025-02-20 16:20:03 [] DEBUG r.n.http.client.HttpClientConnect - [7ab8a8b3-1, L:/127.0.0.1:58267 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/validate, method=GET}
2025-02-20 16:20:03 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [7ab8a8b3-1, L:/127.0.0.1:58267 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x7ab8a8b3, L:/127.0.0.1:58267 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-02-20 16:20:03 [] DEBUG r.n.http.client.HttpClientOperations - [7ab8a8b3-1, L:/127.0.0.1:58267 - R:localhost/127.0.0.1:8081] No sendHeaders() called before complete, sending zero-length header
2025-02-20 16:20:03 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.maxCapacityPerThread: 4096
2025-02-20 16:20:03 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.ratio: 8
2025-02-20 16:20:03 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.chunkSize: 32
2025-02-20 16:20:03 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.blocking: false
2025-02-20 16:20:03 [] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.batchFastThreadLocalOnly: true
2025-02-20 16:20:03 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [7ab8a8b3-1, L:/127.0.0.1:58267 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x7ab8a8b3, L:/127.0.0.1:58267 - R:localhost/127.0.0.1:8081]}}, [request_sent])
2025-02-20 16:20:03 [] DEBUG i.n.handler.codec.compression.Zstd - zstd-jni not in the classpath; Zstd support will be unavailable.
2025-02-20 16:20:03 [] DEBUG r.n.http.client.HttpClientOperations - [7ab8a8b3-1, L:/127.0.0.1:58267 - R:localhost/127.0.0.1:8081] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-20 16:20:03 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [7ab8a8b3-1, L:/127.0.0.1:58267 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x7ab8a8b3, L:/127.0.0.1:58267 - R:localhost/127.0.0.1:8081]}}, [response_received])
2025-02-20 16:20:03 [] DEBUG reactor.netty.channel.FluxReceive - [7ab8a8b3-1, L:/127.0.0.1:58267 - R:localhost/127.0.0.1:8081] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 16:20:03 [] DEBUG r.n.http.client.HttpClientOperations - [7ab8a8b3-1, L:/127.0.0.1:58267 - R:localhost/127.0.0.1:8081] Received last HTTP packet
2025-02-20 16:20:03 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [7ab8a8b3, L:/127.0.0.1:58267 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x7ab8a8b3, L:/127.0.0.1:58267 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-02-20 16:20:03 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [7ab8a8b3, L:/127.0.0.1:58267 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0x7ab8a8b3, L:/127.0.0.1:58267 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-02-20 16:20:03 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [7ab8a8b3, L:/127.0.0.1:58267 - R:localhost/127.0.0.1:8081] Releasing channel
2025-02-20 16:20:03 [4497faf3-0d6b-4191-aa30-74cbba14ed52] INFO  c.c.c.g.c.config.RouterConfiguration - Validation Response: true (Cached)
2025-02-20 16:20:03 [4497faf3-0d6b-4191-aa30-74cbba14ed52] INFO  c.c.c.g.c.config.RouterConfiguration - Forwarding [POST] /validate to User Microservice
2025-02-20 16:20:03 [] DEBUG r.n.r.PooledConnectionProvider - [7ab8a8b3, L:/127.0.0.1:58267 - R:localhost/127.0.0.1:8081] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-20 16:20:03 [4497faf3-0d6b-4191-aa30-74cbba14ed52] DEBUG r.n.r.PooledConnectionProvider - Creating a new [http] client pool [PoolFactory{evictionInterval=PT0S, leasingStrategy=fifo, maxConnections=500, maxIdleTime=-1, maxLifeTime=-1, metricsEnabled=false, pendingAcquireMaxCount=1000, pendingAcquireTimeout=45000}] for [localhost/<unresolved>:8082]
2025-02-20 16:20:03 [] DEBUG r.n.r.PooledConnectionProvider - [dc70813b] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 16:20:03 [] DEBUG r.netty.transport.TransportConfig - [dc70813b] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-20 16:20:03 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 16:20:03 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 16:20:03 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 16:20:03 [] DEBUG r.netty.transport.TransportConnector - [dc70813b] Connecting to [localhost/127.0.0.1:8082].
2025-02-20 16:20:03 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [dc70813b, L:/127.0.0.1:58268 - R:localhost/127.0.0.1:8082] Registering pool release on close event for channel
2025-02-20 16:20:03 [] DEBUG r.n.r.PooledConnectionProvider - [dc70813b, L:/127.0.0.1:58268 - R:localhost/127.0.0.1:8082] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 16:20:03 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [dc70813b, L:/127.0.0.1:58268 - R:localhost/127.0.0.1:8082] onStateChange(PooledConnection{channel=[id: 0xdc70813b, L:/127.0.0.1:58268 - R:localhost/127.0.0.1:8082]}, [connected])
2025-02-20 16:20:03 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [dc70813b-1, L:/127.0.0.1:58268 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0xdc70813b, L:/127.0.0.1:58268 - R:localhost/127.0.0.1:8082]}}, [configured])
2025-02-20 16:20:03 [] DEBUG r.n.http.client.HttpClientConnect - [dc70813b-1, L:/127.0.0.1:58268 - R:localhost/127.0.0.1:8082] Handler is being applied: {uri=http://localhost:8082/validate, method=POST}
2025-02-20 16:20:03 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [dc70813b-1, L:/127.0.0.1:58268 - R:localhost/127.0.0.1:8082] onStateChange(POST{uri=/validate, connection=PooledConnection{channel=[id: 0xdc70813b, L:/127.0.0.1:58268 - R:localhost/127.0.0.1:8082]}}, [request_prepared])
2025-02-20 16:20:03 [] DEBUG r.n.http.client.HttpClientOperations - [dc70813b-1, L:/127.0.0.1:58268 - R:localhost/127.0.0.1:8082] No sendHeaders() called before complete, sending zero-length header
2025-02-20 16:20:03 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [dc70813b-1, L:/127.0.0.1:58268 - R:localhost/127.0.0.1:8082] onStateChange(POST{uri=/validate, connection=PooledConnection{channel=[id: 0xdc70813b, L:/127.0.0.1:58268 - R:localhost/127.0.0.1:8082]}}, [request_sent])
2025-02-20 16:20:04 [] DEBUG r.n.http.client.HttpClientOperations - [dc70813b-1, L:/127.0.0.1:58268 - R:localhost/127.0.0.1:8082] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 404 
Vary: <filtered>
Vary: <filtered>
Vary: <filtered>
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-20 16:20:04 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [dc70813b-1, L:/127.0.0.1:58268 - R:localhost/127.0.0.1:8082] onStateChange(POST{uri=/validate, connection=PooledConnection{channel=[id: 0xdc70813b, L:/127.0.0.1:58268 - R:localhost/127.0.0.1:8082]}}, [response_received])
2025-02-20 16:20:04 [] DEBUG reactor.netty.channel.FluxReceive - [dc70813b-1, L:/127.0.0.1:58268 - R:localhost/127.0.0.1:8082] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 16:20:04 [] DEBUG r.n.http.client.HttpClientOperations - [dc70813b-1, L:/127.0.0.1:58268 - R:localhost/127.0.0.1:8082] Received last HTTP packet
2025-02-20 16:20:04 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [dc70813b, L:/127.0.0.1:58268 - R:localhost/127.0.0.1:8082] onStateChange(POST{uri=/validate, connection=PooledConnection{channel=[id: 0xdc70813b, L:/127.0.0.1:58268 - R:localhost/127.0.0.1:8082]}}, [response_completed])
2025-02-20 16:20:04 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [dc70813b, L:/127.0.0.1:58268 - R:localhost/127.0.0.1:8082] onStateChange(POST{uri=/validate, connection=PooledConnection{channel=[id: 0xdc70813b, L:/127.0.0.1:58268 - R:localhost/127.0.0.1:8082]}}, [disconnecting])
2025-02-20 16:20:04 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [dc70813b, L:/127.0.0.1:58268 - R:localhost/127.0.0.1:8082] Releasing channel
2025-02-20 16:20:04 [] DEBUG r.n.r.PooledConnectionProvider - [dc70813b, L:/127.0.0.1:58268 - R:localhost/127.0.0.1:8082] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-20 16:20:04 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] threw exception
org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from POST http://localhost:8082/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 404 NOT_FOUND from POST http://localhost:8082/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 16:20:04 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from POST http://localhost:8082/validate] with root cause
org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from POST http://localhost:8082/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 404 NOT_FOUND from POST http://localhost:8082/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 16:20:04 [] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-20 16:20:04 [] INFO  c.c.c.g.c.config.RouterConfiguration - Authorized Request!
2025-02-20 16:20:04 [] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [POST] /error
2025-02-20 16:20:04 [] INFO  c.c.c.g.c.config.RouterConfiguration - Validation Response from Cache: true
2025-02-20 16:20:04 [] INFO  c.c.c.g.c.config.RouterConfiguration - Forwarding [POST] /error to User Microservice
2025-02-20 16:20:04 [] DEBUG r.n.r.PooledConnectionProvider - [dc70813b, L:/127.0.0.1:58268 - R:localhost/127.0.0.1:8082] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 16:20:04 [] DEBUG r.n.http.client.HttpClientConnect - [dc70813b-2, L:/127.0.0.1:58268 - R:localhost/127.0.0.1:8082] Handler is being applied: {uri=http://localhost:8082/error, method=POST}
2025-02-20 16:20:04 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [dc70813b-2, L:/127.0.0.1:58268 - R:localhost/127.0.0.1:8082] onStateChange(POST{uri=/error, connection=PooledConnection{channel=[id: 0xdc70813b, L:/127.0.0.1:58268 - R:localhost/127.0.0.1:8082]}}, [request_prepared])
2025-02-20 16:20:04 [] DEBUG r.n.http.client.HttpClientOperations - [dc70813b-2, L:/127.0.0.1:58268 - R:localhost/127.0.0.1:8082] No sendHeaders() called before complete, sending zero-length header
2025-02-20 16:20:04 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [dc70813b-2, L:/127.0.0.1:58268 - R:localhost/127.0.0.1:8082] onStateChange(POST{uri=/error, connection=PooledConnection{channel=[id: 0xdc70813b, L:/127.0.0.1:58268 - R:localhost/127.0.0.1:8082]}}, [request_sent])
2025-02-20 16:20:04 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] threw exception
org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from POST http://localhost:8082/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 404 NOT_FOUND from POST http://localhost:8082/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 16:20:04 [] DEBUG r.n.http.client.HttpClientOperations - [dc70813b-2, L:/127.0.0.1:58268 - R:localhost/127.0.0.1:8082] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 500 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
Connection: <filtered>
2025-02-20 16:20:04 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [dc70813b-2, L:/127.0.0.1:58268 - R:localhost/127.0.0.1:8082] onStateChange(POST{uri=/error, connection=PooledConnection{channel=[id: 0xdc70813b, L:/127.0.0.1:58268 - R:localhost/127.0.0.1:8082]}}, [response_received])
2025-02-20 16:20:04 [] DEBUG reactor.netty.channel.FluxReceive - [dc70813b-2, L:/127.0.0.1:58268 - R:localhost/127.0.0.1:8082] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 16:20:04 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from POST http://localhost:8082/validate] with root cause
org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from POST http://localhost:8082/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 404 NOT_FOUND from POST http://localhost:8082/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 16:20:04 [] DEBUG r.n.http.client.HttpClientOperations - [dc70813b-2, L:/127.0.0.1:58268 - R:localhost/127.0.0.1:8082] Received last HTTP packet
2025-02-20 16:20:04 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [dc70813b, L:/127.0.0.1:58268 - R:localhost/127.0.0.1:8082] onStateChange(POST{uri=/error, connection=PooledConnection{channel=[id: 0xdc70813b, L:/127.0.0.1:58268 - R:localhost/127.0.0.1:8082]}}, [response_completed])
2025-02-20 16:20:04 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [dc70813b, L:/127.0.0.1:58268 - R:localhost/127.0.0.1:8082] onStateChange(POST{uri=/error, connection=PooledConnection{channel=[id: 0xdc70813b, L:/127.0.0.1:58268 - R:localhost/127.0.0.1:8082]}}, [disconnecting])
2025-02-20 16:20:04 [] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-20 16:20:04 [] INFO  c.c.c.g.c.config.RouterConfiguration - Authorized Request!
2025-02-20 16:20:04 [] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [POST] /error
2025-02-20 16:20:04 [] INFO  c.c.c.g.c.config.RouterConfiguration - Validation Response from Cache: true
2025-02-20 16:20:04 [] INFO  c.c.c.g.c.config.RouterConfiguration - Forwarding [POST] /error to User Microservice
2025-02-20 16:20:04 [] DEBUG r.n.r.PooledConnectionProvider - [dc70813b, L:/127.0.0.1:58268 ! R:localhost/127.0.0.1:8082] Channel closed, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 16:20:04 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [dc70813b, L:/127.0.0.1:58268 ! R:localhost/127.0.0.1:8082] onStateChange(PooledConnection{channel=[id: 0xdc70813b, L:/127.0.0.1:58268 ! R:localhost/127.0.0.1:8082]}, [disconnecting])
2025-02-20 16:20:04 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] threw exception
java.lang.IllegalStateException: Cannot start async: [ERROR]
	at org.springframework.util.Assert.state(Assert.java:79)
	at org.springframework.web.context.request.async.StandardServletAsyncWebRequest.startAsync(StandardServletAsyncWebRequest.java:157)
	at org.springframework.web.context.request.async.WebAsyncManager.startAsyncProcessing(WebAsyncManager.java:487)
	at org.springframework.web.context.request.async.WebAsyncManager.startDeferredResultProcessing(WebAsyncManager.java:462)
	at org.springframework.web.servlet.function.DefaultAsyncServerResponse.writeAsync(DefaultAsyncServerResponse.java:130)
	at org.springframework.web.servlet.function.DefaultEntityResponseBuilder$PublisherEntityResponse.writeToInternal(DefaultEntityResponseBuilder.java:429)
	at org.springframework.web.servlet.function.AbstractServerResponse.writeTo(AbstractServerResponse.java:101)
	at org.springframework.web.servlet.function.support.HandlerFunctionAdapter.handle(HandlerFunctionAdapter.java:112)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:633)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:511)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:454)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:361)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:208)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:285)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:149)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:239)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:243)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:57)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 16:20:04 [] ERROR o.a.c.c.C.[Tomcat].[localhost] - Exception Processing [ErrorPage[errorCode=0, location=/error]]
jakarta.servlet.ServletException: Async processing failed
	at org.springframework.web.servlet.function.DefaultAsyncServerResponse.writeAsync(DefaultAsyncServerResponse.java:136)
	at org.springframework.web.servlet.function.DefaultEntityResponseBuilder$PublisherEntityResponse.writeToInternal(DefaultEntityResponseBuilder.java:429)
	at org.springframework.web.servlet.function.AbstractServerResponse.writeTo(AbstractServerResponse.java:101)
	at org.springframework.web.servlet.function.support.HandlerFunctionAdapter.handle(HandlerFunctionAdapter.java:112)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:633)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:511)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:454)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:361)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:208)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:285)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:149)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:239)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:243)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:57)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: java.lang.IllegalStateException: Cannot start async: [ERROR]
	at org.springframework.util.Assert.state(Assert.java:79)
	at org.springframework.web.context.request.async.StandardServletAsyncWebRequest.startAsync(StandardServletAsyncWebRequest.java:157)
	at org.springframework.web.context.request.async.WebAsyncManager.startAsyncProcessing(WebAsyncManager.java:487)
	at org.springframework.web.context.request.async.WebAsyncManager.startDeferredResultProcessing(WebAsyncManager.java:462)
	at org.springframework.web.servlet.function.DefaultAsyncServerResponse.writeAsync(DefaultAsyncServerResponse.java:130)
	... 41 common frames omitted
2025-02-20 16:20:16 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-20 16:20:16 [e06e335a-52ee-4147-95af-7d2ff8966ac0] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-20 16:20:16 [e06e335a-52ee-4147-95af-7d2ff8966ac0] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-20 16:20:16 [e06e335a-52ee-4147-95af-7d2ff8966ac0] INFO  c.c.c.g.c.config.RouterConfiguration - Authorized Request!
2025-02-20 16:20:16 [e06e335a-52ee-4147-95af-7d2ff8966ac0] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [GET] /validate
2025-02-20 16:20:16 [e06e335a-52ee-4147-95af-7d2ff8966ac0] WARN  c.c.c.g.c.config.RouterConfiguration - Missing Validation Token!
2025-02-20 16:20:21 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-20 16:20:21 [dc496c5c-59c4-40bf-a494-04f951259a43] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-20 16:20:21 [dc496c5c-59c4-40bf-a494-04f951259a43] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-20 16:20:21 [dc496c5c-59c4-40bf-a494-04f951259a43] INFO  c.c.c.g.c.config.RouterConfiguration - Authorized Request!
2025-02-20 16:20:21 [dc496c5c-59c4-40bf-a494-04f951259a43] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [GET] /validate
2025-02-20 16:20:21 [dc496c5c-59c4-40bf-a494-04f951259a43] INFO  c.c.c.g.c.config.RouterConfiguration - Validation Response from Cache: true
2025-02-20 16:20:21 [dc496c5c-59c4-40bf-a494-04f951259a43] INFO  c.c.c.g.c.config.RouterConfiguration - Forwarding [GET] /validate to User Microservice
2025-02-20 16:20:21 [] DEBUG r.n.r.PooledConnectionProvider - [d871d9f9] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 16:20:21 [] DEBUG r.netty.transport.TransportConfig - [d871d9f9] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-20 16:20:21 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 16:20:21 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 16:20:21 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 16:20:21 [] DEBUG r.netty.transport.TransportConnector - [d871d9f9] Connecting to [localhost/127.0.0.1:8082].
2025-02-20 16:20:21 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [d871d9f9, L:/127.0.0.1:58285 - R:localhost/127.0.0.1:8082] Registering pool release on close event for channel
2025-02-20 16:20:21 [] DEBUG r.n.r.PooledConnectionProvider - [d871d9f9, L:/127.0.0.1:58285 - R:localhost/127.0.0.1:8082] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 16:20:21 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [d871d9f9, L:/127.0.0.1:58285 - R:localhost/127.0.0.1:8082] onStateChange(PooledConnection{channel=[id: 0xd871d9f9, L:/127.0.0.1:58285 - R:localhost/127.0.0.1:8082]}, [connected])
2025-02-20 16:20:21 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [d871d9f9-1, L:/127.0.0.1:58285 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0xd871d9f9, L:/127.0.0.1:58285 - R:localhost/127.0.0.1:8082]}}, [configured])
2025-02-20 16:20:21 [] DEBUG r.n.http.client.HttpClientConnect - [d871d9f9-1, L:/127.0.0.1:58285 - R:localhost/127.0.0.1:8082] Handler is being applied: {uri=http://localhost:8082/validate, method=GET}
2025-02-20 16:20:21 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [d871d9f9-1, L:/127.0.0.1:58285 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xd871d9f9, L:/127.0.0.1:58285 - R:localhost/127.0.0.1:8082]}}, [request_prepared])
2025-02-20 16:20:21 [] DEBUG r.n.http.client.HttpClientOperations - [d871d9f9-1, L:/127.0.0.1:58285 - R:localhost/127.0.0.1:8082] No sendHeaders() called before complete, sending zero-length header
2025-02-20 16:20:21 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [d871d9f9-1, L:/127.0.0.1:58285 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xd871d9f9, L:/127.0.0.1:58285 - R:localhost/127.0.0.1:8082]}}, [request_sent])
2025-02-20 16:20:21 [] DEBUG r.n.http.client.HttpClientOperations - [d871d9f9-1, L:/127.0.0.1:58285 - R:localhost/127.0.0.1:8082] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 404 
Vary: <filtered>
Vary: <filtered>
Vary: <filtered>
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
2025-02-20 16:20:21 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [d871d9f9-1, L:/127.0.0.1:58285 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xd871d9f9, L:/127.0.0.1:58285 - R:localhost/127.0.0.1:8082]}}, [response_received])
2025-02-20 16:20:21 [] DEBUG reactor.netty.channel.FluxReceive - [d871d9f9-1, L:/127.0.0.1:58285 - R:localhost/127.0.0.1:8082] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 16:20:21 [] DEBUG r.n.http.client.HttpClientOperations - [d871d9f9-1, L:/127.0.0.1:58285 - R:localhost/127.0.0.1:8082] Received last HTTP packet
2025-02-20 16:20:21 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [d871d9f9, L:/127.0.0.1:58285 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xd871d9f9, L:/127.0.0.1:58285 - R:localhost/127.0.0.1:8082]}}, [response_completed])
2025-02-20 16:20:21 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [d871d9f9, L:/127.0.0.1:58285 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/validate, connection=PooledConnection{channel=[id: 0xd871d9f9, L:/127.0.0.1:58285 - R:localhost/127.0.0.1:8082]}}, [disconnecting])
2025-02-20 16:20:21 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [d871d9f9, L:/127.0.0.1:58285 - R:localhost/127.0.0.1:8082] Releasing channel
2025-02-20 16:20:21 [] DEBUG r.n.r.PooledConnectionProvider - [d871d9f9, L:/127.0.0.1:58285 - R:localhost/127.0.0.1:8082] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-20 16:20:21 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] threw exception
org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 404 NOT_FOUND from GET http://localhost:8082/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 16:20:21 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate] with root cause
org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 404 NOT_FOUND from GET http://localhost:8082/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 16:20:21 [] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-20 16:20:21 [] INFO  c.c.c.g.c.config.RouterConfiguration - Authorized Request!
2025-02-20 16:20:21 [] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [GET] /error
2025-02-20 16:20:21 [] INFO  c.c.c.g.c.config.RouterConfiguration - Validation Response from Cache: true
2025-02-20 16:20:21 [] INFO  c.c.c.g.c.config.RouterConfiguration - Forwarding [GET] /error to User Microservice
2025-02-20 16:20:21 [] DEBUG r.n.r.PooledConnectionProvider - [d871d9f9, L:/127.0.0.1:58285 - R:localhost/127.0.0.1:8082] Channel acquired, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 16:20:21 [] DEBUG r.n.http.client.HttpClientConnect - [d871d9f9-2, L:/127.0.0.1:58285 - R:localhost/127.0.0.1:8082] Handler is being applied: {uri=http://localhost:8082/error, method=GET}
2025-02-20 16:20:21 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [d871d9f9-2, L:/127.0.0.1:58285 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0xd871d9f9, L:/127.0.0.1:58285 - R:localhost/127.0.0.1:8082]}}, [request_prepared])
2025-02-20 16:20:21 [] DEBUG r.n.http.client.HttpClientOperations - [d871d9f9-2, L:/127.0.0.1:58285 - R:localhost/127.0.0.1:8082] No sendHeaders() called before complete, sending zero-length header
2025-02-20 16:20:21 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [d871d9f9-2, L:/127.0.0.1:58285 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0xd871d9f9, L:/127.0.0.1:58285 - R:localhost/127.0.0.1:8082]}}, [request_sent])
2025-02-20 16:20:21 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] threw exception
org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 404 NOT_FOUND from GET http://localhost:8082/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 16:20:21 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate] with root cause
org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET http://localhost:8082/validate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 404 NOT_FOUND from GET http://localhost:8082/validate [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:819)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 16:20:21 [] DEBUG r.n.http.client.HttpClientOperations - [d871d9f9-2, L:/127.0.0.1:58285 - R:localhost/127.0.0.1:8082] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 500 
Content-Type: <filtered>
Transfer-Encoding: <filtered>
Date: <filtered>
Connection: <filtered>
2025-02-20 16:20:21 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [d871d9f9-2, L:/127.0.0.1:58285 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0xd871d9f9, L:/127.0.0.1:58285 - R:localhost/127.0.0.1:8082]}}, [response_received])
2025-02-20 16:20:21 [] DEBUG reactor.netty.channel.FluxReceive - [d871d9f9-2, L:/127.0.0.1:58285 - R:localhost/127.0.0.1:8082] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 16:20:21 [] DEBUG r.n.http.client.HttpClientOperations - [d871d9f9-2, L:/127.0.0.1:58285 - R:localhost/127.0.0.1:8082] Received last HTTP packet
2025-02-20 16:20:21 [] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-20 16:20:21 [] INFO  c.c.c.g.c.config.RouterConfiguration - Authorized Request!
2025-02-20 16:20:21 [] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [GET] /error
2025-02-20 16:20:21 [] INFO  c.c.c.g.c.config.RouterConfiguration - Validation Response from Cache: true
2025-02-20 16:20:21 [] INFO  c.c.c.g.c.config.RouterConfiguration - Forwarding [GET] /error to User Microservice
2025-02-20 16:20:21 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [d871d9f9, L:/127.0.0.1:58285 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0xd871d9f9, L:/127.0.0.1:58285 - R:localhost/127.0.0.1:8082]}}, [response_completed])
2025-02-20 16:20:21 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [d871d9f9, L:/127.0.0.1:58285 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/error, connection=PooledConnection{channel=[id: 0xd871d9f9, L:/127.0.0.1:58285 - R:localhost/127.0.0.1:8082]}}, [disconnecting])
2025-02-20 16:20:21 [] DEBUG r.n.r.PooledConnectionProvider - [d871d9f9, L:/127.0.0.1:58285 ! R:localhost/127.0.0.1:8082] Channel closed, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 16:20:21 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [d871d9f9, L:/127.0.0.1:58285 ! R:localhost/127.0.0.1:8082] onStateChange(PooledConnection{channel=[id: 0xd871d9f9, L:/127.0.0.1:58285 ! R:localhost/127.0.0.1:8082]}, [disconnecting])
2025-02-20 16:20:21 [] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] threw exception
java.lang.IllegalStateException: Cannot start async: [ERROR]
	at org.springframework.util.Assert.state(Assert.java:79)
	at org.springframework.web.context.request.async.StandardServletAsyncWebRequest.startAsync(StandardServletAsyncWebRequest.java:157)
	at org.springframework.web.context.request.async.WebAsyncManager.startAsyncProcessing(WebAsyncManager.java:487)
	at org.springframework.web.context.request.async.WebAsyncManager.startDeferredResultProcessing(WebAsyncManager.java:462)
	at org.springframework.web.servlet.function.DefaultAsyncServerResponse.writeAsync(DefaultAsyncServerResponse.java:130)
	at org.springframework.web.servlet.function.DefaultEntityResponseBuilder$PublisherEntityResponse.writeToInternal(DefaultEntityResponseBuilder.java:429)
	at org.springframework.web.servlet.function.AbstractServerResponse.writeTo(AbstractServerResponse.java:101)
	at org.springframework.web.servlet.function.support.HandlerFunctionAdapter.handle(HandlerFunctionAdapter.java:112)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:633)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:511)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:454)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:361)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:208)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:285)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:149)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:239)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:243)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:57)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:842)
2025-02-20 16:20:21 [] ERROR o.a.c.c.C.[Tomcat].[localhost] - Exception Processing [ErrorPage[errorCode=0, location=/error]]
jakarta.servlet.ServletException: Async processing failed
	at org.springframework.web.servlet.function.DefaultAsyncServerResponse.writeAsync(DefaultAsyncServerResponse.java:136)
	at org.springframework.web.servlet.function.DefaultEntityResponseBuilder$PublisherEntityResponse.writeToInternal(DefaultEntityResponseBuilder.java:429)
	at org.springframework.web.servlet.function.AbstractServerResponse.writeTo(AbstractServerResponse.java:101)
	at org.springframework.web.servlet.function.support.HandlerFunctionAdapter.handle(HandlerFunctionAdapter.java:112)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:633)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:511)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:454)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:361)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:208)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:285)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:149)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:239)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:243)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:57)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: java.lang.IllegalStateException: Cannot start async: [ERROR]
	at org.springframework.util.Assert.state(Assert.java:79)
	at org.springframework.web.context.request.async.StandardServletAsyncWebRequest.startAsync(StandardServletAsyncWebRequest.java:157)
	at org.springframework.web.context.request.async.WebAsyncManager.startAsyncProcessing(WebAsyncManager.java:487)
	at org.springframework.web.context.request.async.WebAsyncManager.startDeferredResultProcessing(WebAsyncManager.java:462)
	at org.springframework.web.servlet.function.DefaultAsyncServerResponse.writeAsync(DefaultAsyncServerResponse.java:130)
	... 41 common frames omitted
2025-02-20 16:20:30 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-20 16:20:30 [40b5957d-0642-42bb-83ed-ae7d449d11c0] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-20 16:20:30 [40b5957d-0642-42bb-83ed-ae7d449d11c0] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: []
2025-02-20 16:20:30 [40b5957d-0642-42bb-83ed-ae7d449d11c0] WARN  c.c.c.g.c.config.RouterConfiguration - Invalid Organization - Access Denied
2025-02-20 16:20:38 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-20 16:20:38 [76facd91-221b-4507-a53c-22ce2ae3c85d] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-20 16:20:38 [76facd91-221b-4507-a53c-22ce2ae3c85d] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-20 16:20:38 [76facd91-221b-4507-a53c-22ce2ae3c85d] INFO  c.c.c.g.c.config.RouterConfiguration - Authorized Request!
2025-02-20 16:20:38 [76facd91-221b-4507-a53c-22ce2ae3c85d] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [GET] /users
2025-02-20 16:20:38 [76facd91-221b-4507-a53c-22ce2ae3c85d] WARN  c.c.c.g.c.config.RouterConfiguration - Missing Validation Token!
2025-02-20 16:20:43 [] DEBUG c.c.c.g.c.filter.MDCFilter - request Id: null
2025-02-20 16:20:43 [de9ea66c-91e5-489c-af77-d2c44bc50686] INFO  c.c.c.g.c.filter.MDCFilter - log filter initiated
2025-02-20 16:20:43 [de9ea66c-91e5-489c-af77-d2c44bc50686] INFO  c.c.c.g.c.config.RouterConfiguration - Checking Org ID: [001]
2025-02-20 16:20:43 [de9ea66c-91e5-489c-af77-d2c44bc50686] INFO  c.c.c.g.c.config.RouterConfiguration - Authorized Request!
2025-02-20 16:20:43 [de9ea66c-91e5-489c-af77-d2c44bc50686] INFO  c.c.c.g.c.config.RouterConfiguration - Incoming Request: [GET] /users
2025-02-20 16:20:43 [de9ea66c-91e5-489c-af77-d2c44bc50686] INFO  c.c.c.g.c.config.RouterConfiguration - Validation Response from Cache: true
2025-02-20 16:20:43 [de9ea66c-91e5-489c-af77-d2c44bc50686] INFO  c.c.c.g.c.config.RouterConfiguration - Forwarding [GET] /users to User Microservice
2025-02-20 16:20:43 [] DEBUG r.n.r.PooledConnectionProvider - [b50409e8] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 16:20:43 [] DEBUG r.netty.transport.TransportConfig - [b50409e8] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-02-20 16:20:43 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - resolveCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 16:20:43 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - cnameCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 16:20:43 [] DEBUG i.n.r.dns.DnsNameResolverBuilder - authoritativeDnsServerCache and TTLs are mutually exclusive. TTLs are ignored.
2025-02-20 16:20:43 [] DEBUG r.netty.transport.TransportConnector - [b50409e8] Connecting to [localhost/127.0.0.1:8082].
2025-02-20 16:20:43 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b50409e8, L:/127.0.0.1:58303 - R:localhost/127.0.0.1:8082] Registering pool release on close event for channel
2025-02-20 16:20:43 [] DEBUG r.n.r.PooledConnectionProvider - [b50409e8, L:/127.0.0.1:58303 - R:localhost/127.0.0.1:8082] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-02-20 16:20:43 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b50409e8, L:/127.0.0.1:58303 - R:localhost/127.0.0.1:8082] onStateChange(PooledConnection{channel=[id: 0xb50409e8, L:/127.0.0.1:58303 - R:localhost/127.0.0.1:8082]}, [connected])
2025-02-20 16:20:43 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b50409e8-1, L:/127.0.0.1:58303 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0xb50409e8, L:/127.0.0.1:58303 - R:localhost/127.0.0.1:8082]}}, [configured])
2025-02-20 16:20:43 [] DEBUG r.n.http.client.HttpClientConnect - [b50409e8-1, L:/127.0.0.1:58303 - R:localhost/127.0.0.1:8082] Handler is being applied: {uri=http://localhost:8082/users, method=GET}
2025-02-20 16:20:43 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b50409e8-1, L:/127.0.0.1:58303 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0xb50409e8, L:/127.0.0.1:58303 - R:localhost/127.0.0.1:8082]}}, [request_prepared])
2025-02-20 16:20:43 [] DEBUG r.n.http.client.HttpClientOperations - [b50409e8-1, L:/127.0.0.1:58303 - R:localhost/127.0.0.1:8082] No sendHeaders() called before complete, sending zero-length header
2025-02-20 16:20:43 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b50409e8-1, L:/127.0.0.1:58303 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0xb50409e8, L:/127.0.0.1:58303 - R:localhost/127.0.0.1:8082]}}, [request_sent])
2025-02-20 16:20:43 [] DEBUG r.n.http.client.HttpClientOperations - [b50409e8-1, L:/127.0.0.1:58303 - R:localhost/127.0.0.1:8082] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 
Content-Type: <filtered>
Content-Length: <filtered>
Date: <filtered>
2025-02-20 16:20:43 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b50409e8-1, L:/127.0.0.1:58303 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0xb50409e8, L:/127.0.0.1:58303 - R:localhost/127.0.0.1:8082]}}, [response_received])
2025-02-20 16:20:43 [] DEBUG reactor.netty.channel.FluxReceive - [b50409e8-1, L:/127.0.0.1:58303 - R:localhost/127.0.0.1:8082] [terminated=false, cancelled=false, pending=0, error=null]: subscribing inbound receiver
2025-02-20 16:20:43 [] DEBUG r.n.http.client.HttpClientOperations - [b50409e8-1, L:/127.0.0.1:58303 - R:localhost/127.0.0.1:8082] Received last HTTP packet
2025-02-20 16:20:43 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b50409e8, L:/127.0.0.1:58303 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0xb50409e8, L:/127.0.0.1:58303 - R:localhost/127.0.0.1:8082]}}, [response_completed])
2025-02-20 16:20:43 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b50409e8, L:/127.0.0.1:58303 - R:localhost/127.0.0.1:8082] onStateChange(GET{uri=/users, connection=PooledConnection{channel=[id: 0xb50409e8, L:/127.0.0.1:58303 - R:localhost/127.0.0.1:8082]}}, [disconnecting])
2025-02-20 16:20:43 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b50409e8, L:/127.0.0.1:58303 - R:localhost/127.0.0.1:8082] Releasing channel
2025-02-20 16:20:43 [] DEBUG r.n.r.PooledConnectionProvider - [b50409e8, L:/127.0.0.1:58303 - R:localhost/127.0.0.1:8082] Channel cleaned, now: 0 active connections, 1 inactive connections 0 pending acquire requests.
2025-02-20 16:21:04 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [7ab8a8b3, L:/127.0.0.1:58267 ! R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x7ab8a8b3, L:/127.0.0.1:58267 ! R:localhost/127.0.0.1:8081]}, [disconnecting])
2025-02-20 16:21:43 [] DEBUG r.n.r.DefaultPooledConnectionProvider - [b50409e8, L:/127.0.0.1:58303 ! R:localhost/127.0.0.1:8082] onStateChange(PooledConnection{channel=[id: 0xb50409e8, L:/127.0.0.1:58303 ! R:localhost/127.0.0.1:8082]}, [disconnecting])
2025-02-20 16:35:09 [] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-02-20 16:35:09 [] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-02-20 16:35:11 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 2 thread-local buffer(s) from thread: reactor-http-nio-2
2025-02-20 16:35:11 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 2 thread-local buffer(s) from thread: reactor-http-nio-5
2025-02-20 16:35:11 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 5 thread-local buffer(s) from thread: reactor-http-nio-4
2025-02-20 16:35:11 [] DEBUG io.netty.buffer.PoolThreadCache - Freed 5 thread-local buffer(s) from thread: reactor-http-nio-3
2025-02-20 16:35:15 [] DEBUG org.jboss.logging - Logging Provider: org.jboss.logging.Slf4jLoggerProvider found via system property
2025-02-20 16:35:15 [] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final
2025-02-20 16:35:15 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-02-20 16:35:15 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-02-20 16:35:15 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-02-20 16:35:15 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-02-20 16:35:15 [] DEBUG o.h.v.i.e.r.TraversableResolvers - Cannot find jakarta.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2025-02-20 16:35:15 [] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-02-20 16:35:15 [] INFO  c.c.c.g.c.CommongatewayApplication - Starting CommongatewayApplication using Java 17.0.12 with PID 11184 (D:\WORKSPACE\API-GATEWAY\commongateway\target\classes started by CITPL in D:\WORKSPACE\API-GATEWAY)
2025-02-20 16:35:15 [] DEBUG c.c.c.g.c.CommongatewayApplication - Running with Spring Boot v3.4.2, Spring v6.2.2
2025-02-20 16:35:15 [] INFO  c.c.c.g.c.CommongatewayApplication - No active profile set, falling back to 1 default profile: "default"
2025-02-20 16:35:15 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-02-20 16:35:15 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-02-20 16:35:15 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-02-20 16:35:15 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-02-20 16:35:15 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-02-20 16:35:15 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-02-20 16:35:17 [] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=db7a461d-3fba-387a-918c-4c77c09c8bed
2025-02-20 16:35:18 [] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-02-20 16:35:18 [] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-02-20 16:35:18 [] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-02-20 16:35:18 [] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.34]
2025-02-20 16:35:18 [] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-02-20 16:35:18 [] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2619 ms
2025-02-20 16:35:18 [] DEBUG i.n.u.i.l.InternalLoggerFactory - Using SLF4J as the default logging framework
2025-02-20 16:35:18 [] DEBUG i.n.util.internal.PlatformDependent0 - -Dio.netty.noUnsafe: false
2025-02-20 16:35:18 [] DEBUG i.n.util.internal.PlatformDependent0 - Java version: 17
2025-02-20 16:35:18 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe.theUnsafe: available
2025-02-20 16:35:18 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe base methods: all available
2025-02-20 16:35:18 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe.storeFence: available
2025-02-20 16:35:18 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.Buffer.address: available
2025-02-20 16:35:18 [] DEBUG i.n.util.internal.PlatformDependent0 - direct buffer constructor: unavailable: Reflective setAccessible(true) disabled
2025-02-20 16:35:18 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.Bits.unaligned: available, true
2025-02-20 16:35:18 [] DEBUG i.n.util.internal.PlatformDependent0 - jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable: class io.netty.util.internal.PlatformDependent0$7 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @6366ebe0
2025-02-20 16:35:18 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.DirectByteBuffer.<init>(long, {int,long}): unavailable
2025-02-20 16:35:18 [] DEBUG i.n.util.internal.PlatformDependent - sun.misc.Unsafe: available
2025-02-20 16:35:18 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.tmpdir: C:\Users\CITPL\AppData\Local\Temp (java.io.tmpdir)
2025-02-20 16:35:18 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.bitMode: 64 (sun.arch.data.model)
2025-02-20 16:35:18 [] DEBUG i.n.util.internal.PlatformDependent - Platform: Windows
2025-02-20 16:35:18 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.maxDirectMemory: -1 bytes
2025-02-20 16:35:18 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.uninitializedArrayAllocationThreshold: -1
2025-02-20 16:35:18 [] DEBUG io.netty.util.internal.CleanerJava9 - java.nio.ByteBuffer.cleaner(): available
2025-02-20 16:35:18 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.noPreferDirect: false
2025-02-20 16:35:18 [] DEBUG reactor.util.Loggers - Using Slf4j logging framework
2025-02-20 16:35:18 [] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-02-20 16:35:18 [] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2025-02-20 16:35:18 [] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2025-02-20 16:35:18 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-02-20 16:35:18 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via user class loader
2025-02-20 16:35:18 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-02-20 16:35:18 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-02-20 16:35:18 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-02-20 16:35:18 [] DEBUG o.h.v.i.e.r.TraversableResolvers - Cannot find jakarta.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2025-02-20 16:35:18 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-02-20 16:35:18 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-02-20 16:35:18 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-02-20 16:35:18 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-02-20 16:35:18 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-02-20 16:35:18 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-02-20 16:35:18 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	c.c.c.g.c.c.HomeController:
	{GET [/home]}: get()
2025-02-20 16:35:18 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2025-02-20 16:35:19 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 'beanNameHandlerMapping' {}
2025-02-20 16:35:19 [] DEBUG _.s.w.s.HandlerMapping.Mappings - Mapped com.citpl.common.gateway.commongateway.config.RouterConfiguration$$Lambda$895/0x0000020b8151ad10@2055833f -> com.citpl.common.gateway.commongateway.config.RouterConfiguration$$Lambda$896/0x0000020b8151af78@28768e25
2025-02-20 16:35:19 [] DEBUG _.s.w.s.HandlerMapping.Mappings - Mapped /validate/** -> ProxyExchangeHandlerFunction
/users/** -> ProxyExchangeHandlerFunction
2025-02-20 16:35:19 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2025-02-20 16:35:19 [] DEBUG i.n.u.i.InternalThreadLocalMap - -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2025-02-20 16:35:19 [] DEBUG i.n.u.i.InternalThreadLocalMap - -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2025-02-20 16:35:19 [] DEBUG io.netty.util.ResourceLeakDetector - -Dio.netty.leakDetection.level: simple
2025-02-20 16:35:19 [] DEBUG io.netty.util.ResourceLeakDetector - -Dio.netty.leakDetection.targetRecords: 4
2025-02-20 16:35:19 [] DEBUG i.n.handler.codec.compression.Brotli - brotli4j not in the classpath; Brotli support will be unavailable.
2025-02-20 16:35:19 [] DEBUG reactor.netty.tcp.TcpResources - [http] resources will use the default LoopResources: DefaultLoopResources {prefix=reactor-http, daemon=true, selectCount=12, workerCount=12}
2025-02-20 16:35:19 [] DEBUG reactor.netty.tcp.TcpResources - [http] resources will use the default ConnectionProvider: reactor.netty.resources.DefaultPooledConnectionProvider@4fbb1144
2025-02-20 16:35:19 [] DEBUG r.netty.resources.DefaultLoopIOUring - Default io_uring support : false
2025-02-20 16:35:19 [] DEBUG r.netty.resources.DefaultLoopEpoll - Default Epoll support : false
2025-02-20 16:35:19 [] DEBUG r.netty.resources.DefaultLoopKQueue - Default KQueue support : false
2025-02-20 16:35:19 [] DEBUG i.n.c.MultithreadEventLoopGroup - -Dio.netty.eventLoopThreads: 24
2025-02-20 16:35:19 [] DEBUG i.n.u.concurrent.GlobalEventExecutor - -Dio.netty.globalEventExecutor.quietPeriodSeconds: 1
2025-02-20 16:35:19 [] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.noKeySetOptimization: false
2025-02-20 16:35:19 [] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.selectorAutoRebuildThreshold: 512
2025-02-20 16:35:19 [] DEBUG i.n.util.internal.PlatformDependent - org.jctools-core.MpscChunkedArrayQueue: available
2025-02-20 16:35:20 [] DEBUG io.netty.util.NetUtil - -Djava.net.preferIPv4Stack: false
2025-02-20 16:35:20 [] DEBUG io.netty.util.NetUtil - -Djava.net.preferIPv6Addresses: false
2025-02-20 16:35:20 [] DEBUG i.netty.util.NetUtilInitializations - Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2025-02-20 16:35:20 [] DEBUG io.netty.util.NetUtil - Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2025-02-20 16:35:20 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default ResolvedAddressTypes: IPV4_ONLY
2025-02-20 16:35:20 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Localhost address: localhost/127.0.0.1
2025-02-20 16:35:20 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Windows hostname: DESKTOP-P307093
2025-02-20 16:35:20 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default search domains: []
2025-02-20 16:35:20 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default UnixResolverOptions{ndots=1, timeout=5, attempts=16}
2025-02-20 16:35:20 [] DEBUG i.n.r.DefaultHostsFileEntriesResolver - -Dio.netty.hostsFileRefreshInterval: 0
2025-02-20 16:35:20 [] DEBUG i.n.r.d.DefaultDnsServerAddressStreamProvider - Default DNS servers: [/8.8.8.8:53, /4.2.2.2:53] (sun.net.dns.ResolverConfiguration)
2025-02-20 16:35:20 [] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-02-20 16:35:20 [] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-02-20 16:35:20 [] INFO  c.c.c.g.c.CommongatewayApplication - Started CommongatewayApplication in 5.418 seconds (process running for 6.406)
2025-02-20 16:58:20 [] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-02-20 16:58:21 [] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-02-20 16:58:28 [] DEBUG org.jboss.logging - Logging Provider: org.jboss.logging.Slf4jLoggerProvider found via system property
2025-02-20 16:58:28 [] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final
2025-02-20 16:58:28 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-02-20 16:58:28 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-02-20 16:58:28 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-02-20 16:58:28 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-02-20 16:58:28 [] DEBUG o.h.v.i.e.r.TraversableResolvers - Cannot find jakarta.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2025-02-20 16:58:28 [] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-02-20 16:58:28 [] INFO  c.c.c.g.c.CommongatewayApplication - Starting CommongatewayApplication using Java 17.0.12 with PID 2536 (D:\WORKSPACE\API-GATEWAY\commongateway\target\classes started by CITPL in D:\WORKSPACE\API-GATEWAY)
2025-02-20 16:58:28 [] DEBUG c.c.c.g.c.CommongatewayApplication - Running with Spring Boot v3.4.2, Spring v6.2.2
2025-02-20 16:58:28 [] INFO  c.c.c.g.c.CommongatewayApplication - No active profile set, falling back to 1 default profile: "default"
2025-02-20 16:58:28 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-02-20 16:58:28 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-02-20 16:58:28 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-02-20 16:58:28 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-02-20 16:58:28 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-02-20 16:58:28 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-02-20 16:58:29 [] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=db7a461d-3fba-387a-918c-4c77c09c8bed
2025-02-20 16:58:30 [] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-02-20 16:58:30 [] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-02-20 16:58:30 [] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-02-20 16:58:30 [] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.34]
2025-02-20 16:58:30 [] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-02-20 16:58:30 [] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1716 ms
2025-02-20 16:58:30 [] DEBUG i.n.u.i.l.InternalLoggerFactory - Using SLF4J as the default logging framework
2025-02-20 16:58:30 [] DEBUG i.n.util.internal.PlatformDependent0 - -Dio.netty.noUnsafe: false
2025-02-20 16:58:30 [] DEBUG i.n.util.internal.PlatformDependent0 - Java version: 17
2025-02-20 16:58:30 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe.theUnsafe: available
2025-02-20 16:58:30 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe base methods: all available
2025-02-20 16:58:30 [] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe.storeFence: available
2025-02-20 16:58:30 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.Buffer.address: available
2025-02-20 16:58:30 [] DEBUG i.n.util.internal.PlatformDependent0 - direct buffer constructor: unavailable: Reflective setAccessible(true) disabled
2025-02-20 16:58:30 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.Bits.unaligned: available, true
2025-02-20 16:58:30 [] DEBUG i.n.util.internal.PlatformDependent0 - jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable: class io.netty.util.internal.PlatformDependent0$7 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @6366ebe0
2025-02-20 16:58:30 [] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.DirectByteBuffer.<init>(long, {int,long}): unavailable
2025-02-20 16:58:30 [] DEBUG i.n.util.internal.PlatformDependent - sun.misc.Unsafe: available
2025-02-20 16:58:30 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.tmpdir: C:\Users\CITPL\AppData\Local\Temp (java.io.tmpdir)
2025-02-20 16:58:30 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.bitMode: 64 (sun.arch.data.model)
2025-02-20 16:58:30 [] DEBUG i.n.util.internal.PlatformDependent - Platform: Windows
2025-02-20 16:58:30 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.maxDirectMemory: -1 bytes
2025-02-20 16:58:30 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.uninitializedArrayAllocationThreshold: -1
2025-02-20 16:58:30 [] DEBUG io.netty.util.internal.CleanerJava9 - java.nio.ByteBuffer.cleaner(): available
2025-02-20 16:58:30 [] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.noPreferDirect: false
2025-02-20 16:58:30 [] DEBUG reactor.util.Loggers - Using Slf4j logging framework
2025-02-20 16:58:30 [] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-02-20 16:58:30 [] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2025-02-20 16:58:30 [] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2025-02-20 16:58:30 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-02-20 16:58:30 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via user class loader
2025-02-20 16:58:30 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-02-20 16:58:30 [] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-02-20 16:58:30 [] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-02-20 16:58:30 [] DEBUG o.h.v.i.e.r.TraversableResolvers - Cannot find jakarta.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2025-02-20 16:58:30 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-02-20 16:58:30 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-02-20 16:58:30 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-02-20 16:58:30 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-02-20 16:58:30 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-02-20 16:58:30 [] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-02-20 16:58:31 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	c.c.c.g.c.c.HomeController:
	{GET [/home]}: get()
2025-02-20 16:58:31 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2025-02-20 16:58:31 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 'beanNameHandlerMapping' {}
2025-02-20 16:58:31 [] DEBUG _.s.w.s.HandlerMapping.Mappings - Mapped com.citpl.common.gateway.commongateway.config.RouterConfiguration$$Lambda$895/0x00000208284fc438@546ed2a0 -> com.citpl.common.gateway.commongateway.config.RouterConfiguration$$Lambda$896/0x00000208284fc6a0@5bfc79cb
2025-02-20 16:58:31 [] DEBUG _.s.w.s.HandlerMapping.Mappings - Mapped /validate/** -> ProxyExchangeHandlerFunction
/users/** -> ProxyExchangeHandlerFunction
2025-02-20 16:58:31 [] DEBUG _.s.w.s.HandlerMapping.Mappings - 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2025-02-20 16:58:31 [] DEBUG i.n.u.i.InternalThreadLocalMap - -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2025-02-20 16:58:31 [] DEBUG i.n.u.i.InternalThreadLocalMap - -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2025-02-20 16:58:31 [] DEBUG io.netty.util.ResourceLeakDetector - -Dio.netty.leakDetection.level: simple
2025-02-20 16:58:31 [] DEBUG io.netty.util.ResourceLeakDetector - -Dio.netty.leakDetection.targetRecords: 4
2025-02-20 16:58:31 [] DEBUG i.n.handler.codec.compression.Brotli - brotli4j not in the classpath; Brotli support will be unavailable.
2025-02-20 16:58:31 [] DEBUG reactor.netty.tcp.TcpResources - [http] resources will use the default LoopResources: DefaultLoopResources {prefix=reactor-http, daemon=true, selectCount=12, workerCount=12}
2025-02-20 16:58:31 [] DEBUG reactor.netty.tcp.TcpResources - [http] resources will use the default ConnectionProvider: reactor.netty.resources.DefaultPooledConnectionProvider@4b07cad0
2025-02-20 16:58:31 [] DEBUG r.netty.resources.DefaultLoopIOUring - Default io_uring support : false
2025-02-20 16:58:31 [] DEBUG r.netty.resources.DefaultLoopEpoll - Default Epoll support : false
2025-02-20 16:58:31 [] DEBUG r.netty.resources.DefaultLoopKQueue - Default KQueue support : false
2025-02-20 16:58:31 [] DEBUG i.n.c.MultithreadEventLoopGroup - -Dio.netty.eventLoopThreads: 24
2025-02-20 16:58:31 [] DEBUG i.n.u.concurrent.GlobalEventExecutor - -Dio.netty.globalEventExecutor.quietPeriodSeconds: 1
2025-02-20 16:58:31 [] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.noKeySetOptimization: false
2025-02-20 16:58:31 [] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.selectorAutoRebuildThreshold: 512
2025-02-20 16:58:31 [] DEBUG i.n.util.internal.PlatformDependent - org.jctools-core.MpscChunkedArrayQueue: available
2025-02-20 16:58:31 [] DEBUG io.netty.util.NetUtil - -Djava.net.preferIPv4Stack: false
2025-02-20 16:58:31 [] DEBUG io.netty.util.NetUtil - -Djava.net.preferIPv6Addresses: false
2025-02-20 16:58:31 [] DEBUG i.netty.util.NetUtilInitializations - Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2025-02-20 16:58:31 [] DEBUG io.netty.util.NetUtil - Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2025-02-20 16:58:31 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default ResolvedAddressTypes: IPV4_ONLY
2025-02-20 16:58:31 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Localhost address: localhost/127.0.0.1
2025-02-20 16:58:31 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Windows hostname: DESKTOP-P307093
2025-02-20 16:58:31 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default search domains: []
2025-02-20 16:58:31 [] DEBUG i.netty.resolver.dns.DnsNameResolver - Default UnixResolverOptions{ndots=1, timeout=5, attempts=16}
2025-02-20 16:58:31 [] DEBUG i.n.r.DefaultHostsFileEntriesResolver - -Dio.netty.hostsFileRefreshInterval: 0
2025-02-20 16:58:31 [] DEBUG i.n.r.d.DefaultDnsServerAddressStreamProvider - Default DNS servers: [/8.8.8.8:53, /4.2.2.2:53] (sun.net.dns.ResolverConfiguration)
2025-02-20 16:58:31 [] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-02-20 16:58:31 [] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-02-20 16:58:32 [] INFO  c.c.c.g.c.CommongatewayApplication - Started CommongatewayApplication in 4.227 seconds (process running for 5.323)
